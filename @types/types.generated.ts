import gql from 'graphql-tag';
import * as Urql from 'urql';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  DateTime: any;
  bigint: any;
  date: any;
  jsonb: any;
  numeric: any;
  timestamp: any;
  timestamptz: any;
  uuid: any;
};

export type Account = {
  __typename?: 'Account';
  accountNumber: Scalars['String'];
  balance: Scalars['Float'];
  bank: Bank;
  bankAddress?: Maybe<Scalars['String']>;
  bankAggregate?: Maybe<AccountBankBankAggregationSelection>;
  bankCharges: Scalars['Float'];
  bankConnection: AccountBankConnection;
  beneficiaryAddress?: Maybe<Scalars['String']>;
  businessWallets: Array<BusinessWallet>;
  businessWalletsAggregate?: Maybe<AccountBusinessWalletBusinessWalletsAggregationSelection>;
  businessWalletsConnection: AccountBusinessWalletsConnection;
  createdAt: Scalars['DateTime'];
  createdBy: User;
  createdByConnection: AccountCreatedByConnection;
  currency: Scalars['String'];
  id: Scalars['ID'];
  isDedicatedAccount: Scalars['Boolean'];
  isInternalAccount: Scalars['Boolean'];
  name: Scalars['String'];
  nickname: Scalars['String'];
  updatedAt: Scalars['DateTime'];
  updatedBy: User;
  updatedByConnection: AccountUpdatedByConnection;
};


export type AccountBankArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BankOptions>;
  where?: InputMaybe<BankWhere>;
};


export type AccountBankAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BankWhere>;
};


export type AccountBankConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<AccountBankConnectionSort>>;
  where?: InputMaybe<AccountBankConnectionWhere>;
};


export type AccountBusinessWalletsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type AccountBusinessWalletsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type AccountBusinessWalletsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<AccountBusinessWalletsConnectionSort>>;
  where?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
};


export type AccountCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type AccountCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<AccountCreatedByConnectionSort>>;
  where?: InputMaybe<AccountCreatedByConnectionWhere>;
};


export type AccountUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type AccountUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<AccountUpdatedByConnectionSort>>;
  where?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountAggregateSelection = {
  __typename?: 'AccountAggregateSelection';
  accountNumber: StringAggregateSelectionNonNullable;
  balance: FloatAggregateSelectionNonNullable;
  bankAddress: StringAggregateSelectionNullable;
  bankCharges: FloatAggregateSelectionNonNullable;
  beneficiaryAddress: StringAggregateSelectionNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type AccountBankAggregateInput = {
  AND?: InputMaybe<Array<AccountBankAggregateInput>>;
  NOT?: InputMaybe<AccountBankAggregateInput>;
  OR?: InputMaybe<Array<AccountBankAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<AccountBankNodeAggregationWhereInput>;
};

export type AccountBankBankAggregationSelection = {
  __typename?: 'AccountBankBankAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<AccountBankBankNodeAggregateSelection>;
};

export type AccountBankBankNodeAggregateSelection = {
  __typename?: 'AccountBankBankNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type AccountBankConnectFieldInput = {
  connect?: InputMaybe<BankConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BankConnectWhere>;
};

export type AccountBankConnectOrCreateFieldInput = {
  onCreate: AccountBankConnectOrCreateFieldInputOnCreate;
  where: BankConnectOrCreateWhere;
};

export type AccountBankConnectOrCreateFieldInputOnCreate = {
  node: BankOnCreateInput;
};

export type AccountBankConnection = {
  __typename?: 'AccountBankConnection';
  edges: Array<AccountBankRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type AccountBankConnectionSort = {
  node?: InputMaybe<BankSort>;
};

export type AccountBankConnectionWhere = {
  AND?: InputMaybe<Array<AccountBankConnectionWhere>>;
  NOT?: InputMaybe<AccountBankConnectionWhere>;
  OR?: InputMaybe<Array<AccountBankConnectionWhere>>;
  node?: InputMaybe<BankWhere>;
};

export type AccountBankCreateFieldInput = {
  node: BankCreateInput;
};

export type AccountBankDeleteFieldInput = {
  delete?: InputMaybe<BankDeleteInput>;
  where?: InputMaybe<AccountBankConnectionWhere>;
};

export type AccountBankDisconnectFieldInput = {
  disconnect?: InputMaybe<BankDisconnectInput>;
  where?: InputMaybe<AccountBankConnectionWhere>;
};

export type AccountBankFieldInput = {
  connect?: InputMaybe<AccountBankConnectFieldInput>;
  connectOrCreate?: InputMaybe<AccountBankConnectOrCreateFieldInput>;
  create?: InputMaybe<AccountBankCreateFieldInput>;
};

export type AccountBankNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AccountBankNodeAggregationWhereInput>>;
  NOT?: InputMaybe<AccountBankNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<AccountBankNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  swiftCode_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type AccountBankRelationship = {
  __typename?: 'AccountBankRelationship';
  cursor: Scalars['String'];
  node: Bank;
};

export type AccountBankUpdateConnectionInput = {
  node?: InputMaybe<BankUpdateInput>;
};

export type AccountBankUpdateFieldInput = {
  connect?: InputMaybe<AccountBankConnectFieldInput>;
  connectOrCreate?: InputMaybe<AccountBankConnectOrCreateFieldInput>;
  create?: InputMaybe<AccountBankCreateFieldInput>;
  delete?: InputMaybe<AccountBankDeleteFieldInput>;
  disconnect?: InputMaybe<AccountBankDisconnectFieldInput>;
  update?: InputMaybe<AccountBankUpdateConnectionInput>;
  where?: InputMaybe<AccountBankConnectionWhere>;
};

export type AccountBusinessWalletBusinessWalletsAggregationSelection = {
  __typename?: 'AccountBusinessWalletBusinessWalletsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<AccountBusinessWalletBusinessWalletsNodeAggregateSelection>;
};

export type AccountBusinessWalletBusinessWalletsNodeAggregateSelection = {
  __typename?: 'AccountBusinessWalletBusinessWalletsNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type AccountBusinessWalletsAggregateInput = {
  AND?: InputMaybe<Array<AccountBusinessWalletsAggregateInput>>;
  NOT?: InputMaybe<AccountBusinessWalletsAggregateInput>;
  OR?: InputMaybe<Array<AccountBusinessWalletsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<AccountBusinessWalletsNodeAggregationWhereInput>;
};

export type AccountBusinessWalletsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type AccountBusinessWalletsConnectOrCreateFieldInput = {
  onCreate: AccountBusinessWalletsConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type AccountBusinessWalletsConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type AccountBusinessWalletsConnection = {
  __typename?: 'AccountBusinessWalletsConnection';
  edges: Array<AccountBusinessWalletsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type AccountBusinessWalletsConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type AccountBusinessWalletsConnectionWhere = {
  AND?: InputMaybe<Array<AccountBusinessWalletsConnectionWhere>>;
  NOT?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  OR?: InputMaybe<Array<AccountBusinessWalletsConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type AccountBusinessWalletsCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type AccountBusinessWalletsDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
};

export type AccountBusinessWalletsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
};

export type AccountBusinessWalletsFieldInput = {
  connect?: InputMaybe<Array<AccountBusinessWalletsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<AccountBusinessWalletsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<AccountBusinessWalletsCreateFieldInput>>;
};

export type AccountBusinessWalletsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AccountBusinessWalletsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<AccountBusinessWalletsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<AccountBusinessWalletsNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type AccountBusinessWalletsRelationship = {
  __typename?: 'AccountBusinessWalletsRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type AccountBusinessWalletsUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type AccountBusinessWalletsUpdateFieldInput = {
  connect?: InputMaybe<Array<AccountBusinessWalletsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<AccountBusinessWalletsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<AccountBusinessWalletsCreateFieldInput>>;
  delete?: InputMaybe<Array<AccountBusinessWalletsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<AccountBusinessWalletsDisconnectFieldInput>>;
  update?: InputMaybe<AccountBusinessWalletsUpdateConnectionInput>;
  where?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
};

export type AccountConnectInput = {
  bank?: InputMaybe<AccountBankConnectFieldInput>;
  businessWallets?: InputMaybe<Array<AccountBusinessWalletsConnectFieldInput>>;
  createdBy?: InputMaybe<AccountCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<AccountUpdatedByConnectFieldInput>;
};

export type AccountConnectOrCreateInput = {
  bank?: InputMaybe<AccountBankConnectOrCreateFieldInput>;
  businessWallets?: InputMaybe<Array<AccountBusinessWalletsConnectOrCreateFieldInput>>;
};

export type AccountConnectOrCreateWhere = {
  node: AccountUniqueWhere;
};

export type AccountConnectWhere = {
  node: AccountWhere;
};

export type AccountCreateInput = {
  accountNumber: Scalars['String'];
  balance?: Scalars['Float'];
  bank?: InputMaybe<AccountBankFieldInput>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankCharges?: Scalars['Float'];
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  businessWallets?: InputMaybe<AccountBusinessWalletsFieldInput>;
  createdBy?: InputMaybe<AccountCreatedByFieldInput>;
  currency: Scalars['String'];
  isDedicatedAccount?: Scalars['Boolean'];
  isInternalAccount?: Scalars['Boolean'];
  name: Scalars['String'];
  nickname: Scalars['String'];
  updatedBy?: InputMaybe<AccountUpdatedByFieldInput>;
};

export type AccountCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type AccountCreatedByConnection = {
  __typename?: 'AccountCreatedByConnection';
  edges: Array<AccountCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type AccountCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type AccountCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<AccountCreatedByConnectionWhere>>;
  NOT?: InputMaybe<AccountCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<AccountCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type AccountCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type AccountCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<AccountCreatedByConnectionWhere>;
};

export type AccountCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<AccountCreatedByConnectionWhere>;
};

export type AccountCreatedByFieldInput = {
  connect?: InputMaybe<AccountCreatedByConnectFieldInput>;
  create?: InputMaybe<AccountCreatedByCreateFieldInput>;
};

export type AccountCreatedByRelationship = {
  __typename?: 'AccountCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type AccountCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type AccountCreatedByUpdateFieldInput = {
  connect?: InputMaybe<AccountCreatedByConnectFieldInput>;
  create?: InputMaybe<AccountCreatedByCreateFieldInput>;
  delete?: InputMaybe<AccountCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<AccountCreatedByDisconnectFieldInput>;
  update?: InputMaybe<AccountCreatedByUpdateConnectionInput>;
  where?: InputMaybe<AccountCreatedByConnectionWhere>;
};

export type AccountDeleteInput = {
  bank?: InputMaybe<AccountBankDeleteFieldInput>;
  businessWallets?: InputMaybe<Array<AccountBusinessWalletsDeleteFieldInput>>;
  createdBy?: InputMaybe<AccountCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<AccountUpdatedByDeleteFieldInput>;
};

export type AccountDisconnectInput = {
  bank?: InputMaybe<AccountBankDisconnectFieldInput>;
  businessWallets?: InputMaybe<Array<AccountBusinessWalletsDisconnectFieldInput>>;
  createdBy?: InputMaybe<AccountCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<AccountUpdatedByDisconnectFieldInput>;
};

export type AccountEdge = {
  __typename?: 'AccountEdge';
  cursor: Scalars['String'];
  node: Account;
};

export type AccountOnCreateInput = {
  accountNumber: Scalars['String'];
  balance?: Scalars['Float'];
  bankAddress?: InputMaybe<Scalars['String']>;
  bankCharges?: Scalars['Float'];
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  currency: Scalars['String'];
  isDedicatedAccount?: Scalars['Boolean'];
  isInternalAccount?: Scalars['Boolean'];
  name: Scalars['String'];
  nickname: Scalars['String'];
};

export type AccountOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more AccountSort objects to sort Accounts by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<AccountSort>>;
};

export type AccountOptions_Remote_Rel_DepositstoAccount = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more AccountSort objects to sort Accounts by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<AccountSort>>;
};

export type AccountOptions_Remote_Rel_InternalTransfersfromAccount = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more AccountSort objects to sort Accounts by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<AccountSort>>;
};

export type AccountOptions_Remote_Rel_InternalTransferstoAccount = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more AccountSort objects to sort Accounts by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<AccountSort>>;
};

export type AccountRelationInput = {
  bank?: InputMaybe<AccountBankCreateFieldInput>;
  businessWallets?: InputMaybe<Array<AccountBusinessWalletsCreateFieldInput>>;
  createdBy?: InputMaybe<AccountCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<AccountUpdatedByCreateFieldInput>;
};

/** Fields to sort Accounts by. The order in which sorts are applied is not guaranteed when specifying many fields in one AccountSort object. */
export type AccountSort = {
  accountNumber?: InputMaybe<SortDirection>;
  balance?: InputMaybe<SortDirection>;
  bankAddress?: InputMaybe<SortDirection>;
  bankCharges?: InputMaybe<SortDirection>;
  beneficiaryAddress?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isDedicatedAccount?: InputMaybe<SortDirection>;
  isInternalAccount?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  nickname?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type AccountUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type AccountUpdateInput = {
  accountNumber?: InputMaybe<Scalars['String']>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_ADD?: InputMaybe<Scalars['Float']>;
  balance_DIVIDE?: InputMaybe<Scalars['Float']>;
  balance_MULTIPLY?: InputMaybe<Scalars['Float']>;
  balance_SUBTRACT?: InputMaybe<Scalars['Float']>;
  bank?: InputMaybe<AccountBankUpdateFieldInput>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankCharges?: InputMaybe<Scalars['Float']>;
  bankCharges_ADD?: InputMaybe<Scalars['Float']>;
  bankCharges_DIVIDE?: InputMaybe<Scalars['Float']>;
  bankCharges_MULTIPLY?: InputMaybe<Scalars['Float']>;
  bankCharges_SUBTRACT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  businessWallets?: InputMaybe<Array<AccountBusinessWalletsUpdateFieldInput>>;
  createdBy?: InputMaybe<AccountCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  isDedicatedAccount?: InputMaybe<Scalars['Boolean']>;
  isInternalAccount?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<AccountUpdatedByUpdateFieldInput>;
};

export type AccountUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type AccountUpdatedByConnection = {
  __typename?: 'AccountUpdatedByConnection';
  edges: Array<AccountUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type AccountUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type AccountUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<AccountUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<AccountUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<AccountUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type AccountUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type AccountUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountUpdatedByFieldInput = {
  connect?: InputMaybe<AccountUpdatedByConnectFieldInput>;
  create?: InputMaybe<AccountUpdatedByCreateFieldInput>;
};

export type AccountUpdatedByRelationship = {
  __typename?: 'AccountUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type AccountUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type AccountUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<AccountUpdatedByConnectFieldInput>;
  create?: InputMaybe<AccountUpdatedByCreateFieldInput>;
  delete?: InputMaybe<AccountUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<AccountUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<AccountUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountWhere = {
  AND?: InputMaybe<Array<AccountWhere>>;
  NOT?: InputMaybe<AccountWhere>;
  OR?: InputMaybe<Array<AccountWhere>>;
  accountNumber?: InputMaybe<Scalars['String']>;
  accountNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  accountNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  accountNumber_IN?: InputMaybe<Array<Scalars['String']>>;
  accountNumber_MATCHES?: InputMaybe<Scalars['String']>;
  accountNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  bank?: InputMaybe<BankWhere>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  bankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  bankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankAggregate?: InputMaybe<AccountBankAggregateInput>;
  bankCharges?: InputMaybe<Scalars['Float']>;
  bankCharges_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_IN?: InputMaybe<Array<Scalars['Float']>>;
  bankCharges_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_LTE?: InputMaybe<Scalars['Float']>;
  bankConnection?: InputMaybe<AccountBankConnectionWhere>;
  bankConnection_NOT?: InputMaybe<AccountBankConnectionWhere>;
  bank_NOT?: InputMaybe<BankWhere>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryAddress_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  businessWalletsAggregate?: InputMaybe<AccountBusinessWalletsAggregateInput>;
  /** Return Accounts where all of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where none of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where one of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where some of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<AccountCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<AccountCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isDedicatedAccount?: InputMaybe<Scalars['Boolean']>;
  isInternalAccount?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<AccountUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountWhere_Remote_Rel_DepositstoAccount = {
  AND?: InputMaybe<Array<AccountWhere>>;
  NOT?: InputMaybe<AccountWhere>;
  OR?: InputMaybe<Array<AccountWhere>>;
  accountNumber?: InputMaybe<Scalars['String']>;
  accountNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  accountNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  accountNumber_IN?: InputMaybe<Array<Scalars['String']>>;
  accountNumber_MATCHES?: InputMaybe<Scalars['String']>;
  accountNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  bank?: InputMaybe<BankWhere>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  bankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  bankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankAggregate?: InputMaybe<AccountBankAggregateInput>;
  bankCharges?: InputMaybe<Scalars['Float']>;
  bankCharges_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_IN?: InputMaybe<Array<Scalars['Float']>>;
  bankCharges_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_LTE?: InputMaybe<Scalars['Float']>;
  bankConnection?: InputMaybe<AccountBankConnectionWhere>;
  bankConnection_NOT?: InputMaybe<AccountBankConnectionWhere>;
  bank_NOT?: InputMaybe<BankWhere>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryAddress_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  businessWalletsAggregate?: InputMaybe<AccountBusinessWalletsAggregateInput>;
  /** Return Accounts where all of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where none of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where one of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where some of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<AccountCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<AccountCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isDedicatedAccount?: InputMaybe<Scalars['Boolean']>;
  isInternalAccount?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<AccountUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountWhere_Remote_Rel_InternalTransfersfromAccount = {
  AND?: InputMaybe<Array<AccountWhere>>;
  NOT?: InputMaybe<AccountWhere>;
  OR?: InputMaybe<Array<AccountWhere>>;
  accountNumber?: InputMaybe<Scalars['String']>;
  accountNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  accountNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  accountNumber_IN?: InputMaybe<Array<Scalars['String']>>;
  accountNumber_MATCHES?: InputMaybe<Scalars['String']>;
  accountNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  bank?: InputMaybe<BankWhere>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  bankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  bankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankAggregate?: InputMaybe<AccountBankAggregateInput>;
  bankCharges?: InputMaybe<Scalars['Float']>;
  bankCharges_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_IN?: InputMaybe<Array<Scalars['Float']>>;
  bankCharges_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_LTE?: InputMaybe<Scalars['Float']>;
  bankConnection?: InputMaybe<AccountBankConnectionWhere>;
  bankConnection_NOT?: InputMaybe<AccountBankConnectionWhere>;
  bank_NOT?: InputMaybe<BankWhere>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryAddress_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  businessWalletsAggregate?: InputMaybe<AccountBusinessWalletsAggregateInput>;
  /** Return Accounts where all of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where none of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where one of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where some of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<AccountCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<AccountCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isDedicatedAccount?: InputMaybe<Scalars['Boolean']>;
  isInternalAccount?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<AccountUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountWhere_Remote_Rel_InternalTransferstoAccount = {
  AND?: InputMaybe<Array<AccountWhere>>;
  NOT?: InputMaybe<AccountWhere>;
  OR?: InputMaybe<Array<AccountWhere>>;
  accountNumber?: InputMaybe<Scalars['String']>;
  accountNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  accountNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  accountNumber_IN?: InputMaybe<Array<Scalars['String']>>;
  accountNumber_MATCHES?: InputMaybe<Scalars['String']>;
  accountNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  bank?: InputMaybe<BankWhere>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  bankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  bankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankAggregate?: InputMaybe<AccountBankAggregateInput>;
  bankCharges?: InputMaybe<Scalars['Float']>;
  bankCharges_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_IN?: InputMaybe<Array<Scalars['Float']>>;
  bankCharges_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_LTE?: InputMaybe<Scalars['Float']>;
  bankConnection?: InputMaybe<AccountBankConnectionWhere>;
  bankConnection_NOT?: InputMaybe<AccountBankConnectionWhere>;
  bank_NOT?: InputMaybe<BankWhere>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryAddress_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  businessWalletsAggregate?: InputMaybe<AccountBusinessWalletsAggregateInput>;
  /** Return Accounts where all of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where none of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where one of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where some of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<AccountCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<AccountCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isDedicatedAccount?: InputMaybe<Scalars['Boolean']>;
  isInternalAccount?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<AccountUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountWhere_Remote_Rel_WithdrawalsfromAccount = {
  AND?: InputMaybe<Array<AccountWhere>>;
  NOT?: InputMaybe<AccountWhere>;
  OR?: InputMaybe<Array<AccountWhere>>;
  accountNumber?: InputMaybe<Scalars['String']>;
  accountNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  accountNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  accountNumber_IN?: InputMaybe<Array<Scalars['String']>>;
  accountNumber_MATCHES?: InputMaybe<Scalars['String']>;
  accountNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  bank?: InputMaybe<BankWhere>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  bankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  bankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankAggregate?: InputMaybe<AccountBankAggregateInput>;
  bankCharges?: InputMaybe<Scalars['Float']>;
  bankCharges_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_IN?: InputMaybe<Array<Scalars['Float']>>;
  bankCharges_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_LTE?: InputMaybe<Scalars['Float']>;
  bankConnection?: InputMaybe<AccountBankConnectionWhere>;
  bankConnection_NOT?: InputMaybe<AccountBankConnectionWhere>;
  bank_NOT?: InputMaybe<BankWhere>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryAddress_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  businessWalletsAggregate?: InputMaybe<AccountBusinessWalletsAggregateInput>;
  /** Return Accounts where all of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where none of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where one of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where some of the related AccountBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<AccountBusinessWalletsConnectionWhere>;
  /** Return Accounts where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Accounts where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<AccountCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<AccountCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isDedicatedAccount?: InputMaybe<Scalars['Boolean']>;
  isInternalAccount?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<AccountUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<AccountUpdatedByConnectionWhere>;
};

export type AccountsConnection = {
  __typename?: 'AccountsConnection';
  edges: Array<AccountEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type AddAdjustmentInput = {
  amount: Scalars['numeric'];
  businessWalletId: Scalars['uuid'];
  isCredit: Scalars['Boolean'];
  otherType?: InputMaybe<Scalars['String']>;
  parentBusinessId: Scalars['uuid'];
  remarks?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
};

export type AddBusinessOutput = {
  __typename?: 'AddBusinessOutput';
  data?: Maybe<AddBusinessOutputData>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type AddBusinessOutputData = {
  __typename?: 'AddBusinessOutputData';
  businessId: Scalars['uuid'];
};

export type AddBusinessWalletInput = {
  currency: Array<Scalars['String']>;
  id: Scalars['uuid'];
};

export type AlternateMethodSolution = {
  __typename?: 'AlternateMethodSolution';
  businessSolution: BusinessSolution;
  businessSolutionAggregate?: Maybe<AlternateMethodSolutionBusinessSolutionBusinessSolutionAggregationSelection>;
  businessSolutionConnection: AlternateMethodSolutionBusinessSolutionConnection;
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  updatedAt: Scalars['DateTime'];
  volume: Scalars['Float'];
};


export type AlternateMethodSolutionBusinessSolutionArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessSolutionOptions>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type AlternateMethodSolutionBusinessSolutionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type AlternateMethodSolutionBusinessSolutionConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<AlternateMethodSolutionBusinessSolutionConnectionSort>>;
  where?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectionWhere>;
};

export type AlternateMethodSolutionAggregateSelection = {
  __typename?: 'AlternateMethodSolutionAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  volume: FloatAggregateSelectionNonNullable;
};

export type AlternateMethodSolutionBusinessSolutionAggregateInput = {
  AND?: InputMaybe<Array<AlternateMethodSolutionBusinessSolutionAggregateInput>>;
  NOT?: InputMaybe<AlternateMethodSolutionBusinessSolutionAggregateInput>;
  OR?: InputMaybe<Array<AlternateMethodSolutionBusinessSolutionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<AlternateMethodSolutionBusinessSolutionNodeAggregationWhereInput>;
};

export type AlternateMethodSolutionBusinessSolutionBusinessSolutionAggregationSelection = {
  __typename?: 'AlternateMethodSolutionBusinessSolutionBusinessSolutionAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<AlternateMethodSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection>;
};

export type AlternateMethodSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection = {
  __typename?: 'AlternateMethodSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type AlternateMethodSolutionBusinessSolutionConnectFieldInput = {
  connect?: InputMaybe<BusinessSolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessSolutionConnectWhere>;
};

export type AlternateMethodSolutionBusinessSolutionConnectOrCreateFieldInput = {
  onCreate: AlternateMethodSolutionBusinessSolutionConnectOrCreateFieldInputOnCreate;
  where: BusinessSolutionConnectOrCreateWhere;
};

export type AlternateMethodSolutionBusinessSolutionConnectOrCreateFieldInputOnCreate = {
  node: BusinessSolutionOnCreateInput;
};

export type AlternateMethodSolutionBusinessSolutionConnection = {
  __typename?: 'AlternateMethodSolutionBusinessSolutionConnection';
  edges: Array<AlternateMethodSolutionBusinessSolutionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type AlternateMethodSolutionBusinessSolutionConnectionSort = {
  node?: InputMaybe<BusinessSolutionSort>;
};

export type AlternateMethodSolutionBusinessSolutionConnectionWhere = {
  AND?: InputMaybe<Array<AlternateMethodSolutionBusinessSolutionConnectionWhere>>;
  NOT?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectionWhere>;
  OR?: InputMaybe<Array<AlternateMethodSolutionBusinessSolutionConnectionWhere>>;
  node?: InputMaybe<BusinessSolutionWhere>;
};

export type AlternateMethodSolutionBusinessSolutionCreateFieldInput = {
  node: BusinessSolutionCreateInput;
};

export type AlternateMethodSolutionBusinessSolutionDeleteFieldInput = {
  delete?: InputMaybe<BusinessSolutionDeleteInput>;
  where?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectionWhere>;
};

export type AlternateMethodSolutionBusinessSolutionDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessSolutionDisconnectInput>;
  where?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectionWhere>;
};

export type AlternateMethodSolutionBusinessSolutionFieldInput = {
  connect?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectFieldInput>;
  connectOrCreate?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectOrCreateFieldInput>;
  create?: InputMaybe<AlternateMethodSolutionBusinessSolutionCreateFieldInput>;
};

export type AlternateMethodSolutionBusinessSolutionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AlternateMethodSolutionBusinessSolutionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<AlternateMethodSolutionBusinessSolutionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<AlternateMethodSolutionBusinessSolutionNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type AlternateMethodSolutionBusinessSolutionRelationship = {
  __typename?: 'AlternateMethodSolutionBusinessSolutionRelationship';
  cursor: Scalars['String'];
  node: BusinessSolution;
};

export type AlternateMethodSolutionBusinessSolutionUpdateConnectionInput = {
  node?: InputMaybe<BusinessSolutionUpdateInput>;
};

export type AlternateMethodSolutionBusinessSolutionUpdateFieldInput = {
  connect?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectFieldInput>;
  connectOrCreate?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectOrCreateFieldInput>;
  create?: InputMaybe<AlternateMethodSolutionBusinessSolutionCreateFieldInput>;
  delete?: InputMaybe<AlternateMethodSolutionBusinessSolutionDeleteFieldInput>;
  disconnect?: InputMaybe<AlternateMethodSolutionBusinessSolutionDisconnectFieldInput>;
  update?: InputMaybe<AlternateMethodSolutionBusinessSolutionUpdateConnectionInput>;
  where?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectionWhere>;
};

export type AlternateMethodSolutionConnectInput = {
  businessSolution?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectFieldInput>;
};

export type AlternateMethodSolutionConnectOrCreateInput = {
  businessSolution?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectOrCreateFieldInput>;
};

export type AlternateMethodSolutionConnectOrCreateWhere = {
  node: AlternateMethodSolutionUniqueWhere;
};

export type AlternateMethodSolutionConnectWhere = {
  node: AlternateMethodSolutionWhere;
};

export type AlternateMethodSolutionCreateInput = {
  businessSolution?: InputMaybe<AlternateMethodSolutionBusinessSolutionFieldInput>;
  volume?: Scalars['Float'];
};

export type AlternateMethodSolutionDeleteInput = {
  businessSolution?: InputMaybe<AlternateMethodSolutionBusinessSolutionDeleteFieldInput>;
};

export type AlternateMethodSolutionDisconnectInput = {
  businessSolution?: InputMaybe<AlternateMethodSolutionBusinessSolutionDisconnectFieldInput>;
};

export type AlternateMethodSolutionEdge = {
  __typename?: 'AlternateMethodSolutionEdge';
  cursor: Scalars['String'];
  node: AlternateMethodSolution;
};

export type AlternateMethodSolutionOnCreateInput = {
  volume?: Scalars['Float'];
};

export type AlternateMethodSolutionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more AlternateMethodSolutionSort objects to sort AlternateMethodSolutions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<AlternateMethodSolutionSort>>;
};

export type AlternateMethodSolutionRelationInput = {
  businessSolution?: InputMaybe<AlternateMethodSolutionBusinessSolutionCreateFieldInput>;
};

/** Fields to sort AlternateMethodSolutions by. The order in which sorts are applied is not guaranteed when specifying many fields in one AlternateMethodSolutionSort object. */
export type AlternateMethodSolutionSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  volume?: InputMaybe<SortDirection>;
};

export type AlternateMethodSolutionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type AlternateMethodSolutionUpdateInput = {
  businessSolution?: InputMaybe<AlternateMethodSolutionBusinessSolutionUpdateFieldInput>;
  volume?: InputMaybe<Scalars['Float']>;
  volume_ADD?: InputMaybe<Scalars['Float']>;
  volume_DIVIDE?: InputMaybe<Scalars['Float']>;
  volume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  volume_SUBTRACT?: InputMaybe<Scalars['Float']>;
};

export type AlternateMethodSolutionWhere = {
  AND?: InputMaybe<Array<AlternateMethodSolutionWhere>>;
  NOT?: InputMaybe<AlternateMethodSolutionWhere>;
  OR?: InputMaybe<Array<AlternateMethodSolutionWhere>>;
  businessSolution?: InputMaybe<BusinessSolutionWhere>;
  businessSolutionAggregate?: InputMaybe<AlternateMethodSolutionBusinessSolutionAggregateInput>;
  businessSolutionConnection?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectionWhere>;
  businessSolutionConnection_NOT?: InputMaybe<AlternateMethodSolutionBusinessSolutionConnectionWhere>;
  businessSolution_NOT?: InputMaybe<BusinessSolutionWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  volume?: InputMaybe<Scalars['Float']>;
  volume_GT?: InputMaybe<Scalars['Float']>;
  volume_GTE?: InputMaybe<Scalars['Float']>;
  volume_IN?: InputMaybe<Array<Scalars['Float']>>;
  volume_LT?: InputMaybe<Scalars['Float']>;
  volume_LTE?: InputMaybe<Scalars['Float']>;
};

export type AlternateMethodSolutionsConnection = {
  __typename?: 'AlternateMethodSolutionsConnection';
  edges: Array<AlternateMethodSolutionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type Bank = {
  __typename?: 'Bank';
  accounts: Array<Account>;
  accountsAggregate?: Maybe<BankAccountAccountsAggregationSelection>;
  accountsConnection: BankAccountsConnection;
  address?: Maybe<Scalars['String']>;
  country: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: User;
  createdByConnection: BankCreatedByConnection;
  id: Scalars['ID'];
  intermediaryAccounts: Array<IntermediaryAccount>;
  intermediaryAccountsAggregate?: Maybe<BankIntermediaryAccountIntermediaryAccountsAggregationSelection>;
  intermediaryAccountsConnection: BankIntermediaryAccountsConnection;
  name: Scalars['String'];
  swiftCode: Scalars['String'];
  updatedAt: Scalars['DateTime'];
  updatedBy: User;
  updatedByConnection: BankUpdatedByConnection;
};


export type BankAccountsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<AccountOptions>;
  where?: InputMaybe<AccountWhere>;
};


export type BankAccountsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<AccountWhere>;
};


export type BankAccountsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BankAccountsConnectionSort>>;
  where?: InputMaybe<BankAccountsConnectionWhere>;
};


export type BankCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BankCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BankCreatedByConnectionSort>>;
  where?: InputMaybe<BankCreatedByConnectionWhere>;
};


export type BankIntermediaryAccountsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<IntermediaryAccountOptions>;
  where?: InputMaybe<IntermediaryAccountWhere>;
};


export type BankIntermediaryAccountsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<IntermediaryAccountWhere>;
};


export type BankIntermediaryAccountsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BankIntermediaryAccountsConnectionSort>>;
  where?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
};


export type BankUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BankUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BankUpdatedByConnectionSort>>;
  where?: InputMaybe<BankUpdatedByConnectionWhere>;
};

export type BankAccountAccountsAggregationSelection = {
  __typename?: 'BankAccountAccountsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BankAccountAccountsNodeAggregateSelection>;
};

export type BankAccountAccountsNodeAggregateSelection = {
  __typename?: 'BankAccountAccountsNodeAggregateSelection';
  accountNumber: StringAggregateSelectionNonNullable;
  balance: FloatAggregateSelectionNonNullable;
  bankAddress: StringAggregateSelectionNullable;
  bankCharges: FloatAggregateSelectionNonNullable;
  beneficiaryAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BankAccountsAggregateInput = {
  AND?: InputMaybe<Array<BankAccountsAggregateInput>>;
  NOT?: InputMaybe<BankAccountsAggregateInput>;
  OR?: InputMaybe<Array<BankAccountsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BankAccountsNodeAggregationWhereInput>;
};

export type BankAccountsConnectFieldInput = {
  connect?: InputMaybe<Array<AccountConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<AccountConnectWhere>;
};

export type BankAccountsConnectOrCreateFieldInput = {
  onCreate: BankAccountsConnectOrCreateFieldInputOnCreate;
  where: AccountConnectOrCreateWhere;
};

export type BankAccountsConnectOrCreateFieldInputOnCreate = {
  node: AccountOnCreateInput;
};

export type BankAccountsConnection = {
  __typename?: 'BankAccountsConnection';
  edges: Array<BankAccountsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BankAccountsConnectionSort = {
  node?: InputMaybe<AccountSort>;
};

export type BankAccountsConnectionWhere = {
  AND?: InputMaybe<Array<BankAccountsConnectionWhere>>;
  NOT?: InputMaybe<BankAccountsConnectionWhere>;
  OR?: InputMaybe<Array<BankAccountsConnectionWhere>>;
  node?: InputMaybe<AccountWhere>;
};

export type BankAccountsCreateFieldInput = {
  node: AccountCreateInput;
};

export type BankAccountsDeleteFieldInput = {
  delete?: InputMaybe<AccountDeleteInput>;
  where?: InputMaybe<BankAccountsConnectionWhere>;
};

export type BankAccountsDisconnectFieldInput = {
  disconnect?: InputMaybe<AccountDisconnectInput>;
  where?: InputMaybe<BankAccountsConnectionWhere>;
};

export type BankAccountsFieldInput = {
  connect?: InputMaybe<Array<BankAccountsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BankAccountsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BankAccountsCreateFieldInput>>;
};

export type BankAccountsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BankAccountsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BankAccountsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BankAccountsNodeAggregationWhereInput>>;
  accountNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  accountNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankCharges_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCharges_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_LTE?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_LTE?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BankAccountsRelationship = {
  __typename?: 'BankAccountsRelationship';
  cursor: Scalars['String'];
  node: Account;
};

export type BankAccountsUpdateConnectionInput = {
  node?: InputMaybe<AccountUpdateInput>;
};

export type BankAccountsUpdateFieldInput = {
  connect?: InputMaybe<Array<BankAccountsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BankAccountsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BankAccountsCreateFieldInput>>;
  delete?: InputMaybe<Array<BankAccountsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BankAccountsDisconnectFieldInput>>;
  update?: InputMaybe<BankAccountsUpdateConnectionInput>;
  where?: InputMaybe<BankAccountsConnectionWhere>;
};

export type BankAggregateSelection = {
  __typename?: 'BankAggregateSelection';
  address: StringAggregateSelectionNullable;
  count: Scalars['Int'];
  country: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BankConnectInput = {
  accounts?: InputMaybe<Array<BankAccountsConnectFieldInput>>;
  createdBy?: InputMaybe<BankCreatedByConnectFieldInput>;
  intermediaryAccounts?: InputMaybe<Array<BankIntermediaryAccountsConnectFieldInput>>;
  updatedBy?: InputMaybe<BankUpdatedByConnectFieldInput>;
};

export type BankConnectOrCreateInput = {
  accounts?: InputMaybe<Array<BankAccountsConnectOrCreateFieldInput>>;
  intermediaryAccounts?: InputMaybe<Array<BankIntermediaryAccountsConnectOrCreateFieldInput>>;
};

export type BankConnectOrCreateWhere = {
  node: BankUniqueWhere;
};

export type BankConnectWhere = {
  node: BankWhere;
};

export type BankCreateInput = {
  accounts?: InputMaybe<BankAccountsFieldInput>;
  address?: InputMaybe<Scalars['String']>;
  country: Scalars['String'];
  createdBy?: InputMaybe<BankCreatedByFieldInput>;
  intermediaryAccounts?: InputMaybe<BankIntermediaryAccountsFieldInput>;
  name: Scalars['String'];
  swiftCode: Scalars['String'];
  updatedBy?: InputMaybe<BankUpdatedByFieldInput>;
};

export type BankCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BankCreatedByConnection = {
  __typename?: 'BankCreatedByConnection';
  edges: Array<BankCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BankCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BankCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BankCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BankCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BankCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BankCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BankCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BankCreatedByConnectionWhere>;
};

export type BankCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BankCreatedByConnectionWhere>;
};

export type BankCreatedByFieldInput = {
  connect?: InputMaybe<BankCreatedByConnectFieldInput>;
  create?: InputMaybe<BankCreatedByCreateFieldInput>;
};

export type BankCreatedByRelationship = {
  __typename?: 'BankCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BankCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BankCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BankCreatedByConnectFieldInput>;
  create?: InputMaybe<BankCreatedByCreateFieldInput>;
  delete?: InputMaybe<BankCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BankCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BankCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BankCreatedByConnectionWhere>;
};

export type BankDeleteInput = {
  accounts?: InputMaybe<Array<BankAccountsDeleteFieldInput>>;
  createdBy?: InputMaybe<BankCreatedByDeleteFieldInput>;
  intermediaryAccounts?: InputMaybe<Array<BankIntermediaryAccountsDeleteFieldInput>>;
  updatedBy?: InputMaybe<BankUpdatedByDeleteFieldInput>;
};

export type BankDisconnectInput = {
  accounts?: InputMaybe<Array<BankAccountsDisconnectFieldInput>>;
  createdBy?: InputMaybe<BankCreatedByDisconnectFieldInput>;
  intermediaryAccounts?: InputMaybe<Array<BankIntermediaryAccountsDisconnectFieldInput>>;
  updatedBy?: InputMaybe<BankUpdatedByDisconnectFieldInput>;
};

export type BankEdge = {
  __typename?: 'BankEdge';
  cursor: Scalars['String'];
  node: Bank;
};

export type BankIntermediaryAccountIntermediaryAccountsAggregationSelection = {
  __typename?: 'BankIntermediaryAccountIntermediaryAccountsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BankIntermediaryAccountIntermediaryAccountsNodeAggregateSelection>;
};

export type BankIntermediaryAccountIntermediaryAccountsNodeAggregateSelection = {
  __typename?: 'BankIntermediaryAccountIntermediaryAccountsNodeAggregateSelection';
  bankName: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BankIntermediaryAccountsAggregateInput = {
  AND?: InputMaybe<Array<BankIntermediaryAccountsAggregateInput>>;
  NOT?: InputMaybe<BankIntermediaryAccountsAggregateInput>;
  OR?: InputMaybe<Array<BankIntermediaryAccountsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BankIntermediaryAccountsNodeAggregationWhereInput>;
};

export type BankIntermediaryAccountsConnectFieldInput = {
  connect?: InputMaybe<Array<IntermediaryAccountConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<IntermediaryAccountConnectWhere>;
};

export type BankIntermediaryAccountsConnectOrCreateFieldInput = {
  onCreate: BankIntermediaryAccountsConnectOrCreateFieldInputOnCreate;
  where: IntermediaryAccountConnectOrCreateWhere;
};

export type BankIntermediaryAccountsConnectOrCreateFieldInputOnCreate = {
  node: IntermediaryAccountOnCreateInput;
};

export type BankIntermediaryAccountsConnection = {
  __typename?: 'BankIntermediaryAccountsConnection';
  edges: Array<BankIntermediaryAccountsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BankIntermediaryAccountsConnectionSort = {
  node?: InputMaybe<IntermediaryAccountSort>;
};

export type BankIntermediaryAccountsConnectionWhere = {
  AND?: InputMaybe<Array<BankIntermediaryAccountsConnectionWhere>>;
  NOT?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
  OR?: InputMaybe<Array<BankIntermediaryAccountsConnectionWhere>>;
  node?: InputMaybe<IntermediaryAccountWhere>;
};

export type BankIntermediaryAccountsCreateFieldInput = {
  node: IntermediaryAccountCreateInput;
};

export type BankIntermediaryAccountsDeleteFieldInput = {
  delete?: InputMaybe<IntermediaryAccountDeleteInput>;
  where?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
};

export type BankIntermediaryAccountsDisconnectFieldInput = {
  disconnect?: InputMaybe<IntermediaryAccountDisconnectInput>;
  where?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
};

export type BankIntermediaryAccountsFieldInput = {
  connect?: InputMaybe<Array<BankIntermediaryAccountsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BankIntermediaryAccountsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BankIntermediaryAccountsCreateFieldInput>>;
};

export type BankIntermediaryAccountsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BankIntermediaryAccountsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BankIntermediaryAccountsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BankIntermediaryAccountsNodeAggregationWhereInput>>;
  bankName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  swiftCode_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BankIntermediaryAccountsRelationship = {
  __typename?: 'BankIntermediaryAccountsRelationship';
  cursor: Scalars['String'];
  node: IntermediaryAccount;
};

export type BankIntermediaryAccountsUpdateConnectionInput = {
  node?: InputMaybe<IntermediaryAccountUpdateInput>;
};

export type BankIntermediaryAccountsUpdateFieldInput = {
  connect?: InputMaybe<Array<BankIntermediaryAccountsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BankIntermediaryAccountsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BankIntermediaryAccountsCreateFieldInput>>;
  delete?: InputMaybe<Array<BankIntermediaryAccountsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BankIntermediaryAccountsDisconnectFieldInput>>;
  update?: InputMaybe<BankIntermediaryAccountsUpdateConnectionInput>;
  where?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
};

export type BankOnCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  country: Scalars['String'];
  name: Scalars['String'];
  swiftCode: Scalars['String'];
};

export type BankOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BankSort objects to sort Banks by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BankSort>>;
};

export type BankRelationInput = {
  accounts?: InputMaybe<Array<BankAccountsCreateFieldInput>>;
  createdBy?: InputMaybe<BankCreatedByCreateFieldInput>;
  intermediaryAccounts?: InputMaybe<Array<BankIntermediaryAccountsCreateFieldInput>>;
  updatedBy?: InputMaybe<BankUpdatedByCreateFieldInput>;
};

/** Fields to sort Banks by. The order in which sorts are applied is not guaranteed when specifying many fields in one BankSort object. */
export type BankSort = {
  address?: InputMaybe<SortDirection>;
  country?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  swiftCode?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type BankUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BankUpdateInput = {
  accounts?: InputMaybe<Array<BankAccountsUpdateFieldInput>>;
  address?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<BankCreatedByUpdateFieldInput>;
  intermediaryAccounts?: InputMaybe<Array<BankIntermediaryAccountsUpdateFieldInput>>;
  name?: InputMaybe<Scalars['String']>;
  swiftCode?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<BankUpdatedByUpdateFieldInput>;
};

export type BankUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BankUpdatedByConnection = {
  __typename?: 'BankUpdatedByConnection';
  edges: Array<BankUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BankUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BankUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BankUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BankUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BankUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BankUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BankUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BankUpdatedByConnectionWhere>;
};

export type BankUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BankUpdatedByConnectionWhere>;
};

export type BankUpdatedByFieldInput = {
  connect?: InputMaybe<BankUpdatedByConnectFieldInput>;
  create?: InputMaybe<BankUpdatedByCreateFieldInput>;
};

export type BankUpdatedByRelationship = {
  __typename?: 'BankUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BankUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BankUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BankUpdatedByConnectFieldInput>;
  create?: InputMaybe<BankUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BankUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BankUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BankUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BankUpdatedByConnectionWhere>;
};

export type BankWhere = {
  AND?: InputMaybe<Array<BankWhere>>;
  NOT?: InputMaybe<BankWhere>;
  OR?: InputMaybe<Array<BankWhere>>;
  accountsAggregate?: InputMaybe<BankAccountsAggregateInput>;
  /** Return Banks where all of the related BankAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BankAccountsConnectionWhere>;
  /** Return Banks where none of the related BankAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BankAccountsConnectionWhere>;
  /** Return Banks where one of the related BankAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BankAccountsConnectionWhere>;
  /** Return Banks where some of the related BankAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BankAccountsConnectionWhere>;
  /** Return Banks where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return Banks where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return Banks where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return Banks where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<Scalars['String']>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BankCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BankCreatedByConnectionWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  intermediaryAccountsAggregate?: InputMaybe<BankIntermediaryAccountsAggregateInput>;
  /** Return Banks where all of the related BankIntermediaryAccountsConnections match this filter */
  intermediaryAccountsConnection_ALL?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
  /** Return Banks where none of the related BankIntermediaryAccountsConnections match this filter */
  intermediaryAccountsConnection_NONE?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
  /** Return Banks where one of the related BankIntermediaryAccountsConnections match this filter */
  intermediaryAccountsConnection_SINGLE?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
  /** Return Banks where some of the related BankIntermediaryAccountsConnections match this filter */
  intermediaryAccountsConnection_SOME?: InputMaybe<BankIntermediaryAccountsConnectionWhere>;
  /** Return Banks where all of the related IntermediaryAccounts match this filter */
  intermediaryAccounts_ALL?: InputMaybe<IntermediaryAccountWhere>;
  /** Return Banks where none of the related IntermediaryAccounts match this filter */
  intermediaryAccounts_NONE?: InputMaybe<IntermediaryAccountWhere>;
  /** Return Banks where one of the related IntermediaryAccounts match this filter */
  intermediaryAccounts_SINGLE?: InputMaybe<IntermediaryAccountWhere>;
  /** Return Banks where some of the related IntermediaryAccounts match this filter */
  intermediaryAccounts_SOME?: InputMaybe<IntermediaryAccountWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  swiftCode?: InputMaybe<Scalars['String']>;
  swiftCode_CONTAINS?: InputMaybe<Scalars['String']>;
  swiftCode_ENDS_WITH?: InputMaybe<Scalars['String']>;
  swiftCode_IN?: InputMaybe<Array<Scalars['String']>>;
  swiftCode_MATCHES?: InputMaybe<Scalars['String']>;
  swiftCode_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BankUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BankUpdatedByConnectionWhere>;
};

export type BankWireSolution = {
  __typename?: 'BankWireSolution';
  b2bDepositVolume: Scalars['Float'];
  b2cWithdrawalVolume: Scalars['Float'];
  businessSolution: BusinessSolution;
  businessSolutionAggregate?: Maybe<BankWireSolutionBusinessSolutionBusinessSolutionAggregationSelection>;
  businessSolutionConnection: BankWireSolutionBusinessSolutionConnection;
  c2bDepositVolume: Scalars['Float'];
  id: Scalars['ID'];
};


export type BankWireSolutionBusinessSolutionArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessSolutionOptions>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type BankWireSolutionBusinessSolutionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type BankWireSolutionBusinessSolutionConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BankWireSolutionBusinessSolutionConnectionSort>>;
  where?: InputMaybe<BankWireSolutionBusinessSolutionConnectionWhere>;
};

export type BankWireSolutionAggregateSelection = {
  __typename?: 'BankWireSolutionAggregateSelection';
  b2bDepositVolume: FloatAggregateSelectionNonNullable;
  b2cWithdrawalVolume: FloatAggregateSelectionNonNullable;
  c2bDepositVolume: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  id: IdAggregateSelectionNonNullable;
};

export type BankWireSolutionBusinessSolutionAggregateInput = {
  AND?: InputMaybe<Array<BankWireSolutionBusinessSolutionAggregateInput>>;
  NOT?: InputMaybe<BankWireSolutionBusinessSolutionAggregateInput>;
  OR?: InputMaybe<Array<BankWireSolutionBusinessSolutionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BankWireSolutionBusinessSolutionNodeAggregationWhereInput>;
};

export type BankWireSolutionBusinessSolutionBusinessSolutionAggregationSelection = {
  __typename?: 'BankWireSolutionBusinessSolutionBusinessSolutionAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BankWireSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection>;
};

export type BankWireSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection = {
  __typename?: 'BankWireSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BankWireSolutionBusinessSolutionConnectFieldInput = {
  connect?: InputMaybe<BusinessSolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessSolutionConnectWhere>;
};

export type BankWireSolutionBusinessSolutionConnectOrCreateFieldInput = {
  onCreate: BankWireSolutionBusinessSolutionConnectOrCreateFieldInputOnCreate;
  where: BusinessSolutionConnectOrCreateWhere;
};

export type BankWireSolutionBusinessSolutionConnectOrCreateFieldInputOnCreate = {
  node: BusinessSolutionOnCreateInput;
};

export type BankWireSolutionBusinessSolutionConnection = {
  __typename?: 'BankWireSolutionBusinessSolutionConnection';
  edges: Array<BankWireSolutionBusinessSolutionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BankWireSolutionBusinessSolutionConnectionSort = {
  node?: InputMaybe<BusinessSolutionSort>;
};

export type BankWireSolutionBusinessSolutionConnectionWhere = {
  AND?: InputMaybe<Array<BankWireSolutionBusinessSolutionConnectionWhere>>;
  NOT?: InputMaybe<BankWireSolutionBusinessSolutionConnectionWhere>;
  OR?: InputMaybe<Array<BankWireSolutionBusinessSolutionConnectionWhere>>;
  node?: InputMaybe<BusinessSolutionWhere>;
};

export type BankWireSolutionBusinessSolutionCreateFieldInput = {
  node: BusinessSolutionCreateInput;
};

export type BankWireSolutionBusinessSolutionDeleteFieldInput = {
  delete?: InputMaybe<BusinessSolutionDeleteInput>;
  where?: InputMaybe<BankWireSolutionBusinessSolutionConnectionWhere>;
};

export type BankWireSolutionBusinessSolutionDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessSolutionDisconnectInput>;
  where?: InputMaybe<BankWireSolutionBusinessSolutionConnectionWhere>;
};

export type BankWireSolutionBusinessSolutionFieldInput = {
  connect?: InputMaybe<BankWireSolutionBusinessSolutionConnectFieldInput>;
  connectOrCreate?: InputMaybe<BankWireSolutionBusinessSolutionConnectOrCreateFieldInput>;
  create?: InputMaybe<BankWireSolutionBusinessSolutionCreateFieldInput>;
};

export type BankWireSolutionBusinessSolutionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BankWireSolutionBusinessSolutionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BankWireSolutionBusinessSolutionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BankWireSolutionBusinessSolutionNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BankWireSolutionBusinessSolutionRelationship = {
  __typename?: 'BankWireSolutionBusinessSolutionRelationship';
  cursor: Scalars['String'];
  node: BusinessSolution;
};

export type BankWireSolutionBusinessSolutionUpdateConnectionInput = {
  node?: InputMaybe<BusinessSolutionUpdateInput>;
};

export type BankWireSolutionBusinessSolutionUpdateFieldInput = {
  connect?: InputMaybe<BankWireSolutionBusinessSolutionConnectFieldInput>;
  connectOrCreate?: InputMaybe<BankWireSolutionBusinessSolutionConnectOrCreateFieldInput>;
  create?: InputMaybe<BankWireSolutionBusinessSolutionCreateFieldInput>;
  delete?: InputMaybe<BankWireSolutionBusinessSolutionDeleteFieldInput>;
  disconnect?: InputMaybe<BankWireSolutionBusinessSolutionDisconnectFieldInput>;
  update?: InputMaybe<BankWireSolutionBusinessSolutionUpdateConnectionInput>;
  where?: InputMaybe<BankWireSolutionBusinessSolutionConnectionWhere>;
};

export type BankWireSolutionConnectInput = {
  businessSolution?: InputMaybe<BankWireSolutionBusinessSolutionConnectFieldInput>;
};

export type BankWireSolutionConnectOrCreateInput = {
  businessSolution?: InputMaybe<BankWireSolutionBusinessSolutionConnectOrCreateFieldInput>;
};

export type BankWireSolutionConnectOrCreateWhere = {
  node: BankWireSolutionUniqueWhere;
};

export type BankWireSolutionConnectWhere = {
  node: BankWireSolutionWhere;
};

export type BankWireSolutionCreateInput = {
  b2bDepositVolume?: Scalars['Float'];
  b2cWithdrawalVolume?: Scalars['Float'];
  businessSolution?: InputMaybe<BankWireSolutionBusinessSolutionFieldInput>;
  c2bDepositVolume?: Scalars['Float'];
};

export type BankWireSolutionDeleteInput = {
  businessSolution?: InputMaybe<BankWireSolutionBusinessSolutionDeleteFieldInput>;
};

export type BankWireSolutionDisconnectInput = {
  businessSolution?: InputMaybe<BankWireSolutionBusinessSolutionDisconnectFieldInput>;
};

export type BankWireSolutionEdge = {
  __typename?: 'BankWireSolutionEdge';
  cursor: Scalars['String'];
  node: BankWireSolution;
};

export type BankWireSolutionOnCreateInput = {
  b2bDepositVolume?: Scalars['Float'];
  b2cWithdrawalVolume?: Scalars['Float'];
  c2bDepositVolume?: Scalars['Float'];
};

export type BankWireSolutionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BankWireSolutionSort objects to sort BankWireSolutions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BankWireSolutionSort>>;
};

export type BankWireSolutionRelationInput = {
  businessSolution?: InputMaybe<BankWireSolutionBusinessSolutionCreateFieldInput>;
};

/** Fields to sort BankWireSolutions by. The order in which sorts are applied is not guaranteed when specifying many fields in one BankWireSolutionSort object. */
export type BankWireSolutionSort = {
  b2bDepositVolume?: InputMaybe<SortDirection>;
  b2cWithdrawalVolume?: InputMaybe<SortDirection>;
  c2bDepositVolume?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
};

export type BankWireSolutionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BankWireSolutionUpdateInput = {
  b2bDepositVolume?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_ADD?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_ADD?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  businessSolution?: InputMaybe<BankWireSolutionBusinessSolutionUpdateFieldInput>;
  c2bDepositVolume?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_ADD?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
};

export type BankWireSolutionWhere = {
  AND?: InputMaybe<Array<BankWireSolutionWhere>>;
  NOT?: InputMaybe<BankWireSolutionWhere>;
  OR?: InputMaybe<Array<BankWireSolutionWhere>>;
  b2bDepositVolume?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_GT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_GTE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  b2bDepositVolume_LT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_LTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_GT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_GTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  b2cWithdrawalVolume_LT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_LTE?: InputMaybe<Scalars['Float']>;
  businessSolution?: InputMaybe<BusinessSolutionWhere>;
  businessSolutionAggregate?: InputMaybe<BankWireSolutionBusinessSolutionAggregateInput>;
  businessSolutionConnection?: InputMaybe<BankWireSolutionBusinessSolutionConnectionWhere>;
  businessSolutionConnection_NOT?: InputMaybe<BankWireSolutionBusinessSolutionConnectionWhere>;
  businessSolution_NOT?: InputMaybe<BusinessSolutionWhere>;
  c2bDepositVolume?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_GT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_GTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  c2bDepositVolume_LT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
};

export type BankWireSolutionsConnection = {
  __typename?: 'BankWireSolutionsConnection';
  edges: Array<BankWireSolutionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BanksConnection = {
  __typename?: 'BanksConnection';
  edges: Array<BankEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BaseCurrencyConversionRate = {
  __typename?: 'BaseCurrencyConversionRate';
  autoUpdateBaseRate: Scalars['Boolean'];
  baseRate: Scalars['Float'];
  businessCurrencyConversionMarkup: Array<BusinessCurrencyConversionMarkup>;
  businessCurrencyConversionMarkupAggregate?: Maybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupAggregationSelection>;
  businessCurrencyConversionMarkupConnection: BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnection;
  createdAt: Scalars['DateTime'];
  defaultCurrencyConversionMarkup?: Maybe<DefaultCurrencyConversionMarkup>;
  defaultCurrencyConversionMarkupAggregate?: Maybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregationSelection>;
  defaultCurrencyConversionMarkupConnection: BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnection;
  fromCurrency: Scalars['String'];
  id: Scalars['String'];
  toCurrency: Scalars['String'];
  updatedAt: Scalars['DateTime'];
};


export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessCurrencyConversionMarkupOptions>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionSort>>;
  where?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
};


export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultCurrencyConversionMarkupOptions>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionSort>>;
  where?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>;
};

export type BaseCurrencyConversionRateAggregateSelection = {
  __typename?: 'BaseCurrencyConversionRateAggregateSelection';
  baseRate: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  fromCurrency: StringAggregateSelectionNonNullable;
  id: StringAggregateSelectionNonNullable;
  toCurrency: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupAggregateInput = {
  AND?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupAggregateInput>>;
  NOT?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupAggregateInput>;
  OR?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupNodeAggregationWhereInput>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupAggregationSelection = {
  __typename?: 'BaseCurrencyConversionRateBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupNodeAggregateSelection>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupNodeAggregateSelection = {
  __typename?: 'BaseCurrencyConversionRateBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupNodeAggregateSelection';
  adjustedRate: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  forConversion: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markup: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessCurrencyConversionMarkupConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessCurrencyConversionMarkupConnectWhere>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectOrCreateFieldInput = {
  onCreate: BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectOrCreateFieldInputOnCreate;
  where: BusinessCurrencyConversionMarkupConnectOrCreateWhere;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectOrCreateFieldInputOnCreate = {
  node: BusinessCurrencyConversionMarkupOnCreateInput;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnection = {
  __typename?: 'BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnection';
  edges: Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionSort = {
  node?: InputMaybe<BusinessCurrencyConversionMarkupSort>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere = {
  AND?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>>;
  NOT?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
  OR?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>>;
  node?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupCreateFieldInput = {
  node: BusinessCurrencyConversionMarkupCreateInput;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupDeleteFieldInput = {
  delete?: InputMaybe<BusinessCurrencyConversionMarkupDeleteInput>;
  where?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupDisconnectInput>;
  where?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupFieldInput = {
  connect?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupCreateFieldInput>>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupNodeAggregationWhereInput>>;
  adjustedRate_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  markup_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MAX_GT?: InputMaybe<Scalars['Float']>;
  markup_MAX_GTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_LT?: InputMaybe<Scalars['Float']>;
  markup_MAX_LTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MIN_GT?: InputMaybe<Scalars['Float']>;
  markup_MIN_GTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_LT?: InputMaybe<Scalars['Float']>;
  markup_MIN_LTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_SUM_GT?: InputMaybe<Scalars['Float']>;
  markup_SUM_GTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_LT?: InputMaybe<Scalars['Float']>;
  markup_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupRelationship = {
  __typename?: 'BaseCurrencyConversionRateBusinessCurrencyConversionMarkupRelationship';
  cursor: Scalars['String'];
  node: BusinessCurrencyConversionMarkup;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupUpdateConnectionInput = {
  node?: InputMaybe<BusinessCurrencyConversionMarkupUpdateInput>;
};

export type BaseCurrencyConversionRateBusinessCurrencyConversionMarkupUpdateFieldInput = {
  connect?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupCreateFieldInput>>;
  delete?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupDisconnectFieldInput>>;
  update?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupUpdateConnectionInput>;
  where?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
};

export type BaseCurrencyConversionRateConnectInput = {
  businessCurrencyConversionMarkup?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectFieldInput>>;
  defaultCurrencyConversionMarkup?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectFieldInput>;
};

export type BaseCurrencyConversionRateConnectOrCreateInput = {
  businessCurrencyConversionMarkup?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectOrCreateFieldInput>>;
  defaultCurrencyConversionMarkup?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectOrCreateFieldInput>;
};

export type BaseCurrencyConversionRateConnectOrCreateWhere = {
  node: BaseCurrencyConversionRateUniqueWhere;
};

export type BaseCurrencyConversionRateConnectWhere = {
  node: BaseCurrencyConversionRateWhere;
};

export type BaseCurrencyConversionRateCreateInput = {
  autoUpdateBaseRate?: Scalars['Boolean'];
  baseRate?: Scalars['Float'];
  businessCurrencyConversionMarkup?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupFieldInput>;
  defaultCurrencyConversionMarkup?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupFieldInput>;
  fromCurrency: Scalars['String'];
  id: Scalars['String'];
  toCurrency: Scalars['String'];
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupAggregateInput = {
  AND?: InputMaybe<Array<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupAggregateInput>>;
  NOT?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupAggregateInput>;
  OR?: InputMaybe<Array<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupNodeAggregationWhereInput>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultCurrencyConversionMarkupConnectWhere>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectOrCreateFieldInput = {
  onCreate: BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectOrCreateFieldInputOnCreate;
  where: DefaultCurrencyConversionMarkupConnectOrCreateWhere;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectOrCreateFieldInputOnCreate = {
  node: DefaultCurrencyConversionMarkupOnCreateInput;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnection = {
  __typename?: 'BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnection';
  edges: Array<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionSort = {
  node?: InputMaybe<DefaultCurrencyConversionMarkupSort>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere = {
  AND?: InputMaybe<Array<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>>;
  NOT?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>;
  OR?: InputMaybe<Array<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>>;
  node?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupCreateFieldInput = {
  node: DefaultCurrencyConversionMarkupCreateInput;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregationSelection = {
  __typename?: 'BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregateSelection>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregateSelection = {
  __typename?: 'BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregateSelection';
  adjustedRate: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  forConversion: StringAggregateSelectionNonNullable;
  id: StringAggregateSelectionNonNullable;
  markup: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDeleteFieldInput = {
  delete?: InputMaybe<DefaultCurrencyConversionMarkupDeleteInput>;
  where?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultCurrencyConversionMarkupDisconnectInput>;
  where?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupFieldInput = {
  connect?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectFieldInput>;
  connectOrCreate?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectOrCreateFieldInput>;
  create?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupCreateFieldInput>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupNodeAggregationWhereInput>>;
  adjustedRate_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  markup_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MAX_GT?: InputMaybe<Scalars['Float']>;
  markup_MAX_GTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_LT?: InputMaybe<Scalars['Float']>;
  markup_MAX_LTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MIN_GT?: InputMaybe<Scalars['Float']>;
  markup_MIN_GTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_LT?: InputMaybe<Scalars['Float']>;
  markup_MIN_LTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_SUM_GT?: InputMaybe<Scalars['Float']>;
  markup_SUM_GTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_LT?: InputMaybe<Scalars['Float']>;
  markup_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupRelationship = {
  __typename?: 'BaseCurrencyConversionRateDefaultCurrencyConversionMarkupRelationship';
  cursor: Scalars['String'];
  node: DefaultCurrencyConversionMarkup;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupUpdateConnectionInput = {
  node?: InputMaybe<DefaultCurrencyConversionMarkupUpdateInput>;
};

export type BaseCurrencyConversionRateDefaultCurrencyConversionMarkupUpdateFieldInput = {
  connect?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectFieldInput>;
  connectOrCreate?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectOrCreateFieldInput>;
  create?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupCreateFieldInput>;
  delete?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDeleteFieldInput>;
  disconnect?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDisconnectFieldInput>;
  update?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupUpdateConnectionInput>;
  where?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>;
};

export type BaseCurrencyConversionRateDeleteInput = {
  businessCurrencyConversionMarkup?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupDeleteFieldInput>>;
  defaultCurrencyConversionMarkup?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDeleteFieldInput>;
};

export type BaseCurrencyConversionRateDisconnectInput = {
  businessCurrencyConversionMarkup?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupDisconnectFieldInput>>;
  defaultCurrencyConversionMarkup?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupDisconnectFieldInput>;
};

export type BaseCurrencyConversionRateEdge = {
  __typename?: 'BaseCurrencyConversionRateEdge';
  cursor: Scalars['String'];
  node: BaseCurrencyConversionRate;
};

export type BaseCurrencyConversionRateOnCreateInput = {
  autoUpdateBaseRate?: Scalars['Boolean'];
  baseRate?: Scalars['Float'];
  fromCurrency: Scalars['String'];
  id: Scalars['String'];
  toCurrency: Scalars['String'];
};

export type BaseCurrencyConversionRateOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BaseCurrencyConversionRateSort objects to sort BaseCurrencyConversionRates by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BaseCurrencyConversionRateSort>>;
};

export type BaseCurrencyConversionRateRelationInput = {
  businessCurrencyConversionMarkup?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupCreateFieldInput>>;
  defaultCurrencyConversionMarkup?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupCreateFieldInput>;
};

/** Fields to sort BaseCurrencyConversionRates by. The order in which sorts are applied is not guaranteed when specifying many fields in one BaseCurrencyConversionRateSort object. */
export type BaseCurrencyConversionRateSort = {
  autoUpdateBaseRate?: InputMaybe<SortDirection>;
  baseRate?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  fromCurrency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  toCurrency?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type BaseCurrencyConversionRateUniqueWhere = {
  id?: InputMaybe<Scalars['String']>;
};

export type BaseCurrencyConversionRateUpdateInput = {
  autoUpdateBaseRate?: InputMaybe<Scalars['Boolean']>;
  baseRate?: InputMaybe<Scalars['Float']>;
  baseRate_ADD?: InputMaybe<Scalars['Float']>;
  baseRate_DIVIDE?: InputMaybe<Scalars['Float']>;
  baseRate_MULTIPLY?: InputMaybe<Scalars['Float']>;
  baseRate_SUBTRACT?: InputMaybe<Scalars['Float']>;
  businessCurrencyConversionMarkup?: InputMaybe<Array<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupUpdateFieldInput>>;
  defaultCurrencyConversionMarkup?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupUpdateFieldInput>;
  fromCurrency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  toCurrency?: InputMaybe<Scalars['String']>;
};

export type BaseCurrencyConversionRateWhere = {
  AND?: InputMaybe<Array<BaseCurrencyConversionRateWhere>>;
  NOT?: InputMaybe<BaseCurrencyConversionRateWhere>;
  OR?: InputMaybe<Array<BaseCurrencyConversionRateWhere>>;
  autoUpdateBaseRate?: InputMaybe<Scalars['Boolean']>;
  baseRate?: InputMaybe<Scalars['Float']>;
  baseRate_GT?: InputMaybe<Scalars['Float']>;
  baseRate_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_IN?: InputMaybe<Array<Scalars['Float']>>;
  baseRate_LT?: InputMaybe<Scalars['Float']>;
  baseRate_LTE?: InputMaybe<Scalars['Float']>;
  businessCurrencyConversionMarkupAggregate?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupAggregateInput>;
  /** Return BaseCurrencyConversionRates where all of the related BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnections match this filter */
  businessCurrencyConversionMarkupConnection_ALL?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
  /** Return BaseCurrencyConversionRates where none of the related BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnections match this filter */
  businessCurrencyConversionMarkupConnection_NONE?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
  /** Return BaseCurrencyConversionRates where one of the related BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnections match this filter */
  businessCurrencyConversionMarkupConnection_SINGLE?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
  /** Return BaseCurrencyConversionRates where some of the related BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnections match this filter */
  businessCurrencyConversionMarkupConnection_SOME?: InputMaybe<BaseCurrencyConversionRateBusinessCurrencyConversionMarkupConnectionWhere>;
  /** Return BaseCurrencyConversionRates where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkup_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return BaseCurrencyConversionRates where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkup_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return BaseCurrencyConversionRates where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkup_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return BaseCurrencyConversionRates where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkup_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  defaultCurrencyConversionMarkup?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
  defaultCurrencyConversionMarkupAggregate?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupAggregateInput>;
  defaultCurrencyConversionMarkupConnection?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>;
  defaultCurrencyConversionMarkupConnection_NOT?: InputMaybe<BaseCurrencyConversionRateDefaultCurrencyConversionMarkupConnectionWhere>;
  defaultCurrencyConversionMarkup_NOT?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
  fromCurrency?: InputMaybe<Scalars['String']>;
  fromCurrency_CONTAINS?: InputMaybe<Scalars['String']>;
  fromCurrency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  fromCurrency_IN?: InputMaybe<Array<Scalars['String']>>;
  fromCurrency_MATCHES?: InputMaybe<Scalars['String']>;
  fromCurrency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['String']>;
  id_ENDS_WITH?: InputMaybe<Scalars['String']>;
  id_IN?: InputMaybe<Array<Scalars['String']>>;
  id_MATCHES?: InputMaybe<Scalars['String']>;
  id_STARTS_WITH?: InputMaybe<Scalars['String']>;
  toCurrency?: InputMaybe<Scalars['String']>;
  toCurrency_CONTAINS?: InputMaybe<Scalars['String']>;
  toCurrency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  toCurrency_IN?: InputMaybe<Array<Scalars['String']>>;
  toCurrency_MATCHES?: InputMaybe<Scalars['String']>;
  toCurrency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BaseCurrencyConversionRatesConnection = {
  __typename?: 'BaseCurrencyConversionRatesConnection';
  edges: Array<BaseCurrencyConversionRateEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BasicResponse = {
  __typename?: 'BasicResponse';
  data?: Maybe<BasicResponseData>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type BasicResponseData = {
  __typename?: 'BasicResponseData';
  uuid?: Maybe<Scalars['uuid']>;
};

export type BeneficiariesConnection = {
  __typename?: 'BeneficiariesConnection';
  edges: Array<BeneficiaryEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type Beneficiary = {
  __typename?: 'Beneficiary';
  accountNumber: Scalars['String'];
  accountType: BeneficiaryAccountType;
  bankAddress?: Maybe<Scalars['String']>;
  bankCountry?: Maybe<Scalars['String']>;
  bankName: Scalars['String'];
  beneficiaryAddress?: Maybe<Scalars['String']>;
  beneficiaryCountry?: Maybe<Scalars['String']>;
  beneficiaryName: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BeneficiaryCreatedByConnection;
  currency?: Maybe<Scalars['String']>;
  customer?: Maybe<Customer>;
  customerAggregate?: Maybe<BeneficiaryCustomerCustomerAggregationSelection>;
  customerConnection: BeneficiaryCustomerConnection;
  id: Scalars['ID'];
  intermediaryBankAddress?: Maybe<Scalars['String']>;
  intermediaryBankName?: Maybe<Scalars['String']>;
  intermediaryBankRemarks?: Maybe<Scalars['String']>;
  intermediaryBankSwift?: Maybe<Scalars['String']>;
  merchant?: Maybe<Merchant>;
  merchantAggregate?: Maybe<BeneficiaryMerchantMerchantAggregationSelection>;
  merchantConnection: BeneficiaryMerchantConnection;
  remarks?: Maybe<Scalars['String']>;
  swiftCode: Scalars['String'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BeneficiaryUpdatedByConnection;
};


export type BeneficiaryCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BeneficiaryCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BeneficiaryCreatedByConnectionSort>>;
  where?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
};


export type BeneficiaryCustomerArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type BeneficiaryCustomerAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


export type BeneficiaryCustomerConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BeneficiaryCustomerConnectionSort>>;
  where?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
};


export type BeneficiaryMerchantArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<MerchantOptions>;
  where?: InputMaybe<MerchantWhere>;
};


export type BeneficiaryMerchantAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<MerchantWhere>;
};


export type BeneficiaryMerchantConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BeneficiaryMerchantConnectionSort>>;
  where?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
};


export type BeneficiaryUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BeneficiaryUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BeneficiaryUpdatedByConnectionSort>>;
  where?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
};

export enum BeneficiaryAccountType {
  Both = 'BOTH',
  Sepa = 'SEPA',
  Swift = 'SWIFT'
}

export type BeneficiaryAggregateSelection = {
  __typename?: 'BeneficiaryAggregateSelection';
  accountNumber: StringAggregateSelectionNonNullable;
  bankAddress: StringAggregateSelectionNullable;
  bankCountry: StringAggregateSelectionNullable;
  bankName: StringAggregateSelectionNonNullable;
  beneficiaryAddress: StringAggregateSelectionNullable;
  beneficiaryCountry: StringAggregateSelectionNullable;
  beneficiaryName: StringAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  intermediaryBankAddress: StringAggregateSelectionNullable;
  intermediaryBankName: StringAggregateSelectionNullable;
  intermediaryBankRemarks: StringAggregateSelectionNullable;
  intermediaryBankSwift: StringAggregateSelectionNullable;
  remarks: StringAggregateSelectionNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BeneficiaryConnectInput = {
  createdBy?: InputMaybe<BeneficiaryCreatedByConnectFieldInput>;
  customer?: InputMaybe<BeneficiaryCustomerConnectFieldInput>;
  merchant?: InputMaybe<BeneficiaryMerchantConnectFieldInput>;
  updatedBy?: InputMaybe<BeneficiaryUpdatedByConnectFieldInput>;
};

export type BeneficiaryConnectOrCreateInput = {
  customer?: InputMaybe<BeneficiaryCustomerConnectOrCreateFieldInput>;
  merchant?: InputMaybe<BeneficiaryMerchantConnectOrCreateFieldInput>;
};

export type BeneficiaryConnectOrCreateWhere = {
  node: BeneficiaryUniqueWhere;
};

export type BeneficiaryConnectWhere = {
  node: BeneficiaryWhere;
};

export type BeneficiaryCreateInput = {
  accountNumber: Scalars['String'];
  accountType?: BeneficiaryAccountType;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankCountry?: InputMaybe<Scalars['String']>;
  bankName: Scalars['String'];
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryCountry?: InputMaybe<Scalars['String']>;
  beneficiaryName: Scalars['String'];
  createdBy?: InputMaybe<BeneficiaryCreatedByFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  customer?: InputMaybe<BeneficiaryCustomerFieldInput>;
  intermediaryBankAddress?: InputMaybe<Scalars['String']>;
  intermediaryBankName?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<BeneficiaryMerchantFieldInput>;
  remarks?: InputMaybe<Scalars['String']>;
  swiftCode: Scalars['String'];
  updatedBy?: InputMaybe<BeneficiaryUpdatedByFieldInput>;
};

export type BeneficiaryCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BeneficiaryCreatedByConnection = {
  __typename?: 'BeneficiaryCreatedByConnection';
  edges: Array<BeneficiaryCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BeneficiaryCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BeneficiaryCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BeneficiaryCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BeneficiaryCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BeneficiaryCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BeneficiaryCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
};

export type BeneficiaryCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
};

export type BeneficiaryCreatedByFieldInput = {
  connect?: InputMaybe<BeneficiaryCreatedByConnectFieldInput>;
  create?: InputMaybe<BeneficiaryCreatedByCreateFieldInput>;
};

export type BeneficiaryCreatedByRelationship = {
  __typename?: 'BeneficiaryCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BeneficiaryCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BeneficiaryCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BeneficiaryCreatedByConnectFieldInput>;
  create?: InputMaybe<BeneficiaryCreatedByCreateFieldInput>;
  delete?: InputMaybe<BeneficiaryCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BeneficiaryCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BeneficiaryCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
};

export type BeneficiaryCustomerAggregateInput = {
  AND?: InputMaybe<Array<BeneficiaryCustomerAggregateInput>>;
  NOT?: InputMaybe<BeneficiaryCustomerAggregateInput>;
  OR?: InputMaybe<Array<BeneficiaryCustomerAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BeneficiaryCustomerNodeAggregationWhereInput>;
};

export type BeneficiaryCustomerConnectFieldInput = {
  connect?: InputMaybe<CustomerConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CustomerConnectWhere>;
};

export type BeneficiaryCustomerConnectOrCreateFieldInput = {
  onCreate: BeneficiaryCustomerConnectOrCreateFieldInputOnCreate;
  where: CustomerConnectOrCreateWhere;
};

export type BeneficiaryCustomerConnectOrCreateFieldInputOnCreate = {
  node: CustomerOnCreateInput;
};

export type BeneficiaryCustomerConnection = {
  __typename?: 'BeneficiaryCustomerConnection';
  edges: Array<BeneficiaryCustomerRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BeneficiaryCustomerConnectionSort = {
  node?: InputMaybe<CustomerSort>;
};

export type BeneficiaryCustomerConnectionWhere = {
  AND?: InputMaybe<Array<BeneficiaryCustomerConnectionWhere>>;
  NOT?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
  OR?: InputMaybe<Array<BeneficiaryCustomerConnectionWhere>>;
  node?: InputMaybe<CustomerWhere>;
};

export type BeneficiaryCustomerCreateFieldInput = {
  node: CustomerCreateInput;
};

export type BeneficiaryCustomerCustomerAggregationSelection = {
  __typename?: 'BeneficiaryCustomerCustomerAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BeneficiaryCustomerCustomerNodeAggregateSelection>;
};

export type BeneficiaryCustomerCustomerNodeAggregateSelection = {
  __typename?: 'BeneficiaryCustomerCustomerNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type BeneficiaryCustomerDeleteFieldInput = {
  delete?: InputMaybe<CustomerDeleteInput>;
  where?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
};

export type BeneficiaryCustomerDisconnectFieldInput = {
  disconnect?: InputMaybe<CustomerDisconnectInput>;
  where?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
};

export type BeneficiaryCustomerFieldInput = {
  connect?: InputMaybe<BeneficiaryCustomerConnectFieldInput>;
  connectOrCreate?: InputMaybe<BeneficiaryCustomerConnectOrCreateFieldInput>;
  create?: InputMaybe<BeneficiaryCustomerCreateFieldInput>;
};

export type BeneficiaryCustomerNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BeneficiaryCustomerNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BeneficiaryCustomerNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BeneficiaryCustomerNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BeneficiaryCustomerRelationship = {
  __typename?: 'BeneficiaryCustomerRelationship';
  cursor: Scalars['String'];
  node: Customer;
};

export type BeneficiaryCustomerUpdateConnectionInput = {
  node?: InputMaybe<CustomerUpdateInput>;
};

export type BeneficiaryCustomerUpdateFieldInput = {
  connect?: InputMaybe<BeneficiaryCustomerConnectFieldInput>;
  connectOrCreate?: InputMaybe<BeneficiaryCustomerConnectOrCreateFieldInput>;
  create?: InputMaybe<BeneficiaryCustomerCreateFieldInput>;
  delete?: InputMaybe<BeneficiaryCustomerDeleteFieldInput>;
  disconnect?: InputMaybe<BeneficiaryCustomerDisconnectFieldInput>;
  update?: InputMaybe<BeneficiaryCustomerUpdateConnectionInput>;
  where?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
};

export type BeneficiaryDeleteInput = {
  createdBy?: InputMaybe<BeneficiaryCreatedByDeleteFieldInput>;
  customer?: InputMaybe<BeneficiaryCustomerDeleteFieldInput>;
  merchant?: InputMaybe<BeneficiaryMerchantDeleteFieldInput>;
  updatedBy?: InputMaybe<BeneficiaryUpdatedByDeleteFieldInput>;
};

export type BeneficiaryDisconnectInput = {
  createdBy?: InputMaybe<BeneficiaryCreatedByDisconnectFieldInput>;
  customer?: InputMaybe<BeneficiaryCustomerDisconnectFieldInput>;
  merchant?: InputMaybe<BeneficiaryMerchantDisconnectFieldInput>;
  updatedBy?: InputMaybe<BeneficiaryUpdatedByDisconnectFieldInput>;
};

export type BeneficiaryEdge = {
  __typename?: 'BeneficiaryEdge';
  cursor: Scalars['String'];
  node: Beneficiary;
};

export type BeneficiaryMerchantAggregateInput = {
  AND?: InputMaybe<Array<BeneficiaryMerchantAggregateInput>>;
  NOT?: InputMaybe<BeneficiaryMerchantAggregateInput>;
  OR?: InputMaybe<Array<BeneficiaryMerchantAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BeneficiaryMerchantNodeAggregationWhereInput>;
};

export type BeneficiaryMerchantConnectFieldInput = {
  connect?: InputMaybe<MerchantConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<MerchantConnectWhere>;
};

export type BeneficiaryMerchantConnectOrCreateFieldInput = {
  onCreate: BeneficiaryMerchantConnectOrCreateFieldInputOnCreate;
  where: MerchantConnectOrCreateWhere;
};

export type BeneficiaryMerchantConnectOrCreateFieldInputOnCreate = {
  node: MerchantOnCreateInput;
};

export type BeneficiaryMerchantConnection = {
  __typename?: 'BeneficiaryMerchantConnection';
  edges: Array<BeneficiaryMerchantRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BeneficiaryMerchantConnectionSort = {
  node?: InputMaybe<MerchantSort>;
};

export type BeneficiaryMerchantConnectionWhere = {
  AND?: InputMaybe<Array<BeneficiaryMerchantConnectionWhere>>;
  NOT?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
  OR?: InputMaybe<Array<BeneficiaryMerchantConnectionWhere>>;
  node?: InputMaybe<MerchantWhere>;
};

export type BeneficiaryMerchantCreateFieldInput = {
  node: MerchantCreateInput;
};

export type BeneficiaryMerchantDeleteFieldInput = {
  delete?: InputMaybe<MerchantDeleteInput>;
  where?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
};

export type BeneficiaryMerchantDisconnectFieldInput = {
  disconnect?: InputMaybe<MerchantDisconnectInput>;
  where?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
};

export type BeneficiaryMerchantFieldInput = {
  connect?: InputMaybe<BeneficiaryMerchantConnectFieldInput>;
  connectOrCreate?: InputMaybe<BeneficiaryMerchantConnectOrCreateFieldInput>;
  create?: InputMaybe<BeneficiaryMerchantCreateFieldInput>;
};

export type BeneficiaryMerchantMerchantAggregationSelection = {
  __typename?: 'BeneficiaryMerchantMerchantAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BeneficiaryMerchantMerchantNodeAggregateSelection>;
};

export type BeneficiaryMerchantMerchantNodeAggregateSelection = {
  __typename?: 'BeneficiaryMerchantMerchantNodeAggregateSelection';
  apiKey: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  lastName: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
};

export type BeneficiaryMerchantNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BeneficiaryMerchantNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BeneficiaryMerchantNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BeneficiaryMerchantNodeAggregationWhereInput>>;
  apiKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  apiKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BeneficiaryMerchantRelationship = {
  __typename?: 'BeneficiaryMerchantRelationship';
  cursor: Scalars['String'];
  node: Merchant;
};

export type BeneficiaryMerchantUpdateConnectionInput = {
  node?: InputMaybe<MerchantUpdateInput>;
};

export type BeneficiaryMerchantUpdateFieldInput = {
  connect?: InputMaybe<BeneficiaryMerchantConnectFieldInput>;
  connectOrCreate?: InputMaybe<BeneficiaryMerchantConnectOrCreateFieldInput>;
  create?: InputMaybe<BeneficiaryMerchantCreateFieldInput>;
  delete?: InputMaybe<BeneficiaryMerchantDeleteFieldInput>;
  disconnect?: InputMaybe<BeneficiaryMerchantDisconnectFieldInput>;
  update?: InputMaybe<BeneficiaryMerchantUpdateConnectionInput>;
  where?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
};

export type BeneficiaryOnCreateInput = {
  accountNumber: Scalars['String'];
  accountType?: BeneficiaryAccountType;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankCountry?: InputMaybe<Scalars['String']>;
  bankName: Scalars['String'];
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryCountry?: InputMaybe<Scalars['String']>;
  beneficiaryName: Scalars['String'];
  currency?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress?: InputMaybe<Scalars['String']>;
  intermediaryBankName?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift?: InputMaybe<Scalars['String']>;
  remarks?: InputMaybe<Scalars['String']>;
  swiftCode: Scalars['String'];
};

export type BeneficiaryOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BeneficiarySort objects to sort Beneficiaries by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BeneficiarySort>>;
};

export type BeneficiaryOptions_Remote_Rel_WithdrawalstoBeneficiary = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BeneficiarySort objects to sort Beneficiaries by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BeneficiarySort>>;
};

export type BeneficiaryRelationInput = {
  createdBy?: InputMaybe<BeneficiaryCreatedByCreateFieldInput>;
  customer?: InputMaybe<BeneficiaryCustomerCreateFieldInput>;
  merchant?: InputMaybe<BeneficiaryMerchantCreateFieldInput>;
  updatedBy?: InputMaybe<BeneficiaryUpdatedByCreateFieldInput>;
};

/** Fields to sort Beneficiaries by. The order in which sorts are applied is not guaranteed when specifying many fields in one BeneficiarySort object. */
export type BeneficiarySort = {
  accountNumber?: InputMaybe<SortDirection>;
  accountType?: InputMaybe<SortDirection>;
  bankAddress?: InputMaybe<SortDirection>;
  bankCountry?: InputMaybe<SortDirection>;
  bankName?: InputMaybe<SortDirection>;
  beneficiaryAddress?: InputMaybe<SortDirection>;
  beneficiaryCountry?: InputMaybe<SortDirection>;
  beneficiaryName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  intermediaryBankAddress?: InputMaybe<SortDirection>;
  intermediaryBankName?: InputMaybe<SortDirection>;
  intermediaryBankRemarks?: InputMaybe<SortDirection>;
  intermediaryBankSwift?: InputMaybe<SortDirection>;
  remarks?: InputMaybe<SortDirection>;
  swiftCode?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type BeneficiaryUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BeneficiaryUpdateInput = {
  accountNumber?: InputMaybe<Scalars['String']>;
  accountType?: InputMaybe<BeneficiaryAccountType>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankCountry?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryCountry?: InputMaybe<Scalars['String']>;
  beneficiaryName?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<BeneficiaryCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  customer?: InputMaybe<BeneficiaryCustomerUpdateFieldInput>;
  intermediaryBankAddress?: InputMaybe<Scalars['String']>;
  intermediaryBankName?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<BeneficiaryMerchantUpdateFieldInput>;
  remarks?: InputMaybe<Scalars['String']>;
  swiftCode?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<BeneficiaryUpdatedByUpdateFieldInput>;
};

export type BeneficiaryUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BeneficiaryUpdatedByConnection = {
  __typename?: 'BeneficiaryUpdatedByConnection';
  edges: Array<BeneficiaryUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BeneficiaryUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BeneficiaryUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BeneficiaryUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BeneficiaryUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BeneficiaryUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BeneficiaryUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
};

export type BeneficiaryUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
};

export type BeneficiaryUpdatedByFieldInput = {
  connect?: InputMaybe<BeneficiaryUpdatedByConnectFieldInput>;
  create?: InputMaybe<BeneficiaryUpdatedByCreateFieldInput>;
};

export type BeneficiaryUpdatedByRelationship = {
  __typename?: 'BeneficiaryUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BeneficiaryUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BeneficiaryUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BeneficiaryUpdatedByConnectFieldInput>;
  create?: InputMaybe<BeneficiaryUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BeneficiaryUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BeneficiaryUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BeneficiaryUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
};

export type BeneficiaryWhere = {
  AND?: InputMaybe<Array<BeneficiaryWhere>>;
  NOT?: InputMaybe<BeneficiaryWhere>;
  OR?: InputMaybe<Array<BeneficiaryWhere>>;
  accountNumber?: InputMaybe<Scalars['String']>;
  accountNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  accountNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  accountNumber_IN?: InputMaybe<Array<Scalars['String']>>;
  accountNumber_MATCHES?: InputMaybe<Scalars['String']>;
  accountNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  accountType?: InputMaybe<BeneficiaryAccountType>;
  accountType_IN?: InputMaybe<Array<BeneficiaryAccountType>>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  bankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  bankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankCountry?: InputMaybe<Scalars['String']>;
  bankCountry_CONTAINS?: InputMaybe<Scalars['String']>;
  bankCountry_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankCountry_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankCountry_MATCHES?: InputMaybe<Scalars['String']>;
  bankCountry_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
  bankName_CONTAINS?: InputMaybe<Scalars['String']>;
  bankName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankName_IN?: InputMaybe<Array<Scalars['String']>>;
  bankName_MATCHES?: InputMaybe<Scalars['String']>;
  bankName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryAddress_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryCountry?: InputMaybe<Scalars['String']>;
  beneficiaryCountry_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryCountry_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryCountry_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryCountry_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryCountry_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryName?: InputMaybe<Scalars['String']>;
  beneficiaryName_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryName_IN?: InputMaybe<Array<Scalars['String']>>;
  beneficiaryName_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  customer?: InputMaybe<CustomerWhere>;
  customerAggregate?: InputMaybe<BeneficiaryCustomerAggregateInput>;
  customerConnection?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
  customerConnection_NOT?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
  customer_NOT?: InputMaybe<CustomerWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  intermediaryBankAddress?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  intermediaryBankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankName?: InputMaybe<Scalars['String']>;
  intermediaryBankName_CONTAINS?: InputMaybe<Scalars['String']>;
  intermediaryBankName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  intermediaryBankName_MATCHES?: InputMaybe<Scalars['String']>;
  intermediaryBankName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks_CONTAINS?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks_ENDS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  intermediaryBankRemarks_MATCHES?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks_STARTS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift_CONTAINS?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift_ENDS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  intermediaryBankSwift_MATCHES?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BeneficiaryMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  remarks?: InputMaybe<Scalars['String']>;
  remarks_CONTAINS?: InputMaybe<Scalars['String']>;
  remarks_ENDS_WITH?: InputMaybe<Scalars['String']>;
  remarks_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  remarks_MATCHES?: InputMaybe<Scalars['String']>;
  remarks_STARTS_WITH?: InputMaybe<Scalars['String']>;
  swiftCode?: InputMaybe<Scalars['String']>;
  swiftCode_CONTAINS?: InputMaybe<Scalars['String']>;
  swiftCode_ENDS_WITH?: InputMaybe<Scalars['String']>;
  swiftCode_IN?: InputMaybe<Array<Scalars['String']>>;
  swiftCode_MATCHES?: InputMaybe<Scalars['String']>;
  swiftCode_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
};

export type BeneficiaryWhere_Remote_Rel_WithdrawalstoBeneficiary = {
  AND?: InputMaybe<Array<BeneficiaryWhere>>;
  NOT?: InputMaybe<BeneficiaryWhere>;
  OR?: InputMaybe<Array<BeneficiaryWhere>>;
  accountNumber?: InputMaybe<Scalars['String']>;
  accountNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  accountNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  accountNumber_IN?: InputMaybe<Array<Scalars['String']>>;
  accountNumber_MATCHES?: InputMaybe<Scalars['String']>;
  accountNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  accountType?: InputMaybe<BeneficiaryAccountType>;
  accountType_IN?: InputMaybe<Array<BeneficiaryAccountType>>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  bankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  bankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankCountry?: InputMaybe<Scalars['String']>;
  bankCountry_CONTAINS?: InputMaybe<Scalars['String']>;
  bankCountry_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankCountry_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  bankCountry_MATCHES?: InputMaybe<Scalars['String']>;
  bankCountry_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
  bankName_CONTAINS?: InputMaybe<Scalars['String']>;
  bankName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankName_IN?: InputMaybe<Array<Scalars['String']>>;
  bankName_MATCHES?: InputMaybe<Scalars['String']>;
  bankName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryAddress_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryCountry?: InputMaybe<Scalars['String']>;
  beneficiaryCountry_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryCountry_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryCountry_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  beneficiaryCountry_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryCountry_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryName?: InputMaybe<Scalars['String']>;
  beneficiaryName_CONTAINS?: InputMaybe<Scalars['String']>;
  beneficiaryName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  beneficiaryName_IN?: InputMaybe<Array<Scalars['String']>>;
  beneficiaryName_MATCHES?: InputMaybe<Scalars['String']>;
  beneficiaryName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BeneficiaryCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  customer?: InputMaybe<CustomerWhere>;
  customerAggregate?: InputMaybe<BeneficiaryCustomerAggregateInput>;
  customerConnection?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
  customerConnection_NOT?: InputMaybe<BeneficiaryCustomerConnectionWhere>;
  customer_NOT?: InputMaybe<CustomerWhere>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  intermediaryBankAddress?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  intermediaryBankAddress_MATCHES?: InputMaybe<Scalars['String']>;
  intermediaryBankAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankName?: InputMaybe<Scalars['String']>;
  intermediaryBankName_CONTAINS?: InputMaybe<Scalars['String']>;
  intermediaryBankName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  intermediaryBankName_MATCHES?: InputMaybe<Scalars['String']>;
  intermediaryBankName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks_CONTAINS?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks_ENDS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  intermediaryBankRemarks_MATCHES?: InputMaybe<Scalars['String']>;
  intermediaryBankRemarks_STARTS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift_CONTAINS?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift_ENDS_WITH?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  intermediaryBankSwift_MATCHES?: InputMaybe<Scalars['String']>;
  intermediaryBankSwift_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BeneficiaryMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BeneficiaryMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  remarks?: InputMaybe<Scalars['String']>;
  remarks_CONTAINS?: InputMaybe<Scalars['String']>;
  remarks_ENDS_WITH?: InputMaybe<Scalars['String']>;
  remarks_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  remarks_MATCHES?: InputMaybe<Scalars['String']>;
  remarks_STARTS_WITH?: InputMaybe<Scalars['String']>;
  swiftCode?: InputMaybe<Scalars['String']>;
  swiftCode_CONTAINS?: InputMaybe<Scalars['String']>;
  swiftCode_ENDS_WITH?: InputMaybe<Scalars['String']>;
  swiftCode_IN?: InputMaybe<Array<Scalars['String']>>;
  swiftCode_MATCHES?: InputMaybe<Scalars['String']>;
  swiftCode_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BeneficiaryUpdatedByConnectionWhere>;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']>;
  _gt?: InputMaybe<Scalars['Boolean']>;
  _gte?: InputMaybe<Scalars['Boolean']>;
  _in?: InputMaybe<Array<Scalars['Boolean']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Boolean']>;
  _lte?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Scalars['Boolean']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']>>;
};

export type Brand = {
  __typename?: 'Brand';
  accessibleToTeams: Array<Team>;
  accessibleToTeamsAggregate?: Maybe<BrandTeamAccessibleToTeamsAggregationSelection>;
  accessibleToTeamsConnection: BrandAccessibleToTeamsConnection;
  business: Business;
  businessAggregate?: Maybe<BrandBusinessBusinessAggregationSelection>;
  businessConnection: BrandBusinessConnection;
  createdAt: Scalars['DateTime'];
  createdBy: User;
  createdByConnection: BrandCreatedByConnection;
  customers: Array<Customer>;
  customersAggregate?: Maybe<BrandCustomerCustomersAggregationSelection>;
  customersConnection: BrandCustomersConnection;
  featurePermissions: Array<FeaturePermission>;
  featurePermissionsAggregate?: Maybe<BrandFeaturePermissionFeaturePermissionsAggregationSelection>;
  featurePermissionsConnection: BrandFeaturePermissionsConnection;
  id: Scalars['ID'];
  name: Scalars['String'];
  updatedAt: Scalars['DateTime'];
  updatedBy: User;
  updatedByConnection: BrandUpdatedByConnection;
};


export type BrandAccessibleToTeamsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type BrandAccessibleToTeamsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type BrandAccessibleToTeamsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BrandAccessibleToTeamsConnectionSort>>;
  where?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
};


export type BrandBusinessArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type BrandBusinessAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type BrandBusinessConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BrandBusinessConnectionSort>>;
  where?: InputMaybe<BrandBusinessConnectionWhere>;
};


export type BrandCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BrandCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BrandCreatedByConnectionSort>>;
  where?: InputMaybe<BrandCreatedByConnectionWhere>;
};


export type BrandCustomersArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type BrandCustomersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


export type BrandCustomersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BrandCustomersConnectionSort>>;
  where?: InputMaybe<BrandCustomersConnectionWhere>;
};


export type BrandFeaturePermissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<FeaturePermissionOptions>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type BrandFeaturePermissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type BrandFeaturePermissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BrandFeaturePermissionsConnectionSort>>;
  where?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
};


export type BrandUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BrandUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BrandUpdatedByConnectionSort>>;
  where?: InputMaybe<BrandUpdatedByConnectionWhere>;
};

export type BrandAccessibleToTeamsAggregateInput = {
  AND?: InputMaybe<Array<BrandAccessibleToTeamsAggregateInput>>;
  NOT?: InputMaybe<BrandAccessibleToTeamsAggregateInput>;
  OR?: InputMaybe<Array<BrandAccessibleToTeamsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BrandAccessibleToTeamsNodeAggregationWhereInput>;
};

export type BrandAccessibleToTeamsConnectFieldInput = {
  connect?: InputMaybe<Array<TeamConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<TeamConnectWhere>;
};

export type BrandAccessibleToTeamsConnectOrCreateFieldInput = {
  onCreate: BrandAccessibleToTeamsConnectOrCreateFieldInputOnCreate;
  where: TeamConnectOrCreateWhere;
};

export type BrandAccessibleToTeamsConnectOrCreateFieldInputOnCreate = {
  node: TeamOnCreateInput;
};

export type BrandAccessibleToTeamsConnection = {
  __typename?: 'BrandAccessibleToTeamsConnection';
  edges: Array<BrandAccessibleToTeamsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BrandAccessibleToTeamsConnectionSort = {
  node?: InputMaybe<TeamSort>;
};

export type BrandAccessibleToTeamsConnectionWhere = {
  AND?: InputMaybe<Array<BrandAccessibleToTeamsConnectionWhere>>;
  NOT?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  OR?: InputMaybe<Array<BrandAccessibleToTeamsConnectionWhere>>;
  node?: InputMaybe<TeamWhere>;
};

export type BrandAccessibleToTeamsCreateFieldInput = {
  node: TeamCreateInput;
};

export type BrandAccessibleToTeamsDeleteFieldInput = {
  delete?: InputMaybe<TeamDeleteInput>;
  where?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
};

export type BrandAccessibleToTeamsDisconnectFieldInput = {
  disconnect?: InputMaybe<TeamDisconnectInput>;
  where?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
};

export type BrandAccessibleToTeamsFieldInput = {
  connect?: InputMaybe<Array<BrandAccessibleToTeamsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BrandAccessibleToTeamsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BrandAccessibleToTeamsCreateFieldInput>>;
};

export type BrandAccessibleToTeamsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BrandAccessibleToTeamsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BrandAccessibleToTeamsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BrandAccessibleToTeamsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BrandAccessibleToTeamsRelationship = {
  __typename?: 'BrandAccessibleToTeamsRelationship';
  cursor: Scalars['String'];
  node: Team;
};

export type BrandAccessibleToTeamsUpdateConnectionInput = {
  node?: InputMaybe<TeamUpdateInput>;
};

export type BrandAccessibleToTeamsUpdateFieldInput = {
  connect?: InputMaybe<Array<BrandAccessibleToTeamsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BrandAccessibleToTeamsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BrandAccessibleToTeamsCreateFieldInput>>;
  delete?: InputMaybe<Array<BrandAccessibleToTeamsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BrandAccessibleToTeamsDisconnectFieldInput>>;
  update?: InputMaybe<BrandAccessibleToTeamsUpdateConnectionInput>;
  where?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
};

export type BrandAggregateSelection = {
  __typename?: 'BrandAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BrandBusinessAggregateInput = {
  AND?: InputMaybe<Array<BrandBusinessAggregateInput>>;
  NOT?: InputMaybe<BrandBusinessAggregateInput>;
  OR?: InputMaybe<Array<BrandBusinessAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BrandBusinessNodeAggregationWhereInput>;
};

export type BrandBusinessBusinessAggregationSelection = {
  __typename?: 'BrandBusinessBusinessAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BrandBusinessBusinessNodeAggregateSelection>;
};

export type BrandBusinessBusinessNodeAggregateSelection = {
  __typename?: 'BrandBusinessBusinessNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BrandBusinessConnectFieldInput = {
  connect?: InputMaybe<BusinessConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type BrandBusinessConnectOrCreateFieldInput = {
  onCreate: BrandBusinessConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type BrandBusinessConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type BrandBusinessConnection = {
  __typename?: 'BrandBusinessConnection';
  edges: Array<BrandBusinessRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BrandBusinessConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type BrandBusinessConnectionWhere = {
  AND?: InputMaybe<Array<BrandBusinessConnectionWhere>>;
  NOT?: InputMaybe<BrandBusinessConnectionWhere>;
  OR?: InputMaybe<Array<BrandBusinessConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type BrandBusinessCreateFieldInput = {
  node: BusinessCreateInput;
};

export type BrandBusinessDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BrandBusinessConnectionWhere>;
};

export type BrandBusinessDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<BrandBusinessConnectionWhere>;
};

export type BrandBusinessFieldInput = {
  connect?: InputMaybe<BrandBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BrandBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BrandBusinessCreateFieldInput>;
};

export type BrandBusinessNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BrandBusinessNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BrandBusinessNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BrandBusinessNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BrandBusinessRelationship = {
  __typename?: 'BrandBusinessRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type BrandBusinessUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type BrandBusinessUpdateFieldInput = {
  connect?: InputMaybe<BrandBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BrandBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BrandBusinessCreateFieldInput>;
  delete?: InputMaybe<BrandBusinessDeleteFieldInput>;
  disconnect?: InputMaybe<BrandBusinessDisconnectFieldInput>;
  update?: InputMaybe<BrandBusinessUpdateConnectionInput>;
  where?: InputMaybe<BrandBusinessConnectionWhere>;
};

export type BrandConnectInput = {
  accessibleToTeams?: InputMaybe<Array<BrandAccessibleToTeamsConnectFieldInput>>;
  business?: InputMaybe<BrandBusinessConnectFieldInput>;
  createdBy?: InputMaybe<BrandCreatedByConnectFieldInput>;
  customers?: InputMaybe<Array<BrandCustomersConnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<BrandFeaturePermissionsConnectFieldInput>>;
  updatedBy?: InputMaybe<BrandUpdatedByConnectFieldInput>;
};

export type BrandConnectOrCreateInput = {
  accessibleToTeams?: InputMaybe<Array<BrandAccessibleToTeamsConnectOrCreateFieldInput>>;
  business?: InputMaybe<BrandBusinessConnectOrCreateFieldInput>;
  customers?: InputMaybe<Array<BrandCustomersConnectOrCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<BrandFeaturePermissionsConnectOrCreateFieldInput>>;
};

export type BrandConnectOrCreateWhere = {
  node: BrandUniqueWhere;
};

export type BrandConnectWhere = {
  node: BrandWhere;
};

export type BrandCreateInput = {
  accessibleToTeams?: InputMaybe<BrandAccessibleToTeamsFieldInput>;
  business?: InputMaybe<BrandBusinessFieldInput>;
  createdBy?: InputMaybe<BrandCreatedByFieldInput>;
  customers?: InputMaybe<BrandCustomersFieldInput>;
  featurePermissions?: InputMaybe<BrandFeaturePermissionsFieldInput>;
  name: Scalars['String'];
  updatedBy?: InputMaybe<BrandUpdatedByFieldInput>;
};

export type BrandCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BrandCreatedByConnection = {
  __typename?: 'BrandCreatedByConnection';
  edges: Array<BrandCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BrandCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BrandCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BrandCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BrandCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BrandCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BrandCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BrandCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BrandCreatedByConnectionWhere>;
};

export type BrandCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BrandCreatedByConnectionWhere>;
};

export type BrandCreatedByFieldInput = {
  connect?: InputMaybe<BrandCreatedByConnectFieldInput>;
  create?: InputMaybe<BrandCreatedByCreateFieldInput>;
};

export type BrandCreatedByRelationship = {
  __typename?: 'BrandCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BrandCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BrandCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BrandCreatedByConnectFieldInput>;
  create?: InputMaybe<BrandCreatedByCreateFieldInput>;
  delete?: InputMaybe<BrandCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BrandCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BrandCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BrandCreatedByConnectionWhere>;
};

export type BrandCustomerCustomersAggregationSelection = {
  __typename?: 'BrandCustomerCustomersAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BrandCustomerCustomersNodeAggregateSelection>;
};

export type BrandCustomerCustomersNodeAggregateSelection = {
  __typename?: 'BrandCustomerCustomersNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type BrandCustomersAggregateInput = {
  AND?: InputMaybe<Array<BrandCustomersAggregateInput>>;
  NOT?: InputMaybe<BrandCustomersAggregateInput>;
  OR?: InputMaybe<Array<BrandCustomersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BrandCustomersNodeAggregationWhereInput>;
};

export type BrandCustomersConnectFieldInput = {
  connect?: InputMaybe<Array<CustomerConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CustomerConnectWhere>;
};

export type BrandCustomersConnectOrCreateFieldInput = {
  onCreate: BrandCustomersConnectOrCreateFieldInputOnCreate;
  where: CustomerConnectOrCreateWhere;
};

export type BrandCustomersConnectOrCreateFieldInputOnCreate = {
  node: CustomerOnCreateInput;
};

export type BrandCustomersConnection = {
  __typename?: 'BrandCustomersConnection';
  edges: Array<BrandCustomersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BrandCustomersConnectionSort = {
  node?: InputMaybe<CustomerSort>;
};

export type BrandCustomersConnectionWhere = {
  AND?: InputMaybe<Array<BrandCustomersConnectionWhere>>;
  NOT?: InputMaybe<BrandCustomersConnectionWhere>;
  OR?: InputMaybe<Array<BrandCustomersConnectionWhere>>;
  node?: InputMaybe<CustomerWhere>;
};

export type BrandCustomersCreateFieldInput = {
  node: CustomerCreateInput;
};

export type BrandCustomersDeleteFieldInput = {
  delete?: InputMaybe<CustomerDeleteInput>;
  where?: InputMaybe<BrandCustomersConnectionWhere>;
};

export type BrandCustomersDisconnectFieldInput = {
  disconnect?: InputMaybe<CustomerDisconnectInput>;
  where?: InputMaybe<BrandCustomersConnectionWhere>;
};

export type BrandCustomersFieldInput = {
  connect?: InputMaybe<Array<BrandCustomersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BrandCustomersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BrandCustomersCreateFieldInput>>;
};

export type BrandCustomersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BrandCustomersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BrandCustomersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BrandCustomersNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BrandCustomersRelationship = {
  __typename?: 'BrandCustomersRelationship';
  cursor: Scalars['String'];
  node: Customer;
};

export type BrandCustomersUpdateConnectionInput = {
  node?: InputMaybe<CustomerUpdateInput>;
};

export type BrandCustomersUpdateFieldInput = {
  connect?: InputMaybe<Array<BrandCustomersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BrandCustomersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BrandCustomersCreateFieldInput>>;
  delete?: InputMaybe<Array<BrandCustomersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BrandCustomersDisconnectFieldInput>>;
  update?: InputMaybe<BrandCustomersUpdateConnectionInput>;
  where?: InputMaybe<BrandCustomersConnectionWhere>;
};

export type BrandDeleteInput = {
  accessibleToTeams?: InputMaybe<Array<BrandAccessibleToTeamsDeleteFieldInput>>;
  business?: InputMaybe<BrandBusinessDeleteFieldInput>;
  createdBy?: InputMaybe<BrandCreatedByDeleteFieldInput>;
  customers?: InputMaybe<Array<BrandCustomersDeleteFieldInput>>;
  featurePermissions?: InputMaybe<Array<BrandFeaturePermissionsDeleteFieldInput>>;
  updatedBy?: InputMaybe<BrandUpdatedByDeleteFieldInput>;
};

export type BrandDisconnectInput = {
  accessibleToTeams?: InputMaybe<Array<BrandAccessibleToTeamsDisconnectFieldInput>>;
  business?: InputMaybe<BrandBusinessDisconnectFieldInput>;
  createdBy?: InputMaybe<BrandCreatedByDisconnectFieldInput>;
  customers?: InputMaybe<Array<BrandCustomersDisconnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<BrandFeaturePermissionsDisconnectFieldInput>>;
  updatedBy?: InputMaybe<BrandUpdatedByDisconnectFieldInput>;
};

export type BrandEdge = {
  __typename?: 'BrandEdge';
  cursor: Scalars['String'];
  node: Brand;
};

export type BrandFeaturePermissionFeaturePermissionsAggregationSelection = {
  __typename?: 'BrandFeaturePermissionFeaturePermissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BrandFeaturePermissionFeaturePermissionsNodeAggregateSelection>;
};

export type BrandFeaturePermissionFeaturePermissionsNodeAggregateSelection = {
  __typename?: 'BrandFeaturePermissionFeaturePermissionsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BrandFeaturePermissionsAggregateInput = {
  AND?: InputMaybe<Array<BrandFeaturePermissionsAggregateInput>>;
  NOT?: InputMaybe<BrandFeaturePermissionsAggregateInput>;
  OR?: InputMaybe<Array<BrandFeaturePermissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BrandFeaturePermissionsNodeAggregationWhereInput>;
};

export type BrandFeaturePermissionsConnectFieldInput = {
  connect?: InputMaybe<Array<FeaturePermissionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<FeaturePermissionConnectWhere>;
};

export type BrandFeaturePermissionsConnectOrCreateFieldInput = {
  onCreate: BrandFeaturePermissionsConnectOrCreateFieldInputOnCreate;
  where: FeaturePermissionConnectOrCreateWhere;
};

export type BrandFeaturePermissionsConnectOrCreateFieldInputOnCreate = {
  node: FeaturePermissionOnCreateInput;
};

export type BrandFeaturePermissionsConnection = {
  __typename?: 'BrandFeaturePermissionsConnection';
  edges: Array<BrandFeaturePermissionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BrandFeaturePermissionsConnectionSort = {
  node?: InputMaybe<FeaturePermissionSort>;
};

export type BrandFeaturePermissionsConnectionWhere = {
  AND?: InputMaybe<Array<BrandFeaturePermissionsConnectionWhere>>;
  NOT?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  OR?: InputMaybe<Array<BrandFeaturePermissionsConnectionWhere>>;
  node?: InputMaybe<FeaturePermissionWhere>;
};

export type BrandFeaturePermissionsCreateFieldInput = {
  node: FeaturePermissionCreateInput;
};

export type BrandFeaturePermissionsDeleteFieldInput = {
  delete?: InputMaybe<FeaturePermissionDeleteInput>;
  where?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
};

export type BrandFeaturePermissionsDisconnectFieldInput = {
  disconnect?: InputMaybe<FeaturePermissionDisconnectInput>;
  where?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
};

export type BrandFeaturePermissionsFieldInput = {
  connect?: InputMaybe<Array<BrandFeaturePermissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BrandFeaturePermissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BrandFeaturePermissionsCreateFieldInput>>;
};

export type BrandFeaturePermissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BrandFeaturePermissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BrandFeaturePermissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BrandFeaturePermissionsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BrandFeaturePermissionsRelationship = {
  __typename?: 'BrandFeaturePermissionsRelationship';
  cursor: Scalars['String'];
  node: FeaturePermission;
};

export type BrandFeaturePermissionsUpdateConnectionInput = {
  node?: InputMaybe<FeaturePermissionUpdateInput>;
};

export type BrandFeaturePermissionsUpdateFieldInput = {
  connect?: InputMaybe<Array<BrandFeaturePermissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BrandFeaturePermissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BrandFeaturePermissionsCreateFieldInput>>;
  delete?: InputMaybe<Array<BrandFeaturePermissionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BrandFeaturePermissionsDisconnectFieldInput>>;
  update?: InputMaybe<BrandFeaturePermissionsUpdateConnectionInput>;
  where?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
};

export type BrandOnCreateInput = {
  name: Scalars['String'];
};

export type BrandOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BrandSort objects to sort Brands by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BrandSort>>;
};

export type BrandOptions_Remote_Rel_DepositsparentBrand = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BrandSort objects to sort Brands by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BrandSort>>;
};

export type BrandPermission = {
  brand: Scalars['uuid'];
  features: Array<FeatureWisePermission>;
};

export type BrandRelationInput = {
  accessibleToTeams?: InputMaybe<Array<BrandAccessibleToTeamsCreateFieldInput>>;
  business?: InputMaybe<BrandBusinessCreateFieldInput>;
  createdBy?: InputMaybe<BrandCreatedByCreateFieldInput>;
  customers?: InputMaybe<Array<BrandCustomersCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<BrandFeaturePermissionsCreateFieldInput>>;
  updatedBy?: InputMaybe<BrandUpdatedByCreateFieldInput>;
};

/** Fields to sort Brands by. The order in which sorts are applied is not guaranteed when specifying many fields in one BrandSort object. */
export type BrandSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type BrandTeamAccessibleToTeamsAggregationSelection = {
  __typename?: 'BrandTeamAccessibleToTeamsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BrandTeamAccessibleToTeamsNodeAggregateSelection>;
};

export type BrandTeamAccessibleToTeamsNodeAggregateSelection = {
  __typename?: 'BrandTeamAccessibleToTeamsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BrandUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BrandUpdateInput = {
  accessibleToTeams?: InputMaybe<Array<BrandAccessibleToTeamsUpdateFieldInput>>;
  business?: InputMaybe<BrandBusinessUpdateFieldInput>;
  createdBy?: InputMaybe<BrandCreatedByUpdateFieldInput>;
  customers?: InputMaybe<Array<BrandCustomersUpdateFieldInput>>;
  featurePermissions?: InputMaybe<Array<BrandFeaturePermissionsUpdateFieldInput>>;
  name?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<BrandUpdatedByUpdateFieldInput>;
};

export type BrandUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BrandUpdatedByConnection = {
  __typename?: 'BrandUpdatedByConnection';
  edges: Array<BrandUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BrandUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BrandUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BrandUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BrandUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BrandUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BrandUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BrandUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BrandUpdatedByConnectionWhere>;
};

export type BrandUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BrandUpdatedByConnectionWhere>;
};

export type BrandUpdatedByFieldInput = {
  connect?: InputMaybe<BrandUpdatedByConnectFieldInput>;
  create?: InputMaybe<BrandUpdatedByCreateFieldInput>;
};

export type BrandUpdatedByRelationship = {
  __typename?: 'BrandUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BrandUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BrandUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BrandUpdatedByConnectFieldInput>;
  create?: InputMaybe<BrandUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BrandUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BrandUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BrandUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BrandUpdatedByConnectionWhere>;
};

export type BrandWhere = {
  AND?: InputMaybe<Array<BrandWhere>>;
  NOT?: InputMaybe<BrandWhere>;
  OR?: InputMaybe<Array<BrandWhere>>;
  accessibleToTeamsAggregate?: InputMaybe<BrandAccessibleToTeamsAggregateInput>;
  /** Return Brands where all of the related BrandAccessibleToTeamsConnections match this filter */
  accessibleToTeamsConnection_ALL?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  /** Return Brands where none of the related BrandAccessibleToTeamsConnections match this filter */
  accessibleToTeamsConnection_NONE?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  /** Return Brands where one of the related BrandAccessibleToTeamsConnections match this filter */
  accessibleToTeamsConnection_SINGLE?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  /** Return Brands where some of the related BrandAccessibleToTeamsConnections match this filter */
  accessibleToTeamsConnection_SOME?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  /** Return Brands where all of the related Teams match this filter */
  accessibleToTeams_ALL?: InputMaybe<TeamWhere>;
  /** Return Brands where none of the related Teams match this filter */
  accessibleToTeams_NONE?: InputMaybe<TeamWhere>;
  /** Return Brands where one of the related Teams match this filter */
  accessibleToTeams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Brands where some of the related Teams match this filter */
  accessibleToTeams_SOME?: InputMaybe<TeamWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BrandBusinessAggregateInput>;
  businessConnection?: InputMaybe<BrandBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BrandBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BrandCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BrandCreatedByConnectionWhere>;
  customersAggregate?: InputMaybe<BrandCustomersAggregateInput>;
  /** Return Brands where all of the related BrandCustomersConnections match this filter */
  customersConnection_ALL?: InputMaybe<BrandCustomersConnectionWhere>;
  /** Return Brands where none of the related BrandCustomersConnections match this filter */
  customersConnection_NONE?: InputMaybe<BrandCustomersConnectionWhere>;
  /** Return Brands where one of the related BrandCustomersConnections match this filter */
  customersConnection_SINGLE?: InputMaybe<BrandCustomersConnectionWhere>;
  /** Return Brands where some of the related BrandCustomersConnections match this filter */
  customersConnection_SOME?: InputMaybe<BrandCustomersConnectionWhere>;
  /** Return Brands where all of the related Customers match this filter */
  customers_ALL?: InputMaybe<CustomerWhere>;
  /** Return Brands where none of the related Customers match this filter */
  customers_NONE?: InputMaybe<CustomerWhere>;
  /** Return Brands where one of the related Customers match this filter */
  customers_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Brands where some of the related Customers match this filter */
  customers_SOME?: InputMaybe<CustomerWhere>;
  featurePermissionsAggregate?: InputMaybe<BrandFeaturePermissionsAggregateInput>;
  /** Return Brands where all of the related BrandFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  /** Return Brands where none of the related BrandFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  /** Return Brands where one of the related BrandFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  /** Return Brands where some of the related BrandFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  /** Return Brands where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Brands where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Brands where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Brands where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BrandUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BrandUpdatedByConnectionWhere>;
};

export type BrandWhere_Remote_Rel_DepositsparentBrand = {
  AND?: InputMaybe<Array<BrandWhere>>;
  NOT?: InputMaybe<BrandWhere>;
  OR?: InputMaybe<Array<BrandWhere>>;
  accessibleToTeamsAggregate?: InputMaybe<BrandAccessibleToTeamsAggregateInput>;
  /** Return Brands where all of the related BrandAccessibleToTeamsConnections match this filter */
  accessibleToTeamsConnection_ALL?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  /** Return Brands where none of the related BrandAccessibleToTeamsConnections match this filter */
  accessibleToTeamsConnection_NONE?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  /** Return Brands where one of the related BrandAccessibleToTeamsConnections match this filter */
  accessibleToTeamsConnection_SINGLE?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  /** Return Brands where some of the related BrandAccessibleToTeamsConnections match this filter */
  accessibleToTeamsConnection_SOME?: InputMaybe<BrandAccessibleToTeamsConnectionWhere>;
  /** Return Brands where all of the related Teams match this filter */
  accessibleToTeams_ALL?: InputMaybe<TeamWhere>;
  /** Return Brands where none of the related Teams match this filter */
  accessibleToTeams_NONE?: InputMaybe<TeamWhere>;
  /** Return Brands where one of the related Teams match this filter */
  accessibleToTeams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Brands where some of the related Teams match this filter */
  accessibleToTeams_SOME?: InputMaybe<TeamWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BrandBusinessAggregateInput>;
  businessConnection?: InputMaybe<BrandBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BrandBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BrandCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BrandCreatedByConnectionWhere>;
  customersAggregate?: InputMaybe<BrandCustomersAggregateInput>;
  /** Return Brands where all of the related BrandCustomersConnections match this filter */
  customersConnection_ALL?: InputMaybe<BrandCustomersConnectionWhere>;
  /** Return Brands where none of the related BrandCustomersConnections match this filter */
  customersConnection_NONE?: InputMaybe<BrandCustomersConnectionWhere>;
  /** Return Brands where one of the related BrandCustomersConnections match this filter */
  customersConnection_SINGLE?: InputMaybe<BrandCustomersConnectionWhere>;
  /** Return Brands where some of the related BrandCustomersConnections match this filter */
  customersConnection_SOME?: InputMaybe<BrandCustomersConnectionWhere>;
  /** Return Brands where all of the related Customers match this filter */
  customers_ALL?: InputMaybe<CustomerWhere>;
  /** Return Brands where none of the related Customers match this filter */
  customers_NONE?: InputMaybe<CustomerWhere>;
  /** Return Brands where one of the related Customers match this filter */
  customers_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Brands where some of the related Customers match this filter */
  customers_SOME?: InputMaybe<CustomerWhere>;
  featurePermissionsAggregate?: InputMaybe<BrandFeaturePermissionsAggregateInput>;
  /** Return Brands where all of the related BrandFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  /** Return Brands where none of the related BrandFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  /** Return Brands where one of the related BrandFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  /** Return Brands where some of the related BrandFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<BrandFeaturePermissionsConnectionWhere>;
  /** Return Brands where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Brands where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Brands where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Brands where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BrandUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BrandUpdatedByConnectionWhere>;
};

export type BrandsConnection = {
  __typename?: 'BrandsConnection';
  edges: Array<BrandEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type Business = {
  __typename?: 'Business';
  address?: Maybe<Scalars['String']>;
  baseCurrencyCode?: Maybe<Currency>;
  baseCurrencyCodeAggregate?: Maybe<BusinessCurrencyBaseCurrencyCodeAggregationSelection>;
  baseCurrencyCodeConnection: BusinessBaseCurrencyCodeConnection;
  brands: Array<Brand>;
  brandsAggregate?: Maybe<BusinessBrandBrandsAggregationSelection>;
  brandsConnection: BusinessBrandsConnection;
  businessCurrencyConversionFees: BusinessCurrencyConversionFees;
  businessCurrencyConversionFeesAggregate?: Maybe<BusinessBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesAggregationSelection>;
  businessCurrencyConversionFeesConnection: BusinessBusinessCurrencyConversionFeesConnection;
  /**
   *  customers: [Customer!]!
   * @relationship(type: "BELONGS_TO_BUSINESS", direction: IN)
   */
  businessCurrencyConversionMarkups: Array<BusinessCurrencyConversionMarkup>;
  businessCurrencyConversionMarkupsAggregate?: Maybe<BusinessBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupsAggregationSelection>;
  businessCurrencyConversionMarkupsConnection: BusinessBusinessCurrencyConversionMarkupsConnection;
  businessDocuments: Array<BusinessDocument>;
  businessDocumentsAggregate?: Maybe<BusinessBusinessDocumentBusinessDocumentsAggregationSelection>;
  businessDocumentsConnection: BusinessBusinessDocumentsConnection;
  businessOwners: Array<BusinessOwner>;
  businessOwnersAggregate?: Maybe<BusinessBusinessOwnerBusinessOwnersAggregationSelection>;
  businessOwnersConnection: BusinessBusinessOwnersConnection;
  businessType?: Maybe<BusinessType>;
  businessTypeAggregate?: Maybe<BusinessBusinessTypeBusinessTypeAggregationSelection>;
  businessTypeConnection: BusinessBusinessTypeConnection;
  businessTypes?: Maybe<BusinessTypeEnum>;
  businessWallets: Array<BusinessWallet>;
  businessWalletsAggregate?: Maybe<BusinessBusinessWalletBusinessWalletsAggregationSelection>;
  businessWalletsConnection: BusinessBusinessWalletsConnection;
  contactNumber?: Maybe<Scalars['String']>;
  contactPersonEmailAddress?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  createdBy: User;
  createdByConnection: BusinessCreatedByConnection;
  dateOfIncorporation?: Maybe<Scalars['DateTime']>;
  depositReference?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  incorporationDetails?: Maybe<Scalars['String']>;
  logoUrl?: Maybe<Scalars['String']>;
  merchant: Merchant;
  merchantAggregate?: Maybe<BusinessMerchantMerchantAggregationSelection>;
  merchantConnection: BusinessMerchantConnection;
  name: Scalars['String'];
  nickname: Scalars['String'];
  phoneContact?: Maybe<Scalars['String']>;
  placeOfIncorporation?: Maybe<Scalars['String']>;
  primaryContactPerson?: Maybe<Scalars['String']>;
  primaryContactPersonEmail?: Maybe<Scalars['String']>;
  primaryContactPersonName?: Maybe<Scalars['String']>;
  primaryContactPersonPhone?: Maybe<Scalars['String']>;
  referralPartner?: Maybe<Scalars['String']>;
  registrationNumber?: Maybe<Scalars['String']>;
  requestedCurrencies?: Maybe<Array<Maybe<Scalars['String']>>>;
  skypeContact?: Maybe<Scalars['String']>;
  solutionsNeeded?: Maybe<BusinessSolution>;
  solutionsNeededAggregate?: Maybe<BusinessBusinessSolutionSolutionsNeededAggregationSelection>;
  solutionsNeededConnection: BusinessSolutionsNeededConnection;
  status: BusinessStatus;
  targetMarkets: Array<Country>;
  targetMarketsAggregate?: Maybe<BusinessCountryTargetMarketsAggregationSelection>;
  targetMarketsConnection: BusinessTargetMarketsConnection;
  targetRegions: Array<MarketRegionsType>;
  teams: Array<Team>;
  teamsAggregate?: Maybe<BusinessTeamTeamsAggregationSelection>;
  teamsConnection: BusinessTeamsConnection;
  telegramContact?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  updatedBy: User;
  updatedByConnection: BusinessUpdatedByConnection;
  website?: Maybe<Scalars['String']>;
  websiteBrand?: Maybe<Scalars['String']>;
  whatsappContact?: Maybe<Scalars['String']>;
};


export type BusinessBaseCurrencyCodeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CurrencyOptions>;
  where?: InputMaybe<CurrencyWhere>;
};


export type BusinessBaseCurrencyCodeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CurrencyWhere>;
};


export type BusinessBaseCurrencyCodeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessBaseCurrencyCodeConnectionSort>>;
  where?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
};


export type BusinessBrandsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type BusinessBrandsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BrandWhere>;
};


export type BusinessBrandsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessBrandsConnectionSort>>;
  where?: InputMaybe<BusinessBrandsConnectionWhere>;
};


export type BusinessBusinessCurrencyConversionFeesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessCurrencyConversionFeesOptions>;
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


export type BusinessBusinessCurrencyConversionFeesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


export type BusinessBusinessCurrencyConversionFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessBusinessCurrencyConversionFeesConnectionSort>>;
  where?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
};


export type BusinessBusinessCurrencyConversionMarkupsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessCurrencyConversionMarkupOptions>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type BusinessBusinessCurrencyConversionMarkupsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type BusinessBusinessCurrencyConversionMarkupsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectionSort>>;
  where?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
};


export type BusinessBusinessDocumentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessDocumentOptions>;
  where?: InputMaybe<BusinessDocumentWhere>;
};


export type BusinessBusinessDocumentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessDocumentWhere>;
};


export type BusinessBusinessDocumentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessBusinessDocumentsConnectionSort>>;
  where?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
};


export type BusinessBusinessOwnersArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOwnerOptions>;
  where?: InputMaybe<BusinessOwnerWhere>;
};


export type BusinessBusinessOwnersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessOwnerWhere>;
};


export type BusinessBusinessOwnersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessBusinessOwnersConnectionSort>>;
  where?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
};


export type BusinessBusinessTypeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessTypeOptions>;
  where?: InputMaybe<BusinessTypeWhere>;
};


export type BusinessBusinessTypeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessTypeWhere>;
};


export type BusinessBusinessTypeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessBusinessTypeConnectionSort>>;
  where?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
};


export type BusinessBusinessWalletsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessBusinessWalletsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessBusinessWalletsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessBusinessWalletsConnectionSort>>;
  where?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
};


export type BusinessCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessCreatedByConnectionWhere>;
};


export type BusinessMerchantArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<MerchantOptions>;
  where?: InputMaybe<MerchantWhere>;
};


export type BusinessMerchantAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<MerchantWhere>;
};


export type BusinessMerchantConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessMerchantConnectionSort>>;
  where?: InputMaybe<BusinessMerchantConnectionWhere>;
};


export type BusinessSolutionsNeededArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessSolutionOptions>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type BusinessSolutionsNeededAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type BusinessSolutionsNeededConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessSolutionsNeededConnectionSort>>;
  where?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
};


export type BusinessTargetMarketsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CountryOptions>;
  where?: InputMaybe<CountryWhere>;
};


export type BusinessTargetMarketsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CountryWhere>;
};


export type BusinessTargetMarketsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessTargetMarketsConnectionSort>>;
  where?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
};


export type BusinessTeamsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type BusinessTeamsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type BusinessTeamsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessTeamsConnectionSort>>;
  where?: InputMaybe<BusinessTeamsConnectionWhere>;
};


export type BusinessUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessUpdatedByConnectionWhere>;
};

export type BusinessAggregateSelection = {
  __typename?: 'BusinessAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BusinessBaseCurrencyCodeAggregateInput = {
  AND?: InputMaybe<Array<BusinessBaseCurrencyCodeAggregateInput>>;
  NOT?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  OR?: InputMaybe<Array<BusinessBaseCurrencyCodeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessBaseCurrencyCodeNodeAggregationWhereInput>;
};

export type BusinessBaseCurrencyCodeConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CurrencyConnectWhere>;
};

export type BusinessBaseCurrencyCodeConnectOrCreateFieldInput = {
  onCreate: BusinessBaseCurrencyCodeConnectOrCreateFieldInputOnCreate;
  where: CurrencyConnectOrCreateWhere;
};

export type BusinessBaseCurrencyCodeConnectOrCreateFieldInputOnCreate = {
  node: CurrencyOnCreateInput;
};

export type BusinessBaseCurrencyCodeConnection = {
  __typename?: 'BusinessBaseCurrencyCodeConnection';
  edges: Array<BusinessBaseCurrencyCodeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessBaseCurrencyCodeConnectionSort = {
  node?: InputMaybe<CurrencySort>;
};

export type BusinessBaseCurrencyCodeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessBaseCurrencyCodeConnectionWhere>>;
  NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessBaseCurrencyCodeConnectionWhere>>;
  node?: InputMaybe<CurrencyWhere>;
};

export type BusinessBaseCurrencyCodeCreateFieldInput = {
  node: CurrencyCreateInput;
};

export type BusinessBaseCurrencyCodeDeleteFieldInput = {
  where?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
};

export type BusinessBaseCurrencyCodeDisconnectFieldInput = {
  where?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
};

export type BusinessBaseCurrencyCodeFieldInput = {
  connect?: InputMaybe<BusinessBaseCurrencyCodeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessBaseCurrencyCodeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessBaseCurrencyCodeCreateFieldInput>;
};

export type BusinessBaseCurrencyCodeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessBaseCurrencyCodeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessBaseCurrencyCodeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessBaseCurrencyCodeNodeAggregationWhereInput>>;
  code_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  code_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  code_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  code_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  code_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  code_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  code_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  code_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  code_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  code_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  flagUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  flagUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  flagUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  flagUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  flagUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  flagUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  flagUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  flagUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  flagUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  flagUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  flagUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  flagUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  flagUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  flagUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  flagUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  symbol_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  symbol_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  symbol_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  symbol_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  symbol_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  symbol_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  symbol_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  symbol_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  symbol_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  symbol_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  symbol_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  symbol_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  symbol_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  symbol_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  symbol_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessBaseCurrencyCodeRelationship = {
  __typename?: 'BusinessBaseCurrencyCodeRelationship';
  cursor: Scalars['String'];
  node: Currency;
};

export type BusinessBaseCurrencyCodeUpdateConnectionInput = {
  node?: InputMaybe<CurrencyUpdateInput>;
};

export type BusinessBaseCurrencyCodeUpdateFieldInput = {
  connect?: InputMaybe<BusinessBaseCurrencyCodeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessBaseCurrencyCodeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessBaseCurrencyCodeCreateFieldInput>;
  delete?: InputMaybe<BusinessBaseCurrencyCodeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessBaseCurrencyCodeDisconnectFieldInput>;
  update?: InputMaybe<BusinessBaseCurrencyCodeUpdateConnectionInput>;
  where?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
};

export type BusinessBrandBrandsAggregationSelection = {
  __typename?: 'BusinessBrandBrandsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessBrandBrandsNodeAggregateSelection>;
};

export type BusinessBrandBrandsNodeAggregateSelection = {
  __typename?: 'BusinessBrandBrandsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessBrandsAggregateInput = {
  AND?: InputMaybe<Array<BusinessBrandsAggregateInput>>;
  NOT?: InputMaybe<BusinessBrandsAggregateInput>;
  OR?: InputMaybe<Array<BusinessBrandsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessBrandsNodeAggregationWhereInput>;
};

export type BusinessBrandsConnectFieldInput = {
  connect?: InputMaybe<Array<BrandConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BrandConnectWhere>;
};

export type BusinessBrandsConnectOrCreateFieldInput = {
  onCreate: BusinessBrandsConnectOrCreateFieldInputOnCreate;
  where: BrandConnectOrCreateWhere;
};

export type BusinessBrandsConnectOrCreateFieldInputOnCreate = {
  node: BrandOnCreateInput;
};

export type BusinessBrandsConnection = {
  __typename?: 'BusinessBrandsConnection';
  edges: Array<BusinessBrandsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessBrandsConnectionSort = {
  node?: InputMaybe<BrandSort>;
};

export type BusinessBrandsConnectionWhere = {
  AND?: InputMaybe<Array<BusinessBrandsConnectionWhere>>;
  NOT?: InputMaybe<BusinessBrandsConnectionWhere>;
  OR?: InputMaybe<Array<BusinessBrandsConnectionWhere>>;
  node?: InputMaybe<BrandWhere>;
};

export type BusinessBrandsCreateFieldInput = {
  node: BrandCreateInput;
};

export type BusinessBrandsDeleteFieldInput = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<BusinessBrandsConnectionWhere>;
};

export type BusinessBrandsDisconnectFieldInput = {
  disconnect?: InputMaybe<BrandDisconnectInput>;
  where?: InputMaybe<BusinessBrandsConnectionWhere>;
};

export type BusinessBrandsFieldInput = {
  connect?: InputMaybe<Array<BusinessBrandsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBrandsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBrandsCreateFieldInput>>;
};

export type BusinessBrandsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessBrandsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessBrandsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessBrandsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessBrandsRelationship = {
  __typename?: 'BusinessBrandsRelationship';
  cursor: Scalars['String'];
  node: Brand;
};

export type BusinessBrandsUpdateConnectionInput = {
  node?: InputMaybe<BrandUpdateInput>;
};

export type BusinessBrandsUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessBrandsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBrandsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBrandsCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessBrandsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessBrandsDisconnectFieldInput>>;
  update?: InputMaybe<BusinessBrandsUpdateConnectionInput>;
  where?: InputMaybe<BusinessBrandsConnectionWhere>;
};

export type BusinessBusinessCurrencyConversionFeesAggregateInput = {
  AND?: InputMaybe<Array<BusinessBusinessCurrencyConversionFeesAggregateInput>>;
  NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  OR?: InputMaybe<Array<BusinessBusinessCurrencyConversionFeesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessBusinessCurrencyConversionFeesNodeAggregationWhereInput>;
};

export type BusinessBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesAggregationSelection = {
  __typename?: 'BusinessBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregateSelection>;
};

export type BusinessBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregateSelection = {
  __typename?: 'BusinessBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  flatFee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markupPercentage: FloatAggregateSelectionNonNullable;
  percentageFee: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessBusinessCurrencyConversionFeesConnectFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessCurrencyConversionFeesConnectWhere>;
};

export type BusinessBusinessCurrencyConversionFeesConnection = {
  __typename?: 'BusinessBusinessCurrencyConversionFeesConnection';
  edges: Array<BusinessBusinessCurrencyConversionFeesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessBusinessCurrencyConversionFeesConnectionSort = {
  node?: InputMaybe<BusinessCurrencyConversionFeesSort>;
};

export type BusinessBusinessCurrencyConversionFeesConnectionWhere = {
  AND?: InputMaybe<Array<BusinessBusinessCurrencyConversionFeesConnectionWhere>>;
  NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  OR?: InputMaybe<Array<BusinessBusinessCurrencyConversionFeesConnectionWhere>>;
  node?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};

export type BusinessBusinessCurrencyConversionFeesCreateFieldInput = {
  node: BusinessCurrencyConversionFeesCreateInput;
};

export type BusinessBusinessCurrencyConversionFeesDeleteFieldInput = {
  delete?: InputMaybe<BusinessCurrencyConversionFeesDeleteInput>;
  where?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
};

export type BusinessBusinessCurrencyConversionFeesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessCurrencyConversionFeesDisconnectInput>;
  where?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
};

export type BusinessBusinessCurrencyConversionFeesFieldInput = {
  connect?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectFieldInput>;
  create?: InputMaybe<BusinessBusinessCurrencyConversionFeesCreateFieldInput>;
};

export type BusinessBusinessCurrencyConversionFeesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessBusinessCurrencyConversionFeesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessBusinessCurrencyConversionFeesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  flatFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessBusinessCurrencyConversionFeesRelationship = {
  __typename?: 'BusinessBusinessCurrencyConversionFeesRelationship';
  cursor: Scalars['String'];
  node: BusinessCurrencyConversionFees;
};

export type BusinessBusinessCurrencyConversionFeesUpdateConnectionInput = {
  node?: InputMaybe<BusinessCurrencyConversionFeesUpdateInput>;
};

export type BusinessBusinessCurrencyConversionFeesUpdateFieldInput = {
  connect?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectFieldInput>;
  create?: InputMaybe<BusinessBusinessCurrencyConversionFeesCreateFieldInput>;
  delete?: InputMaybe<BusinessBusinessCurrencyConversionFeesDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessBusinessCurrencyConversionFeesDisconnectFieldInput>;
  update?: InputMaybe<BusinessBusinessCurrencyConversionFeesUpdateConnectionInput>;
  where?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
};

export type BusinessBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupsAggregationSelection = {
  __typename?: 'BusinessBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupsNodeAggregateSelection>;
};

export type BusinessBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupsNodeAggregateSelection = {
  __typename?: 'BusinessBusinessCurrencyConversionMarkupBusinessCurrencyConversionMarkupsNodeAggregateSelection';
  adjustedRate: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  forConversion: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markup: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessBusinessCurrencyConversionMarkupsAggregateInput = {
  AND?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsAggregateInput>>;
  NOT?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  OR?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsNodeAggregationWhereInput>;
};

export type BusinessBusinessCurrencyConversionMarkupsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessCurrencyConversionMarkupConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessCurrencyConversionMarkupConnectWhere>;
};

export type BusinessBusinessCurrencyConversionMarkupsConnectOrCreateFieldInput = {
  onCreate: BusinessBusinessCurrencyConversionMarkupsConnectOrCreateFieldInputOnCreate;
  where: BusinessCurrencyConversionMarkupConnectOrCreateWhere;
};

export type BusinessBusinessCurrencyConversionMarkupsConnectOrCreateFieldInputOnCreate = {
  node: BusinessCurrencyConversionMarkupOnCreateInput;
};

export type BusinessBusinessCurrencyConversionMarkupsConnection = {
  __typename?: 'BusinessBusinessCurrencyConversionMarkupsConnection';
  edges: Array<BusinessBusinessCurrencyConversionMarkupsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessBusinessCurrencyConversionMarkupsConnectionSort = {
  node?: InputMaybe<BusinessCurrencyConversionMarkupSort>;
};

export type BusinessBusinessCurrencyConversionMarkupsConnectionWhere = {
  AND?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>>;
  NOT?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  OR?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>>;
  node?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};

export type BusinessBusinessCurrencyConversionMarkupsCreateFieldInput = {
  node: BusinessCurrencyConversionMarkupCreateInput;
};

export type BusinessBusinessCurrencyConversionMarkupsDeleteFieldInput = {
  delete?: InputMaybe<BusinessCurrencyConversionMarkupDeleteInput>;
  where?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
};

export type BusinessBusinessCurrencyConversionMarkupsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupDisconnectInput>;
  where?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
};

export type BusinessBusinessCurrencyConversionMarkupsFieldInput = {
  connect?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsCreateFieldInput>>;
};

export type BusinessBusinessCurrencyConversionMarkupsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsNodeAggregationWhereInput>>;
  adjustedRate_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  markup_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MAX_GT?: InputMaybe<Scalars['Float']>;
  markup_MAX_GTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_LT?: InputMaybe<Scalars['Float']>;
  markup_MAX_LTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MIN_GT?: InputMaybe<Scalars['Float']>;
  markup_MIN_GTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_LT?: InputMaybe<Scalars['Float']>;
  markup_MIN_LTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_SUM_GT?: InputMaybe<Scalars['Float']>;
  markup_SUM_GTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_LT?: InputMaybe<Scalars['Float']>;
  markup_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessBusinessCurrencyConversionMarkupsRelationship = {
  __typename?: 'BusinessBusinessCurrencyConversionMarkupsRelationship';
  cursor: Scalars['String'];
  node: BusinessCurrencyConversionMarkup;
};

export type BusinessBusinessCurrencyConversionMarkupsUpdateConnectionInput = {
  node?: InputMaybe<BusinessCurrencyConversionMarkupUpdateInput>;
};

export type BusinessBusinessCurrencyConversionMarkupsUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsDisconnectFieldInput>>;
  update?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsUpdateConnectionInput>;
  where?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
};

export type BusinessBusinessDocumentBusinessDocumentsAggregationSelection = {
  __typename?: 'BusinessBusinessDocumentBusinessDocumentsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessBusinessDocumentBusinessDocumentsNodeAggregateSelection>;
};

export type BusinessBusinessDocumentBusinessDocumentsNodeAggregateSelection = {
  __typename?: 'BusinessBusinessDocumentBusinessDocumentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  url: StringAggregateSelectionNonNullable;
};

export type BusinessBusinessDocumentsAggregateInput = {
  AND?: InputMaybe<Array<BusinessBusinessDocumentsAggregateInput>>;
  NOT?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  OR?: InputMaybe<Array<BusinessBusinessDocumentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessBusinessDocumentsNodeAggregationWhereInput>;
};

export type BusinessBusinessDocumentsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessDocumentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessDocumentConnectWhere>;
};

export type BusinessBusinessDocumentsConnectOrCreateFieldInput = {
  onCreate: BusinessBusinessDocumentsConnectOrCreateFieldInputOnCreate;
  where: BusinessDocumentConnectOrCreateWhere;
};

export type BusinessBusinessDocumentsConnectOrCreateFieldInputOnCreate = {
  node: BusinessDocumentOnCreateInput;
};

export type BusinessBusinessDocumentsConnection = {
  __typename?: 'BusinessBusinessDocumentsConnection';
  edges: Array<BusinessBusinessDocumentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessBusinessDocumentsConnectionSort = {
  node?: InputMaybe<BusinessDocumentSort>;
};

export type BusinessBusinessDocumentsConnectionWhere = {
  AND?: InputMaybe<Array<BusinessBusinessDocumentsConnectionWhere>>;
  NOT?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  OR?: InputMaybe<Array<BusinessBusinessDocumentsConnectionWhere>>;
  node?: InputMaybe<BusinessDocumentWhere>;
};

export type BusinessBusinessDocumentsCreateFieldInput = {
  node: BusinessDocumentCreateInput;
};

export type BusinessBusinessDocumentsDeleteFieldInput = {
  delete?: InputMaybe<BusinessDocumentDeleteInput>;
  where?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
};

export type BusinessBusinessDocumentsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDocumentDisconnectInput>;
  where?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
};

export type BusinessBusinessDocumentsFieldInput = {
  connect?: InputMaybe<Array<BusinessBusinessDocumentsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBusinessDocumentsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBusinessDocumentsCreateFieldInput>>;
};

export type BusinessBusinessDocumentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessBusinessDocumentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessBusinessDocumentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessBusinessDocumentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessBusinessDocumentsRelationship = {
  __typename?: 'BusinessBusinessDocumentsRelationship';
  cursor: Scalars['String'];
  node: BusinessDocument;
};

export type BusinessBusinessDocumentsUpdateConnectionInput = {
  node?: InputMaybe<BusinessDocumentUpdateInput>;
};

export type BusinessBusinessDocumentsUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessBusinessDocumentsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBusinessDocumentsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBusinessDocumentsCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessBusinessDocumentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessBusinessDocumentsDisconnectFieldInput>>;
  update?: InputMaybe<BusinessBusinessDocumentsUpdateConnectionInput>;
  where?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
};

export type BusinessBusinessOwnerBusinessOwnersAggregationSelection = {
  __typename?: 'BusinessBusinessOwnerBusinessOwnersAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessBusinessOwnerBusinessOwnersNodeAggregateSelection>;
};

export type BusinessBusinessOwnerBusinessOwnersNodeAggregateSelection = {
  __typename?: 'BusinessBusinessOwnerBusinessOwnersNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  designation: StringAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNullable;
  organisationOwnerName: StringAggregateSelectionNullable;
  passportNumber: StringAggregateSelectionNullable;
  percentage: FloatAggregateSelectionNonNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessBusinessOwnersAggregateInput = {
  AND?: InputMaybe<Array<BusinessBusinessOwnersAggregateInput>>;
  NOT?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  OR?: InputMaybe<Array<BusinessBusinessOwnersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessBusinessOwnersNodeAggregationWhereInput>;
};

export type BusinessBusinessOwnersConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessOwnerConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessOwnerConnectWhere>;
};

export type BusinessBusinessOwnersConnectOrCreateFieldInput = {
  onCreate: BusinessBusinessOwnersConnectOrCreateFieldInputOnCreate;
  where: BusinessOwnerConnectOrCreateWhere;
};

export type BusinessBusinessOwnersConnectOrCreateFieldInputOnCreate = {
  node: BusinessOwnerOnCreateInput;
};

export type BusinessBusinessOwnersConnection = {
  __typename?: 'BusinessBusinessOwnersConnection';
  edges: Array<BusinessBusinessOwnersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessBusinessOwnersConnectionSort = {
  node?: InputMaybe<BusinessOwnerSort>;
};

export type BusinessBusinessOwnersConnectionWhere = {
  AND?: InputMaybe<Array<BusinessBusinessOwnersConnectionWhere>>;
  NOT?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  OR?: InputMaybe<Array<BusinessBusinessOwnersConnectionWhere>>;
  node?: InputMaybe<BusinessOwnerWhere>;
};

export type BusinessBusinessOwnersCreateFieldInput = {
  node: BusinessOwnerCreateInput;
};

export type BusinessBusinessOwnersDeleteFieldInput = {
  delete?: InputMaybe<BusinessOwnerDeleteInput>;
  where?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
};

export type BusinessBusinessOwnersDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessOwnerDisconnectInput>;
  where?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
};

export type BusinessBusinessOwnersFieldInput = {
  connect?: InputMaybe<Array<BusinessBusinessOwnersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBusinessOwnersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBusinessOwnersCreateFieldInput>>;
};

export type BusinessBusinessOwnersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessBusinessOwnersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessBusinessOwnersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessBusinessOwnersNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  designation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  designation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  designation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  designation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  designation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  designation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  designation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  designation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  designation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  designation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  designation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  designation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  designation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  designation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  designation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  organisationOwnerName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  organisationOwnerName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  organisationOwnerName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  organisationOwnerName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  organisationOwnerName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  organisationOwnerName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  passportNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  passportNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  passportNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  passportNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  passportNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  passportNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  passportNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  passportNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  passportNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  passportNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  passportNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  passportNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  passportNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  passportNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  passportNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  percentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  percentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  percentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  percentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  percentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  percentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  percentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  percentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  percentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  percentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  percentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  percentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  percentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessBusinessOwnersRelationship = {
  __typename?: 'BusinessBusinessOwnersRelationship';
  cursor: Scalars['String'];
  node: BusinessOwner;
};

export type BusinessBusinessOwnersUpdateConnectionInput = {
  node?: InputMaybe<BusinessOwnerUpdateInput>;
};

export type BusinessBusinessOwnersUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessBusinessOwnersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBusinessOwnersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBusinessOwnersCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessBusinessOwnersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessBusinessOwnersDisconnectFieldInput>>;
  update?: InputMaybe<BusinessBusinessOwnersUpdateConnectionInput>;
  where?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
};

export type BusinessBusinessSolutionSolutionsNeededAggregationSelection = {
  __typename?: 'BusinessBusinessSolutionSolutionsNeededAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessBusinessSolutionSolutionsNeededNodeAggregateSelection>;
};

export type BusinessBusinessSolutionSolutionsNeededNodeAggregateSelection = {
  __typename?: 'BusinessBusinessSolutionSolutionsNeededNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessBusinessTypeAggregateInput = {
  AND?: InputMaybe<Array<BusinessBusinessTypeAggregateInput>>;
  NOT?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  OR?: InputMaybe<Array<BusinessBusinessTypeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessBusinessTypeNodeAggregationWhereInput>;
};

export type BusinessBusinessTypeBusinessTypeAggregationSelection = {
  __typename?: 'BusinessBusinessTypeBusinessTypeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessBusinessTypeBusinessTypeNodeAggregateSelection>;
};

export type BusinessBusinessTypeBusinessTypeNodeAggregateSelection = {
  __typename?: 'BusinessBusinessTypeBusinessTypeNodeAggregateSelection';
  name: StringAggregateSelectionNonNullable;
};

export type BusinessBusinessTypeConnectFieldInput = {
  connect?: InputMaybe<BusinessTypeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessTypeConnectWhere>;
};

export type BusinessBusinessTypeConnectOrCreateFieldInput = {
  onCreate: BusinessBusinessTypeConnectOrCreateFieldInputOnCreate;
  where: BusinessTypeConnectOrCreateWhere;
};

export type BusinessBusinessTypeConnectOrCreateFieldInputOnCreate = {
  node: BusinessTypeOnCreateInput;
};

export type BusinessBusinessTypeConnection = {
  __typename?: 'BusinessBusinessTypeConnection';
  edges: Array<BusinessBusinessTypeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessBusinessTypeConnectionSort = {
  node?: InputMaybe<BusinessTypeSort>;
};

export type BusinessBusinessTypeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessBusinessTypeConnectionWhere>>;
  NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessBusinessTypeConnectionWhere>>;
  node?: InputMaybe<BusinessTypeWhere>;
};

export type BusinessBusinessTypeCreateFieldInput = {
  node: BusinessTypeCreateInput;
};

export type BusinessBusinessTypeDeleteFieldInput = {
  delete?: InputMaybe<BusinessTypeDeleteInput>;
  where?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
};

export type BusinessBusinessTypeDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessTypeDisconnectInput>;
  where?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
};

export type BusinessBusinessTypeFieldInput = {
  connect?: InputMaybe<BusinessBusinessTypeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessBusinessTypeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessBusinessTypeCreateFieldInput>;
};

export type BusinessBusinessTypeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessBusinessTypeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessBusinessTypeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessBusinessTypeNodeAggregationWhereInput>>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessBusinessTypeRelationship = {
  __typename?: 'BusinessBusinessTypeRelationship';
  cursor: Scalars['String'];
  node: BusinessType;
};

export type BusinessBusinessTypeUpdateConnectionInput = {
  node?: InputMaybe<BusinessTypeUpdateInput>;
};

export type BusinessBusinessTypeUpdateFieldInput = {
  connect?: InputMaybe<BusinessBusinessTypeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessBusinessTypeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessBusinessTypeCreateFieldInput>;
  delete?: InputMaybe<BusinessBusinessTypeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessBusinessTypeDisconnectFieldInput>;
  update?: InputMaybe<BusinessBusinessTypeUpdateConnectionInput>;
  where?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
};

export type BusinessBusinessWalletBusinessWalletsAggregationSelection = {
  __typename?: 'BusinessBusinessWalletBusinessWalletsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessBusinessWalletBusinessWalletsNodeAggregateSelection>;
};

export type BusinessBusinessWalletBusinessWalletsNodeAggregateSelection = {
  __typename?: 'BusinessBusinessWalletBusinessWalletsNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessBusinessWalletsAggregateInput = {
  AND?: InputMaybe<Array<BusinessBusinessWalletsAggregateInput>>;
  NOT?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  OR?: InputMaybe<Array<BusinessBusinessWalletsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessBusinessWalletsNodeAggregationWhereInput>;
};

export type BusinessBusinessWalletsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessBusinessWalletsConnectOrCreateFieldInput = {
  onCreate: BusinessBusinessWalletsConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessBusinessWalletsConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessBusinessWalletsConnection = {
  __typename?: 'BusinessBusinessWalletsConnection';
  edges: Array<BusinessBusinessWalletsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessBusinessWalletsConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessBusinessWalletsConnectionWhere = {
  AND?: InputMaybe<Array<BusinessBusinessWalletsConnectionWhere>>;
  NOT?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  OR?: InputMaybe<Array<BusinessBusinessWalletsConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessBusinessWalletsCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessBusinessWalletsDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
};

export type BusinessBusinessWalletsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
};

export type BusinessBusinessWalletsFieldInput = {
  connect?: InputMaybe<Array<BusinessBusinessWalletsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBusinessWalletsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBusinessWalletsCreateFieldInput>>;
};

export type BusinessBusinessWalletsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessBusinessWalletsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessBusinessWalletsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessBusinessWalletsNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessBusinessWalletsRelationship = {
  __typename?: 'BusinessBusinessWalletsRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessBusinessWalletsUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessBusinessWalletsUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessBusinessWalletsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessBusinessWalletsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessBusinessWalletsCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessBusinessWalletsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessBusinessWalletsDisconnectFieldInput>>;
  update?: InputMaybe<BusinessBusinessWalletsUpdateConnectionInput>;
  where?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
};

export type BusinessConnectInput = {
  baseCurrencyCode?: InputMaybe<BusinessBaseCurrencyCodeConnectFieldInput>;
  brands?: InputMaybe<Array<BusinessBrandsConnectFieldInput>>;
  businessCurrencyConversionFees?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectFieldInput>;
  businessCurrencyConversionMarkups?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectFieldInput>>;
  businessDocuments?: InputMaybe<Array<BusinessBusinessDocumentsConnectFieldInput>>;
  businessOwners?: InputMaybe<Array<BusinessBusinessOwnersConnectFieldInput>>;
  businessType?: InputMaybe<BusinessBusinessTypeConnectFieldInput>;
  businessWallets?: InputMaybe<Array<BusinessBusinessWalletsConnectFieldInput>>;
  createdBy?: InputMaybe<BusinessCreatedByConnectFieldInput>;
  merchant?: InputMaybe<BusinessMerchantConnectFieldInput>;
  solutionsNeeded?: InputMaybe<BusinessSolutionsNeededConnectFieldInput>;
  targetMarkets?: InputMaybe<Array<BusinessTargetMarketsConnectFieldInput>>;
  teams?: InputMaybe<Array<BusinessTeamsConnectFieldInput>>;
  updatedBy?: InputMaybe<BusinessUpdatedByConnectFieldInput>;
};

export type BusinessConnectOrCreateInput = {
  baseCurrencyCode?: InputMaybe<BusinessBaseCurrencyCodeConnectOrCreateFieldInput>;
  brands?: InputMaybe<Array<BusinessBrandsConnectOrCreateFieldInput>>;
  businessCurrencyConversionMarkups?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsConnectOrCreateFieldInput>>;
  businessDocuments?: InputMaybe<Array<BusinessBusinessDocumentsConnectOrCreateFieldInput>>;
  businessOwners?: InputMaybe<Array<BusinessBusinessOwnersConnectOrCreateFieldInput>>;
  businessType?: InputMaybe<BusinessBusinessTypeConnectOrCreateFieldInput>;
  businessWallets?: InputMaybe<Array<BusinessBusinessWalletsConnectOrCreateFieldInput>>;
  merchant?: InputMaybe<BusinessMerchantConnectOrCreateFieldInput>;
  solutionsNeeded?: InputMaybe<BusinessSolutionsNeededConnectOrCreateFieldInput>;
  targetMarkets?: InputMaybe<Array<BusinessTargetMarketsConnectOrCreateFieldInput>>;
  teams?: InputMaybe<Array<BusinessTeamsConnectOrCreateFieldInput>>;
};

export type BusinessConnectOrCreateWhere = {
  node: BusinessUniqueWhere;
};

export type BusinessConnectWhere = {
  node: BusinessWhere;
};

export type BusinessCountryTargetMarketsAggregationSelection = {
  __typename?: 'BusinessCountryTargetMarketsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCountryTargetMarketsNodeAggregateSelection>;
};

export type BusinessCountryTargetMarketsNodeAggregateSelection = {
  __typename?: 'BusinessCountryTargetMarketsNodeAggregateSelection';
  code: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<BusinessBaseCurrencyCodeFieldInput>;
  brands?: InputMaybe<BusinessBrandsFieldInput>;
  businessCurrencyConversionFees?: InputMaybe<BusinessBusinessCurrencyConversionFeesFieldInput>;
  businessCurrencyConversionMarkups?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsFieldInput>;
  businessDocuments?: InputMaybe<BusinessBusinessDocumentsFieldInput>;
  businessOwners?: InputMaybe<BusinessBusinessOwnersFieldInput>;
  businessType?: InputMaybe<BusinessBusinessTypeFieldInput>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessWallets?: InputMaybe<BusinessBusinessWalletsFieldInput>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<BusinessCreatedByFieldInput>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<BusinessMerchantFieldInput>;
  name: Scalars['String'];
  nickname: Scalars['String'];
  phoneContact?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionsNeededFieldInput>;
  status?: BusinessStatus;
  targetMarkets?: InputMaybe<BusinessTargetMarketsFieldInput>;
  targetRegions: Array<MarketRegionsType>;
  teams?: InputMaybe<BusinessTeamsFieldInput>;
  telegramContact?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<BusinessUpdatedByFieldInput>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
};

export type BusinessCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessCreatedByConnection = {
  __typename?: 'BusinessCreatedByConnection';
  edges: Array<BusinessCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessCreatedByConnectionWhere>;
};

export type BusinessCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessCreatedByConnectionWhere>;
};

export type BusinessCreatedByFieldInput = {
  connect?: InputMaybe<BusinessCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessCreatedByCreateFieldInput>;
};

export type BusinessCreatedByRelationship = {
  __typename?: 'BusinessCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessCreatedByConnectionWhere>;
};

export type BusinessCurrencyBaseCurrencyCodeAggregationSelection = {
  __typename?: 'BusinessCurrencyBaseCurrencyCodeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCurrencyBaseCurrencyCodeNodeAggregateSelection>;
};

export type BusinessCurrencyBaseCurrencyCodeNodeAggregateSelection = {
  __typename?: 'BusinessCurrencyBaseCurrencyCodeNodeAggregateSelection';
  code: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  flagUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  symbol: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCurrencyConversionFees = {
  __typename?: 'BusinessCurrencyConversionFees';
  business: Business;
  businessAggregate?: Maybe<BusinessCurrencyConversionFeesBusinessBusinessAggregationSelection>;
  businessConnection: BusinessCurrencyConversionFeesBusinessConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<BusinessCurrencyConversionFeesSuperAdminCreatedByAggregationSelection>;
  createdByConnection: BusinessCurrencyConversionFeesCreatedByConnection;
  defaultCurrencyConversionFees: DefaultCurrencyConversionFees;
  defaultCurrencyConversionFeesAggregate?: Maybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDefaultCurrencyConversionFeesAggregationSelection>;
  defaultCurrencyConversionFeesConnection: BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnection;
  flatFee: Scalars['Float'];
  id: Scalars['ID'];
  markupPercentage: Scalars['Float'];
  percentageFee: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<BusinessCurrencyConversionFeesSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: BusinessCurrencyConversionFeesUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessCurrencyConversionFeesBusinessArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessCurrencyConversionFeesBusinessAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessCurrencyConversionFeesBusinessConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionFeesBusinessConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectionWhere>;
};


export type BusinessCurrencyConversionFeesCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type BusinessCurrencyConversionFeesCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type BusinessCurrencyConversionFeesCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionFeesCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectionWhere>;
};


export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultCurrencyConversionFeesOptions>;
  where?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
};


export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
};


export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>;
};


export type BusinessCurrencyConversionFeesUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type BusinessCurrencyConversionFeesUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type BusinessCurrencyConversionFeesUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionFeesUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>;
};

export type BusinessCurrencyConversionFeesAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionFeesAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  flatFee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markupPercentage: FloatAggregateSelectionNonNullable;
  percentageFee: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCurrencyConversionFeesBusinessAggregateInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesBusinessAggregateInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesBusinessAggregateInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesBusinessAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessCurrencyConversionFeesBusinessNodeAggregationWhereInput>;
};

export type BusinessCurrencyConversionFeesBusinessBusinessAggregationSelection = {
  __typename?: 'BusinessCurrencyConversionFeesBusinessBusinessAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCurrencyConversionFeesBusinessBusinessNodeAggregateSelection>;
};

export type BusinessCurrencyConversionFeesBusinessBusinessNodeAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionFeesBusinessBusinessNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BusinessCurrencyConversionFeesBusinessConnectFieldInput = {
  connect?: InputMaybe<BusinessConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type BusinessCurrencyConversionFeesBusinessConnectOrCreateFieldInput = {
  onCreate: BusinessCurrencyConversionFeesBusinessConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type BusinessCurrencyConversionFeesBusinessConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type BusinessCurrencyConversionFeesBusinessConnection = {
  __typename?: 'BusinessCurrencyConversionFeesBusinessConnection';
  edges: Array<BusinessCurrencyConversionFeesBusinessRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionFeesBusinessConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type BusinessCurrencyConversionFeesBusinessConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesBusinessConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesBusinessConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type BusinessCurrencyConversionFeesBusinessCreateFieldInput = {
  node: BusinessCreateInput;
};

export type BusinessCurrencyConversionFeesBusinessDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectionWhere>;
};

export type BusinessCurrencyConversionFeesBusinessDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectionWhere>;
};

export type BusinessCurrencyConversionFeesBusinessFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesBusinessCreateFieldInput>;
};

export type BusinessCurrencyConversionFeesBusinessNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesBusinessNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesBusinessNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesBusinessNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessCurrencyConversionFeesBusinessRelationship = {
  __typename?: 'BusinessCurrencyConversionFeesBusinessRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type BusinessCurrencyConversionFeesBusinessUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type BusinessCurrencyConversionFeesBusinessUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesBusinessCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionFeesBusinessDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionFeesBusinessDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionFeesBusinessUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectionWhere>;
};

export type BusinessCurrencyConversionFeesConnectInput = {
  business?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectFieldInput>;
  defaultCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectFieldInput>;
};

export type BusinessCurrencyConversionFeesConnectOrCreateInput = {
  business?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectOrCreateFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectOrCreateFieldInput>;
};

export type BusinessCurrencyConversionFeesConnectWhere = {
  node: BusinessCurrencyConversionFeesWhere;
};

export type BusinessCurrencyConversionFeesConnection = {
  __typename?: 'BusinessCurrencyConversionFeesConnection';
  edges: Array<BusinessCurrencyConversionFeesEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionFeesCreateInput = {
  business?: InputMaybe<BusinessCurrencyConversionFeesBusinessFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionFeesCreatedByFieldInput>;
  defaultCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesFieldInput>;
  flatFee?: Scalars['Float'];
  id: Scalars['ID'];
  markupPercentage?: Scalars['Float'];
  percentageFee?: Scalars['Float'];
  updatedBy?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessCurrencyConversionFeesCreatedByAggregateInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesCreatedByAggregateInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesCreatedByAggregateInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessCurrencyConversionFeesCreatedByNodeAggregationWhereInput>;
};

export type BusinessCurrencyConversionFeesCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type BusinessCurrencyConversionFeesCreatedByConnectOrCreateFieldInput = {
  onCreate: BusinessCurrencyConversionFeesCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type BusinessCurrencyConversionFeesCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type BusinessCurrencyConversionFeesCreatedByConnection = {
  __typename?: 'BusinessCurrencyConversionFeesCreatedByConnection';
  edges: Array<BusinessCurrencyConversionFeesCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionFeesCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type BusinessCurrencyConversionFeesCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type BusinessCurrencyConversionFeesCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type BusinessCurrencyConversionFeesCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectionWhere>;
};

export type BusinessCurrencyConversionFeesCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectionWhere>;
};

export type BusinessCurrencyConversionFeesCreatedByFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesCreatedByCreateFieldInput>;
};

export type BusinessCurrencyConversionFeesCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessCurrencyConversionFeesCreatedByRelationship = {
  __typename?: 'BusinessCurrencyConversionFeesCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type BusinessCurrencyConversionFeesCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type BusinessCurrencyConversionFeesCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionFeesCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionFeesCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionFeesCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectionWhere>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesAggregateInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesAggregateInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesAggregateInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesNodeAggregationWhereInput>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionFeesConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultCurrencyConversionFeesConnectWhere>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnection = {
  __typename?: 'BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnection';
  edges: Array<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionSort = {
  node?: InputMaybe<DefaultCurrencyConversionFeesSort>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>>;
  node?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesCreateFieldInput = {
  node: DefaultCurrencyConversionFeesCreateInput;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDefaultCurrencyConversionFeesAggregationSelection = {
  __typename?: 'BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDefaultCurrencyConversionFeesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDefaultCurrencyConversionFeesNodeAggregateSelection>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDefaultCurrencyConversionFeesNodeAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDefaultCurrencyConversionFeesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  flatFee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markupPercentage: FloatAggregateSelectionNonNullable;
  percentageFee: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDeleteFieldInput = {
  delete?: InputMaybe<DefaultCurrencyConversionFeesDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultCurrencyConversionFeesDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesCreateFieldInput>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  flatFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesRelationship = {
  __typename?: 'BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesRelationship';
  cursor: Scalars['String'];
  node: DefaultCurrencyConversionFees;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesUpdateConnectionInput = {
  node?: InputMaybe<DefaultCurrencyConversionFeesUpdateInput>;
};

export type BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>;
};

export type BusinessCurrencyConversionFeesDeleteInput = {
  business?: InputMaybe<BusinessCurrencyConversionFeesBusinessDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionFeesCreatedByDeleteFieldInput>;
  defaultCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByDeleteFieldInput>;
};

export type BusinessCurrencyConversionFeesDisconnectInput = {
  business?: InputMaybe<BusinessCurrencyConversionFeesBusinessDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionFeesCreatedByDisconnectFieldInput>;
  defaultCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByDisconnectFieldInput>;
};

export type BusinessCurrencyConversionFeesEdge = {
  __typename?: 'BusinessCurrencyConversionFeesEdge';
  cursor: Scalars['String'];
  node: BusinessCurrencyConversionFees;
};

export type BusinessCurrencyConversionFeesOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessCurrencyConversionFeesSort objects to sort BusinessCurrencyConversionFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessCurrencyConversionFeesSort>>;
};

export type BusinessCurrencyConversionFeesRelationInput = {
  business?: InputMaybe<BusinessCurrencyConversionFeesBusinessCreateFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionFeesCreatedByCreateFieldInput>;
  defaultCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByCreateFieldInput>;
};

/** Fields to sort BusinessCurrencyConversionFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessCurrencyConversionFeesSort object. */
export type BusinessCurrencyConversionFeesSort = {
  createdAt?: InputMaybe<SortDirection>;
  flatFee?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  markupPercentage?: InputMaybe<SortDirection>;
  percentageFee?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessCurrencyConversionFeesSuperAdminCreatedByAggregationSelection = {
  __typename?: 'BusinessCurrencyConversionFeesSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCurrencyConversionFeesSuperAdminCreatedByNodeAggregateSelection>;
};

export type BusinessCurrencyConversionFeesSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionFeesSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCurrencyConversionFeesSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'BusinessCurrencyConversionFeesSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCurrencyConversionFeesSuperAdminUpdatedByNodeAggregateSelection>;
};

export type BusinessCurrencyConversionFeesSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionFeesSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCurrencyConversionFeesUpdateInput = {
  business?: InputMaybe<BusinessCurrencyConversionFeesBusinessUpdateFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionFeesCreatedByUpdateFieldInput>;
  defaultCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesUpdateFieldInput>;
  flatFee?: InputMaybe<Scalars['Float']>;
  flatFee_ADD?: InputMaybe<Scalars['Float']>;
  flatFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  flatFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  flatFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  markupPercentage?: InputMaybe<Scalars['Float']>;
  markupPercentage_ADD?: InputMaybe<Scalars['Float']>;
  markupPercentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  percentageFee?: InputMaybe<Scalars['Float']>;
  percentageFee_ADD?: InputMaybe<Scalars['Float']>;
  percentageFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  percentageFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  percentageFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessCurrencyConversionFeesUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesUpdatedByAggregateInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByNodeAggregationWhereInput>;
};

export type BusinessCurrencyConversionFeesUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type BusinessCurrencyConversionFeesUpdatedByConnectOrCreateFieldInput = {
  onCreate: BusinessCurrencyConversionFeesUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type BusinessCurrencyConversionFeesUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type BusinessCurrencyConversionFeesUpdatedByConnection = {
  __typename?: 'BusinessCurrencyConversionFeesUpdatedByConnection';
  edges: Array<BusinessCurrencyConversionFeesUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionFeesUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type BusinessCurrencyConversionFeesUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type BusinessCurrencyConversionFeesUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type BusinessCurrencyConversionFeesUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>;
};

export type BusinessCurrencyConversionFeesUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>;
};

export type BusinessCurrencyConversionFeesUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByCreateFieldInput>;
};

export type BusinessCurrencyConversionFeesUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessCurrencyConversionFeesUpdatedByRelationship = {
  __typename?: 'BusinessCurrencyConversionFeesUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type BusinessCurrencyConversionFeesUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type BusinessCurrencyConversionFeesUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>;
};

export type BusinessCurrencyConversionFeesWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionFeesWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionFeesWhere>>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessCurrencyConversionFeesBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessCurrencyConversionFeesBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<BusinessCurrencyConversionFeesCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCurrencyConversionFeesCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  defaultCurrencyConversionFees?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
  defaultCurrencyConversionFeesAggregate?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesAggregateInput>;
  defaultCurrencyConversionFeesConnection?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>;
  defaultCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessCurrencyConversionFeesDefaultCurrencyConversionFeesConnectionWhere>;
  defaultCurrencyConversionFees_NOT?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
  flatFee?: InputMaybe<Scalars['Float']>;
  flatFee_GT?: InputMaybe<Scalars['Float']>;
  flatFee_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  flatFee_LT?: InputMaybe<Scalars['Float']>;
  flatFee_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  markupPercentage?: InputMaybe<Scalars['Float']>;
  markupPercentage_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  markupPercentage_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee?: InputMaybe<Scalars['Float']>;
  percentageFee_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  percentageFee_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessCurrencyConversionFeesUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessCurrencyConversionMarkup = {
  __typename?: 'BusinessCurrencyConversionMarkup';
  adjustedRate: Scalars['Float'];
  autoAdjustMarkupToBaseRate: Scalars['Boolean'];
  baseCurrencyConversionRate: BaseCurrencyConversionRate;
  baseCurrencyConversionRateAggregate?: Maybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateAggregationSelection>;
  baseCurrencyConversionRateConnection: BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnection;
  business: Business;
  businessAggregate?: Maybe<BusinessCurrencyConversionMarkupBusinessBusinessAggregationSelection>;
  businessConnection: BusinessCurrencyConversionMarkupBusinessConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessCurrencyConversionMarkupCreatedByConnection;
  defaultCurrencyConversionMarkup: DefaultCurrencyConversionMarkup;
  defaultCurrencyConversionMarkupAggregate?: Maybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregationSelection>;
  defaultCurrencyConversionMarkupConnection: BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnection;
  fee: Scalars['Float'];
  forConversion: Scalars['String'];
  id: Scalars['ID'];
  isFlatFee: Scalars['Boolean'];
  markup: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessCurrencyConversionMarkupUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BaseCurrencyConversionRateOptions>;
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
};


export type BusinessCurrencyConversionMarkupBusinessArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessCurrencyConversionMarkupBusinessAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessCurrencyConversionMarkupBusinessConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionMarkupBusinessConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectionWhere>;
};


export type BusinessCurrencyConversionMarkupCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessCurrencyConversionMarkupCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionMarkupCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>;
};


export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultCurrencyConversionMarkupOptions>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>;
};


export type BusinessCurrencyConversionMarkupUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessCurrencyConversionMarkupUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessCurrencyConversionMarkupUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionMarkupAggregateSelection';
  adjustedRate: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  forConversion: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markup: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateAggregationSelection = {
  __typename?: 'BusinessCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateNodeAggregateSelection>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateNodeAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateNodeAggregateSelection';
  baseRate: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  fromCurrency: StringAggregateSelectionNonNullable;
  id: StringAggregateSelectionNonNullable;
  toCurrency: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectFieldInput = {
  connect?: InputMaybe<BaseCurrencyConversionRateConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BaseCurrencyConversionRateConnectWhere>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInput = {
  onCreate: BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInputOnCreate;
  where: BaseCurrencyConversionRateConnectOrCreateWhere;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInputOnCreate = {
  node: BaseCurrencyConversionRateOnCreateInput;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnection = {
  __typename?: 'BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnection';
  edges: Array<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionSort = {
  node?: InputMaybe<BaseCurrencyConversionRateSort>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>>;
  node?: InputMaybe<BaseCurrencyConversionRateWhere>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateCreateFieldInput = {
  node: BaseCurrencyConversionRateCreateInput;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateDeleteFieldInput = {
  delete?: InputMaybe<BaseCurrencyConversionRateDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateDisconnectFieldInput = {
  disconnect?: InputMaybe<BaseCurrencyConversionRateDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateCreateFieldInput>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput>>;
  baseRate_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  baseRate_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  baseRate_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  baseRate_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_GT?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_LT?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_LTE?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_GT?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_LT?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_LTE?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_GT?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_LT?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  fromCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  fromCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  fromCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  fromCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  fromCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  fromCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  fromCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  fromCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  fromCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  fromCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  toCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  toCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  toCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  toCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  toCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  toCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  toCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  toCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  toCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  toCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateRelationship = {
  __typename?: 'BusinessCurrencyConversionMarkupBaseCurrencyConversionRateRelationship';
  cursor: Scalars['String'];
  node: BaseCurrencyConversionRate;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateUpdateConnectionInput = {
  node?: InputMaybe<BaseCurrencyConversionRateUpdateInput>;
};

export type BusinessCurrencyConversionMarkupBaseCurrencyConversionRateUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupBusinessAggregateInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupBusinessAggregateInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupBusinessAggregateInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupBusinessAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessCurrencyConversionMarkupBusinessNodeAggregationWhereInput>;
};

export type BusinessCurrencyConversionMarkupBusinessBusinessAggregationSelection = {
  __typename?: 'BusinessCurrencyConversionMarkupBusinessBusinessAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCurrencyConversionMarkupBusinessBusinessNodeAggregateSelection>;
};

export type BusinessCurrencyConversionMarkupBusinessBusinessNodeAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionMarkupBusinessBusinessNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BusinessCurrencyConversionMarkupBusinessConnectFieldInput = {
  connect?: InputMaybe<BusinessConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type BusinessCurrencyConversionMarkupBusinessConnectOrCreateFieldInput = {
  onCreate: BusinessCurrencyConversionMarkupBusinessConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type BusinessCurrencyConversionMarkupBusinessConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type BusinessCurrencyConversionMarkupBusinessConnection = {
  __typename?: 'BusinessCurrencyConversionMarkupBusinessConnection';
  edges: Array<BusinessCurrencyConversionMarkupBusinessRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionMarkupBusinessConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type BusinessCurrencyConversionMarkupBusinessConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupBusinessConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupBusinessConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type BusinessCurrencyConversionMarkupBusinessCreateFieldInput = {
  node: BusinessCreateInput;
};

export type BusinessCurrencyConversionMarkupBusinessDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupBusinessDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupBusinessFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupBusinessCreateFieldInput>;
};

export type BusinessCurrencyConversionMarkupBusinessNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupBusinessNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupBusinessNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupBusinessNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessCurrencyConversionMarkupBusinessRelationship = {
  __typename?: 'BusinessCurrencyConversionMarkupBusinessRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type BusinessCurrencyConversionMarkupBusinessUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type BusinessCurrencyConversionMarkupBusinessUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupBusinessCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionMarkupBusinessDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupBusinessDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionMarkupBusinessUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupConnectInput = {
  baseCurrencyConversionRate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectFieldInput>;
  business?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectFieldInput>;
  defaultCurrencyConversionMarkup?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectFieldInput>;
};

export type BusinessCurrencyConversionMarkupConnectOrCreateInput = {
  baseCurrencyConversionRate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInput>;
  business?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectOrCreateFieldInput>;
  defaultCurrencyConversionMarkup?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectOrCreateFieldInput>;
};

export type BusinessCurrencyConversionMarkupConnectOrCreateWhere = {
  node: BusinessCurrencyConversionMarkupUniqueWhere;
};

export type BusinessCurrencyConversionMarkupConnectWhere = {
  node: BusinessCurrencyConversionMarkupWhere;
};

export type BusinessCurrencyConversionMarkupCreateInput = {
  adjustedRate?: Scalars['Float'];
  autoAdjustMarkupToBaseRate?: Scalars['Boolean'];
  baseCurrencyConversionRate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateFieldInput>;
  business?: InputMaybe<BusinessCurrencyConversionMarkupBusinessFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByFieldInput>;
  defaultCurrencyConversionMarkup?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupFieldInput>;
  fee?: Scalars['Float'];
  forConversion: Scalars['String'];
  isFlatFee?: Scalars['Boolean'];
  markup?: Scalars['Float'];
  updatedBy?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessCurrencyConversionMarkupCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessCurrencyConversionMarkupCreatedByConnection = {
  __typename?: 'BusinessCurrencyConversionMarkupCreatedByConnection';
  edges: Array<BusinessCurrencyConversionMarkupCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionMarkupCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessCurrencyConversionMarkupCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessCurrencyConversionMarkupCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessCurrencyConversionMarkupCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupCreatedByFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByCreateFieldInput>;
};

export type BusinessCurrencyConversionMarkupCreatedByRelationship = {
  __typename?: 'BusinessCurrencyConversionMarkupCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessCurrencyConversionMarkupCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessCurrencyConversionMarkupCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregateInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregateInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregateInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregationWhereInput>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultCurrencyConversionMarkupConnectWhere>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectOrCreateFieldInput = {
  onCreate: BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectOrCreateFieldInputOnCreate;
  where: DefaultCurrencyConversionMarkupConnectOrCreateWhere;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectOrCreateFieldInputOnCreate = {
  node: DefaultCurrencyConversionMarkupOnCreateInput;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnection = {
  __typename?: 'BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnection';
  edges: Array<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionSort = {
  node?: InputMaybe<DefaultCurrencyConversionMarkupSort>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>>;
  node?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupCreateFieldInput = {
  node: DefaultCurrencyConversionMarkupCreateInput;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregationSelection = {
  __typename?: 'BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregateSelection>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregateSelection = {
  __typename?: 'BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregateSelection';
  adjustedRate: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  forConversion: StringAggregateSelectionNonNullable;
  id: StringAggregateSelectionNonNullable;
  markup: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDeleteFieldInput = {
  delete?: InputMaybe<DefaultCurrencyConversionMarkupDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultCurrencyConversionMarkupDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupCreateFieldInput>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupNodeAggregationWhereInput>>;
  adjustedRate_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  markup_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MAX_GT?: InputMaybe<Scalars['Float']>;
  markup_MAX_GTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_LT?: InputMaybe<Scalars['Float']>;
  markup_MAX_LTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MIN_GT?: InputMaybe<Scalars['Float']>;
  markup_MIN_GTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_LT?: InputMaybe<Scalars['Float']>;
  markup_MIN_LTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_SUM_GT?: InputMaybe<Scalars['Float']>;
  markup_SUM_GTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_LT?: InputMaybe<Scalars['Float']>;
  markup_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupRelationship = {
  __typename?: 'BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupRelationship';
  cursor: Scalars['String'];
  node: DefaultCurrencyConversionMarkup;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupUpdateConnectionInput = {
  node?: InputMaybe<DefaultCurrencyConversionMarkupUpdateInput>;
};

export type BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupDeleteInput = {
  baseCurrencyConversionRate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateDeleteFieldInput>;
  business?: InputMaybe<BusinessCurrencyConversionMarkupBusinessDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByDeleteFieldInput>;
  defaultCurrencyConversionMarkup?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByDeleteFieldInput>;
};

export type BusinessCurrencyConversionMarkupDisconnectInput = {
  baseCurrencyConversionRate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateDisconnectFieldInput>;
  business?: InputMaybe<BusinessCurrencyConversionMarkupBusinessDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByDisconnectFieldInput>;
  defaultCurrencyConversionMarkup?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByDisconnectFieldInput>;
};

export type BusinessCurrencyConversionMarkupEdge = {
  __typename?: 'BusinessCurrencyConversionMarkupEdge';
  cursor: Scalars['String'];
  node: BusinessCurrencyConversionMarkup;
};

export type BusinessCurrencyConversionMarkupOnCreateInput = {
  adjustedRate?: Scalars['Float'];
  autoAdjustMarkupToBaseRate?: Scalars['Boolean'];
  fee?: Scalars['Float'];
  forConversion: Scalars['String'];
  isFlatFee?: Scalars['Boolean'];
  markup?: Scalars['Float'];
  usesDefault?: Scalars['Boolean'];
};

export type BusinessCurrencyConversionMarkupOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessCurrencyConversionMarkupSort objects to sort BusinessCurrencyConversionMarkups by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessCurrencyConversionMarkupSort>>;
};

export type BusinessCurrencyConversionMarkupRelationInput = {
  baseCurrencyConversionRate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateCreateFieldInput>;
  business?: InputMaybe<BusinessCurrencyConversionMarkupBusinessCreateFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByCreateFieldInput>;
  defaultCurrencyConversionMarkup?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByCreateFieldInput>;
};

/** Fields to sort BusinessCurrencyConversionMarkups by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessCurrencyConversionMarkupSort object. */
export type BusinessCurrencyConversionMarkupSort = {
  adjustedRate?: InputMaybe<SortDirection>;
  autoAdjustMarkupToBaseRate?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  fee?: InputMaybe<SortDirection>;
  forConversion?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isFlatFee?: InputMaybe<SortDirection>;
  markup?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessCurrencyConversionMarkupUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessCurrencyConversionMarkupUpdateInput = {
  adjustedRate?: InputMaybe<Scalars['Float']>;
  adjustedRate_ADD?: InputMaybe<Scalars['Float']>;
  adjustedRate_DIVIDE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MULTIPLY?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUBTRACT?: InputMaybe<Scalars['Float']>;
  autoAdjustMarkupToBaseRate?: InputMaybe<Scalars['Boolean']>;
  baseCurrencyConversionRate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateUpdateFieldInput>;
  business?: InputMaybe<BusinessCurrencyConversionMarkupBusinessUpdateFieldInput>;
  createdBy?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByUpdateFieldInput>;
  defaultCurrencyConversionMarkup?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupUpdateFieldInput>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_ADD?: InputMaybe<Scalars['Float']>;
  fee_DIVIDE?: InputMaybe<Scalars['Float']>;
  fee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  fee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  forConversion?: InputMaybe<Scalars['String']>;
  isFlatFee?: InputMaybe<Scalars['Boolean']>;
  markup?: InputMaybe<Scalars['Float']>;
  markup_ADD?: InputMaybe<Scalars['Float']>;
  markup_DIVIDE?: InputMaybe<Scalars['Float']>;
  markup_MULTIPLY?: InputMaybe<Scalars['Float']>;
  markup_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessCurrencyConversionMarkupUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessCurrencyConversionMarkupUpdatedByConnection = {
  __typename?: 'BusinessCurrencyConversionMarkupUpdatedByConnection';
  edges: Array<BusinessCurrencyConversionMarkupUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessCurrencyConversionMarkupUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessCurrencyConversionMarkupUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessCurrencyConversionMarkupUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessCurrencyConversionMarkupUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByCreateFieldInput>;
};

export type BusinessCurrencyConversionMarkupUpdatedByRelationship = {
  __typename?: 'BusinessCurrencyConversionMarkupUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessCurrencyConversionMarkupUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessCurrencyConversionMarkupUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>;
};

export type BusinessCurrencyConversionMarkupWhere = {
  AND?: InputMaybe<Array<BusinessCurrencyConversionMarkupWhere>>;
  NOT?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  OR?: InputMaybe<Array<BusinessCurrencyConversionMarkupWhere>>;
  adjustedRate?: InputMaybe<Scalars['Float']>;
  adjustedRate_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_IN?: InputMaybe<Array<Scalars['Float']>>;
  adjustedRate_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_LTE?: InputMaybe<Scalars['Float']>;
  autoAdjustMarkupToBaseRate?: InputMaybe<Scalars['Boolean']>;
  baseCurrencyConversionRate?: InputMaybe<BaseCurrencyConversionRateWhere>;
  baseCurrencyConversionRateAggregate?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput>;
  baseCurrencyConversionRateConnection?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
  baseCurrencyConversionRateConnection_NOT?: InputMaybe<BusinessCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
  baseCurrencyConversionRate_NOT?: InputMaybe<BaseCurrencyConversionRateWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessCurrencyConversionMarkupBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessCurrencyConversionMarkupBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCurrencyConversionMarkupCreatedByConnectionWhere>;
  defaultCurrencyConversionMarkup?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
  defaultCurrencyConversionMarkupAggregate?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupAggregateInput>;
  defaultCurrencyConversionMarkupConnection?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>;
  defaultCurrencyConversionMarkupConnection_NOT?: InputMaybe<BusinessCurrencyConversionMarkupDefaultCurrencyConversionMarkupConnectionWhere>;
  defaultCurrencyConversionMarkup_NOT?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_GT?: InputMaybe<Scalars['Float']>;
  fee_GTE?: InputMaybe<Scalars['Float']>;
  fee_IN?: InputMaybe<Array<Scalars['Float']>>;
  fee_LT?: InputMaybe<Scalars['Float']>;
  fee_LTE?: InputMaybe<Scalars['Float']>;
  forConversion?: InputMaybe<Scalars['String']>;
  forConversion_CONTAINS?: InputMaybe<Scalars['String']>;
  forConversion_ENDS_WITH?: InputMaybe<Scalars['String']>;
  forConversion_IN?: InputMaybe<Array<Scalars['String']>>;
  forConversion_MATCHES?: InputMaybe<Scalars['String']>;
  forConversion_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isFlatFee?: InputMaybe<Scalars['Boolean']>;
  markup?: InputMaybe<Scalars['Float']>;
  markup_GT?: InputMaybe<Scalars['Float']>;
  markup_GTE?: InputMaybe<Scalars['Float']>;
  markup_IN?: InputMaybe<Array<Scalars['Float']>>;
  markup_LT?: InputMaybe<Scalars['Float']>;
  markup_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessCurrencyConversionMarkupUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessCurrencyConversionMarkupsConnection = {
  __typename?: 'BusinessCurrencyConversionMarkupsConnection';
  edges: Array<BusinessCurrencyConversionMarkupEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessDeleteInput = {
  baseCurrencyCode?: InputMaybe<BusinessBaseCurrencyCodeDeleteFieldInput>;
  brands?: InputMaybe<Array<BusinessBrandsDeleteFieldInput>>;
  businessCurrencyConversionFees?: InputMaybe<BusinessBusinessCurrencyConversionFeesDeleteFieldInput>;
  businessCurrencyConversionMarkups?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsDeleteFieldInput>>;
  businessDocuments?: InputMaybe<Array<BusinessBusinessDocumentsDeleteFieldInput>>;
  businessOwners?: InputMaybe<Array<BusinessBusinessOwnersDeleteFieldInput>>;
  businessType?: InputMaybe<BusinessBusinessTypeDeleteFieldInput>;
  businessWallets?: InputMaybe<Array<BusinessBusinessWalletsDeleteFieldInput>>;
  createdBy?: InputMaybe<BusinessCreatedByDeleteFieldInput>;
  merchant?: InputMaybe<BusinessMerchantDeleteFieldInput>;
  solutionsNeeded?: InputMaybe<BusinessSolutionsNeededDeleteFieldInput>;
  targetMarkets?: InputMaybe<Array<BusinessTargetMarketsDeleteFieldInput>>;
  teams?: InputMaybe<Array<BusinessTeamsDeleteFieldInput>>;
  updatedBy?: InputMaybe<BusinessUpdatedByDeleteFieldInput>;
};

export type BusinessDetail = {
  address?: InputMaybe<Scalars['String']>;
  businessType?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  phoneContact?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  requestedCurrencies: Array<InputMaybe<Scalars['String']>>;
  skypeContact?: InputMaybe<Scalars['String']>;
  status: Scalars['String'];
  targetRegions?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
};

export type BusinessDisconnectInput = {
  baseCurrencyCode?: InputMaybe<BusinessBaseCurrencyCodeDisconnectFieldInput>;
  brands?: InputMaybe<Array<BusinessBrandsDisconnectFieldInput>>;
  businessCurrencyConversionFees?: InputMaybe<BusinessBusinessCurrencyConversionFeesDisconnectFieldInput>;
  businessCurrencyConversionMarkups?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsDisconnectFieldInput>>;
  businessDocuments?: InputMaybe<Array<BusinessBusinessDocumentsDisconnectFieldInput>>;
  businessOwners?: InputMaybe<Array<BusinessBusinessOwnersDisconnectFieldInput>>;
  businessType?: InputMaybe<BusinessBusinessTypeDisconnectFieldInput>;
  businessWallets?: InputMaybe<Array<BusinessBusinessWalletsDisconnectFieldInput>>;
  createdBy?: InputMaybe<BusinessCreatedByDisconnectFieldInput>;
  merchant?: InputMaybe<BusinessMerchantDisconnectFieldInput>;
  solutionsNeeded?: InputMaybe<BusinessSolutionsNeededDisconnectFieldInput>;
  targetMarkets?: InputMaybe<Array<BusinessTargetMarketsDisconnectFieldInput>>;
  teams?: InputMaybe<Array<BusinessTeamsDisconnectFieldInput>>;
  updatedBy?: InputMaybe<BusinessUpdatedByDisconnectFieldInput>;
};

export type BusinessDocument = {
  __typename?: 'BusinessDocument';
  business: Business;
  businessAggregate?: Maybe<BusinessDocumentBusinessBusinessAggregationSelection>;
  businessConnection: BusinessDocumentBusinessConnection;
  createdAt: Scalars['DateTime'];
  createdBy: User;
  createdByConnection: BusinessDocumentCreatedByConnection;
  id: Scalars['ID'];
  isDeleted: Scalars['Boolean'];
  name?: Maybe<Scalars['String']>;
  type: BusinessDocumentTypeEnum;
  updatedAt: Scalars['DateTime'];
  updatedBy: User;
  updatedByConnection: BusinessDocumentUpdatedByConnection;
  url: Scalars['String'];
};


export type BusinessDocumentBusinessArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessDocumentBusinessAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessDocumentBusinessConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessDocumentBusinessConnectionSort>>;
  where?: InputMaybe<BusinessDocumentBusinessConnectionWhere>;
};


export type BusinessDocumentCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessDocumentCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessDocumentCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessDocumentCreatedByConnectionWhere>;
};


export type BusinessDocumentUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessDocumentUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessDocumentUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessDocumentUpdatedByConnectionWhere>;
};

export type BusinessDocumentAggregateSelection = {
  __typename?: 'BusinessDocumentAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  url: StringAggregateSelectionNonNullable;
};

export type BusinessDocumentBusinessAggregateInput = {
  AND?: InputMaybe<Array<BusinessDocumentBusinessAggregateInput>>;
  NOT?: InputMaybe<BusinessDocumentBusinessAggregateInput>;
  OR?: InputMaybe<Array<BusinessDocumentBusinessAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessDocumentBusinessNodeAggregationWhereInput>;
};

export type BusinessDocumentBusinessBusinessAggregationSelection = {
  __typename?: 'BusinessDocumentBusinessBusinessAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessDocumentBusinessBusinessNodeAggregateSelection>;
};

export type BusinessDocumentBusinessBusinessNodeAggregateSelection = {
  __typename?: 'BusinessDocumentBusinessBusinessNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BusinessDocumentBusinessConnectFieldInput = {
  connect?: InputMaybe<BusinessConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type BusinessDocumentBusinessConnectOrCreateFieldInput = {
  onCreate: BusinessDocumentBusinessConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type BusinessDocumentBusinessConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type BusinessDocumentBusinessConnection = {
  __typename?: 'BusinessDocumentBusinessConnection';
  edges: Array<BusinessDocumentBusinessRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessDocumentBusinessConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type BusinessDocumentBusinessConnectionWhere = {
  AND?: InputMaybe<Array<BusinessDocumentBusinessConnectionWhere>>;
  NOT?: InputMaybe<BusinessDocumentBusinessConnectionWhere>;
  OR?: InputMaybe<Array<BusinessDocumentBusinessConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type BusinessDocumentBusinessCreateFieldInput = {
  node: BusinessCreateInput;
};

export type BusinessDocumentBusinessDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BusinessDocumentBusinessConnectionWhere>;
};

export type BusinessDocumentBusinessDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<BusinessDocumentBusinessConnectionWhere>;
};

export type BusinessDocumentBusinessFieldInput = {
  connect?: InputMaybe<BusinessDocumentBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessDocumentBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessDocumentBusinessCreateFieldInput>;
};

export type BusinessDocumentBusinessNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessDocumentBusinessNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessDocumentBusinessNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessDocumentBusinessNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessDocumentBusinessRelationship = {
  __typename?: 'BusinessDocumentBusinessRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type BusinessDocumentBusinessUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type BusinessDocumentBusinessUpdateFieldInput = {
  connect?: InputMaybe<BusinessDocumentBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessDocumentBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessDocumentBusinessCreateFieldInput>;
  delete?: InputMaybe<BusinessDocumentBusinessDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessDocumentBusinessDisconnectFieldInput>;
  update?: InputMaybe<BusinessDocumentBusinessUpdateConnectionInput>;
  where?: InputMaybe<BusinessDocumentBusinessConnectionWhere>;
};

export type BusinessDocumentConnectInput = {
  business?: InputMaybe<BusinessDocumentBusinessConnectFieldInput>;
  createdBy?: InputMaybe<BusinessDocumentCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessDocumentUpdatedByConnectFieldInput>;
};

export type BusinessDocumentConnectOrCreateInput = {
  business?: InputMaybe<BusinessDocumentBusinessConnectOrCreateFieldInput>;
};

export type BusinessDocumentConnectOrCreateWhere = {
  node: BusinessDocumentUniqueWhere;
};

export type BusinessDocumentConnectWhere = {
  node: BusinessDocumentWhere;
};

export type BusinessDocumentCreateInput = {
  business?: InputMaybe<BusinessDocumentBusinessFieldInput>;
  createdBy?: InputMaybe<BusinessDocumentCreatedByFieldInput>;
  isDeleted?: Scalars['Boolean'];
  name?: InputMaybe<Scalars['String']>;
  type: BusinessDocumentTypeEnum;
  updatedBy?: InputMaybe<BusinessDocumentUpdatedByFieldInput>;
  url: Scalars['String'];
};

export type BusinessDocumentCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessDocumentCreatedByConnection = {
  __typename?: 'BusinessDocumentCreatedByConnection';
  edges: Array<BusinessDocumentCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessDocumentCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessDocumentCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessDocumentCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessDocumentCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessDocumentCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessDocumentCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessDocumentCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessDocumentCreatedByConnectionWhere>;
};

export type BusinessDocumentCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessDocumentCreatedByConnectionWhere>;
};

export type BusinessDocumentCreatedByFieldInput = {
  connect?: InputMaybe<BusinessDocumentCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessDocumentCreatedByCreateFieldInput>;
};

export type BusinessDocumentCreatedByRelationship = {
  __typename?: 'BusinessDocumentCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessDocumentCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessDocumentCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessDocumentCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessDocumentCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessDocumentCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessDocumentCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessDocumentCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessDocumentCreatedByConnectionWhere>;
};

export type BusinessDocumentDeleteInput = {
  business?: InputMaybe<BusinessDocumentBusinessDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessDocumentCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessDocumentUpdatedByDeleteFieldInput>;
};

export type BusinessDocumentDisconnectInput = {
  business?: InputMaybe<BusinessDocumentBusinessDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessDocumentCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessDocumentUpdatedByDisconnectFieldInput>;
};

export type BusinessDocumentEdge = {
  __typename?: 'BusinessDocumentEdge';
  cursor: Scalars['String'];
  node: BusinessDocument;
};

export type BusinessDocumentOnCreateInput = {
  isDeleted?: Scalars['Boolean'];
  name?: InputMaybe<Scalars['String']>;
  type: BusinessDocumentTypeEnum;
  url: Scalars['String'];
};

export type BusinessDocumentOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessDocumentSort objects to sort BusinessDocuments by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessDocumentSort>>;
};

export type BusinessDocumentRelationInput = {
  business?: InputMaybe<BusinessDocumentBusinessCreateFieldInput>;
  createdBy?: InputMaybe<BusinessDocumentCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessDocumentUpdatedByCreateFieldInput>;
};

/** Fields to sort BusinessDocuments by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessDocumentSort object. */
export type BusinessDocumentSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isDeleted?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  type?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  url?: InputMaybe<SortDirection>;
};

export enum BusinessDocumentTypeEnum {
  BankStatement = 'BANK_STATEMENT',
  BusinessAddressProof = 'BUSINESS_ADDRESS_PROOF',
  IncorporationCertificate = 'INCORPORATION_CERTIFICATE',
  MemorandumArticleOfAssociation = 'MEMORANDUM_ARTICLE_OF_ASSOCIATION',
  Other = 'OTHER',
  PowerOfAttorney = 'POWER_OF_ATTORNEY',
  ShareHolderCertificate = 'SHARE_HOLDER_CERTIFICATE'
}

export type BusinessDocumentUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessDocumentUpdateInput = {
  business?: InputMaybe<BusinessDocumentBusinessUpdateFieldInput>;
  createdBy?: InputMaybe<BusinessDocumentCreatedByUpdateFieldInput>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<BusinessDocumentTypeEnum>;
  updatedBy?: InputMaybe<BusinessDocumentUpdatedByUpdateFieldInput>;
  url?: InputMaybe<Scalars['String']>;
};

export type BusinessDocumentUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessDocumentUpdatedByConnection = {
  __typename?: 'BusinessDocumentUpdatedByConnection';
  edges: Array<BusinessDocumentUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessDocumentUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessDocumentUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessDocumentUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessDocumentUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessDocumentUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessDocumentUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessDocumentUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessDocumentUpdatedByConnectionWhere>;
};

export type BusinessDocumentUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessDocumentUpdatedByConnectionWhere>;
};

export type BusinessDocumentUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessDocumentUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessDocumentUpdatedByCreateFieldInput>;
};

export type BusinessDocumentUpdatedByRelationship = {
  __typename?: 'BusinessDocumentUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessDocumentUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessDocumentUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessDocumentUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessDocumentUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessDocumentUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessDocumentUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessDocumentUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessDocumentUpdatedByConnectionWhere>;
};

export type BusinessDocumentWhere = {
  AND?: InputMaybe<Array<BusinessDocumentWhere>>;
  NOT?: InputMaybe<BusinessDocumentWhere>;
  OR?: InputMaybe<Array<BusinessDocumentWhere>>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessDocumentBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessDocumentBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessDocumentBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessDocumentCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessDocumentCreatedByConnectionWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<BusinessDocumentTypeEnum>;
  type_IN?: InputMaybe<Array<BusinessDocumentTypeEnum>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessDocumentUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessDocumentUpdatedByConnectionWhere>;
  url?: InputMaybe<Scalars['String']>;
  url_CONTAINS?: InputMaybe<Scalars['String']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']>;
  url_IN?: InputMaybe<Array<Scalars['String']>>;
  url_MATCHES?: InputMaybe<Scalars['String']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessDocumentsConnection = {
  __typename?: 'BusinessDocumentsConnection';
  edges: Array<BusinessDocumentEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessEdge = {
  __typename?: 'BusinessEdge';
  cursor: Scalars['String'];
  node: Business;
};

export type BusinessMerchantAggregateInput = {
  AND?: InputMaybe<Array<BusinessMerchantAggregateInput>>;
  NOT?: InputMaybe<BusinessMerchantAggregateInput>;
  OR?: InputMaybe<Array<BusinessMerchantAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessMerchantNodeAggregationWhereInput>;
};

export type BusinessMerchantConnectFieldInput = {
  connect?: InputMaybe<MerchantConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<MerchantConnectWhere>;
};

export type BusinessMerchantConnectOrCreateFieldInput = {
  onCreate: BusinessMerchantConnectOrCreateFieldInputOnCreate;
  where: MerchantConnectOrCreateWhere;
};

export type BusinessMerchantConnectOrCreateFieldInputOnCreate = {
  node: MerchantOnCreateInput;
};

export type BusinessMerchantConnection = {
  __typename?: 'BusinessMerchantConnection';
  edges: Array<BusinessMerchantRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessMerchantConnectionSort = {
  node?: InputMaybe<MerchantSort>;
};

export type BusinessMerchantConnectionWhere = {
  AND?: InputMaybe<Array<BusinessMerchantConnectionWhere>>;
  NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  OR?: InputMaybe<Array<BusinessMerchantConnectionWhere>>;
  node?: InputMaybe<MerchantWhere>;
};

export type BusinessMerchantCreateFieldInput = {
  node: MerchantCreateInput;
};

export type BusinessMerchantDeleteFieldInput = {
  delete?: InputMaybe<MerchantDeleteInput>;
  where?: InputMaybe<BusinessMerchantConnectionWhere>;
};

export type BusinessMerchantDisconnectFieldInput = {
  disconnect?: InputMaybe<MerchantDisconnectInput>;
  where?: InputMaybe<BusinessMerchantConnectionWhere>;
};

export type BusinessMerchantFieldInput = {
  connect?: InputMaybe<BusinessMerchantConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessMerchantConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessMerchantCreateFieldInput>;
};

export type BusinessMerchantMerchantAggregationSelection = {
  __typename?: 'BusinessMerchantMerchantAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessMerchantMerchantNodeAggregateSelection>;
};

export type BusinessMerchantMerchantNodeAggregateSelection = {
  __typename?: 'BusinessMerchantMerchantNodeAggregateSelection';
  apiKey: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  lastName: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
};

export type BusinessMerchantNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessMerchantNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessMerchantNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessMerchantNodeAggregationWhereInput>>;
  apiKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  apiKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessMerchantRelationship = {
  __typename?: 'BusinessMerchantRelationship';
  cursor: Scalars['String'];
  node: Merchant;
};

export type BusinessMerchantUpdateConnectionInput = {
  node?: InputMaybe<MerchantUpdateInput>;
};

export type BusinessMerchantUpdateFieldInput = {
  connect?: InputMaybe<BusinessMerchantConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessMerchantConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessMerchantCreateFieldInput>;
  delete?: InputMaybe<BusinessMerchantDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessMerchantDisconnectFieldInput>;
  update?: InputMaybe<BusinessMerchantUpdateConnectionInput>;
  where?: InputMaybe<BusinessMerchantConnectionWhere>;
};

export type BusinessOnCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  nickname: Scalars['String'];
  phoneContact?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact?: InputMaybe<Scalars['String']>;
  status?: BusinessStatus;
  targetRegions: Array<MarketRegionsType>;
  telegramContact?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
};

export type BusinessOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_AdjustmentsparentBusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_Conversationsbusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_CurrencyExchangeparentBusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_DailyCommissionVolumeparentBusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_DailyDepositVolumeparentBusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_DailyWithdrawalVolumeparentBusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_DepositsparentBusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_LedgersparentBusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOptions_Remote_Rel_WithdrawalsparentBusiness = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSort objects to sort Businesses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSort>>;
};

export type BusinessOwner = {
  __typename?: 'BusinessOwner';
  address?: Maybe<Scalars['String']>;
  business: Business;
  businessAggregate?: Maybe<BusinessOwnerBusinessBusinessAggregationSelection>;
  businessConnection: BusinessOwnerBusinessConnection;
  contactNumber?: Maybe<Scalars['String']>;
  /**
   *  personalDocuments: [PersonalDocument!]!
   * @relationship(type: "HAS_DOCUMENTS", direction: IN)
   */
  createdAt: Scalars['DateTime'];
  dateOfBirth?: Maybe<Scalars['DateTime']>;
  dateOfIncorporation?: Maybe<Scalars['DateTime']>;
  designation?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  organisationOwnerName?: Maybe<Scalars['String']>;
  organisationType?: Maybe<OrganisationTypeEnum>;
  ownerType: BusinessOwnerType;
  passportNumber?: Maybe<Scalars['String']>;
  percentage: Scalars['Float'];
  placeOfIncorporation?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
};


export type BusinessOwnerBusinessArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessOwnerBusinessAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessOwnerBusinessConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessOwnerBusinessConnectionSort>>;
  where?: InputMaybe<BusinessOwnerBusinessConnectionWhere>;
};

export type BusinessOwnerAggregateSelection = {
  __typename?: 'BusinessOwnerAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  designation: StringAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNullable;
  organisationOwnerName: StringAggregateSelectionNullable;
  passportNumber: StringAggregateSelectionNullable;
  percentage: FloatAggregateSelectionNonNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessOwnerBusinessAggregateInput = {
  AND?: InputMaybe<Array<BusinessOwnerBusinessAggregateInput>>;
  NOT?: InputMaybe<BusinessOwnerBusinessAggregateInput>;
  OR?: InputMaybe<Array<BusinessOwnerBusinessAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessOwnerBusinessNodeAggregationWhereInput>;
};

export type BusinessOwnerBusinessBusinessAggregationSelection = {
  __typename?: 'BusinessOwnerBusinessBusinessAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessOwnerBusinessBusinessNodeAggregateSelection>;
};

export type BusinessOwnerBusinessBusinessNodeAggregateSelection = {
  __typename?: 'BusinessOwnerBusinessBusinessNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BusinessOwnerBusinessConnectFieldInput = {
  connect?: InputMaybe<BusinessConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type BusinessOwnerBusinessConnectOrCreateFieldInput = {
  onCreate: BusinessOwnerBusinessConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type BusinessOwnerBusinessConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type BusinessOwnerBusinessConnection = {
  __typename?: 'BusinessOwnerBusinessConnection';
  edges: Array<BusinessOwnerBusinessRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessOwnerBusinessConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type BusinessOwnerBusinessConnectionWhere = {
  AND?: InputMaybe<Array<BusinessOwnerBusinessConnectionWhere>>;
  NOT?: InputMaybe<BusinessOwnerBusinessConnectionWhere>;
  OR?: InputMaybe<Array<BusinessOwnerBusinessConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type BusinessOwnerBusinessCreateFieldInput = {
  node: BusinessCreateInput;
};

export type BusinessOwnerBusinessDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BusinessOwnerBusinessConnectionWhere>;
};

export type BusinessOwnerBusinessDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<BusinessOwnerBusinessConnectionWhere>;
};

export type BusinessOwnerBusinessFieldInput = {
  connect?: InputMaybe<BusinessOwnerBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessOwnerBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessOwnerBusinessCreateFieldInput>;
};

export type BusinessOwnerBusinessNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessOwnerBusinessNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessOwnerBusinessNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessOwnerBusinessNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessOwnerBusinessRelationship = {
  __typename?: 'BusinessOwnerBusinessRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type BusinessOwnerBusinessUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type BusinessOwnerBusinessUpdateFieldInput = {
  connect?: InputMaybe<BusinessOwnerBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessOwnerBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessOwnerBusinessCreateFieldInput>;
  delete?: InputMaybe<BusinessOwnerBusinessDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessOwnerBusinessDisconnectFieldInput>;
  update?: InputMaybe<BusinessOwnerBusinessUpdateConnectionInput>;
  where?: InputMaybe<BusinessOwnerBusinessConnectionWhere>;
};

export type BusinessOwnerConnectInput = {
  business?: InputMaybe<BusinessOwnerBusinessConnectFieldInput>;
};

export type BusinessOwnerConnectOrCreateInput = {
  business?: InputMaybe<BusinessOwnerBusinessConnectOrCreateFieldInput>;
};

export type BusinessOwnerConnectOrCreateWhere = {
  node: BusinessOwnerUniqueWhere;
};

export type BusinessOwnerConnectWhere = {
  node: BusinessOwnerWhere;
};

export type BusinessOwnerCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  business?: InputMaybe<BusinessOwnerBusinessFieldInput>;
  contactNumber?: InputMaybe<Scalars['String']>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  designation?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organisationOwnerName?: InputMaybe<Scalars['String']>;
  organisationType?: InputMaybe<OrganisationTypeEnum>;
  ownerType?: BusinessOwnerType;
  passportNumber?: InputMaybe<Scalars['String']>;
  percentage?: Scalars['Float'];
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
};

export type BusinessOwnerDeleteInput = {
  business?: InputMaybe<BusinessOwnerBusinessDeleteFieldInput>;
};

export type BusinessOwnerDisconnectInput = {
  business?: InputMaybe<BusinessOwnerBusinessDisconnectFieldInput>;
};

export type BusinessOwnerEdge = {
  __typename?: 'BusinessOwnerEdge';
  cursor: Scalars['String'];
  node: BusinessOwner;
};

export type BusinessOwnerOnCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  contactNumber?: InputMaybe<Scalars['String']>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  designation?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organisationOwnerName?: InputMaybe<Scalars['String']>;
  organisationType?: InputMaybe<OrganisationTypeEnum>;
  ownerType?: BusinessOwnerType;
  passportNumber?: InputMaybe<Scalars['String']>;
  percentage?: Scalars['Float'];
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
};

export type BusinessOwnerOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessOwnerSort objects to sort BusinessOwners by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessOwnerSort>>;
};

export type BusinessOwnerRelationInput = {
  business?: InputMaybe<BusinessOwnerBusinessCreateFieldInput>;
};

/** Fields to sort BusinessOwners by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessOwnerSort object. */
export type BusinessOwnerSort = {
  address?: InputMaybe<SortDirection>;
  contactNumber?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  dateOfBirth?: InputMaybe<SortDirection>;
  dateOfIncorporation?: InputMaybe<SortDirection>;
  designation?: InputMaybe<SortDirection>;
  email?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  organisationOwnerName?: InputMaybe<SortDirection>;
  organisationType?: InputMaybe<SortDirection>;
  ownerType?: InputMaybe<SortDirection>;
  passportNumber?: InputMaybe<SortDirection>;
  percentage?: InputMaybe<SortDirection>;
  placeOfIncorporation?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export enum BusinessOwnerType {
  Individual = 'INDIVIDUAL',
  Organisation = 'ORGANISATION'
}

export type BusinessOwnerUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessOwnerUpdateInput = {
  address?: InputMaybe<Scalars['String']>;
  business?: InputMaybe<BusinessOwnerBusinessUpdateFieldInput>;
  contactNumber?: InputMaybe<Scalars['String']>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  designation?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organisationOwnerName?: InputMaybe<Scalars['String']>;
  organisationType?: InputMaybe<OrganisationTypeEnum>;
  ownerType?: InputMaybe<BusinessOwnerType>;
  passportNumber?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  percentage_ADD?: InputMaybe<Scalars['Float']>;
  percentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  percentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  percentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
};

export type BusinessOwnerWhere = {
  AND?: InputMaybe<Array<BusinessOwnerWhere>>;
  NOT?: InputMaybe<BusinessOwnerWhere>;
  OR?: InputMaybe<Array<BusinessOwnerWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessOwnerBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessOwnerBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessOwnerBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfBirth_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  designation?: InputMaybe<Scalars['String']>;
  designation_CONTAINS?: InputMaybe<Scalars['String']>;
  designation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  designation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  designation_MATCHES?: InputMaybe<Scalars['String']>;
  designation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  organisationOwnerName?: InputMaybe<Scalars['String']>;
  organisationOwnerName_CONTAINS?: InputMaybe<Scalars['String']>;
  organisationOwnerName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  organisationOwnerName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  organisationOwnerName_MATCHES?: InputMaybe<Scalars['String']>;
  organisationOwnerName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  organisationType?: InputMaybe<OrganisationTypeEnum>;
  organisationType_IN?: InputMaybe<Array<InputMaybe<OrganisationTypeEnum>>>;
  ownerType?: InputMaybe<BusinessOwnerType>;
  ownerType_IN?: InputMaybe<Array<BusinessOwnerType>>;
  passportNumber?: InputMaybe<Scalars['String']>;
  passportNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  passportNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  passportNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  passportNumber_MATCHES?: InputMaybe<Scalars['String']>;
  passportNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  percentage_GT?: InputMaybe<Scalars['Float']>;
  percentage_GTE?: InputMaybe<Scalars['Float']>;
  percentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  percentage_LT?: InputMaybe<Scalars['Float']>;
  percentage_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessOwnersConnection = {
  __typename?: 'BusinessOwnersConnection';
  edges: Array<BusinessOwnerEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessRelationInput = {
  baseCurrencyCode?: InputMaybe<BusinessBaseCurrencyCodeCreateFieldInput>;
  brands?: InputMaybe<Array<BusinessBrandsCreateFieldInput>>;
  businessCurrencyConversionFees?: InputMaybe<BusinessBusinessCurrencyConversionFeesCreateFieldInput>;
  businessCurrencyConversionMarkups?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsCreateFieldInput>>;
  businessDocuments?: InputMaybe<Array<BusinessBusinessDocumentsCreateFieldInput>>;
  businessOwners?: InputMaybe<Array<BusinessBusinessOwnersCreateFieldInput>>;
  businessType?: InputMaybe<BusinessBusinessTypeCreateFieldInput>;
  businessWallets?: InputMaybe<Array<BusinessBusinessWalletsCreateFieldInput>>;
  createdBy?: InputMaybe<BusinessCreatedByCreateFieldInput>;
  merchant?: InputMaybe<BusinessMerchantCreateFieldInput>;
  solutionsNeeded?: InputMaybe<BusinessSolutionsNeededCreateFieldInput>;
  targetMarkets?: InputMaybe<Array<BusinessTargetMarketsCreateFieldInput>>;
  teams?: InputMaybe<Array<BusinessTeamsCreateFieldInput>>;
  updatedBy?: InputMaybe<BusinessUpdatedByCreateFieldInput>;
};

export type BusinessSolution = {
  __typename?: 'BusinessSolution';
  alternateMethod?: Maybe<AlternateMethodSolution>;
  alternateMethodAggregate?: Maybe<BusinessSolutionAlternateMethodSolutionAlternateMethodAggregationSelection>;
  alternateMethodConnection: BusinessSolutionAlternateMethodConnection;
  bankWire?: Maybe<BankWireSolution>;
  bankWireAggregate?: Maybe<BusinessSolutionBankWireSolutionBankWireAggregationSelection>;
  bankWireConnection: BusinessSolutionBankWireConnection;
  business: Business;
  businessAggregate?: Maybe<BusinessSolutionBusinessBusinessAggregationSelection>;
  businessConnection: BusinessSolutionBusinessConnection;
  createdAt: Scalars['DateTime'];
  creditCardProcessing?: Maybe<CreditCartdProcessingSolution>;
  creditCardProcessingAggregate?: Maybe<BusinessSolutionCreditCartdProcessingSolutionCreditCardProcessingAggregationSelection>;
  creditCardProcessingConnection: BusinessSolutionCreditCardProcessingConnection;
  cryptoCurrency?: Maybe<CryptoCurrencySolution>;
  cryptoCurrencyAggregate?: Maybe<BusinessSolutionCryptoCurrencySolutionCryptoCurrencyAggregationSelection>;
  cryptoCurrencyConnection: BusinessSolutionCryptoCurrencyConnection;
  id: Scalars['ID'];
  updatedAt: Scalars['DateTime'];
};


export type BusinessSolutionAlternateMethodArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<AlternateMethodSolutionOptions>;
  where?: InputMaybe<AlternateMethodSolutionWhere>;
};


export type BusinessSolutionAlternateMethodAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<AlternateMethodSolutionWhere>;
};


export type BusinessSolutionAlternateMethodConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessSolutionAlternateMethodConnectionSort>>;
  where?: InputMaybe<BusinessSolutionAlternateMethodConnectionWhere>;
};


export type BusinessSolutionBankWireArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BankWireSolutionOptions>;
  where?: InputMaybe<BankWireSolutionWhere>;
};


export type BusinessSolutionBankWireAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BankWireSolutionWhere>;
};


export type BusinessSolutionBankWireConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessSolutionBankWireConnectionSort>>;
  where?: InputMaybe<BusinessSolutionBankWireConnectionWhere>;
};


export type BusinessSolutionBusinessArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessSolutionBusinessAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessSolutionBusinessConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessSolutionBusinessConnectionSort>>;
  where?: InputMaybe<BusinessSolutionBusinessConnectionWhere>;
};


export type BusinessSolutionCreditCardProcessingArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CreditCartdProcessingSolutionOptions>;
  where?: InputMaybe<CreditCartdProcessingSolutionWhere>;
};


export type BusinessSolutionCreditCardProcessingAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CreditCartdProcessingSolutionWhere>;
};


export type BusinessSolutionCreditCardProcessingConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessSolutionCreditCardProcessingConnectionSort>>;
  where?: InputMaybe<BusinessSolutionCreditCardProcessingConnectionWhere>;
};


export type BusinessSolutionCryptoCurrencyArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CryptoCurrencySolutionOptions>;
  where?: InputMaybe<CryptoCurrencySolutionWhere>;
};


export type BusinessSolutionCryptoCurrencyAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CryptoCurrencySolutionWhere>;
};


export type BusinessSolutionCryptoCurrencyConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessSolutionCryptoCurrencyConnectionSort>>;
  where?: InputMaybe<BusinessSolutionCryptoCurrencyConnectionWhere>;
};

export type BusinessSolutionAggregateSelection = {
  __typename?: 'BusinessSolutionAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessSolutionAlternateMethodAggregateInput = {
  AND?: InputMaybe<Array<BusinessSolutionAlternateMethodAggregateInput>>;
  NOT?: InputMaybe<BusinessSolutionAlternateMethodAggregateInput>;
  OR?: InputMaybe<Array<BusinessSolutionAlternateMethodAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessSolutionAlternateMethodNodeAggregationWhereInput>;
};

export type BusinessSolutionAlternateMethodConnectFieldInput = {
  connect?: InputMaybe<AlternateMethodSolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<AlternateMethodSolutionConnectWhere>;
};

export type BusinessSolutionAlternateMethodConnectOrCreateFieldInput = {
  onCreate: BusinessSolutionAlternateMethodConnectOrCreateFieldInputOnCreate;
  where: AlternateMethodSolutionConnectOrCreateWhere;
};

export type BusinessSolutionAlternateMethodConnectOrCreateFieldInputOnCreate = {
  node: AlternateMethodSolutionOnCreateInput;
};

export type BusinessSolutionAlternateMethodConnection = {
  __typename?: 'BusinessSolutionAlternateMethodConnection';
  edges: Array<BusinessSolutionAlternateMethodRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessSolutionAlternateMethodConnectionSort = {
  node?: InputMaybe<AlternateMethodSolutionSort>;
};

export type BusinessSolutionAlternateMethodConnectionWhere = {
  AND?: InputMaybe<Array<BusinessSolutionAlternateMethodConnectionWhere>>;
  NOT?: InputMaybe<BusinessSolutionAlternateMethodConnectionWhere>;
  OR?: InputMaybe<Array<BusinessSolutionAlternateMethodConnectionWhere>>;
  node?: InputMaybe<AlternateMethodSolutionWhere>;
};

export type BusinessSolutionAlternateMethodCreateFieldInput = {
  node: AlternateMethodSolutionCreateInput;
};

export type BusinessSolutionAlternateMethodDeleteFieldInput = {
  delete?: InputMaybe<AlternateMethodSolutionDeleteInput>;
  where?: InputMaybe<BusinessSolutionAlternateMethodConnectionWhere>;
};

export type BusinessSolutionAlternateMethodDisconnectFieldInput = {
  disconnect?: InputMaybe<AlternateMethodSolutionDisconnectInput>;
  where?: InputMaybe<BusinessSolutionAlternateMethodConnectionWhere>;
};

export type BusinessSolutionAlternateMethodFieldInput = {
  connect?: InputMaybe<BusinessSolutionAlternateMethodConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionAlternateMethodConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionAlternateMethodCreateFieldInput>;
};

export type BusinessSolutionAlternateMethodNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessSolutionAlternateMethodNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessSolutionAlternateMethodNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessSolutionAlternateMethodNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  volume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  volume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  volume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  volume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  volume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  volume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  volume_MAX_GT?: InputMaybe<Scalars['Float']>;
  volume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  volume_MAX_LT?: InputMaybe<Scalars['Float']>;
  volume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  volume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  volume_MIN_GT?: InputMaybe<Scalars['Float']>;
  volume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  volume_MIN_LT?: InputMaybe<Scalars['Float']>;
  volume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  volume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  volume_SUM_GT?: InputMaybe<Scalars['Float']>;
  volume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  volume_SUM_LT?: InputMaybe<Scalars['Float']>;
  volume_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessSolutionAlternateMethodRelationship = {
  __typename?: 'BusinessSolutionAlternateMethodRelationship';
  cursor: Scalars['String'];
  node: AlternateMethodSolution;
};

export type BusinessSolutionAlternateMethodSolutionAlternateMethodAggregationSelection = {
  __typename?: 'BusinessSolutionAlternateMethodSolutionAlternateMethodAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessSolutionAlternateMethodSolutionAlternateMethodNodeAggregateSelection>;
};

export type BusinessSolutionAlternateMethodSolutionAlternateMethodNodeAggregateSelection = {
  __typename?: 'BusinessSolutionAlternateMethodSolutionAlternateMethodNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  volume: FloatAggregateSelectionNonNullable;
};

export type BusinessSolutionAlternateMethodUpdateConnectionInput = {
  node?: InputMaybe<AlternateMethodSolutionUpdateInput>;
};

export type BusinessSolutionAlternateMethodUpdateFieldInput = {
  connect?: InputMaybe<BusinessSolutionAlternateMethodConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionAlternateMethodConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionAlternateMethodCreateFieldInput>;
  delete?: InputMaybe<BusinessSolutionAlternateMethodDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessSolutionAlternateMethodDisconnectFieldInput>;
  update?: InputMaybe<BusinessSolutionAlternateMethodUpdateConnectionInput>;
  where?: InputMaybe<BusinessSolutionAlternateMethodConnectionWhere>;
};

export type BusinessSolutionBankWireAggregateInput = {
  AND?: InputMaybe<Array<BusinessSolutionBankWireAggregateInput>>;
  NOT?: InputMaybe<BusinessSolutionBankWireAggregateInput>;
  OR?: InputMaybe<Array<BusinessSolutionBankWireAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessSolutionBankWireNodeAggregationWhereInput>;
};

export type BusinessSolutionBankWireConnectFieldInput = {
  connect?: InputMaybe<BankWireSolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BankWireSolutionConnectWhere>;
};

export type BusinessSolutionBankWireConnectOrCreateFieldInput = {
  onCreate: BusinessSolutionBankWireConnectOrCreateFieldInputOnCreate;
  where: BankWireSolutionConnectOrCreateWhere;
};

export type BusinessSolutionBankWireConnectOrCreateFieldInputOnCreate = {
  node: BankWireSolutionOnCreateInput;
};

export type BusinessSolutionBankWireConnection = {
  __typename?: 'BusinessSolutionBankWireConnection';
  edges: Array<BusinessSolutionBankWireRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessSolutionBankWireConnectionSort = {
  node?: InputMaybe<BankWireSolutionSort>;
};

export type BusinessSolutionBankWireConnectionWhere = {
  AND?: InputMaybe<Array<BusinessSolutionBankWireConnectionWhere>>;
  NOT?: InputMaybe<BusinessSolutionBankWireConnectionWhere>;
  OR?: InputMaybe<Array<BusinessSolutionBankWireConnectionWhere>>;
  node?: InputMaybe<BankWireSolutionWhere>;
};

export type BusinessSolutionBankWireCreateFieldInput = {
  node: BankWireSolutionCreateInput;
};

export type BusinessSolutionBankWireDeleteFieldInput = {
  delete?: InputMaybe<BankWireSolutionDeleteInput>;
  where?: InputMaybe<BusinessSolutionBankWireConnectionWhere>;
};

export type BusinessSolutionBankWireDisconnectFieldInput = {
  disconnect?: InputMaybe<BankWireSolutionDisconnectInput>;
  where?: InputMaybe<BusinessSolutionBankWireConnectionWhere>;
};

export type BusinessSolutionBankWireFieldInput = {
  connect?: InputMaybe<BusinessSolutionBankWireConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionBankWireConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionBankWireCreateFieldInput>;
};

export type BusinessSolutionBankWireNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessSolutionBankWireNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessSolutionBankWireNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessSolutionBankWireNodeAggregationWhereInput>>;
  b2bDepositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  b2bDepositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  b2cWithdrawalVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  c2bDepositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessSolutionBankWireRelationship = {
  __typename?: 'BusinessSolutionBankWireRelationship';
  cursor: Scalars['String'];
  node: BankWireSolution;
};

export type BusinessSolutionBankWireSolutionBankWireAggregationSelection = {
  __typename?: 'BusinessSolutionBankWireSolutionBankWireAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessSolutionBankWireSolutionBankWireNodeAggregateSelection>;
};

export type BusinessSolutionBankWireSolutionBankWireNodeAggregateSelection = {
  __typename?: 'BusinessSolutionBankWireSolutionBankWireNodeAggregateSelection';
  b2bDepositVolume: FloatAggregateSelectionNonNullable;
  b2cWithdrawalVolume: FloatAggregateSelectionNonNullable;
  c2bDepositVolume: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
};

export type BusinessSolutionBankWireUpdateConnectionInput = {
  node?: InputMaybe<BankWireSolutionUpdateInput>;
};

export type BusinessSolutionBankWireUpdateFieldInput = {
  connect?: InputMaybe<BusinessSolutionBankWireConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionBankWireConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionBankWireCreateFieldInput>;
  delete?: InputMaybe<BusinessSolutionBankWireDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessSolutionBankWireDisconnectFieldInput>;
  update?: InputMaybe<BusinessSolutionBankWireUpdateConnectionInput>;
  where?: InputMaybe<BusinessSolutionBankWireConnectionWhere>;
};

export type BusinessSolutionBusinessAggregateInput = {
  AND?: InputMaybe<Array<BusinessSolutionBusinessAggregateInput>>;
  NOT?: InputMaybe<BusinessSolutionBusinessAggregateInput>;
  OR?: InputMaybe<Array<BusinessSolutionBusinessAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessSolutionBusinessNodeAggregationWhereInput>;
};

export type BusinessSolutionBusinessBusinessAggregationSelection = {
  __typename?: 'BusinessSolutionBusinessBusinessAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessSolutionBusinessBusinessNodeAggregateSelection>;
};

export type BusinessSolutionBusinessBusinessNodeAggregateSelection = {
  __typename?: 'BusinessSolutionBusinessBusinessNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BusinessSolutionBusinessConnectFieldInput = {
  connect?: InputMaybe<BusinessConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type BusinessSolutionBusinessConnectOrCreateFieldInput = {
  onCreate: BusinessSolutionBusinessConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type BusinessSolutionBusinessConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type BusinessSolutionBusinessConnection = {
  __typename?: 'BusinessSolutionBusinessConnection';
  edges: Array<BusinessSolutionBusinessRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessSolutionBusinessConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type BusinessSolutionBusinessConnectionWhere = {
  AND?: InputMaybe<Array<BusinessSolutionBusinessConnectionWhere>>;
  NOT?: InputMaybe<BusinessSolutionBusinessConnectionWhere>;
  OR?: InputMaybe<Array<BusinessSolutionBusinessConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type BusinessSolutionBusinessCreateFieldInput = {
  node: BusinessCreateInput;
};

export type BusinessSolutionBusinessDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BusinessSolutionBusinessConnectionWhere>;
};

export type BusinessSolutionBusinessDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<BusinessSolutionBusinessConnectionWhere>;
};

export type BusinessSolutionBusinessFieldInput = {
  connect?: InputMaybe<BusinessSolutionBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionBusinessCreateFieldInput>;
};

export type BusinessSolutionBusinessNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessSolutionBusinessNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessSolutionBusinessNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessSolutionBusinessNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessSolutionBusinessRelationship = {
  __typename?: 'BusinessSolutionBusinessRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type BusinessSolutionBusinessUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type BusinessSolutionBusinessUpdateFieldInput = {
  connect?: InputMaybe<BusinessSolutionBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionBusinessCreateFieldInput>;
  delete?: InputMaybe<BusinessSolutionBusinessDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessSolutionBusinessDisconnectFieldInput>;
  update?: InputMaybe<BusinessSolutionBusinessUpdateConnectionInput>;
  where?: InputMaybe<BusinessSolutionBusinessConnectionWhere>;
};

export type BusinessSolutionConnectInput = {
  alternateMethod?: InputMaybe<BusinessSolutionAlternateMethodConnectFieldInput>;
  bankWire?: InputMaybe<BusinessSolutionBankWireConnectFieldInput>;
  business?: InputMaybe<BusinessSolutionBusinessConnectFieldInput>;
  creditCardProcessing?: InputMaybe<BusinessSolutionCreditCardProcessingConnectFieldInput>;
  cryptoCurrency?: InputMaybe<BusinessSolutionCryptoCurrencyConnectFieldInput>;
};

export type BusinessSolutionConnectOrCreateInput = {
  alternateMethod?: InputMaybe<BusinessSolutionAlternateMethodConnectOrCreateFieldInput>;
  bankWire?: InputMaybe<BusinessSolutionBankWireConnectOrCreateFieldInput>;
  business?: InputMaybe<BusinessSolutionBusinessConnectOrCreateFieldInput>;
  creditCardProcessing?: InputMaybe<BusinessSolutionCreditCardProcessingConnectOrCreateFieldInput>;
  cryptoCurrency?: InputMaybe<BusinessSolutionCryptoCurrencyConnectOrCreateFieldInput>;
};

export type BusinessSolutionConnectOrCreateWhere = {
  node: BusinessSolutionUniqueWhere;
};

export type BusinessSolutionConnectWhere = {
  node: BusinessSolutionWhere;
};

export type BusinessSolutionCreateInput = {
  alternateMethod?: InputMaybe<BusinessSolutionAlternateMethodFieldInput>;
  bankWire?: InputMaybe<BusinessSolutionBankWireFieldInput>;
  business?: InputMaybe<BusinessSolutionBusinessFieldInput>;
  creditCardProcessing?: InputMaybe<BusinessSolutionCreditCardProcessingFieldInput>;
  cryptoCurrency?: InputMaybe<BusinessSolutionCryptoCurrencyFieldInput>;
};

export type BusinessSolutionCreditCardProcessingAggregateInput = {
  AND?: InputMaybe<Array<BusinessSolutionCreditCardProcessingAggregateInput>>;
  NOT?: InputMaybe<BusinessSolutionCreditCardProcessingAggregateInput>;
  OR?: InputMaybe<Array<BusinessSolutionCreditCardProcessingAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessSolutionCreditCardProcessingNodeAggregationWhereInput>;
};

export type BusinessSolutionCreditCardProcessingConnectFieldInput = {
  connect?: InputMaybe<CreditCartdProcessingSolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CreditCartdProcessingSolutionConnectWhere>;
};

export type BusinessSolutionCreditCardProcessingConnectOrCreateFieldInput = {
  onCreate: BusinessSolutionCreditCardProcessingConnectOrCreateFieldInputOnCreate;
  where: CreditCartdProcessingSolutionConnectOrCreateWhere;
};

export type BusinessSolutionCreditCardProcessingConnectOrCreateFieldInputOnCreate = {
  node: CreditCartdProcessingSolutionOnCreateInput;
};

export type BusinessSolutionCreditCardProcessingConnection = {
  __typename?: 'BusinessSolutionCreditCardProcessingConnection';
  edges: Array<BusinessSolutionCreditCardProcessingRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessSolutionCreditCardProcessingConnectionSort = {
  node?: InputMaybe<CreditCartdProcessingSolutionSort>;
};

export type BusinessSolutionCreditCardProcessingConnectionWhere = {
  AND?: InputMaybe<Array<BusinessSolutionCreditCardProcessingConnectionWhere>>;
  NOT?: InputMaybe<BusinessSolutionCreditCardProcessingConnectionWhere>;
  OR?: InputMaybe<Array<BusinessSolutionCreditCardProcessingConnectionWhere>>;
  node?: InputMaybe<CreditCartdProcessingSolutionWhere>;
};

export type BusinessSolutionCreditCardProcessingCreateFieldInput = {
  node: CreditCartdProcessingSolutionCreateInput;
};

export type BusinessSolutionCreditCardProcessingDeleteFieldInput = {
  delete?: InputMaybe<CreditCartdProcessingSolutionDeleteInput>;
  where?: InputMaybe<BusinessSolutionCreditCardProcessingConnectionWhere>;
};

export type BusinessSolutionCreditCardProcessingDisconnectFieldInput = {
  disconnect?: InputMaybe<CreditCartdProcessingSolutionDisconnectInput>;
  where?: InputMaybe<BusinessSolutionCreditCardProcessingConnectionWhere>;
};

export type BusinessSolutionCreditCardProcessingFieldInput = {
  connect?: InputMaybe<BusinessSolutionCreditCardProcessingConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionCreditCardProcessingConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionCreditCardProcessingCreateFieldInput>;
};

export type BusinessSolutionCreditCardProcessingNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessSolutionCreditCardProcessingNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessSolutionCreditCardProcessingNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessSolutionCreditCardProcessingNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  volume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  volume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  volume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  volume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  volume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  volume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  volume_MAX_GT?: InputMaybe<Scalars['Float']>;
  volume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  volume_MAX_LT?: InputMaybe<Scalars['Float']>;
  volume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  volume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  volume_MIN_GT?: InputMaybe<Scalars['Float']>;
  volume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  volume_MIN_LT?: InputMaybe<Scalars['Float']>;
  volume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  volume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  volume_SUM_GT?: InputMaybe<Scalars['Float']>;
  volume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  volume_SUM_LT?: InputMaybe<Scalars['Float']>;
  volume_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessSolutionCreditCardProcessingRelationship = {
  __typename?: 'BusinessSolutionCreditCardProcessingRelationship';
  cursor: Scalars['String'];
  node: CreditCartdProcessingSolution;
};

export type BusinessSolutionCreditCardProcessingUpdateConnectionInput = {
  node?: InputMaybe<CreditCartdProcessingSolutionUpdateInput>;
};

export type BusinessSolutionCreditCardProcessingUpdateFieldInput = {
  connect?: InputMaybe<BusinessSolutionCreditCardProcessingConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionCreditCardProcessingConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionCreditCardProcessingCreateFieldInput>;
  delete?: InputMaybe<BusinessSolutionCreditCardProcessingDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessSolutionCreditCardProcessingDisconnectFieldInput>;
  update?: InputMaybe<BusinessSolutionCreditCardProcessingUpdateConnectionInput>;
  where?: InputMaybe<BusinessSolutionCreditCardProcessingConnectionWhere>;
};

export type BusinessSolutionCreditCartdProcessingSolutionCreditCardProcessingAggregationSelection = {
  __typename?: 'BusinessSolutionCreditCartdProcessingSolutionCreditCardProcessingAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessSolutionCreditCartdProcessingSolutionCreditCardProcessingNodeAggregateSelection>;
};

export type BusinessSolutionCreditCartdProcessingSolutionCreditCardProcessingNodeAggregateSelection = {
  __typename?: 'BusinessSolutionCreditCartdProcessingSolutionCreditCardProcessingNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  volume: FloatAggregateSelectionNonNullable;
};

export type BusinessSolutionCryptoCurrencyAggregateInput = {
  AND?: InputMaybe<Array<BusinessSolutionCryptoCurrencyAggregateInput>>;
  NOT?: InputMaybe<BusinessSolutionCryptoCurrencyAggregateInput>;
  OR?: InputMaybe<Array<BusinessSolutionCryptoCurrencyAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessSolutionCryptoCurrencyNodeAggregationWhereInput>;
};

export type BusinessSolutionCryptoCurrencyConnectFieldInput = {
  connect?: InputMaybe<CryptoCurrencySolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CryptoCurrencySolutionConnectWhere>;
};

export type BusinessSolutionCryptoCurrencyConnectOrCreateFieldInput = {
  onCreate: BusinessSolutionCryptoCurrencyConnectOrCreateFieldInputOnCreate;
  where: CryptoCurrencySolutionConnectOrCreateWhere;
};

export type BusinessSolutionCryptoCurrencyConnectOrCreateFieldInputOnCreate = {
  node: CryptoCurrencySolutionOnCreateInput;
};

export type BusinessSolutionCryptoCurrencyConnection = {
  __typename?: 'BusinessSolutionCryptoCurrencyConnection';
  edges: Array<BusinessSolutionCryptoCurrencyRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessSolutionCryptoCurrencyConnectionSort = {
  node?: InputMaybe<CryptoCurrencySolutionSort>;
};

export type BusinessSolutionCryptoCurrencyConnectionWhere = {
  AND?: InputMaybe<Array<BusinessSolutionCryptoCurrencyConnectionWhere>>;
  NOT?: InputMaybe<BusinessSolutionCryptoCurrencyConnectionWhere>;
  OR?: InputMaybe<Array<BusinessSolutionCryptoCurrencyConnectionWhere>>;
  node?: InputMaybe<CryptoCurrencySolutionWhere>;
};

export type BusinessSolutionCryptoCurrencyCreateFieldInput = {
  node: CryptoCurrencySolutionCreateInput;
};

export type BusinessSolutionCryptoCurrencyDeleteFieldInput = {
  delete?: InputMaybe<CryptoCurrencySolutionDeleteInput>;
  where?: InputMaybe<BusinessSolutionCryptoCurrencyConnectionWhere>;
};

export type BusinessSolutionCryptoCurrencyDisconnectFieldInput = {
  disconnect?: InputMaybe<CryptoCurrencySolutionDisconnectInput>;
  where?: InputMaybe<BusinessSolutionCryptoCurrencyConnectionWhere>;
};

export type BusinessSolutionCryptoCurrencyFieldInput = {
  connect?: InputMaybe<BusinessSolutionCryptoCurrencyConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionCryptoCurrencyConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionCryptoCurrencyCreateFieldInput>;
};

export type BusinessSolutionCryptoCurrencyNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessSolutionCryptoCurrencyNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessSolutionCryptoCurrencyNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessSolutionCryptoCurrencyNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  settlementVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  settlementVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  settlementVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  settlementVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  settlementVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  settlementVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  settlementVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  settlementVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  settlementVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  settlementVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  settlementVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  settlementVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawalVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessSolutionCryptoCurrencyRelationship = {
  __typename?: 'BusinessSolutionCryptoCurrencyRelationship';
  cursor: Scalars['String'];
  node: CryptoCurrencySolution;
};

export type BusinessSolutionCryptoCurrencySolutionCryptoCurrencyAggregationSelection = {
  __typename?: 'BusinessSolutionCryptoCurrencySolutionCryptoCurrencyAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessSolutionCryptoCurrencySolutionCryptoCurrencyNodeAggregateSelection>;
};

export type BusinessSolutionCryptoCurrencySolutionCryptoCurrencyNodeAggregateSelection = {
  __typename?: 'BusinessSolutionCryptoCurrencySolutionCryptoCurrencyNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  settlementVolume: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawalVolume: FloatAggregateSelectionNonNullable;
};

export type BusinessSolutionCryptoCurrencyUpdateConnectionInput = {
  node?: InputMaybe<CryptoCurrencySolutionUpdateInput>;
};

export type BusinessSolutionCryptoCurrencyUpdateFieldInput = {
  connect?: InputMaybe<BusinessSolutionCryptoCurrencyConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionCryptoCurrencyConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionCryptoCurrencyCreateFieldInput>;
  delete?: InputMaybe<BusinessSolutionCryptoCurrencyDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessSolutionCryptoCurrencyDisconnectFieldInput>;
  update?: InputMaybe<BusinessSolutionCryptoCurrencyUpdateConnectionInput>;
  where?: InputMaybe<BusinessSolutionCryptoCurrencyConnectionWhere>;
};

export type BusinessSolutionDeleteInput = {
  alternateMethod?: InputMaybe<BusinessSolutionAlternateMethodDeleteFieldInput>;
  bankWire?: InputMaybe<BusinessSolutionBankWireDeleteFieldInput>;
  business?: InputMaybe<BusinessSolutionBusinessDeleteFieldInput>;
  creditCardProcessing?: InputMaybe<BusinessSolutionCreditCardProcessingDeleteFieldInput>;
  cryptoCurrency?: InputMaybe<BusinessSolutionCryptoCurrencyDeleteFieldInput>;
};

export type BusinessSolutionDisconnectInput = {
  alternateMethod?: InputMaybe<BusinessSolutionAlternateMethodDisconnectFieldInput>;
  bankWire?: InputMaybe<BusinessSolutionBankWireDisconnectFieldInput>;
  business?: InputMaybe<BusinessSolutionBusinessDisconnectFieldInput>;
  creditCardProcessing?: InputMaybe<BusinessSolutionCreditCardProcessingDisconnectFieldInput>;
  cryptoCurrency?: InputMaybe<BusinessSolutionCryptoCurrencyDisconnectFieldInput>;
};

export type BusinessSolutionEdge = {
  __typename?: 'BusinessSolutionEdge';
  cursor: Scalars['String'];
  node: BusinessSolution;
};

export type BusinessSolutionOnCreateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessSolutionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessSolutionSort objects to sort BusinessSolutions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessSolutionSort>>;
};

export type BusinessSolutionRelationInput = {
  alternateMethod?: InputMaybe<BusinessSolutionAlternateMethodCreateFieldInput>;
  bankWire?: InputMaybe<BusinessSolutionBankWireCreateFieldInput>;
  business?: InputMaybe<BusinessSolutionBusinessCreateFieldInput>;
  creditCardProcessing?: InputMaybe<BusinessSolutionCreditCardProcessingCreateFieldInput>;
  cryptoCurrency?: InputMaybe<BusinessSolutionCryptoCurrencyCreateFieldInput>;
};

/** Fields to sort BusinessSolutions by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessSolutionSort object. */
export type BusinessSolutionSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type BusinessSolutionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessSolutionUpdateInput = {
  alternateMethod?: InputMaybe<BusinessSolutionAlternateMethodUpdateFieldInput>;
  bankWire?: InputMaybe<BusinessSolutionBankWireUpdateFieldInput>;
  business?: InputMaybe<BusinessSolutionBusinessUpdateFieldInput>;
  creditCardProcessing?: InputMaybe<BusinessSolutionCreditCardProcessingUpdateFieldInput>;
  cryptoCurrency?: InputMaybe<BusinessSolutionCryptoCurrencyUpdateFieldInput>;
};

export type BusinessSolutionWhere = {
  AND?: InputMaybe<Array<BusinessSolutionWhere>>;
  NOT?: InputMaybe<BusinessSolutionWhere>;
  OR?: InputMaybe<Array<BusinessSolutionWhere>>;
  alternateMethod?: InputMaybe<AlternateMethodSolutionWhere>;
  alternateMethodAggregate?: InputMaybe<BusinessSolutionAlternateMethodAggregateInput>;
  alternateMethodConnection?: InputMaybe<BusinessSolutionAlternateMethodConnectionWhere>;
  alternateMethodConnection_NOT?: InputMaybe<BusinessSolutionAlternateMethodConnectionWhere>;
  alternateMethod_NOT?: InputMaybe<AlternateMethodSolutionWhere>;
  bankWire?: InputMaybe<BankWireSolutionWhere>;
  bankWireAggregate?: InputMaybe<BusinessSolutionBankWireAggregateInput>;
  bankWireConnection?: InputMaybe<BusinessSolutionBankWireConnectionWhere>;
  bankWireConnection_NOT?: InputMaybe<BusinessSolutionBankWireConnectionWhere>;
  bankWire_NOT?: InputMaybe<BankWireSolutionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessSolutionBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessSolutionBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessSolutionBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  creditCardProcessing?: InputMaybe<CreditCartdProcessingSolutionWhere>;
  creditCardProcessingAggregate?: InputMaybe<BusinessSolutionCreditCardProcessingAggregateInput>;
  creditCardProcessingConnection?: InputMaybe<BusinessSolutionCreditCardProcessingConnectionWhere>;
  creditCardProcessingConnection_NOT?: InputMaybe<BusinessSolutionCreditCardProcessingConnectionWhere>;
  creditCardProcessing_NOT?: InputMaybe<CreditCartdProcessingSolutionWhere>;
  cryptoCurrency?: InputMaybe<CryptoCurrencySolutionWhere>;
  cryptoCurrencyAggregate?: InputMaybe<BusinessSolutionCryptoCurrencyAggregateInput>;
  cryptoCurrencyConnection?: InputMaybe<BusinessSolutionCryptoCurrencyConnectionWhere>;
  cryptoCurrencyConnection_NOT?: InputMaybe<BusinessSolutionCryptoCurrencyConnectionWhere>;
  cryptoCurrency_NOT?: InputMaybe<CryptoCurrencySolutionWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessSolutionsConnection = {
  __typename?: 'BusinessSolutionsConnection';
  edges: Array<BusinessSolutionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessSolutionsNeededAggregateInput = {
  AND?: InputMaybe<Array<BusinessSolutionsNeededAggregateInput>>;
  NOT?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  OR?: InputMaybe<Array<BusinessSolutionsNeededAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessSolutionsNeededNodeAggregationWhereInput>;
};

export type BusinessSolutionsNeededConnectFieldInput = {
  connect?: InputMaybe<BusinessSolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessSolutionConnectWhere>;
};

export type BusinessSolutionsNeededConnectOrCreateFieldInput = {
  onCreate: BusinessSolutionsNeededConnectOrCreateFieldInputOnCreate;
  where: BusinessSolutionConnectOrCreateWhere;
};

export type BusinessSolutionsNeededConnectOrCreateFieldInputOnCreate = {
  node: BusinessSolutionOnCreateInput;
};

export type BusinessSolutionsNeededConnection = {
  __typename?: 'BusinessSolutionsNeededConnection';
  edges: Array<BusinessSolutionsNeededRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessSolutionsNeededConnectionSort = {
  node?: InputMaybe<BusinessSolutionSort>;
};

export type BusinessSolutionsNeededConnectionWhere = {
  AND?: InputMaybe<Array<BusinessSolutionsNeededConnectionWhere>>;
  NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  OR?: InputMaybe<Array<BusinessSolutionsNeededConnectionWhere>>;
  node?: InputMaybe<BusinessSolutionWhere>;
};

export type BusinessSolutionsNeededCreateFieldInput = {
  node: BusinessSolutionCreateInput;
};

export type BusinessSolutionsNeededDeleteFieldInput = {
  delete?: InputMaybe<BusinessSolutionDeleteInput>;
  where?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
};

export type BusinessSolutionsNeededDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessSolutionDisconnectInput>;
  where?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
};

export type BusinessSolutionsNeededFieldInput = {
  connect?: InputMaybe<BusinessSolutionsNeededConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionsNeededConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionsNeededCreateFieldInput>;
};

export type BusinessSolutionsNeededNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessSolutionsNeededNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessSolutionsNeededNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessSolutionsNeededNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessSolutionsNeededRelationship = {
  __typename?: 'BusinessSolutionsNeededRelationship';
  cursor: Scalars['String'];
  node: BusinessSolution;
};

export type BusinessSolutionsNeededUpdateConnectionInput = {
  node?: InputMaybe<BusinessSolutionUpdateInput>;
};

export type BusinessSolutionsNeededUpdateFieldInput = {
  connect?: InputMaybe<BusinessSolutionsNeededConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionsNeededConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessSolutionsNeededCreateFieldInput>;
  delete?: InputMaybe<BusinessSolutionsNeededDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessSolutionsNeededDisconnectFieldInput>;
  update?: InputMaybe<BusinessSolutionsNeededUpdateConnectionInput>;
  where?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
};

/** Fields to sort Businesses by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessSort object. */
export type BusinessSort = {
  address?: InputMaybe<SortDirection>;
  businessTypes?: InputMaybe<SortDirection>;
  contactNumber?: InputMaybe<SortDirection>;
  contactPersonEmailAddress?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  dateOfIncorporation?: InputMaybe<SortDirection>;
  depositReference?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  incorporationDetails?: InputMaybe<SortDirection>;
  logoUrl?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  nickname?: InputMaybe<SortDirection>;
  phoneContact?: InputMaybe<SortDirection>;
  placeOfIncorporation?: InputMaybe<SortDirection>;
  primaryContactPerson?: InputMaybe<SortDirection>;
  primaryContactPersonEmail?: InputMaybe<SortDirection>;
  primaryContactPersonName?: InputMaybe<SortDirection>;
  primaryContactPersonPhone?: InputMaybe<SortDirection>;
  referralPartner?: InputMaybe<SortDirection>;
  registrationNumber?: InputMaybe<SortDirection>;
  skypeContact?: InputMaybe<SortDirection>;
  status?: InputMaybe<SortDirection>;
  telegramContact?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  website?: InputMaybe<SortDirection>;
  websiteBrand?: InputMaybe<SortDirection>;
  whatsappContact?: InputMaybe<SortDirection>;
};

export enum BusinessStatus {
  Deactivated = 'DEACTIVATED',
  Incomplete = 'INCOMPLETE',
  InReview = 'IN_REVIEW',
  Rejected = 'REJECTED',
  Unverified = 'UNVERIFIED',
  Verified = 'VERIFIED'
}

export type BusinessTargetMarketsAggregateInput = {
  AND?: InputMaybe<Array<BusinessTargetMarketsAggregateInput>>;
  NOT?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  OR?: InputMaybe<Array<BusinessTargetMarketsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessTargetMarketsNodeAggregationWhereInput>;
};

export type BusinessTargetMarketsConnectFieldInput = {
  connect?: InputMaybe<Array<CountryConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CountryConnectWhere>;
};

export type BusinessTargetMarketsConnectOrCreateFieldInput = {
  onCreate: BusinessTargetMarketsConnectOrCreateFieldInputOnCreate;
  where: CountryConnectOrCreateWhere;
};

export type BusinessTargetMarketsConnectOrCreateFieldInputOnCreate = {
  node: CountryOnCreateInput;
};

export type BusinessTargetMarketsConnection = {
  __typename?: 'BusinessTargetMarketsConnection';
  edges: Array<BusinessTargetMarketsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessTargetMarketsConnectionSort = {
  node?: InputMaybe<CountrySort>;
};

export type BusinessTargetMarketsConnectionWhere = {
  AND?: InputMaybe<Array<BusinessTargetMarketsConnectionWhere>>;
  NOT?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  OR?: InputMaybe<Array<BusinessTargetMarketsConnectionWhere>>;
  node?: InputMaybe<CountryWhere>;
};

export type BusinessTargetMarketsCreateFieldInput = {
  node: CountryCreateInput;
};

export type BusinessTargetMarketsDeleteFieldInput = {
  delete?: InputMaybe<CountryDeleteInput>;
  where?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
};

export type BusinessTargetMarketsDisconnectFieldInput = {
  disconnect?: InputMaybe<CountryDisconnectInput>;
  where?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
};

export type BusinessTargetMarketsFieldInput = {
  connect?: InputMaybe<Array<BusinessTargetMarketsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessTargetMarketsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessTargetMarketsCreateFieldInput>>;
};

export type BusinessTargetMarketsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessTargetMarketsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessTargetMarketsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessTargetMarketsNodeAggregationWhereInput>>;
  code_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  code_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  code_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  code_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  code_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  code_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  code_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  code_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  code_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  code_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  code_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessTargetMarketsRelationship = {
  __typename?: 'BusinessTargetMarketsRelationship';
  cursor: Scalars['String'];
  node: Country;
};

export type BusinessTargetMarketsUpdateConnectionInput = {
  node?: InputMaybe<CountryUpdateInput>;
};

export type BusinessTargetMarketsUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessTargetMarketsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessTargetMarketsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessTargetMarketsCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessTargetMarketsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessTargetMarketsDisconnectFieldInput>>;
  update?: InputMaybe<BusinessTargetMarketsUpdateConnectionInput>;
  where?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
};

export type BusinessTeamTeamsAggregationSelection = {
  __typename?: 'BusinessTeamTeamsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessTeamTeamsNodeAggregateSelection>;
};

export type BusinessTeamTeamsNodeAggregateSelection = {
  __typename?: 'BusinessTeamTeamsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessTeamsAggregateInput = {
  AND?: InputMaybe<Array<BusinessTeamsAggregateInput>>;
  NOT?: InputMaybe<BusinessTeamsAggregateInput>;
  OR?: InputMaybe<Array<BusinessTeamsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessTeamsNodeAggregationWhereInput>;
};

export type BusinessTeamsConnectFieldInput = {
  connect?: InputMaybe<Array<TeamConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<TeamConnectWhere>;
};

export type BusinessTeamsConnectOrCreateFieldInput = {
  onCreate: BusinessTeamsConnectOrCreateFieldInputOnCreate;
  where: TeamConnectOrCreateWhere;
};

export type BusinessTeamsConnectOrCreateFieldInputOnCreate = {
  node: TeamOnCreateInput;
};

export type BusinessTeamsConnection = {
  __typename?: 'BusinessTeamsConnection';
  edges: Array<BusinessTeamsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessTeamsConnectionSort = {
  node?: InputMaybe<TeamSort>;
};

export type BusinessTeamsConnectionWhere = {
  AND?: InputMaybe<Array<BusinessTeamsConnectionWhere>>;
  NOT?: InputMaybe<BusinessTeamsConnectionWhere>;
  OR?: InputMaybe<Array<BusinessTeamsConnectionWhere>>;
  node?: InputMaybe<TeamWhere>;
};

export type BusinessTeamsCreateFieldInput = {
  node: TeamCreateInput;
};

export type BusinessTeamsDeleteFieldInput = {
  delete?: InputMaybe<TeamDeleteInput>;
  where?: InputMaybe<BusinessTeamsConnectionWhere>;
};

export type BusinessTeamsDisconnectFieldInput = {
  disconnect?: InputMaybe<TeamDisconnectInput>;
  where?: InputMaybe<BusinessTeamsConnectionWhere>;
};

export type BusinessTeamsFieldInput = {
  connect?: InputMaybe<Array<BusinessTeamsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessTeamsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessTeamsCreateFieldInput>>;
};

export type BusinessTeamsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessTeamsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessTeamsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessTeamsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessTeamsRelationship = {
  __typename?: 'BusinessTeamsRelationship';
  cursor: Scalars['String'];
  node: Team;
};

export type BusinessTeamsUpdateConnectionInput = {
  node?: InputMaybe<TeamUpdateInput>;
};

export type BusinessTeamsUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessTeamsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessTeamsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessTeamsCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessTeamsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessTeamsDisconnectFieldInput>>;
  update?: InputMaybe<BusinessTeamsUpdateConnectionInput>;
  where?: InputMaybe<BusinessTeamsConnectionWhere>;
};

export type BusinessType = {
  __typename?: 'BusinessType';
  businesses: Array<Business>;
  businessesAggregate?: Maybe<BusinessTypeBusinessBusinessesAggregationSelection>;
  businessesConnection: BusinessTypeBusinessesConnection;
  enumValue?: Maybe<BusinessTypeEnum>;
  name: Scalars['String'];
};


export type BusinessTypeBusinessesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessTypeBusinessesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessTypeBusinessesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessTypeBusinessesConnectionSort>>;
  where?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
};

export type BusinessTypeAggregateSelection = {
  __typename?: 'BusinessTypeAggregateSelection';
  count: Scalars['Int'];
  name: StringAggregateSelectionNonNullable;
};

export type BusinessTypeBusinessBusinessesAggregationSelection = {
  __typename?: 'BusinessTypeBusinessBusinessesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessTypeBusinessBusinessesNodeAggregateSelection>;
};

export type BusinessTypeBusinessBusinessesNodeAggregateSelection = {
  __typename?: 'BusinessTypeBusinessBusinessesNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BusinessTypeBusinessesAggregateInput = {
  AND?: InputMaybe<Array<BusinessTypeBusinessesAggregateInput>>;
  NOT?: InputMaybe<BusinessTypeBusinessesAggregateInput>;
  OR?: InputMaybe<Array<BusinessTypeBusinessesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessTypeBusinessesNodeAggregationWhereInput>;
};

export type BusinessTypeBusinessesConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type BusinessTypeBusinessesConnectOrCreateFieldInput = {
  onCreate: BusinessTypeBusinessesConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type BusinessTypeBusinessesConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type BusinessTypeBusinessesConnection = {
  __typename?: 'BusinessTypeBusinessesConnection';
  edges: Array<BusinessTypeBusinessesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessTypeBusinessesConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type BusinessTypeBusinessesConnectionWhere = {
  AND?: InputMaybe<Array<BusinessTypeBusinessesConnectionWhere>>;
  NOT?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
  OR?: InputMaybe<Array<BusinessTypeBusinessesConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type BusinessTypeBusinessesCreateFieldInput = {
  node: BusinessCreateInput;
};

export type BusinessTypeBusinessesDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
};

export type BusinessTypeBusinessesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
};

export type BusinessTypeBusinessesFieldInput = {
  connect?: InputMaybe<Array<BusinessTypeBusinessesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessTypeBusinessesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessTypeBusinessesCreateFieldInput>>;
};

export type BusinessTypeBusinessesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessTypeBusinessesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessTypeBusinessesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessTypeBusinessesNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessTypeBusinessesRelationship = {
  __typename?: 'BusinessTypeBusinessesRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type BusinessTypeBusinessesUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type BusinessTypeBusinessesUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessTypeBusinessesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessTypeBusinessesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessTypeBusinessesCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessTypeBusinessesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessTypeBusinessesDisconnectFieldInput>>;
  update?: InputMaybe<BusinessTypeBusinessesUpdateConnectionInput>;
  where?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
};

export type BusinessTypeConnectInput = {
  businesses?: InputMaybe<Array<BusinessTypeBusinessesConnectFieldInput>>;
};

export type BusinessTypeConnectOrCreateInput = {
  businesses?: InputMaybe<Array<BusinessTypeBusinessesConnectOrCreateFieldInput>>;
};

export type BusinessTypeConnectOrCreateWhere = {
  node: BusinessTypeUniqueWhere;
};

export type BusinessTypeConnectWhere = {
  node: BusinessTypeWhere;
};

export type BusinessTypeCreateInput = {
  businesses?: InputMaybe<BusinessTypeBusinessesFieldInput>;
  enumValue?: InputMaybe<BusinessTypeEnum>;
  name: Scalars['String'];
};

export type BusinessTypeDeleteInput = {
  businesses?: InputMaybe<Array<BusinessTypeBusinessesDeleteFieldInput>>;
};

export type BusinessTypeDisconnectInput = {
  businesses?: InputMaybe<Array<BusinessTypeBusinessesDisconnectFieldInput>>;
};

export type BusinessTypeEdge = {
  __typename?: 'BusinessTypeEdge';
  cursor: Scalars['String'];
  node: BusinessType;
};

export enum BusinessTypeEnum {
  DigitalServices = 'DIGITAL_SERVICES',
  Ecommerce = 'ECOMMERCE',
  OnlineGoods = 'ONLINE_GOODS',
  Other = 'OTHER',
  Travel = 'TRAVEL'
}

export type BusinessTypeOnCreateInput = {
  enumValue?: InputMaybe<BusinessTypeEnum>;
  name: Scalars['String'];
};

export type BusinessTypeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessTypeSort objects to sort BusinessTypes by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessTypeSort>>;
};

export type BusinessTypeRelationInput = {
  businesses?: InputMaybe<Array<BusinessTypeBusinessesCreateFieldInput>>;
};

/** Fields to sort BusinessTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessTypeSort object. */
export type BusinessTypeSort = {
  enumValue?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type BusinessTypeUniqueWhere = {
  name?: InputMaybe<Scalars['String']>;
};

export type BusinessTypeUpdateInput = {
  businesses?: InputMaybe<Array<BusinessTypeBusinessesUpdateFieldInput>>;
  enumValue?: InputMaybe<BusinessTypeEnum>;
  name?: InputMaybe<Scalars['String']>;
};

export type BusinessTypeWhere = {
  AND?: InputMaybe<Array<BusinessTypeWhere>>;
  NOT?: InputMaybe<BusinessTypeWhere>;
  OR?: InputMaybe<Array<BusinessTypeWhere>>;
  businessesAggregate?: InputMaybe<BusinessTypeBusinessesAggregateInput>;
  /** Return BusinessTypes where all of the related BusinessTypeBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
  /** Return BusinessTypes where none of the related BusinessTypeBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
  /** Return BusinessTypes where one of the related BusinessTypeBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
  /** Return BusinessTypes where some of the related BusinessTypeBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<BusinessTypeBusinessesConnectionWhere>;
  /** Return BusinessTypes where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return BusinessTypes where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return BusinessTypes where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return BusinessTypes where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  enumValue?: InputMaybe<BusinessTypeEnum>;
  enumValue_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessTypesConnection = {
  __typename?: 'BusinessTypesConnection';
  edges: Array<BusinessTypeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessUpdateInput = {
  address?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<BusinessBaseCurrencyCodeUpdateFieldInput>;
  brands?: InputMaybe<Array<BusinessBrandsUpdateFieldInput>>;
  businessCurrencyConversionFees?: InputMaybe<BusinessBusinessCurrencyConversionFeesUpdateFieldInput>;
  businessCurrencyConversionMarkups?: InputMaybe<Array<BusinessBusinessCurrencyConversionMarkupsUpdateFieldInput>>;
  businessDocuments?: InputMaybe<Array<BusinessBusinessDocumentsUpdateFieldInput>>;
  businessOwners?: InputMaybe<Array<BusinessBusinessOwnersUpdateFieldInput>>;
  businessType?: InputMaybe<BusinessBusinessTypeUpdateFieldInput>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessWallets?: InputMaybe<Array<BusinessBusinessWalletsUpdateFieldInput>>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<BusinessCreatedByUpdateFieldInput>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<BusinessMerchantUpdateFieldInput>;
  name?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_POP?: InputMaybe<Scalars['Int']>;
  requestedCurrencies_PUSH?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionsNeededUpdateFieldInput>;
  status?: InputMaybe<BusinessStatus>;
  targetMarkets?: InputMaybe<Array<BusinessTargetMarketsUpdateFieldInput>>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  teams?: InputMaybe<Array<BusinessTeamsUpdateFieldInput>>;
  telegramContact?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<BusinessUpdatedByUpdateFieldInput>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
};

export type BusinessUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessUpdatedByConnection = {
  __typename?: 'BusinessUpdatedByConnection';
  edges: Array<BusinessUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessUpdatedByConnectionWhere>;
};

export type BusinessUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessUpdatedByConnectionWhere>;
};

export type BusinessUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessUpdatedByCreateFieldInput>;
};

export type BusinessUpdatedByRelationship = {
  __typename?: 'BusinessUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessUpdatedByConnectionWhere>;
};

export type BusinessWallet = {
  __typename?: 'BusinessWallet';
  accounts: Array<Account>;
  accountsAggregate?: Maybe<BusinessWalletAccountAccountsAggregationSelection>;
  accountsConnection: BusinessWalletAccountsConnection;
  balance: Scalars['Float'];
  baseCommission?: Maybe<BusinessWalletBaseCommission>;
  baseCommissionAggregate?: Maybe<BusinessWalletBusinessWalletBaseCommissionBaseCommissionAggregationSelection>;
  baseCommissionConnection: BusinessWalletBaseCommissionConnection;
  business: Business;
  businessAggregate?: Maybe<BusinessWalletBusinessBusinessAggregationSelection>;
  businessConnection: BusinessWalletBusinessConnection;
  createdAt: Scalars['DateTime'];
  currency?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  joiningFee?: Maybe<BusinessWalletJoiningFee>;
  joiningFeeAggregate?: Maybe<BusinessWalletBusinessWalletJoiningFeeJoiningFeeAggregationSelection>;
  joiningFeeConnection: BusinessWalletJoiningFeeConnection;
  maintenanceFee?: Maybe<BusinessWalletMaintenanceFee>;
  maintenanceFeeAggregate?: Maybe<BusinessWalletBusinessWalletMaintenanceFeeMaintenanceFeeAggregationSelection>;
  maintenanceFeeConnection: BusinessWalletMaintenanceFeeConnection;
  nickname?: Maybe<Scalars['String']>;
  overDraftLimit?: Maybe<BusinessWalletOverDraftLimit>;
  overDraftLimitAggregate?: Maybe<BusinessWalletBusinessWalletOverDraftLimitOverDraftLimitAggregationSelection>;
  overDraftLimitConnection: BusinessWalletOverDraftLimitConnection;
  payoutFee?: Maybe<BusinessWalletPayoutFee>;
  payoutFeeAggregate?: Maybe<BusinessWalletBusinessWalletPayoutFeePayoutFeeAggregationSelection>;
  payoutFeeConnection: BusinessWalletPayoutFeeConnection;
  rollingReserveFee?: Maybe<BusinessWalletRollingReserveFee>;
  rollingReserveFeeAggregate?: Maybe<BusinessWalletBusinessWalletRollingReserveFeeRollingReserveFeeAggregationSelection>;
  rollingReserveFeeConnection: BusinessWalletRollingReserveFeeConnection;
  settlementFee?: Maybe<BusinessWalletSettlementFee>;
  settlementFeeAggregate?: Maybe<BusinessWalletBusinessWalletSettlementFeeSettlementFeeAggregationSelection>;
  settlementFeeConnection: BusinessWalletSettlementFeeConnection;
  tierCommissions: Array<BusinessWalletTierCommission>;
  tierCommissionsAggregate?: Maybe<BusinessWalletBusinessWalletTierCommissionTierCommissionsAggregationSelection>;
  tierCommissionsConnection: BusinessWalletTierCommissionsConnection;
  updatedAt: Scalars['DateTime'];
  withdrawableRRBalance: Scalars['Float'];
};


export type BusinessWalletAccountsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<AccountOptions>;
  where?: InputMaybe<AccountWhere>;
};


export type BusinessWalletAccountsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<AccountWhere>;
};


export type BusinessWalletAccountsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletAccountsConnectionSort>>;
  where?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
};


export type BusinessWalletBaseCommissionArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletBaseCommissionOptions>;
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


export type BusinessWalletBaseCommissionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


export type BusinessWalletBaseCommissionConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletBaseCommissionConnectionSort>>;
  where?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
};


export type BusinessWalletBusinessArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessWalletBusinessAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type BusinessWalletBusinessConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletBusinessConnectionSort>>;
  where?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
};


export type BusinessWalletJoiningFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletJoiningFeeOptions>;
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


export type BusinessWalletJoiningFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


export type BusinessWalletJoiningFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletJoiningFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
};


export type BusinessWalletMaintenanceFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletMaintenanceFeeOptions>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


export type BusinessWalletMaintenanceFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


export type BusinessWalletMaintenanceFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletMaintenanceFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
};


export type BusinessWalletOverDraftLimitArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOverDraftLimitOptions>;
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


export type BusinessWalletOverDraftLimitAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


export type BusinessWalletOverDraftLimitConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletOverDraftLimitConnectionSort>>;
  where?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
};


export type BusinessWalletPayoutFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletPayoutFeeOptions>;
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


export type BusinessWalletPayoutFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


export type BusinessWalletPayoutFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletPayoutFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
};


export type BusinessWalletRollingReserveFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletRollingReserveFeeOptions>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


export type BusinessWalletRollingReserveFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


export type BusinessWalletRollingReserveFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletRollingReserveFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
};


export type BusinessWalletSettlementFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletSettlementFeeOptions>;
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


export type BusinessWalletSettlementFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


export type BusinessWalletSettlementFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletSettlementFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
};


export type BusinessWalletTierCommissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletTierCommissionOptions>;
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


export type BusinessWalletTierCommissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


export type BusinessWalletTierCommissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletTierCommissionsConnectionSort>>;
  where?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
};

export type BusinessWalletAccountAccountsAggregationSelection = {
  __typename?: 'BusinessWalletAccountAccountsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletAccountAccountsNodeAggregateSelection>;
};

export type BusinessWalletAccountAccountsNodeAggregateSelection = {
  __typename?: 'BusinessWalletAccountAccountsNodeAggregateSelection';
  accountNumber: StringAggregateSelectionNonNullable;
  balance: FloatAggregateSelectionNonNullable;
  bankAddress: StringAggregateSelectionNullable;
  bankCharges: FloatAggregateSelectionNonNullable;
  beneficiaryAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletAccountsAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletAccountsAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletAccountsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletAccountsNodeAggregationWhereInput>;
};

export type BusinessWalletAccountsConnectFieldInput = {
  connect?: InputMaybe<Array<AccountConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<AccountConnectWhere>;
};

export type BusinessWalletAccountsConnectOrCreateFieldInput = {
  onCreate: BusinessWalletAccountsConnectOrCreateFieldInputOnCreate;
  where: AccountConnectOrCreateWhere;
};

export type BusinessWalletAccountsConnectOrCreateFieldInputOnCreate = {
  node: AccountOnCreateInput;
};

export type BusinessWalletAccountsConnection = {
  __typename?: 'BusinessWalletAccountsConnection';
  edges: Array<BusinessWalletAccountsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletAccountsConnectionSort = {
  node?: InputMaybe<AccountSort>;
};

export type BusinessWalletAccountsConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletAccountsConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletAccountsConnectionWhere>>;
  node?: InputMaybe<AccountWhere>;
};

export type BusinessWalletAccountsCreateFieldInput = {
  node: AccountCreateInput;
};

export type BusinessWalletAccountsDeleteFieldInput = {
  delete?: InputMaybe<AccountDeleteInput>;
  where?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
};

export type BusinessWalletAccountsDisconnectFieldInput = {
  disconnect?: InputMaybe<AccountDisconnectInput>;
  where?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
};

export type BusinessWalletAccountsFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletAccountsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessWalletAccountsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessWalletAccountsCreateFieldInput>>;
};

export type BusinessWalletAccountsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletAccountsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletAccountsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletAccountsNodeAggregationWhereInput>>;
  accountNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  accountNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankCharges_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCharges_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_MAX_LTE?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_MIN_LTE?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_GT?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_GTE?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_LT?: InputMaybe<Scalars['Float']>;
  bankCharges_SUM_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletAccountsRelationship = {
  __typename?: 'BusinessWalletAccountsRelationship';
  cursor: Scalars['String'];
  node: Account;
};

export type BusinessWalletAccountsUpdateConnectionInput = {
  node?: InputMaybe<AccountUpdateInput>;
};

export type BusinessWalletAccountsUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletAccountsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessWalletAccountsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessWalletAccountsCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessWalletAccountsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessWalletAccountsDisconnectFieldInput>>;
  update?: InputMaybe<BusinessWalletAccountsUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
};

export type BusinessWalletAggregateSelection = {
  __typename?: 'BusinessWalletAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletBaseCommission = {
  __typename?: 'BusinessWalletBaseCommission';
  b2bFee: Scalars['Float'];
  businessWallet: BusinessWallet;
  businessWalletAggregate?: Maybe<BusinessWalletBaseCommissionBusinessWalletBusinessWalletAggregationSelection>;
  businessWalletConnection: BusinessWalletBaseCommissionBusinessWalletConnection;
  c2bFee: Scalars['Float'];
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessWalletBaseCommissionCreatedByConnection;
  currency: Scalars['String'];
  defaultBaseCommission: DefaultBaseCommission;
  defaultBaseCommissionAggregate?: Maybe<BusinessWalletBaseCommissionDefaultBaseCommissionDefaultBaseCommissionAggregationSelection>;
  defaultBaseCommissionConnection: BusinessWalletBaseCommissionDefaultBaseCommissionConnection;
  id: Scalars['ID'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessWalletBaseCommissionUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessWalletBaseCommissionBusinessWalletArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletBaseCommissionBusinessWalletAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletBaseCommissionBusinessWalletConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletBaseCommissionBusinessWalletConnectionSort>>;
  where?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>;
};


export type BusinessWalletBaseCommissionCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletBaseCommissionCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletBaseCommissionCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectionWhere>;
};


export type BusinessWalletBaseCommissionDefaultBaseCommissionArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultBaseCommissionOptions>;
  where?: InputMaybe<DefaultBaseCommissionWhere>;
};


export type BusinessWalletBaseCommissionDefaultBaseCommissionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultBaseCommissionWhere>;
};


export type BusinessWalletBaseCommissionDefaultBaseCommissionConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionSort>>;
  where?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>;
};


export type BusinessWalletBaseCommissionUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletBaseCommissionUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletBaseCommissionUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectionWhere>;
};

export type BusinessWalletBaseCommissionAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletBaseCommissionNodeAggregationWhereInput>;
};

export type BusinessWalletBaseCommissionAggregateSelection = {
  __typename?: 'BusinessWalletBaseCommissionAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletBaseCommissionBusinessWalletAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionBusinessWalletAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionBusinessWalletAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletNodeAggregationWhereInput>;
};

export type BusinessWalletBaseCommissionBusinessWalletBusinessWalletAggregationSelection = {
  __typename?: 'BusinessWalletBaseCommissionBusinessWalletBusinessWalletAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBaseCommissionBusinessWalletBusinessWalletNodeAggregateSelection>;
};

export type BusinessWalletBaseCommissionBusinessWalletBusinessWalletNodeAggregateSelection = {
  __typename?: 'BusinessWalletBaseCommissionBusinessWalletBusinessWalletNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletBaseCommissionBusinessWalletConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessWalletBaseCommissionBusinessWalletConnectOrCreateFieldInput = {
  onCreate: BusinessWalletBaseCommissionBusinessWalletConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessWalletBaseCommissionBusinessWalletConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessWalletBaseCommissionBusinessWalletConnection = {
  __typename?: 'BusinessWalletBaseCommissionBusinessWalletConnection';
  edges: Array<BusinessWalletBaseCommissionBusinessWalletRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletBaseCommissionBusinessWalletConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessWalletBaseCommissionBusinessWalletConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessWalletBaseCommissionBusinessWalletCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessWalletBaseCommissionBusinessWalletDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>;
};

export type BusinessWalletBaseCommissionBusinessWalletDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>;
};

export type BusinessWalletBaseCommissionBusinessWalletFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletCreateFieldInput>;
};

export type BusinessWalletBaseCommissionBusinessWalletNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionBusinessWalletNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionBusinessWalletNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletBaseCommissionBusinessWalletRelationship = {
  __typename?: 'BusinessWalletBaseCommissionBusinessWalletRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletBaseCommissionBusinessWalletUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessWalletBaseCommissionBusinessWalletUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>;
};

export type BusinessWalletBaseCommissionConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletBaseCommissionConnectWhere>;
};

export type BusinessWalletBaseCommissionConnectInput = {
  businessWallet?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectFieldInput>;
  defaultBaseCommission?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectFieldInput>;
};

export type BusinessWalletBaseCommissionConnectOrCreateFieldInput = {
  onCreate: BusinessWalletBaseCommissionConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletBaseCommissionConnectOrCreateWhere;
};

export type BusinessWalletBaseCommissionConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletBaseCommissionOnCreateInput;
};

export type BusinessWalletBaseCommissionConnectOrCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectOrCreateFieldInput>;
  defaultBaseCommission?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectOrCreateFieldInput>;
};

export type BusinessWalletBaseCommissionConnectOrCreateWhere = {
  node: BusinessWalletBaseCommissionUniqueWhere;
};

export type BusinessWalletBaseCommissionConnectWhere = {
  node: BusinessWalletBaseCommissionWhere;
};

export type BusinessWalletBaseCommissionConnection = {
  __typename?: 'BusinessWalletBaseCommissionConnection';
  edges: Array<BusinessWalletBaseCommissionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletBaseCommissionConnectionSort = {
  node?: InputMaybe<BusinessWalletBaseCommissionSort>;
};

export type BusinessWalletBaseCommissionConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionConnectionWhere>>;
  node?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};

export type BusinessWalletBaseCommissionCreateFieldInput = {
  node: BusinessWalletBaseCommissionCreateInput;
};

export type BusinessWalletBaseCommissionCreateInput = {
  b2bFee?: Scalars['Float'];
  businessWallet?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletFieldInput>;
  c2bFee?: Scalars['Float'];
  createdBy?: InputMaybe<BusinessWalletBaseCommissionCreatedByFieldInput>;
  currency: Scalars['String'];
  defaultBaseCommission?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletBaseCommissionUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletBaseCommissionCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletBaseCommissionCreatedByConnection = {
  __typename?: 'BusinessWalletBaseCommissionCreatedByConnection';
  edges: Array<BusinessWalletBaseCommissionCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletBaseCommissionCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletBaseCommissionCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletBaseCommissionCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletBaseCommissionCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectionWhere>;
};

export type BusinessWalletBaseCommissionCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectionWhere>;
};

export type BusinessWalletBaseCommissionCreatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionCreatedByCreateFieldInput>;
};

export type BusinessWalletBaseCommissionCreatedByRelationship = {
  __typename?: 'BusinessWalletBaseCommissionCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletBaseCommissionCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletBaseCommissionCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletBaseCommissionCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletBaseCommissionCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletBaseCommissionCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectionWhere>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionDefaultBaseCommissionAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionDefaultBaseCommissionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionNodeAggregationWhereInput>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionConnectFieldInput = {
  connect?: InputMaybe<DefaultBaseCommissionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultBaseCommissionConnectWhere>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionConnectOrCreateFieldInput = {
  onCreate: BusinessWalletBaseCommissionDefaultBaseCommissionConnectOrCreateFieldInputOnCreate;
  where: DefaultBaseCommissionConnectOrCreateWhere;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionConnectOrCreateFieldInputOnCreate = {
  node: DefaultBaseCommissionOnCreateInput;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionConnection = {
  __typename?: 'BusinessWalletBaseCommissionDefaultBaseCommissionConnection';
  edges: Array<BusinessWalletBaseCommissionDefaultBaseCommissionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionConnectionSort = {
  node?: InputMaybe<DefaultBaseCommissionSort>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>>;
  node?: InputMaybe<DefaultBaseCommissionWhere>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionCreateFieldInput = {
  node: DefaultBaseCommissionCreateInput;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionDefaultBaseCommissionAggregationSelection = {
  __typename?: 'BusinessWalletBaseCommissionDefaultBaseCommissionDefaultBaseCommissionAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBaseCommissionDefaultBaseCommissionDefaultBaseCommissionNodeAggregateSelection>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionDefaultBaseCommissionNodeAggregateSelection = {
  __typename?: 'BusinessWalletBaseCommissionDefaultBaseCommissionDefaultBaseCommissionNodeAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionDeleteFieldInput = {
  delete?: InputMaybe<DefaultBaseCommissionDeleteInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultBaseCommissionDisconnectInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionCreateFieldInput>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionDefaultBaseCommissionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionDefaultBaseCommissionNodeAggregationWhereInput>>;
  b2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionRelationship = {
  __typename?: 'BusinessWalletBaseCommissionDefaultBaseCommissionRelationship';
  cursor: Scalars['String'];
  node: DefaultBaseCommission;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionUpdateConnectionInput = {
  node?: InputMaybe<DefaultBaseCommissionUpdateInput>;
};

export type BusinessWalletBaseCommissionDefaultBaseCommissionUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>;
};

export type BusinessWalletBaseCommissionDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletBaseCommissionDeleteInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
};

export type BusinessWalletBaseCommissionDeleteInput = {
  businessWallet?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessWalletBaseCommissionCreatedByDeleteFieldInput>;
  defaultBaseCommission?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletBaseCommissionUpdatedByDeleteFieldInput>;
};

export type BusinessWalletBaseCommissionDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletBaseCommissionDisconnectInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
};

export type BusinessWalletBaseCommissionDisconnectInput = {
  businessWallet?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletBaseCommissionCreatedByDisconnectFieldInput>;
  defaultBaseCommission?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletBaseCommissionUpdatedByDisconnectFieldInput>;
};

export type BusinessWalletBaseCommissionEdge = {
  __typename?: 'BusinessWalletBaseCommissionEdge';
  cursor: Scalars['String'];
  node: BusinessWalletBaseCommission;
};

export type BusinessWalletBaseCommissionFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBaseCommissionConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionCreateFieldInput>;
};

export type BusinessWalletBaseCommissionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionNodeAggregationWhereInput>>;
  b2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletBaseCommissionOnCreateInput = {
  b2bFee?: Scalars['Float'];
  c2bFee?: Scalars['Float'];
  currency: Scalars['String'];
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletBaseCommissionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletBaseCommissionSort objects to sort BusinessWalletBaseCommissions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletBaseCommissionSort>>;
};

export type BusinessWalletBaseCommissionRelationInput = {
  businessWallet?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletCreateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletBaseCommissionCreatedByCreateFieldInput>;
  defaultBaseCommission?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletBaseCommissionUpdatedByCreateFieldInput>;
};

export type BusinessWalletBaseCommissionRelationship = {
  __typename?: 'BusinessWalletBaseCommissionRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletBaseCommission;
};

/** Fields to sort BusinessWalletBaseCommissions by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletBaseCommissionSort object. */
export type BusinessWalletBaseCommissionSort = {
  b2bFee?: InputMaybe<SortDirection>;
  c2bFee?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessWalletBaseCommissionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletBaseCommissionUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletBaseCommissionUpdateInput>;
};

export type BusinessWalletBaseCommissionUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBaseCommissionConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletBaseCommissionDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletBaseCommissionDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletBaseCommissionUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
};

export type BusinessWalletBaseCommissionUpdateInput = {
  b2bFee?: InputMaybe<Scalars['Float']>;
  b2bFee_ADD?: InputMaybe<Scalars['Float']>;
  b2bFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  b2bFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  b2bFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  businessWallet?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletUpdateFieldInput>;
  c2bFee?: InputMaybe<Scalars['Float']>;
  c2bFee_ADD?: InputMaybe<Scalars['Float']>;
  c2bFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  c2bFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  c2bFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  createdBy?: InputMaybe<BusinessWalletBaseCommissionCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  defaultBaseCommission?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionUpdateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletBaseCommissionUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletBaseCommissionUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletBaseCommissionUpdatedByConnection = {
  __typename?: 'BusinessWalletBaseCommissionUpdatedByConnection';
  edges: Array<BusinessWalletBaseCommissionUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletBaseCommissionUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletBaseCommissionUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletBaseCommissionUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletBaseCommissionUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectionWhere>;
};

export type BusinessWalletBaseCommissionUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectionWhere>;
};

export type BusinessWalletBaseCommissionUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionUpdatedByCreateFieldInput>;
};

export type BusinessWalletBaseCommissionUpdatedByRelationship = {
  __typename?: 'BusinessWalletBaseCommissionUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletBaseCommissionUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletBaseCommissionUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletBaseCommissionUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletBaseCommissionUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletBaseCommissionUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectionWhere>;
};

export type BusinessWalletBaseCommissionWhere = {
  AND?: InputMaybe<Array<BusinessWalletBaseCommissionWhere>>;
  NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  OR?: InputMaybe<Array<BusinessWalletBaseCommissionWhere>>;
  b2bFee?: InputMaybe<Scalars['Float']>;
  b2bFee_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  b2bFee_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_LTE?: InputMaybe<Scalars['Float']>;
  businessWallet?: InputMaybe<BusinessWalletWhere>;
  businessWalletAggregate?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletAggregateInput>;
  businessWalletConnection?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>;
  businessWalletConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionBusinessWalletConnectionWhere>;
  businessWallet_NOT?: InputMaybe<BusinessWalletWhere>;
  c2bFee?: InputMaybe<Scalars['Float']>;
  c2bFee_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  c2bFee_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_LTE?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  defaultBaseCommission?: InputMaybe<DefaultBaseCommissionWhere>;
  defaultBaseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionAggregateInput>;
  defaultBaseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>;
  defaultBaseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionDefaultBaseCommissionConnectionWhere>;
  defaultBaseCommission_NOT?: InputMaybe<DefaultBaseCommissionWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletBaseCommissionsConnection = {
  __typename?: 'BusinessWalletBaseCommissionsConnection';
  edges: Array<BusinessWalletBaseCommissionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletBusinessAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletBusinessAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletBusinessAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletBusinessNodeAggregationWhereInput>;
};

export type BusinessWalletBusinessBusinessAggregationSelection = {
  __typename?: 'BusinessWalletBusinessBusinessAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessBusinessNodeAggregateSelection>;
};

export type BusinessWalletBusinessBusinessNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessBusinessNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type BusinessWalletBusinessConnectFieldInput = {
  connect?: InputMaybe<BusinessConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type BusinessWalletBusinessConnectOrCreateFieldInput = {
  onCreate: BusinessWalletBusinessConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type BusinessWalletBusinessConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type BusinessWalletBusinessConnection = {
  __typename?: 'BusinessWalletBusinessConnection';
  edges: Array<BusinessWalletBusinessRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletBusinessConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type BusinessWalletBusinessConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletBusinessConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletBusinessConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type BusinessWalletBusinessCreateFieldInput = {
  node: BusinessCreateInput;
};

export type BusinessWalletBusinessDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
};

export type BusinessWalletBusinessDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
};

export type BusinessWalletBusinessFieldInput = {
  connect?: InputMaybe<BusinessWalletBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletBusinessCreateFieldInput>;
};

export type BusinessWalletBusinessNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletBusinessNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletBusinessNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletBusinessNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type BusinessWalletBusinessRelationship = {
  __typename?: 'BusinessWalletBusinessRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type BusinessWalletBusinessUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type BusinessWalletBusinessUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletBusinessCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletBusinessDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletBusinessDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletBusinessUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
};

export type BusinessWalletBusinessWalletBaseCommissionBaseCommissionAggregationSelection = {
  __typename?: 'BusinessWalletBusinessWalletBaseCommissionBaseCommissionAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessWalletBaseCommissionBaseCommissionNodeAggregateSelection>;
};

export type BusinessWalletBusinessWalletBaseCommissionBaseCommissionNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessWalletBaseCommissionBaseCommissionNodeAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletBusinessWalletJoiningFeeJoiningFeeAggregationSelection = {
  __typename?: 'BusinessWalletBusinessWalletJoiningFeeJoiningFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessWalletJoiningFeeJoiningFeeNodeAggregateSelection>;
};

export type BusinessWalletBusinessWalletJoiningFeeJoiningFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessWalletJoiningFeeJoiningFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletBusinessWalletMaintenanceFeeMaintenanceFeeAggregationSelection = {
  __typename?: 'BusinessWalletBusinessWalletMaintenanceFeeMaintenanceFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessWalletMaintenanceFeeMaintenanceFeeNodeAggregateSelection>;
};

export type BusinessWalletBusinessWalletMaintenanceFeeMaintenanceFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessWalletMaintenanceFeeMaintenanceFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  totalVolume: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawalVolume: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletBusinessWalletOverDraftLimitOverDraftLimitAggregationSelection = {
  __typename?: 'BusinessWalletBusinessWalletOverDraftLimitOverDraftLimitAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessWalletOverDraftLimitOverDraftLimitNodeAggregateSelection>;
};

export type BusinessWalletBusinessWalletOverDraftLimitOverDraftLimitNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessWalletOverDraftLimitOverDraftLimitNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  overDraftLimit: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletBusinessWalletPayoutFeePayoutFeeAggregationSelection = {
  __typename?: 'BusinessWalletBusinessWalletPayoutFeePayoutFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessWalletPayoutFeePayoutFeeNodeAggregateSelection>;
};

export type BusinessWalletBusinessWalletPayoutFeePayoutFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessWalletPayoutFeePayoutFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  feeFlat: FloatAggregateSelectionNonNullable;
  feePercentage: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletBusinessWalletRollingReserveFeeRollingReserveFeeAggregationSelection = {
  __typename?: 'BusinessWalletBusinessWalletRollingReserveFeeRollingReserveFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessWalletRollingReserveFeeRollingReserveFeeNodeAggregateSelection>;
};

export type BusinessWalletBusinessWalletRollingReserveFeeRollingReserveFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessWalletRollingReserveFeeRollingReserveFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  percentage: FloatAggregateSelectionNonNullable;
  releaseDays: IntAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletBusinessWalletSettlementFeeSettlementFeeAggregationSelection = {
  __typename?: 'BusinessWalletBusinessWalletSettlementFeeSettlementFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessWalletSettlementFeeSettlementFeeNodeAggregateSelection>;
};

export type BusinessWalletBusinessWalletSettlementFeeSettlementFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessWalletSettlementFeeSettlementFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  sepaFee: FloatAggregateSelectionNonNullable;
  sepaFeeFlat: FloatAggregateSelectionNonNullable;
  sepaFeePercentage: FloatAggregateSelectionNonNullable;
  swiftFee: FloatAggregateSelectionNonNullable;
  swiftFeeFlat: FloatAggregateSelectionNonNullable;
  swiftFeePercentage: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletBusinessWalletTierCommissionTierCommissionsAggregationSelection = {
  __typename?: 'BusinessWalletBusinessWalletTierCommissionTierCommissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletBusinessWalletTierCommissionTierCommissionsNodeAggregateSelection>;
};

export type BusinessWalletBusinessWalletTierCommissionTierCommissionsNodeAggregateSelection = {
  __typename?: 'BusinessWalletBusinessWalletTierCommissionTierCommissionsNodeAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletConnectInput = {
  accounts?: InputMaybe<Array<BusinessWalletAccountsConnectFieldInput>>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionConnectFieldInput>;
  business?: InputMaybe<BusinessWalletBusinessConnectFieldInput>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeConnectFieldInput>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeConnectFieldInput>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitConnectFieldInput>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeConnectFieldInput>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeConnectFieldInput>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeConnectFieldInput>;
  tierCommissions?: InputMaybe<Array<BusinessWalletTierCommissionsConnectFieldInput>>;
};

export type BusinessWalletConnectOrCreateInput = {
  accounts?: InputMaybe<Array<BusinessWalletAccountsConnectOrCreateFieldInput>>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionConnectOrCreateFieldInput>;
  business?: InputMaybe<BusinessWalletBusinessConnectOrCreateFieldInput>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeConnectOrCreateFieldInput>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeConnectOrCreateFieldInput>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitConnectOrCreateFieldInput>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeConnectOrCreateFieldInput>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeConnectOrCreateFieldInput>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeConnectOrCreateFieldInput>;
  tierCommissions?: InputMaybe<Array<BusinessWalletTierCommissionsConnectOrCreateFieldInput>>;
};

export type BusinessWalletConnectOrCreateWhere = {
  node: BusinessWalletUniqueWhere;
};

export type BusinessWalletConnectWhere = {
  node: BusinessWalletWhere;
};

export type BusinessWalletCreateInput = {
  accounts?: InputMaybe<BusinessWalletAccountsFieldInput>;
  balance?: Scalars['Float'];
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionFieldInput>;
  business?: InputMaybe<BusinessWalletBusinessFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeFieldInput>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeFieldInput>;
  nickname?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitFieldInput>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeFieldInput>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeFieldInput>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeFieldInput>;
  tierCommissions?: InputMaybe<BusinessWalletTierCommissionsFieldInput>;
  withdrawableRRBalance?: Scalars['Float'];
};

export type BusinessWalletDeleteInput = {
  accounts?: InputMaybe<Array<BusinessWalletAccountsDeleteFieldInput>>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionDeleteFieldInput>;
  business?: InputMaybe<BusinessWalletBusinessDeleteFieldInput>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeDeleteFieldInput>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDeleteFieldInput>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDeleteFieldInput>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeDeleteFieldInput>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDeleteFieldInput>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeDeleteFieldInput>;
  tierCommissions?: InputMaybe<Array<BusinessWalletTierCommissionsDeleteFieldInput>>;
};

export type BusinessWalletDisconnectInput = {
  accounts?: InputMaybe<Array<BusinessWalletAccountsDisconnectFieldInput>>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionDisconnectFieldInput>;
  business?: InputMaybe<BusinessWalletBusinessDisconnectFieldInput>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeDisconnectFieldInput>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDisconnectFieldInput>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDisconnectFieldInput>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeDisconnectFieldInput>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDisconnectFieldInput>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeDisconnectFieldInput>;
  tierCommissions?: InputMaybe<Array<BusinessWalletTierCommissionsDisconnectFieldInput>>;
};

export type BusinessWalletEdge = {
  __typename?: 'BusinessWalletEdge';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletJoiningFee = {
  __typename?: 'BusinessWalletJoiningFee';
  businessWallet: BusinessWallet;
  businessWalletAggregate?: Maybe<BusinessWalletJoiningFeeBusinessWalletBusinessWalletAggregationSelection>;
  businessWalletConnection: BusinessWalletJoiningFeeBusinessWalletConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessWalletJoiningFeeCreatedByConnection;
  currency: Scalars['String'];
  defaultJoiningFee: DefaultJoiningFee;
  defaultJoiningFeeAggregate?: Maybe<BusinessWalletJoiningFeeDefaultJoiningFeeDefaultJoiningFeeAggregationSelection>;
  defaultJoiningFeeConnection: BusinessWalletJoiningFeeDefaultJoiningFeeConnection;
  fee: Scalars['Float'];
  id: Scalars['ID'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessWalletJoiningFeeUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessWalletJoiningFeeBusinessWalletArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletJoiningFeeBusinessWalletAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletJoiningFeeBusinessWalletConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletJoiningFeeBusinessWalletConnectionSort>>;
  where?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>;
};


export type BusinessWalletJoiningFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletJoiningFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletJoiningFeeCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectionWhere>;
};


export type BusinessWalletJoiningFeeDefaultJoiningFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultJoiningFeeOptions>;
  where?: InputMaybe<DefaultJoiningFeeWhere>;
};


export type BusinessWalletJoiningFeeDefaultJoiningFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultJoiningFeeWhere>;
};


export type BusinessWalletJoiningFeeDefaultJoiningFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>;
};


export type BusinessWalletJoiningFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletJoiningFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletJoiningFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletJoiningFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletJoiningFeeNodeAggregationWhereInput>;
};

export type BusinessWalletJoiningFeeAggregateSelection = {
  __typename?: 'BusinessWalletJoiningFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletJoiningFeeBusinessWalletAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeBusinessWalletAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeBusinessWalletAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletNodeAggregationWhereInput>;
};

export type BusinessWalletJoiningFeeBusinessWalletBusinessWalletAggregationSelection = {
  __typename?: 'BusinessWalletJoiningFeeBusinessWalletBusinessWalletAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletJoiningFeeBusinessWalletBusinessWalletNodeAggregateSelection>;
};

export type BusinessWalletJoiningFeeBusinessWalletBusinessWalletNodeAggregateSelection = {
  __typename?: 'BusinessWalletJoiningFeeBusinessWalletBusinessWalletNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletJoiningFeeBusinessWalletConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessWalletJoiningFeeBusinessWalletConnectOrCreateFieldInput = {
  onCreate: BusinessWalletJoiningFeeBusinessWalletConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessWalletJoiningFeeBusinessWalletConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessWalletJoiningFeeBusinessWalletConnection = {
  __typename?: 'BusinessWalletJoiningFeeBusinessWalletConnection';
  edges: Array<BusinessWalletJoiningFeeBusinessWalletRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletJoiningFeeBusinessWalletConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessWalletJoiningFeeBusinessWalletConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessWalletJoiningFeeBusinessWalletCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessWalletJoiningFeeBusinessWalletDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletJoiningFeeBusinessWalletDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletJoiningFeeBusinessWalletFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletCreateFieldInput>;
};

export type BusinessWalletJoiningFeeBusinessWalletNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeBusinessWalletNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeBusinessWalletNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletJoiningFeeBusinessWalletRelationship = {
  __typename?: 'BusinessWalletJoiningFeeBusinessWalletRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletJoiningFeeBusinessWalletUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessWalletJoiningFeeBusinessWalletUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletJoiningFeeConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletJoiningFeeConnectWhere>;
};

export type BusinessWalletJoiningFeeConnectInput = {
  businessWallet?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectFieldInput>;
  defaultJoiningFee?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectFieldInput>;
};

export type BusinessWalletJoiningFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletJoiningFeeConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletJoiningFeeConnectOrCreateWhere;
};

export type BusinessWalletJoiningFeeConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletJoiningFeeOnCreateInput;
};

export type BusinessWalletJoiningFeeConnectOrCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectOrCreateFieldInput>;
  defaultJoiningFee?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectOrCreateFieldInput>;
};

export type BusinessWalletJoiningFeeConnectOrCreateWhere = {
  node: BusinessWalletJoiningFeeUniqueWhere;
};

export type BusinessWalletJoiningFeeConnectWhere = {
  node: BusinessWalletJoiningFeeWhere;
};

export type BusinessWalletJoiningFeeConnection = {
  __typename?: 'BusinessWalletJoiningFeeConnection';
  edges: Array<BusinessWalletJoiningFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletJoiningFeeConnectionSort = {
  node?: InputMaybe<BusinessWalletJoiningFeeSort>;
};

export type BusinessWalletJoiningFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeConnectionWhere>>;
  node?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};

export type BusinessWalletJoiningFeeCreateFieldInput = {
  node: BusinessWalletJoiningFeeCreateInput;
};

export type BusinessWalletJoiningFeeCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletFieldInput>;
  createdBy?: InputMaybe<BusinessWalletJoiningFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  defaultJoiningFee?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeFieldInput>;
  fee?: Scalars['Float'];
  updatedBy?: InputMaybe<BusinessWalletJoiningFeeUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletJoiningFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletJoiningFeeCreatedByConnection = {
  __typename?: 'BusinessWalletJoiningFeeCreatedByConnection';
  edges: Array<BusinessWalletJoiningFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletJoiningFeeCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletJoiningFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletJoiningFeeCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletJoiningFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectionWhere>;
};

export type BusinessWalletJoiningFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectionWhere>;
};

export type BusinessWalletJoiningFeeCreatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeCreatedByCreateFieldInput>;
};

export type BusinessWalletJoiningFeeCreatedByRelationship = {
  __typename?: 'BusinessWalletJoiningFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletJoiningFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletJoiningFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletJoiningFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletJoiningFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletJoiningFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectionWhere>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeDefaultJoiningFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeDefaultJoiningFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeNodeAggregationWhereInput>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeConnectFieldInput = {
  connect?: InputMaybe<DefaultJoiningFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultJoiningFeeConnectWhere>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletJoiningFeeDefaultJoiningFeeConnectOrCreateFieldInputOnCreate;
  where: DefaultJoiningFeeConnectOrCreateWhere;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeConnectOrCreateFieldInputOnCreate = {
  node: DefaultJoiningFeeOnCreateInput;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeConnection = {
  __typename?: 'BusinessWalletJoiningFeeDefaultJoiningFeeConnection';
  edges: Array<BusinessWalletJoiningFeeDefaultJoiningFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeConnectionSort = {
  node?: InputMaybe<DefaultJoiningFeeSort>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>>;
  node?: InputMaybe<DefaultJoiningFeeWhere>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeCreateFieldInput = {
  node: DefaultJoiningFeeCreateInput;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeDefaultJoiningFeeAggregationSelection = {
  __typename?: 'BusinessWalletJoiningFeeDefaultJoiningFeeDefaultJoiningFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletJoiningFeeDefaultJoiningFeeDefaultJoiningFeeNodeAggregateSelection>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeDefaultJoiningFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletJoiningFeeDefaultJoiningFeeDefaultJoiningFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeDeleteFieldInput = {
  delete?: InputMaybe<DefaultJoiningFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultJoiningFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeCreateFieldInput>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeDefaultJoiningFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeDefaultJoiningFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeRelationship = {
  __typename?: 'BusinessWalletJoiningFeeDefaultJoiningFeeRelationship';
  cursor: Scalars['String'];
  node: DefaultJoiningFee;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeUpdateConnectionInput = {
  node?: InputMaybe<DefaultJoiningFeeUpdateInput>;
};

export type BusinessWalletJoiningFeeDefaultJoiningFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>;
};

export type BusinessWalletJoiningFeeDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletJoiningFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
};

export type BusinessWalletJoiningFeeDeleteInput = {
  businessWallet?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessWalletJoiningFeeCreatedByDeleteFieldInput>;
  defaultJoiningFee?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletJoiningFeeUpdatedByDeleteFieldInput>;
};

export type BusinessWalletJoiningFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletJoiningFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
};

export type BusinessWalletJoiningFeeDisconnectInput = {
  businessWallet?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletJoiningFeeCreatedByDisconnectFieldInput>;
  defaultJoiningFee?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletJoiningFeeUpdatedByDisconnectFieldInput>;
};

export type BusinessWalletJoiningFeeEdge = {
  __typename?: 'BusinessWalletJoiningFeeEdge';
  cursor: Scalars['String'];
  node: BusinessWalletJoiningFee;
};

export type BusinessWalletJoiningFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletJoiningFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeCreateFieldInput>;
};

export type BusinessWalletJoiningFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletJoiningFeeOnCreateInput = {
  currency: Scalars['String'];
  fee?: Scalars['Float'];
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletJoiningFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletJoiningFeeSort objects to sort BusinessWalletJoiningFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletJoiningFeeSort>>;
};

export type BusinessWalletJoiningFeeRelationInput = {
  businessWallet?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletCreateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletJoiningFeeCreatedByCreateFieldInput>;
  defaultJoiningFee?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletJoiningFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletJoiningFeeRelationship = {
  __typename?: 'BusinessWalletJoiningFeeRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletJoiningFee;
};

/** Fields to sort BusinessWalletJoiningFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletJoiningFeeSort object. */
export type BusinessWalletJoiningFeeSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  fee?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessWalletJoiningFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletJoiningFeeUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletJoiningFeeUpdateInput>;
};

export type BusinessWalletJoiningFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletJoiningFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletJoiningFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletJoiningFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletJoiningFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
};

export type BusinessWalletJoiningFeeUpdateInput = {
  businessWallet?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletUpdateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletJoiningFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  defaultJoiningFee?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeUpdateFieldInput>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_ADD?: InputMaybe<Scalars['Float']>;
  fee_DIVIDE?: InputMaybe<Scalars['Float']>;
  fee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  fee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<BusinessWalletJoiningFeeUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletJoiningFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletJoiningFeeUpdatedByConnection = {
  __typename?: 'BusinessWalletJoiningFeeUpdatedByConnection';
  edges: Array<BusinessWalletJoiningFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletJoiningFeeUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletJoiningFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletJoiningFeeUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletJoiningFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletJoiningFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletJoiningFeeUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletJoiningFeeUpdatedByRelationship = {
  __typename?: 'BusinessWalletJoiningFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletJoiningFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletJoiningFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletJoiningFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletJoiningFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletJoiningFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletJoiningFeeWhere = {
  AND?: InputMaybe<Array<BusinessWalletJoiningFeeWhere>>;
  NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  OR?: InputMaybe<Array<BusinessWalletJoiningFeeWhere>>;
  businessWallet?: InputMaybe<BusinessWalletWhere>;
  businessWalletAggregate?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletAggregateInput>;
  businessWalletConnection?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>;
  businessWalletConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeBusinessWalletConnectionWhere>;
  businessWallet_NOT?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  defaultJoiningFee?: InputMaybe<DefaultJoiningFeeWhere>;
  defaultJoiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeAggregateInput>;
  defaultJoiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>;
  defaultJoiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeDefaultJoiningFeeConnectionWhere>;
  defaultJoiningFee_NOT?: InputMaybe<DefaultJoiningFeeWhere>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_GT?: InputMaybe<Scalars['Float']>;
  fee_GTE?: InputMaybe<Scalars['Float']>;
  fee_IN?: InputMaybe<Array<Scalars['Float']>>;
  fee_LT?: InputMaybe<Scalars['Float']>;
  fee_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletJoiningFeesConnection = {
  __typename?: 'BusinessWalletJoiningFeesConnection';
  edges: Array<BusinessWalletJoiningFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletMaintenanceFee = {
  __typename?: 'BusinessWalletMaintenanceFee';
  businessWallet: BusinessWallet;
  businessWalletAggregate?: Maybe<BusinessWalletMaintenanceFeeBusinessWalletBusinessWalletAggregationSelection>;
  businessWalletConnection: BusinessWalletMaintenanceFeeBusinessWalletConnection;
  checkType: MaintenanceFeeCheckType;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessWalletMaintenanceFeeCreatedByConnection;
  currency: Scalars['String'];
  defaultMaintenanceFee: DefaultMaintenanceFee;
  defaultMaintenanceFeeAggregate?: Maybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDefaultMaintenanceFeeAggregationSelection>;
  defaultMaintenanceFeeConnection: BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnection;
  depositVolume: Scalars['Float'];
  fee: Scalars['Float'];
  id: Scalars['ID'];
  totalVolume: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessWalletMaintenanceFeeUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
  withdrawalVolume: Scalars['Float'];
};


export type BusinessWalletMaintenanceFeeBusinessWalletArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletMaintenanceFeeBusinessWalletAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletMaintenanceFeeBusinessWalletConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletMaintenanceFeeBusinessWalletConnectionSort>>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>;
};


export type BusinessWalletMaintenanceFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletMaintenanceFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletMaintenanceFeeCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>;
};


export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultMaintenanceFeeOptions>;
  where?: InputMaybe<DefaultMaintenanceFeeWhere>;
};


export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultMaintenanceFeeWhere>;
};


export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>;
};


export type BusinessWalletMaintenanceFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletMaintenanceFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletMaintenanceFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletMaintenanceFeeNodeAggregationWhereInput>;
};

export type BusinessWalletMaintenanceFeeAggregateSelection = {
  __typename?: 'BusinessWalletMaintenanceFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  totalVolume: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawalVolume: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletMaintenanceFeeBusinessWalletAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeBusinessWalletAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeBusinessWalletAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletNodeAggregationWhereInput>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletBusinessWalletAggregationSelection = {
  __typename?: 'BusinessWalletMaintenanceFeeBusinessWalletBusinessWalletAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletMaintenanceFeeBusinessWalletBusinessWalletNodeAggregateSelection>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletBusinessWalletNodeAggregateSelection = {
  __typename?: 'BusinessWalletMaintenanceFeeBusinessWalletBusinessWalletNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletMaintenanceFeeBusinessWalletConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletConnectOrCreateFieldInput = {
  onCreate: BusinessWalletMaintenanceFeeBusinessWalletConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessWalletMaintenanceFeeBusinessWalletConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessWalletMaintenanceFeeBusinessWalletConnection = {
  __typename?: 'BusinessWalletMaintenanceFeeBusinessWalletConnection';
  edges: Array<BusinessWalletMaintenanceFeeBusinessWalletRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletMaintenanceFeeBusinessWalletConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessWalletMaintenanceFeeBusinessWalletDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletCreateFieldInput>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeBusinessWalletNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeBusinessWalletNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletRelationship = {
  __typename?: 'BusinessWalletMaintenanceFeeBusinessWalletRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletMaintenanceFeeBusinessWalletUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessWalletMaintenanceFeeBusinessWalletUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletMaintenanceFeeConnectWhere>;
};

export type BusinessWalletMaintenanceFeeConnectInput = {
  businessWallet?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectFieldInput>;
  defaultMaintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectFieldInput>;
};

export type BusinessWalletMaintenanceFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletMaintenanceFeeConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletMaintenanceFeeConnectOrCreateWhere;
};

export type BusinessWalletMaintenanceFeeConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletMaintenanceFeeOnCreateInput;
};

export type BusinessWalletMaintenanceFeeConnectOrCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectOrCreateFieldInput>;
  defaultMaintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectOrCreateFieldInput>;
};

export type BusinessWalletMaintenanceFeeConnectOrCreateWhere = {
  node: BusinessWalletMaintenanceFeeUniqueWhere;
};

export type BusinessWalletMaintenanceFeeConnectWhere = {
  node: BusinessWalletMaintenanceFeeWhere;
};

export type BusinessWalletMaintenanceFeeConnection = {
  __typename?: 'BusinessWalletMaintenanceFeeConnection';
  edges: Array<BusinessWalletMaintenanceFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletMaintenanceFeeConnectionSort = {
  node?: InputMaybe<BusinessWalletMaintenanceFeeSort>;
};

export type BusinessWalletMaintenanceFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeConnectionWhere>>;
  node?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};

export type BusinessWalletMaintenanceFeeCreateFieldInput = {
  node: BusinessWalletMaintenanceFeeCreateInput;
};

export type BusinessWalletMaintenanceFeeCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletFieldInput>;
  checkType?: MaintenanceFeeCheckType;
  createdBy?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  defaultMaintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeFieldInput>;
  depositVolume?: Scalars['Float'];
  fee?: Scalars['Float'];
  totalVolume?: Scalars['Float'];
  updatedBy?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
  withdrawalVolume?: Scalars['Float'];
};

export type BusinessWalletMaintenanceFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletMaintenanceFeeCreatedByConnection = {
  __typename?: 'BusinessWalletMaintenanceFeeCreatedByConnection';
  edges: Array<BusinessWalletMaintenanceFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletMaintenanceFeeCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletMaintenanceFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletMaintenanceFeeCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletMaintenanceFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeCreatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByCreateFieldInput>;
};

export type BusinessWalletMaintenanceFeeCreatedByRelationship = {
  __typename?: 'BusinessWalletMaintenanceFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletMaintenanceFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletMaintenanceFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeNodeAggregationWhereInput>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectFieldInput = {
  connect?: InputMaybe<DefaultMaintenanceFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultMaintenanceFeeConnectWhere>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectOrCreateFieldInputOnCreate;
  where: DefaultMaintenanceFeeConnectOrCreateWhere;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectOrCreateFieldInputOnCreate = {
  node: DefaultMaintenanceFeeOnCreateInput;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnection = {
  __typename?: 'BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnection';
  edges: Array<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionSort = {
  node?: InputMaybe<DefaultMaintenanceFeeSort>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>>;
  node?: InputMaybe<DefaultMaintenanceFeeWhere>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeCreateFieldInput = {
  node: DefaultMaintenanceFeeCreateInput;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDefaultMaintenanceFeeAggregationSelection = {
  __typename?: 'BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDefaultMaintenanceFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDefaultMaintenanceFeeNodeAggregateSelection>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDefaultMaintenanceFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDefaultMaintenanceFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  totalVolume: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawalVolume: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDeleteFieldInput = {
  delete?: InputMaybe<DefaultMaintenanceFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultMaintenanceFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeCreateFieldInput>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawalVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeRelationship = {
  __typename?: 'BusinessWalletMaintenanceFeeDefaultMaintenanceFeeRelationship';
  cursor: Scalars['String'];
  node: DefaultMaintenanceFee;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeUpdateConnectionInput = {
  node?: InputMaybe<DefaultMaintenanceFeeUpdateInput>;
};

export type BusinessWalletMaintenanceFeeDefaultMaintenanceFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletMaintenanceFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeDeleteInput = {
  businessWallet?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByDeleteFieldInput>;
  defaultMaintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByDeleteFieldInput>;
};

export type BusinessWalletMaintenanceFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletMaintenanceFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeDisconnectInput = {
  businessWallet?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByDisconnectFieldInput>;
  defaultMaintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByDisconnectFieldInput>;
};

export type BusinessWalletMaintenanceFeeEdge = {
  __typename?: 'BusinessWalletMaintenanceFeeEdge';
  cursor: Scalars['String'];
  node: BusinessWalletMaintenanceFee;
};

export type BusinessWalletMaintenanceFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletMaintenanceFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeCreateFieldInput>;
};

export type BusinessWalletMaintenanceFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawalVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletMaintenanceFeeOnCreateInput = {
  checkType?: MaintenanceFeeCheckType;
  currency: Scalars['String'];
  depositVolume?: Scalars['Float'];
  fee?: Scalars['Float'];
  totalVolume?: Scalars['Float'];
  usesDefault?: Scalars['Boolean'];
  withdrawalVolume?: Scalars['Float'];
};

export type BusinessWalletMaintenanceFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletMaintenanceFeeSort objects to sort BusinessWalletMaintenanceFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletMaintenanceFeeSort>>;
};

export type BusinessWalletMaintenanceFeeRelationInput = {
  businessWallet?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletCreateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByCreateFieldInput>;
  defaultMaintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletMaintenanceFeeRelationship = {
  __typename?: 'BusinessWalletMaintenanceFeeRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletMaintenanceFee;
};

/** Fields to sort BusinessWalletMaintenanceFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletMaintenanceFeeSort object. */
export type BusinessWalletMaintenanceFeeSort = {
  checkType?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  depositVolume?: InputMaybe<SortDirection>;
  fee?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  totalVolume?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
  withdrawalVolume?: InputMaybe<SortDirection>;
};

export type BusinessWalletMaintenanceFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletMaintenanceFeeUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletMaintenanceFeeUpdateInput>;
};

export type BusinessWalletMaintenanceFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletMaintenanceFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletMaintenanceFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletMaintenanceFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletMaintenanceFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeUpdateInput = {
  businessWallet?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletUpdateFieldInput>;
  checkType?: InputMaybe<MaintenanceFeeCheckType>;
  createdBy?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  defaultMaintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeUpdateFieldInput>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_ADD?: InputMaybe<Scalars['Float']>;
  depositVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  depositVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  depositVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_ADD?: InputMaybe<Scalars['Float']>;
  fee_DIVIDE?: InputMaybe<Scalars['Float']>;
  fee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  fee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  totalVolume?: InputMaybe<Scalars['Float']>;
  totalVolume_ADD?: InputMaybe<Scalars['Float']>;
  totalVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  totalVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  totalVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
  withdrawalVolume?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_ADD?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletMaintenanceFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletMaintenanceFeeUpdatedByConnection = {
  __typename?: 'BusinessWalletMaintenanceFeeUpdatedByConnection';
  edges: Array<BusinessWalletMaintenanceFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletMaintenanceFeeUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletMaintenanceFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletMaintenanceFeeUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletMaintenanceFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletMaintenanceFeeUpdatedByRelationship = {
  __typename?: 'BusinessWalletMaintenanceFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletMaintenanceFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletMaintenanceFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletMaintenanceFeeWhere = {
  AND?: InputMaybe<Array<BusinessWalletMaintenanceFeeWhere>>;
  NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  OR?: InputMaybe<Array<BusinessWalletMaintenanceFeeWhere>>;
  businessWallet?: InputMaybe<BusinessWalletWhere>;
  businessWalletAggregate?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletAggregateInput>;
  businessWalletConnection?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>;
  businessWalletConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeBusinessWalletConnectionWhere>;
  businessWallet_NOT?: InputMaybe<BusinessWalletWhere>;
  checkType?: InputMaybe<MaintenanceFeeCheckType>;
  checkType_IN?: InputMaybe<Array<MaintenanceFeeCheckType>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  defaultMaintenanceFee?: InputMaybe<DefaultMaintenanceFeeWhere>;
  defaultMaintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeAggregateInput>;
  defaultMaintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>;
  defaultMaintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeDefaultMaintenanceFeeConnectionWhere>;
  defaultMaintenanceFee_NOT?: InputMaybe<DefaultMaintenanceFeeWhere>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  depositVolume_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_LTE?: InputMaybe<Scalars['Float']>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_GT?: InputMaybe<Scalars['Float']>;
  fee_GTE?: InputMaybe<Scalars['Float']>;
  fee_IN?: InputMaybe<Array<Scalars['Float']>>;
  fee_LT?: InputMaybe<Scalars['Float']>;
  fee_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  totalVolume?: InputMaybe<Scalars['Float']>;
  totalVolume_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  totalVolume_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
  withdrawalVolume?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawalVolume_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletMaintenanceFeesConnection = {
  __typename?: 'BusinessWalletMaintenanceFeesConnection';
  edges: Array<BusinessWalletMaintenanceFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletOnCreateInput = {
  balance?: Scalars['Float'];
  currency?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  withdrawableRRBalance?: Scalars['Float'];
};

export type BusinessWalletOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_AdjustmentsbusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_CurrencyExchangefromBusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_CurrencyExchangetoBusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_DailyCommissionVolumebusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_DailyDepositVolumebusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_DailyWithdrawalVolumebusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_DepositsbusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_LedgersfromBusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_LedgerstoBusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_RollingReservesreleaseToBusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOptions_Remote_Rel_WithdrawalsbusinessWallet = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSort objects to sort BusinessWallets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSort>>;
};

export type BusinessWalletOverDraftLimit = {
  __typename?: 'BusinessWalletOverDraftLimit';
  businessWallet: BusinessWallet;
  businessWalletAggregate?: Maybe<BusinessWalletOverDraftLimitBusinessWalletBusinessWalletAggregationSelection>;
  businessWalletConnection: BusinessWalletOverDraftLimitBusinessWalletConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessWalletOverDraftLimitCreatedByConnection;
  currency: Scalars['String'];
  defaultOverDraftLimit: DefaultOverDraftLimit;
  defaultOverDraftLimitAggregate?: Maybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitDefaultOverDraftLimitAggregationSelection>;
  defaultOverDraftLimitConnection: BusinessWalletOverDraftLimitDefaultOverDraftLimitConnection;
  id: Scalars['ID'];
  overDraftLimit: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessWalletOverDraftLimitUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessWalletOverDraftLimitBusinessWalletArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletOverDraftLimitBusinessWalletAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletOverDraftLimitBusinessWalletConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletOverDraftLimitBusinessWalletConnectionSort>>;
  where?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>;
};


export type BusinessWalletOverDraftLimitCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletOverDraftLimitCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletOverDraftLimitCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectionWhere>;
};


export type BusinessWalletOverDraftLimitDefaultOverDraftLimitArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultOverDraftLimitOptions>;
  where?: InputMaybe<DefaultOverDraftLimitWhere>;
};


export type BusinessWalletOverDraftLimitDefaultOverDraftLimitAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultOverDraftLimitWhere>;
};


export type BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionSort>>;
  where?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>;
};


export type BusinessWalletOverDraftLimitUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletOverDraftLimitUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletOverDraftLimitUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>;
};

export type BusinessWalletOverDraftLimitAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletOverDraftLimitNodeAggregationWhereInput>;
};

export type BusinessWalletOverDraftLimitAggregateSelection = {
  __typename?: 'BusinessWalletOverDraftLimitAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  overDraftLimit: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletOverDraftLimitBusinessWalletAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitBusinessWalletAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitBusinessWalletAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletNodeAggregationWhereInput>;
};

export type BusinessWalletOverDraftLimitBusinessWalletBusinessWalletAggregationSelection = {
  __typename?: 'BusinessWalletOverDraftLimitBusinessWalletBusinessWalletAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletOverDraftLimitBusinessWalletBusinessWalletNodeAggregateSelection>;
};

export type BusinessWalletOverDraftLimitBusinessWalletBusinessWalletNodeAggregateSelection = {
  __typename?: 'BusinessWalletOverDraftLimitBusinessWalletBusinessWalletNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletOverDraftLimitBusinessWalletConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessWalletOverDraftLimitBusinessWalletConnectOrCreateFieldInput = {
  onCreate: BusinessWalletOverDraftLimitBusinessWalletConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessWalletOverDraftLimitBusinessWalletConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessWalletOverDraftLimitBusinessWalletConnection = {
  __typename?: 'BusinessWalletOverDraftLimitBusinessWalletConnection';
  edges: Array<BusinessWalletOverDraftLimitBusinessWalletRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletOverDraftLimitBusinessWalletConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessWalletOverDraftLimitBusinessWalletConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessWalletOverDraftLimitBusinessWalletCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessWalletOverDraftLimitBusinessWalletDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>;
};

export type BusinessWalletOverDraftLimitBusinessWalletDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>;
};

export type BusinessWalletOverDraftLimitBusinessWalletFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletCreateFieldInput>;
};

export type BusinessWalletOverDraftLimitBusinessWalletNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitBusinessWalletNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitBusinessWalletNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletOverDraftLimitBusinessWalletRelationship = {
  __typename?: 'BusinessWalletOverDraftLimitBusinessWalletRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletOverDraftLimitBusinessWalletUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessWalletOverDraftLimitBusinessWalletUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>;
};

export type BusinessWalletOverDraftLimitConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletOverDraftLimitConnectWhere>;
};

export type BusinessWalletOverDraftLimitConnectInput = {
  businessWallet?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectFieldInput>;
  defaultOverDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectFieldInput>;
};

export type BusinessWalletOverDraftLimitConnectOrCreateFieldInput = {
  onCreate: BusinessWalletOverDraftLimitConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletOverDraftLimitConnectOrCreateWhere;
};

export type BusinessWalletOverDraftLimitConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOverDraftLimitOnCreateInput;
};

export type BusinessWalletOverDraftLimitConnectOrCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectOrCreateFieldInput>;
  defaultOverDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectOrCreateFieldInput>;
};

export type BusinessWalletOverDraftLimitConnectOrCreateWhere = {
  node: BusinessWalletOverDraftLimitUniqueWhere;
};

export type BusinessWalletOverDraftLimitConnectWhere = {
  node: BusinessWalletOverDraftLimitWhere;
};

export type BusinessWalletOverDraftLimitConnection = {
  __typename?: 'BusinessWalletOverDraftLimitConnection';
  edges: Array<BusinessWalletOverDraftLimitRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletOverDraftLimitConnectionSort = {
  node?: InputMaybe<BusinessWalletOverDraftLimitSort>;
};

export type BusinessWalletOverDraftLimitConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitConnectionWhere>>;
  node?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};

export type BusinessWalletOverDraftLimitCreateFieldInput = {
  node: BusinessWalletOverDraftLimitCreateInput;
};

export type BusinessWalletOverDraftLimitCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletFieldInput>;
  createdBy?: InputMaybe<BusinessWalletOverDraftLimitCreatedByFieldInput>;
  currency: Scalars['String'];
  defaultOverDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitFieldInput>;
  overDraftLimit?: Scalars['Float'];
  updatedBy?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletOverDraftLimitCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletOverDraftLimitCreatedByConnection = {
  __typename?: 'BusinessWalletOverDraftLimitCreatedByConnection';
  edges: Array<BusinessWalletOverDraftLimitCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletOverDraftLimitCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletOverDraftLimitCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletOverDraftLimitCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletOverDraftLimitCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectionWhere>;
};

export type BusinessWalletOverDraftLimitCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectionWhere>;
};

export type BusinessWalletOverDraftLimitCreatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitCreatedByCreateFieldInput>;
};

export type BusinessWalletOverDraftLimitCreatedByRelationship = {
  __typename?: 'BusinessWalletOverDraftLimitCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletOverDraftLimitCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletOverDraftLimitCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletOverDraftLimitCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletOverDraftLimitCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletOverDraftLimitCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectionWhere>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitDefaultOverDraftLimitAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitDefaultOverDraftLimitAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitNodeAggregationWhereInput>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectFieldInput = {
  connect?: InputMaybe<DefaultOverDraftLimitConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultOverDraftLimitConnectWhere>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectOrCreateFieldInput = {
  onCreate: BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectOrCreateFieldInputOnCreate;
  where: DefaultOverDraftLimitConnectOrCreateWhere;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectOrCreateFieldInputOnCreate = {
  node: DefaultOverDraftLimitOnCreateInput;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitConnection = {
  __typename?: 'BusinessWalletOverDraftLimitDefaultOverDraftLimitConnection';
  edges: Array<BusinessWalletOverDraftLimitDefaultOverDraftLimitRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionSort = {
  node?: InputMaybe<DefaultOverDraftLimitSort>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>>;
  node?: InputMaybe<DefaultOverDraftLimitWhere>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitCreateFieldInput = {
  node: DefaultOverDraftLimitCreateInput;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitDefaultOverDraftLimitAggregationSelection = {
  __typename?: 'BusinessWalletOverDraftLimitDefaultOverDraftLimitDefaultOverDraftLimitAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitDefaultOverDraftLimitNodeAggregateSelection>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitDefaultOverDraftLimitNodeAggregateSelection = {
  __typename?: 'BusinessWalletOverDraftLimitDefaultOverDraftLimitDefaultOverDraftLimitNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  overDraftLimit: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitDeleteFieldInput = {
  delete?: InputMaybe<DefaultOverDraftLimitDeleteInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultOverDraftLimitDisconnectInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitCreateFieldInput>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitDefaultOverDraftLimitNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitDefaultOverDraftLimitNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  overDraftLimit_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitRelationship = {
  __typename?: 'BusinessWalletOverDraftLimitDefaultOverDraftLimitRelationship';
  cursor: Scalars['String'];
  node: DefaultOverDraftLimit;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitUpdateConnectionInput = {
  node?: InputMaybe<DefaultOverDraftLimitUpdateInput>;
};

export type BusinessWalletOverDraftLimitDefaultOverDraftLimitUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>;
};

export type BusinessWalletOverDraftLimitDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletOverDraftLimitDeleteInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
};

export type BusinessWalletOverDraftLimitDeleteInput = {
  businessWallet?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessWalletOverDraftLimitCreatedByDeleteFieldInput>;
  defaultOverDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByDeleteFieldInput>;
};

export type BusinessWalletOverDraftLimitDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletOverDraftLimitDisconnectInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
};

export type BusinessWalletOverDraftLimitDisconnectInput = {
  businessWallet?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletOverDraftLimitCreatedByDisconnectFieldInput>;
  defaultOverDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByDisconnectFieldInput>;
};

export type BusinessWalletOverDraftLimitEdge = {
  __typename?: 'BusinessWalletOverDraftLimitEdge';
  cursor: Scalars['String'];
  node: BusinessWalletOverDraftLimit;
};

export type BusinessWalletOverDraftLimitFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletOverDraftLimitConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitCreateFieldInput>;
};

export type BusinessWalletOverDraftLimitNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  overDraftLimit_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletOverDraftLimitOnCreateInput = {
  currency: Scalars['String'];
  overDraftLimit?: Scalars['Float'];
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletOverDraftLimitOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletOverDraftLimitSort objects to sort BusinessWalletOverDraftLimits by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletOverDraftLimitSort>>;
};

export type BusinessWalletOverDraftLimitRelationInput = {
  businessWallet?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletCreateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletOverDraftLimitCreatedByCreateFieldInput>;
  defaultOverDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByCreateFieldInput>;
};

export type BusinessWalletOverDraftLimitRelationship = {
  __typename?: 'BusinessWalletOverDraftLimitRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletOverDraftLimit;
};

/** Fields to sort BusinessWalletOverDraftLimits by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletOverDraftLimitSort object. */
export type BusinessWalletOverDraftLimitSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  overDraftLimit?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessWalletOverDraftLimitUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletOverDraftLimitUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletOverDraftLimitUpdateInput>;
};

export type BusinessWalletOverDraftLimitUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletOverDraftLimitConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletOverDraftLimitDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletOverDraftLimitDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletOverDraftLimitUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
};

export type BusinessWalletOverDraftLimitUpdateInput = {
  businessWallet?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletUpdateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletOverDraftLimitCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  defaultOverDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitUpdateFieldInput>;
  overDraftLimit?: InputMaybe<Scalars['Float']>;
  overDraftLimit_ADD?: InputMaybe<Scalars['Float']>;
  overDraftLimit_DIVIDE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MULTIPLY?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletOverDraftLimitUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletOverDraftLimitUpdatedByConnection = {
  __typename?: 'BusinessWalletOverDraftLimitUpdatedByConnection';
  edges: Array<BusinessWalletOverDraftLimitUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletOverDraftLimitUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletOverDraftLimitUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletOverDraftLimitUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletOverDraftLimitUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>;
};

export type BusinessWalletOverDraftLimitUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>;
};

export type BusinessWalletOverDraftLimitUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByCreateFieldInput>;
};

export type BusinessWalletOverDraftLimitUpdatedByRelationship = {
  __typename?: 'BusinessWalletOverDraftLimitUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletOverDraftLimitUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletOverDraftLimitUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>;
};

export type BusinessWalletOverDraftLimitWhere = {
  AND?: InputMaybe<Array<BusinessWalletOverDraftLimitWhere>>;
  NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  OR?: InputMaybe<Array<BusinessWalletOverDraftLimitWhere>>;
  businessWallet?: InputMaybe<BusinessWalletWhere>;
  businessWalletAggregate?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletAggregateInput>;
  businessWalletConnection?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>;
  businessWalletConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitBusinessWalletConnectionWhere>;
  businessWallet_NOT?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  defaultOverDraftLimit?: InputMaybe<DefaultOverDraftLimitWhere>;
  defaultOverDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitAggregateInput>;
  defaultOverDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>;
  defaultOverDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitDefaultOverDraftLimitConnectionWhere>;
  defaultOverDraftLimit_NOT?: InputMaybe<DefaultOverDraftLimitWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  overDraftLimit?: InputMaybe<Scalars['Float']>;
  overDraftLimit_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_IN?: InputMaybe<Array<Scalars['Float']>>;
  overDraftLimit_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletOverDraftLimitsConnection = {
  __typename?: 'BusinessWalletOverDraftLimitsConnection';
  edges: Array<BusinessWalletOverDraftLimitEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletPayoutFee = {
  __typename?: 'BusinessWalletPayoutFee';
  businessWallet: BusinessWallet;
  businessWalletAggregate?: Maybe<BusinessWalletPayoutFeeBusinessWalletBusinessWalletAggregationSelection>;
  businessWalletConnection: BusinessWalletPayoutFeeBusinessWalletConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessWalletPayoutFeeCreatedByConnection;
  currency: Scalars['String'];
  defaultPayoutFee: DefaultPayoutFee;
  defaultPayoutFeeAggregate?: Maybe<BusinessWalletPayoutFeeDefaultPayoutFeeDefaultPayoutFeeAggregationSelection>;
  defaultPayoutFeeConnection: BusinessWalletPayoutFeeDefaultPayoutFeeConnection;
  fee: Scalars['Float'];
  feeFlat: Scalars['Float'];
  feePercentage: Scalars['Float'];
  id: Scalars['ID'];
  isFlatFee: Scalars['Boolean'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessWalletPayoutFeeUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessWalletPayoutFeeBusinessWalletArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletPayoutFeeBusinessWalletAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletPayoutFeeBusinessWalletConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletPayoutFeeBusinessWalletConnectionSort>>;
  where?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>;
};


export type BusinessWalletPayoutFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletPayoutFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletPayoutFeeCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectionWhere>;
};


export type BusinessWalletPayoutFeeDefaultPayoutFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultPayoutFeeOptions>;
  where?: InputMaybe<DefaultPayoutFeeWhere>;
};


export type BusinessWalletPayoutFeeDefaultPayoutFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultPayoutFeeWhere>;
};


export type BusinessWalletPayoutFeeDefaultPayoutFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>;
};


export type BusinessWalletPayoutFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletPayoutFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletPayoutFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletPayoutFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletPayoutFeeNodeAggregationWhereInput>;
};

export type BusinessWalletPayoutFeeAggregateSelection = {
  __typename?: 'BusinessWalletPayoutFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  feeFlat: FloatAggregateSelectionNonNullable;
  feePercentage: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletPayoutFeeBusinessWalletAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeBusinessWalletAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeBusinessWalletAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletNodeAggregationWhereInput>;
};

export type BusinessWalletPayoutFeeBusinessWalletBusinessWalletAggregationSelection = {
  __typename?: 'BusinessWalletPayoutFeeBusinessWalletBusinessWalletAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletPayoutFeeBusinessWalletBusinessWalletNodeAggregateSelection>;
};

export type BusinessWalletPayoutFeeBusinessWalletBusinessWalletNodeAggregateSelection = {
  __typename?: 'BusinessWalletPayoutFeeBusinessWalletBusinessWalletNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletPayoutFeeBusinessWalletConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessWalletPayoutFeeBusinessWalletConnectOrCreateFieldInput = {
  onCreate: BusinessWalletPayoutFeeBusinessWalletConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessWalletPayoutFeeBusinessWalletConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessWalletPayoutFeeBusinessWalletConnection = {
  __typename?: 'BusinessWalletPayoutFeeBusinessWalletConnection';
  edges: Array<BusinessWalletPayoutFeeBusinessWalletRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletPayoutFeeBusinessWalletConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessWalletPayoutFeeBusinessWalletConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessWalletPayoutFeeBusinessWalletCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessWalletPayoutFeeBusinessWalletDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletPayoutFeeBusinessWalletDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletPayoutFeeBusinessWalletFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletCreateFieldInput>;
};

export type BusinessWalletPayoutFeeBusinessWalletNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeBusinessWalletNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeBusinessWalletNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletPayoutFeeBusinessWalletRelationship = {
  __typename?: 'BusinessWalletPayoutFeeBusinessWalletRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletPayoutFeeBusinessWalletUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessWalletPayoutFeeBusinessWalletUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletPayoutFeeConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletPayoutFeeConnectWhere>;
};

export type BusinessWalletPayoutFeeConnectInput = {
  businessWallet?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectFieldInput>;
  defaultPayoutFee?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectFieldInput>;
};

export type BusinessWalletPayoutFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletPayoutFeeConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletPayoutFeeConnectOrCreateWhere;
};

export type BusinessWalletPayoutFeeConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletPayoutFeeOnCreateInput;
};

export type BusinessWalletPayoutFeeConnectOrCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectOrCreateFieldInput>;
  defaultPayoutFee?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectOrCreateFieldInput>;
};

export type BusinessWalletPayoutFeeConnectOrCreateWhere = {
  node: BusinessWalletPayoutFeeUniqueWhere;
};

export type BusinessWalletPayoutFeeConnectWhere = {
  node: BusinessWalletPayoutFeeWhere;
};

export type BusinessWalletPayoutFeeConnection = {
  __typename?: 'BusinessWalletPayoutFeeConnection';
  edges: Array<BusinessWalletPayoutFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletPayoutFeeConnectionSort = {
  node?: InputMaybe<BusinessWalletPayoutFeeSort>;
};

export type BusinessWalletPayoutFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeConnectionWhere>>;
  node?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};

export type BusinessWalletPayoutFeeCreateFieldInput = {
  node: BusinessWalletPayoutFeeCreateInput;
};

export type BusinessWalletPayoutFeeCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletFieldInput>;
  createdBy?: InputMaybe<BusinessWalletPayoutFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  defaultPayoutFee?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeFieldInput>;
  fee?: Scalars['Float'];
  feeFlat?: Scalars['Float'];
  feePercentage?: Scalars['Float'];
  isFlatFee?: Scalars['Boolean'];
  updatedBy?: InputMaybe<BusinessWalletPayoutFeeUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletPayoutFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletPayoutFeeCreatedByConnection = {
  __typename?: 'BusinessWalletPayoutFeeCreatedByConnection';
  edges: Array<BusinessWalletPayoutFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletPayoutFeeCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletPayoutFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletPayoutFeeCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletPayoutFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectionWhere>;
};

export type BusinessWalletPayoutFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectionWhere>;
};

export type BusinessWalletPayoutFeeCreatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeCreatedByCreateFieldInput>;
};

export type BusinessWalletPayoutFeeCreatedByRelationship = {
  __typename?: 'BusinessWalletPayoutFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletPayoutFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletPayoutFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletPayoutFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletPayoutFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletPayoutFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectionWhere>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeDefaultPayoutFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeDefaultPayoutFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeNodeAggregationWhereInput>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeConnectFieldInput = {
  connect?: InputMaybe<DefaultPayoutFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultPayoutFeeConnectWhere>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletPayoutFeeDefaultPayoutFeeConnectOrCreateFieldInputOnCreate;
  where: DefaultPayoutFeeConnectOrCreateWhere;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeConnectOrCreateFieldInputOnCreate = {
  node: DefaultPayoutFeeOnCreateInput;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeConnection = {
  __typename?: 'BusinessWalletPayoutFeeDefaultPayoutFeeConnection';
  edges: Array<BusinessWalletPayoutFeeDefaultPayoutFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeConnectionSort = {
  node?: InputMaybe<DefaultPayoutFeeSort>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>>;
  node?: InputMaybe<DefaultPayoutFeeWhere>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeCreateFieldInput = {
  node: DefaultPayoutFeeCreateInput;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeDefaultPayoutFeeAggregationSelection = {
  __typename?: 'BusinessWalletPayoutFeeDefaultPayoutFeeDefaultPayoutFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletPayoutFeeDefaultPayoutFeeDefaultPayoutFeeNodeAggregateSelection>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeDefaultPayoutFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletPayoutFeeDefaultPayoutFeeDefaultPayoutFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  feeFlat: FloatAggregateSelectionNonNullable;
  feePercentage: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeDeleteFieldInput = {
  delete?: InputMaybe<DefaultPayoutFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultPayoutFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeCreateFieldInput>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeDefaultPayoutFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeDefaultPayoutFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  feeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeRelationship = {
  __typename?: 'BusinessWalletPayoutFeeDefaultPayoutFeeRelationship';
  cursor: Scalars['String'];
  node: DefaultPayoutFee;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeUpdateConnectionInput = {
  node?: InputMaybe<DefaultPayoutFeeUpdateInput>;
};

export type BusinessWalletPayoutFeeDefaultPayoutFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>;
};

export type BusinessWalletPayoutFeeDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletPayoutFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
};

export type BusinessWalletPayoutFeeDeleteInput = {
  businessWallet?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessWalletPayoutFeeCreatedByDeleteFieldInput>;
  defaultPayoutFee?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletPayoutFeeUpdatedByDeleteFieldInput>;
};

export type BusinessWalletPayoutFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletPayoutFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
};

export type BusinessWalletPayoutFeeDisconnectInput = {
  businessWallet?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletPayoutFeeCreatedByDisconnectFieldInput>;
  defaultPayoutFee?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletPayoutFeeUpdatedByDisconnectFieldInput>;
};

export type BusinessWalletPayoutFeeEdge = {
  __typename?: 'BusinessWalletPayoutFeeEdge';
  cursor: Scalars['String'];
  node: BusinessWalletPayoutFee;
};

export type BusinessWalletPayoutFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletPayoutFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeCreateFieldInput>;
};

export type BusinessWalletPayoutFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  feeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletPayoutFeeOnCreateInput = {
  currency: Scalars['String'];
  fee?: Scalars['Float'];
  feeFlat?: Scalars['Float'];
  feePercentage?: Scalars['Float'];
  isFlatFee?: Scalars['Boolean'];
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletPayoutFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletPayoutFeeSort objects to sort BusinessWalletPayoutFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletPayoutFeeSort>>;
};

export type BusinessWalletPayoutFeeRelationInput = {
  businessWallet?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletCreateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletPayoutFeeCreatedByCreateFieldInput>;
  defaultPayoutFee?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletPayoutFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletPayoutFeeRelationship = {
  __typename?: 'BusinessWalletPayoutFeeRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletPayoutFee;
};

/** Fields to sort BusinessWalletPayoutFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletPayoutFeeSort object. */
export type BusinessWalletPayoutFeeSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  fee?: InputMaybe<SortDirection>;
  feeFlat?: InputMaybe<SortDirection>;
  feePercentage?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isFlatFee?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessWalletPayoutFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletPayoutFeeUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletPayoutFeeUpdateInput>;
};

export type BusinessWalletPayoutFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletPayoutFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletPayoutFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletPayoutFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletPayoutFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
};

export type BusinessWalletPayoutFeeUpdateInput = {
  businessWallet?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletUpdateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletPayoutFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  defaultPayoutFee?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeUpdateFieldInput>;
  fee?: InputMaybe<Scalars['Float']>;
  feeFlat?: InputMaybe<Scalars['Float']>;
  feeFlat_ADD?: InputMaybe<Scalars['Float']>;
  feeFlat_DIVIDE?: InputMaybe<Scalars['Float']>;
  feeFlat_MULTIPLY?: InputMaybe<Scalars['Float']>;
  feeFlat_SUBTRACT?: InputMaybe<Scalars['Float']>;
  feePercentage?: InputMaybe<Scalars['Float']>;
  feePercentage_ADD?: InputMaybe<Scalars['Float']>;
  feePercentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  feePercentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  feePercentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  fee_ADD?: InputMaybe<Scalars['Float']>;
  fee_DIVIDE?: InputMaybe<Scalars['Float']>;
  fee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  fee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  isFlatFee?: InputMaybe<Scalars['Boolean']>;
  updatedBy?: InputMaybe<BusinessWalletPayoutFeeUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletPayoutFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletPayoutFeeUpdatedByConnection = {
  __typename?: 'BusinessWalletPayoutFeeUpdatedByConnection';
  edges: Array<BusinessWalletPayoutFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletPayoutFeeUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletPayoutFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletPayoutFeeUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletPayoutFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletPayoutFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletPayoutFeeUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletPayoutFeeUpdatedByRelationship = {
  __typename?: 'BusinessWalletPayoutFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletPayoutFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletPayoutFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletPayoutFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletPayoutFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletPayoutFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletPayoutFeeWhere = {
  AND?: InputMaybe<Array<BusinessWalletPayoutFeeWhere>>;
  NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  OR?: InputMaybe<Array<BusinessWalletPayoutFeeWhere>>;
  businessWallet?: InputMaybe<BusinessWalletWhere>;
  businessWalletAggregate?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletAggregateInput>;
  businessWalletConnection?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>;
  businessWalletConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeBusinessWalletConnectionWhere>;
  businessWallet_NOT?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  defaultPayoutFee?: InputMaybe<DefaultPayoutFeeWhere>;
  defaultPayoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeAggregateInput>;
  defaultPayoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>;
  defaultPayoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeDefaultPayoutFeeConnectionWhere>;
  defaultPayoutFee_NOT?: InputMaybe<DefaultPayoutFeeWhere>;
  fee?: InputMaybe<Scalars['Float']>;
  feeFlat?: InputMaybe<Scalars['Float']>;
  feeFlat_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_IN?: InputMaybe<Array<Scalars['Float']>>;
  feeFlat_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage?: InputMaybe<Scalars['Float']>;
  feePercentage_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  feePercentage_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_LTE?: InputMaybe<Scalars['Float']>;
  fee_GT?: InputMaybe<Scalars['Float']>;
  fee_GTE?: InputMaybe<Scalars['Float']>;
  fee_IN?: InputMaybe<Array<Scalars['Float']>>;
  fee_LT?: InputMaybe<Scalars['Float']>;
  fee_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isFlatFee?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletPayoutFeesConnection = {
  __typename?: 'BusinessWalletPayoutFeesConnection';
  edges: Array<BusinessWalletPayoutFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletRelationInput = {
  accounts?: InputMaybe<Array<BusinessWalletAccountsCreateFieldInput>>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionCreateFieldInput>;
  business?: InputMaybe<BusinessWalletBusinessCreateFieldInput>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeCreateFieldInput>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeCreateFieldInput>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitCreateFieldInput>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeCreateFieldInput>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeCreateFieldInput>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeCreateFieldInput>;
  tierCommissions?: InputMaybe<Array<BusinessWalletTierCommissionsCreateFieldInput>>;
};

export type BusinessWalletRollingReserveFee = {
  __typename?: 'BusinessWalletRollingReserveFee';
  businessWallet: BusinessWallet;
  businessWalletAggregate?: Maybe<BusinessWalletRollingReserveFeeBusinessWalletBusinessWalletAggregationSelection>;
  businessWalletConnection: BusinessWalletRollingReserveFeeBusinessWalletConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessWalletRollingReserveFeeCreatedByConnection;
  currency: Scalars['String'];
  defaultRollingReserveFee: DefaultRollingReserveFee;
  defaultRollingReserveFeeAggregate?: Maybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDefaultRollingReserveFeeAggregationSelection>;
  defaultRollingReserveFeeConnection: BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnection;
  id: Scalars['ID'];
  percentage: Scalars['Float'];
  releaseDays: Scalars['Int'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessWalletRollingReserveFeeUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessWalletRollingReserveFeeBusinessWalletArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletRollingReserveFeeBusinessWalletAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletRollingReserveFeeBusinessWalletConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletRollingReserveFeeBusinessWalletConnectionSort>>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>;
};


export type BusinessWalletRollingReserveFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletRollingReserveFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletRollingReserveFeeCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>;
};


export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultRollingReserveFeeOptions>;
  where?: InputMaybe<DefaultRollingReserveFeeWhere>;
};


export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultRollingReserveFeeWhere>;
};


export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>;
};


export type BusinessWalletRollingReserveFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletRollingReserveFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletRollingReserveFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletRollingReserveFeeNodeAggregationWhereInput>;
};

export type BusinessWalletRollingReserveFeeAggregateSelection = {
  __typename?: 'BusinessWalletRollingReserveFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  percentage: FloatAggregateSelectionNonNullable;
  releaseDays: IntAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletRollingReserveFeeBusinessWalletAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeBusinessWalletAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeBusinessWalletAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletNodeAggregationWhereInput>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletBusinessWalletAggregationSelection = {
  __typename?: 'BusinessWalletRollingReserveFeeBusinessWalletBusinessWalletAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletRollingReserveFeeBusinessWalletBusinessWalletNodeAggregateSelection>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletBusinessWalletNodeAggregateSelection = {
  __typename?: 'BusinessWalletRollingReserveFeeBusinessWalletBusinessWalletNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletRollingReserveFeeBusinessWalletConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletConnectOrCreateFieldInput = {
  onCreate: BusinessWalletRollingReserveFeeBusinessWalletConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessWalletRollingReserveFeeBusinessWalletConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessWalletRollingReserveFeeBusinessWalletConnection = {
  __typename?: 'BusinessWalletRollingReserveFeeBusinessWalletConnection';
  edges: Array<BusinessWalletRollingReserveFeeBusinessWalletRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletRollingReserveFeeBusinessWalletConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessWalletRollingReserveFeeBusinessWalletDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletCreateFieldInput>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeBusinessWalletNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeBusinessWalletNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletRelationship = {
  __typename?: 'BusinessWalletRollingReserveFeeBusinessWalletRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletRollingReserveFeeBusinessWalletUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessWalletRollingReserveFeeBusinessWalletUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletRollingReserveFeeConnectWhere>;
};

export type BusinessWalletRollingReserveFeeConnectInput = {
  businessWallet?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectFieldInput>;
  defaultRollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectFieldInput>;
};

export type BusinessWalletRollingReserveFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletRollingReserveFeeConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletRollingReserveFeeConnectOrCreateWhere;
};

export type BusinessWalletRollingReserveFeeConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletRollingReserveFeeOnCreateInput;
};

export type BusinessWalletRollingReserveFeeConnectOrCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectOrCreateFieldInput>;
  defaultRollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectOrCreateFieldInput>;
};

export type BusinessWalletRollingReserveFeeConnectOrCreateWhere = {
  node: BusinessWalletRollingReserveFeeUniqueWhere;
};

export type BusinessWalletRollingReserveFeeConnectWhere = {
  node: BusinessWalletRollingReserveFeeWhere;
};

export type BusinessWalletRollingReserveFeeConnection = {
  __typename?: 'BusinessWalletRollingReserveFeeConnection';
  edges: Array<BusinessWalletRollingReserveFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletRollingReserveFeeConnectionSort = {
  node?: InputMaybe<BusinessWalletRollingReserveFeeSort>;
};

export type BusinessWalletRollingReserveFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeConnectionWhere>>;
  node?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};

export type BusinessWalletRollingReserveFeeCreateFieldInput = {
  node: BusinessWalletRollingReserveFeeCreateInput;
};

export type BusinessWalletRollingReserveFeeCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletFieldInput>;
  createdBy?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  defaultRollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeFieldInput>;
  percentage?: Scalars['Float'];
  releaseDays?: Scalars['Int'];
  updatedBy?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletRollingReserveFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletRollingReserveFeeCreatedByConnection = {
  __typename?: 'BusinessWalletRollingReserveFeeCreatedByConnection';
  edges: Array<BusinessWalletRollingReserveFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletRollingReserveFeeCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletRollingReserveFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletRollingReserveFeeCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletRollingReserveFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeCreatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByCreateFieldInput>;
};

export type BusinessWalletRollingReserveFeeCreatedByRelationship = {
  __typename?: 'BusinessWalletRollingReserveFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletRollingReserveFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletRollingReserveFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeNodeAggregationWhereInput>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectFieldInput = {
  connect?: InputMaybe<DefaultRollingReserveFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultRollingReserveFeeConnectWhere>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectOrCreateFieldInputOnCreate;
  where: DefaultRollingReserveFeeConnectOrCreateWhere;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectOrCreateFieldInputOnCreate = {
  node: DefaultRollingReserveFeeOnCreateInput;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnection = {
  __typename?: 'BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnection';
  edges: Array<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionSort = {
  node?: InputMaybe<DefaultRollingReserveFeeSort>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>>;
  node?: InputMaybe<DefaultRollingReserveFeeWhere>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeCreateFieldInput = {
  node: DefaultRollingReserveFeeCreateInput;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDefaultRollingReserveFeeAggregationSelection = {
  __typename?: 'BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDefaultRollingReserveFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDefaultRollingReserveFeeNodeAggregateSelection>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDefaultRollingReserveFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDefaultRollingReserveFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  percentage: FloatAggregateSelectionNonNullable;
  releaseDays: IntAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDeleteFieldInput = {
  delete?: InputMaybe<DefaultRollingReserveFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultRollingReserveFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeCreateFieldInput>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  percentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  percentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  percentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  percentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  percentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  percentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  percentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  percentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  percentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  percentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  percentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  percentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  percentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  releaseDays_MAX_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_LTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_LTE?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeRelationship = {
  __typename?: 'BusinessWalletRollingReserveFeeDefaultRollingReserveFeeRelationship';
  cursor: Scalars['String'];
  node: DefaultRollingReserveFee;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeUpdateConnectionInput = {
  node?: InputMaybe<DefaultRollingReserveFeeUpdateInput>;
};

export type BusinessWalletRollingReserveFeeDefaultRollingReserveFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletRollingReserveFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeDeleteInput = {
  businessWallet?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByDeleteFieldInput>;
  defaultRollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByDeleteFieldInput>;
};

export type BusinessWalletRollingReserveFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletRollingReserveFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeDisconnectInput = {
  businessWallet?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByDisconnectFieldInput>;
  defaultRollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByDisconnectFieldInput>;
};

export type BusinessWalletRollingReserveFeeEdge = {
  __typename?: 'BusinessWalletRollingReserveFeeEdge';
  cursor: Scalars['String'];
  node: BusinessWalletRollingReserveFee;
};

export type BusinessWalletRollingReserveFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletRollingReserveFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeCreateFieldInput>;
};

export type BusinessWalletRollingReserveFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  percentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  percentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  percentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  percentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  percentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  percentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  percentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  percentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  percentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  percentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  percentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  percentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  percentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  releaseDays_MAX_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_LTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_LTE?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletRollingReserveFeeOnCreateInput = {
  currency: Scalars['String'];
  percentage?: Scalars['Float'];
  releaseDays?: Scalars['Int'];
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletRollingReserveFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletRollingReserveFeeSort objects to sort BusinessWalletRollingReserveFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletRollingReserveFeeSort>>;
};

export type BusinessWalletRollingReserveFeeRelationInput = {
  businessWallet?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletCreateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByCreateFieldInput>;
  defaultRollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletRollingReserveFeeRelationship = {
  __typename?: 'BusinessWalletRollingReserveFeeRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletRollingReserveFee;
};

/** Fields to sort BusinessWalletRollingReserveFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletRollingReserveFeeSort object. */
export type BusinessWalletRollingReserveFeeSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  percentage?: InputMaybe<SortDirection>;
  releaseDays?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessWalletRollingReserveFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletRollingReserveFeeUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletRollingReserveFeeUpdateInput>;
};

export type BusinessWalletRollingReserveFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletRollingReserveFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletRollingReserveFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletRollingReserveFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletRollingReserveFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeUpdateInput = {
  businessWallet?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletUpdateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  defaultRollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeUpdateFieldInput>;
  percentage?: InputMaybe<Scalars['Float']>;
  percentage_ADD?: InputMaybe<Scalars['Float']>;
  percentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  percentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  percentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  releaseDays?: InputMaybe<Scalars['Int']>;
  releaseDays_DECREMENT?: InputMaybe<Scalars['Int']>;
  releaseDays_INCREMENT?: InputMaybe<Scalars['Int']>;
  updatedBy?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletRollingReserveFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletRollingReserveFeeUpdatedByConnection = {
  __typename?: 'BusinessWalletRollingReserveFeeUpdatedByConnection';
  edges: Array<BusinessWalletRollingReserveFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletRollingReserveFeeUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletRollingReserveFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletRollingReserveFeeUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletRollingReserveFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletRollingReserveFeeUpdatedByRelationship = {
  __typename?: 'BusinessWalletRollingReserveFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletRollingReserveFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletRollingReserveFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletRollingReserveFeeWhere = {
  AND?: InputMaybe<Array<BusinessWalletRollingReserveFeeWhere>>;
  NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  OR?: InputMaybe<Array<BusinessWalletRollingReserveFeeWhere>>;
  businessWallet?: InputMaybe<BusinessWalletWhere>;
  businessWalletAggregate?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletAggregateInput>;
  businessWalletConnection?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>;
  businessWalletConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeBusinessWalletConnectionWhere>;
  businessWallet_NOT?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  defaultRollingReserveFee?: InputMaybe<DefaultRollingReserveFeeWhere>;
  defaultRollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeAggregateInput>;
  defaultRollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>;
  defaultRollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeDefaultRollingReserveFeeConnectionWhere>;
  defaultRollingReserveFee_NOT?: InputMaybe<DefaultRollingReserveFeeWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  percentage?: InputMaybe<Scalars['Float']>;
  percentage_GT?: InputMaybe<Scalars['Float']>;
  percentage_GTE?: InputMaybe<Scalars['Float']>;
  percentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  percentage_LT?: InputMaybe<Scalars['Float']>;
  percentage_LTE?: InputMaybe<Scalars['Float']>;
  releaseDays?: InputMaybe<Scalars['Int']>;
  releaseDays_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_IN?: InputMaybe<Array<Scalars['Int']>>;
  releaseDays_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletRollingReserveFeesConnection = {
  __typename?: 'BusinessWalletRollingReserveFeesConnection';
  edges: Array<BusinessWalletRollingReserveFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletSettlementFee = {
  __typename?: 'BusinessWalletSettlementFee';
  businessWallet: BusinessWallet;
  businessWalletAggregate?: Maybe<BusinessWalletSettlementFeeBusinessWalletBusinessWalletAggregationSelection>;
  businessWalletConnection: BusinessWalletSettlementFeeBusinessWalletConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessWalletSettlementFeeCreatedByConnection;
  currency: Scalars['String'];
  defaultSettlementFee: DefaultSettlementFee;
  defaultSettlementFeeAggregate?: Maybe<BusinessWalletSettlementFeeDefaultSettlementFeeDefaultSettlementFeeAggregationSelection>;
  defaultSettlementFeeConnection: BusinessWalletSettlementFeeDefaultSettlementFeeConnection;
  id: Scalars['ID'];
  isSepaFeeFlat: Scalars['Boolean'];
  isSwiftFeeFlat: Scalars['Boolean'];
  sepaFee: Scalars['Float'];
  sepaFeeFlat: Scalars['Float'];
  sepaFeePercentage: Scalars['Float'];
  swiftFee: Scalars['Float'];
  swiftFeeFlat: Scalars['Float'];
  swiftFeePercentage: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessWalletSettlementFeeUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessWalletSettlementFeeBusinessWalletArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletSettlementFeeBusinessWalletAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletSettlementFeeBusinessWalletConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletSettlementFeeBusinessWalletConnectionSort>>;
  where?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>;
};


export type BusinessWalletSettlementFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletSettlementFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletSettlementFeeCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectionWhere>;
};


export type BusinessWalletSettlementFeeDefaultSettlementFeeArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultSettlementFeeOptions>;
  where?: InputMaybe<DefaultSettlementFeeWhere>;
};


export type BusinessWalletSettlementFeeDefaultSettlementFeeAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultSettlementFeeWhere>;
};


export type BusinessWalletSettlementFeeDefaultSettlementFeeConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionSort>>;
  where?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>;
};


export type BusinessWalletSettlementFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletSettlementFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletSettlementFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletSettlementFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletSettlementFeeNodeAggregationWhereInput>;
};

export type BusinessWalletSettlementFeeAggregateSelection = {
  __typename?: 'BusinessWalletSettlementFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  sepaFee: FloatAggregateSelectionNonNullable;
  sepaFeeFlat: FloatAggregateSelectionNonNullable;
  sepaFeePercentage: FloatAggregateSelectionNonNullable;
  swiftFee: FloatAggregateSelectionNonNullable;
  swiftFeeFlat: FloatAggregateSelectionNonNullable;
  swiftFeePercentage: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletSettlementFeeBusinessWalletAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeBusinessWalletAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeBusinessWalletAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletNodeAggregationWhereInput>;
};

export type BusinessWalletSettlementFeeBusinessWalletBusinessWalletAggregationSelection = {
  __typename?: 'BusinessWalletSettlementFeeBusinessWalletBusinessWalletAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletSettlementFeeBusinessWalletBusinessWalletNodeAggregateSelection>;
};

export type BusinessWalletSettlementFeeBusinessWalletBusinessWalletNodeAggregateSelection = {
  __typename?: 'BusinessWalletSettlementFeeBusinessWalletBusinessWalletNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletSettlementFeeBusinessWalletConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessWalletSettlementFeeBusinessWalletConnectOrCreateFieldInput = {
  onCreate: BusinessWalletSettlementFeeBusinessWalletConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessWalletSettlementFeeBusinessWalletConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessWalletSettlementFeeBusinessWalletConnection = {
  __typename?: 'BusinessWalletSettlementFeeBusinessWalletConnection';
  edges: Array<BusinessWalletSettlementFeeBusinessWalletRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletSettlementFeeBusinessWalletConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessWalletSettlementFeeBusinessWalletConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessWalletSettlementFeeBusinessWalletCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessWalletSettlementFeeBusinessWalletDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletSettlementFeeBusinessWalletDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletSettlementFeeBusinessWalletFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletCreateFieldInput>;
};

export type BusinessWalletSettlementFeeBusinessWalletNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeBusinessWalletNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeBusinessWalletNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletSettlementFeeBusinessWalletRelationship = {
  __typename?: 'BusinessWalletSettlementFeeBusinessWalletRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletSettlementFeeBusinessWalletUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessWalletSettlementFeeBusinessWalletUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>;
};

export type BusinessWalletSettlementFeeConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletSettlementFeeConnectWhere>;
};

export type BusinessWalletSettlementFeeConnectInput = {
  businessWallet?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectFieldInput>;
  defaultSettlementFee?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectFieldInput>;
};

export type BusinessWalletSettlementFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletSettlementFeeConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletSettlementFeeConnectOrCreateWhere;
};

export type BusinessWalletSettlementFeeConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletSettlementFeeOnCreateInput;
};

export type BusinessWalletSettlementFeeConnectOrCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectOrCreateFieldInput>;
  defaultSettlementFee?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectOrCreateFieldInput>;
};

export type BusinessWalletSettlementFeeConnectOrCreateWhere = {
  node: BusinessWalletSettlementFeeUniqueWhere;
};

export type BusinessWalletSettlementFeeConnectWhere = {
  node: BusinessWalletSettlementFeeWhere;
};

export type BusinessWalletSettlementFeeConnection = {
  __typename?: 'BusinessWalletSettlementFeeConnection';
  edges: Array<BusinessWalletSettlementFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletSettlementFeeConnectionSort = {
  node?: InputMaybe<BusinessWalletSettlementFeeSort>;
};

export type BusinessWalletSettlementFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeConnectionWhere>>;
  node?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};

export type BusinessWalletSettlementFeeCreateFieldInput = {
  node: BusinessWalletSettlementFeeCreateInput;
};

export type BusinessWalletSettlementFeeCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletFieldInput>;
  createdBy?: InputMaybe<BusinessWalletSettlementFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  defaultSettlementFee?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeFieldInput>;
  isSepaFeeFlat?: Scalars['Boolean'];
  isSwiftFeeFlat?: Scalars['Boolean'];
  sepaFee?: Scalars['Float'];
  sepaFeeFlat?: Scalars['Float'];
  sepaFeePercentage?: Scalars['Float'];
  swiftFee?: Scalars['Float'];
  swiftFeeFlat?: Scalars['Float'];
  swiftFeePercentage?: Scalars['Float'];
  updatedBy?: InputMaybe<BusinessWalletSettlementFeeUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletSettlementFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletSettlementFeeCreatedByConnection = {
  __typename?: 'BusinessWalletSettlementFeeCreatedByConnection';
  edges: Array<BusinessWalletSettlementFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletSettlementFeeCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletSettlementFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletSettlementFeeCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletSettlementFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectionWhere>;
};

export type BusinessWalletSettlementFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectionWhere>;
};

export type BusinessWalletSettlementFeeCreatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeCreatedByCreateFieldInput>;
};

export type BusinessWalletSettlementFeeCreatedByRelationship = {
  __typename?: 'BusinessWalletSettlementFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletSettlementFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletSettlementFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletSettlementFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletSettlementFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletSettlementFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectionWhere>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeDefaultSettlementFeeAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeDefaultSettlementFeeAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeNodeAggregationWhereInput>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeConnectFieldInput = {
  connect?: InputMaybe<DefaultSettlementFeeConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultSettlementFeeConnectWhere>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeConnectOrCreateFieldInput = {
  onCreate: BusinessWalletSettlementFeeDefaultSettlementFeeConnectOrCreateFieldInputOnCreate;
  where: DefaultSettlementFeeConnectOrCreateWhere;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeConnectOrCreateFieldInputOnCreate = {
  node: DefaultSettlementFeeOnCreateInput;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeConnection = {
  __typename?: 'BusinessWalletSettlementFeeDefaultSettlementFeeConnection';
  edges: Array<BusinessWalletSettlementFeeDefaultSettlementFeeRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeConnectionSort = {
  node?: InputMaybe<DefaultSettlementFeeSort>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>>;
  node?: InputMaybe<DefaultSettlementFeeWhere>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeCreateFieldInput = {
  node: DefaultSettlementFeeCreateInput;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeDefaultSettlementFeeAggregationSelection = {
  __typename?: 'BusinessWalletSettlementFeeDefaultSettlementFeeDefaultSettlementFeeAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletSettlementFeeDefaultSettlementFeeDefaultSettlementFeeNodeAggregateSelection>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeDefaultSettlementFeeNodeAggregateSelection = {
  __typename?: 'BusinessWalletSettlementFeeDefaultSettlementFeeDefaultSettlementFeeNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  sepaFee: FloatAggregateSelectionNonNullable;
  sepaFeeFlat: FloatAggregateSelectionNonNullable;
  sepaFeePercentage: FloatAggregateSelectionNonNullable;
  swiftFee: FloatAggregateSelectionNonNullable;
  swiftFeeFlat: FloatAggregateSelectionNonNullable;
  swiftFeePercentage: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeDeleteFieldInput = {
  delete?: InputMaybe<DefaultSettlementFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultSettlementFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeCreateFieldInput>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeDefaultSettlementFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeDefaultSettlementFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  sepaFeeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeRelationship = {
  __typename?: 'BusinessWalletSettlementFeeDefaultSettlementFeeRelationship';
  cursor: Scalars['String'];
  node: DefaultSettlementFee;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeUpdateConnectionInput = {
  node?: InputMaybe<DefaultSettlementFeeUpdateInput>;
};

export type BusinessWalletSettlementFeeDefaultSettlementFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>;
};

export type BusinessWalletSettlementFeeDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletSettlementFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
};

export type BusinessWalletSettlementFeeDeleteInput = {
  businessWallet?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessWalletSettlementFeeCreatedByDeleteFieldInput>;
  defaultSettlementFee?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletSettlementFeeUpdatedByDeleteFieldInput>;
};

export type BusinessWalletSettlementFeeDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletSettlementFeeDisconnectInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
};

export type BusinessWalletSettlementFeeDisconnectInput = {
  businessWallet?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletSettlementFeeCreatedByDisconnectFieldInput>;
  defaultSettlementFee?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletSettlementFeeUpdatedByDisconnectFieldInput>;
};

export type BusinessWalletSettlementFeeEdge = {
  __typename?: 'BusinessWalletSettlementFeeEdge';
  cursor: Scalars['String'];
  node: BusinessWalletSettlementFee;
};

export type BusinessWalletSettlementFeeFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletSettlementFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeCreateFieldInput>;
};

export type BusinessWalletSettlementFeeNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  sepaFeeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletSettlementFeeOnCreateInput = {
  currency: Scalars['String'];
  isSepaFeeFlat?: Scalars['Boolean'];
  isSwiftFeeFlat?: Scalars['Boolean'];
  sepaFee?: Scalars['Float'];
  sepaFeeFlat?: Scalars['Float'];
  sepaFeePercentage?: Scalars['Float'];
  swiftFee?: Scalars['Float'];
  swiftFeeFlat?: Scalars['Float'];
  swiftFeePercentage?: Scalars['Float'];
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletSettlementFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletSettlementFeeSort objects to sort BusinessWalletSettlementFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletSettlementFeeSort>>;
};

export type BusinessWalletSettlementFeeRelationInput = {
  businessWallet?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletCreateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletSettlementFeeCreatedByCreateFieldInput>;
  defaultSettlementFee?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletSettlementFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletSettlementFeeRelationship = {
  __typename?: 'BusinessWalletSettlementFeeRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletSettlementFee;
};

/** Fields to sort BusinessWalletSettlementFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletSettlementFeeSort object. */
export type BusinessWalletSettlementFeeSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isSepaFeeFlat?: InputMaybe<SortDirection>;
  isSwiftFeeFlat?: InputMaybe<SortDirection>;
  sepaFee?: InputMaybe<SortDirection>;
  sepaFeeFlat?: InputMaybe<SortDirection>;
  sepaFeePercentage?: InputMaybe<SortDirection>;
  swiftFee?: InputMaybe<SortDirection>;
  swiftFeeFlat?: InputMaybe<SortDirection>;
  swiftFeePercentage?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessWalletSettlementFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletSettlementFeeUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletSettlementFeeUpdateInput>;
};

export type BusinessWalletSettlementFeeUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletSettlementFeeConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletSettlementFeeDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletSettlementFeeDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletSettlementFeeUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
};

export type BusinessWalletSettlementFeeUpdateInput = {
  businessWallet?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletUpdateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletSettlementFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  defaultSettlementFee?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeUpdateFieldInput>;
  isSepaFeeFlat?: InputMaybe<Scalars['Boolean']>;
  isSwiftFeeFlat?: InputMaybe<Scalars['Boolean']>;
  sepaFee?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_ADD?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_DIVIDE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MULTIPLY?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUBTRACT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_ADD?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  sepaFee_ADD?: InputMaybe<Scalars['Float']>;
  sepaFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  sepaFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  sepaFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  swiftFee?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_ADD?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_DIVIDE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MULTIPLY?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUBTRACT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_ADD?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  swiftFee_ADD?: InputMaybe<Scalars['Float']>;
  swiftFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  swiftFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  swiftFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<BusinessWalletSettlementFeeUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletSettlementFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletSettlementFeeUpdatedByConnection = {
  __typename?: 'BusinessWalletSettlementFeeUpdatedByConnection';
  edges: Array<BusinessWalletSettlementFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletSettlementFeeUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletSettlementFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletSettlementFeeUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletSettlementFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletSettlementFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletSettlementFeeUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeUpdatedByCreateFieldInput>;
};

export type BusinessWalletSettlementFeeUpdatedByRelationship = {
  __typename?: 'BusinessWalletSettlementFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletSettlementFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletSettlementFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletSettlementFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletSettlementFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletSettlementFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectionWhere>;
};

export type BusinessWalletSettlementFeeWhere = {
  AND?: InputMaybe<Array<BusinessWalletSettlementFeeWhere>>;
  NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  OR?: InputMaybe<Array<BusinessWalletSettlementFeeWhere>>;
  businessWallet?: InputMaybe<BusinessWalletWhere>;
  businessWalletAggregate?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletAggregateInput>;
  businessWalletConnection?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>;
  businessWalletConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeBusinessWalletConnectionWhere>;
  businessWallet_NOT?: InputMaybe<BusinessWalletWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  defaultSettlementFee?: InputMaybe<DefaultSettlementFeeWhere>;
  defaultSettlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeAggregateInput>;
  defaultSettlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>;
  defaultSettlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeDefaultSettlementFeeConnectionWhere>;
  defaultSettlementFee_NOT?: InputMaybe<DefaultSettlementFeeWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isSepaFeeFlat?: InputMaybe<Scalars['Boolean']>;
  isSwiftFeeFlat?: InputMaybe<Scalars['Boolean']>;
  sepaFee?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_IN?: InputMaybe<Array<Scalars['Float']>>;
  sepaFeeFlat_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  sepaFeePercentage_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  sepaFee_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_IN?: InputMaybe<Array<Scalars['Float']>>;
  swiftFeeFlat_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  swiftFeePercentage_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  swiftFee_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletSettlementFeesConnection = {
  __typename?: 'BusinessWalletSettlementFeesConnection';
  edges: Array<BusinessWalletSettlementFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

/** Fields to sort BusinessWallets by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletSort object. */
export type BusinessWalletSort = {
  balance?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  nickname?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  withdrawableRRBalance?: InputMaybe<SortDirection>;
};

export type BusinessWalletTierCommission = {
  __typename?: 'BusinessWalletTierCommission';
  b2bFee: Scalars['Float'];
  businessWallet: BusinessWallet;
  businessWalletAggregate?: Maybe<BusinessWalletTierCommissionBusinessWalletBusinessWalletAggregationSelection>;
  businessWalletConnection: BusinessWalletTierCommissionBusinessWalletConnection;
  c2bFee: Scalars['Float'];
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: BusinessWalletTierCommissionCreatedByConnection;
  currency: Scalars['String'];
  defaultTierCommission?: Maybe<DefaultTierCommission>;
  defaultTierCommissionAggregate?: Maybe<BusinessWalletTierCommissionDefaultTierCommissionDefaultTierCommissionAggregationSelection>;
  defaultTierCommissionConnection: BusinessWalletTierCommissionDefaultTierCommissionConnection;
  depositVolume: Scalars['Float'];
  id: Scalars['ID'];
  isActive: Scalars['Boolean'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: BusinessWalletTierCommissionUpdatedByConnection;
  usesDefault: Scalars['Boolean'];
};


export type BusinessWalletTierCommissionBusinessWalletArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletTierCommissionBusinessWalletAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type BusinessWalletTierCommissionBusinessWalletConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletTierCommissionBusinessWalletConnectionSort>>;
  where?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectionWhere>;
};


export type BusinessWalletTierCommissionCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletTierCommissionCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletTierCommissionCreatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectionWhere>;
};


export type BusinessWalletTierCommissionDefaultTierCommissionArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<DefaultTierCommissionOptions>;
  where?: InputMaybe<DefaultTierCommissionWhere>;
};


export type BusinessWalletTierCommissionDefaultTierCommissionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<DefaultTierCommissionWhere>;
};


export type BusinessWalletTierCommissionDefaultTierCommissionConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletTierCommissionDefaultTierCommissionConnectionSort>>;
  where?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>;
};


export type BusinessWalletTierCommissionUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type BusinessWalletTierCommissionUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<BusinessWalletTierCommissionUpdatedByConnectionSort>>;
  where?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectionWhere>;
};

export type BusinessWalletTierCommissionAggregateSelection = {
  __typename?: 'BusinessWalletTierCommissionAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletTierCommissionBusinessWalletAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionBusinessWalletAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionBusinessWalletAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionBusinessWalletAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletTierCommissionBusinessWalletNodeAggregationWhereInput>;
};

export type BusinessWalletTierCommissionBusinessWalletBusinessWalletAggregationSelection = {
  __typename?: 'BusinessWalletTierCommissionBusinessWalletBusinessWalletAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletTierCommissionBusinessWalletBusinessWalletNodeAggregateSelection>;
};

export type BusinessWalletTierCommissionBusinessWalletBusinessWalletNodeAggregateSelection = {
  __typename?: 'BusinessWalletTierCommissionBusinessWalletBusinessWalletNodeAggregateSelection';
  balance: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawableRRBalance: FloatAggregateSelectionNonNullable;
};

export type BusinessWalletTierCommissionBusinessWalletConnectFieldInput = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletConnectWhere>;
};

export type BusinessWalletTierCommissionBusinessWalletConnectOrCreateFieldInput = {
  onCreate: BusinessWalletTierCommissionBusinessWalletConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletConnectOrCreateWhere;
};

export type BusinessWalletTierCommissionBusinessWalletConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOnCreateInput;
};

export type BusinessWalletTierCommissionBusinessWalletConnection = {
  __typename?: 'BusinessWalletTierCommissionBusinessWalletConnection';
  edges: Array<BusinessWalletTierCommissionBusinessWalletRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletTierCommissionBusinessWalletConnectionSort = {
  node?: InputMaybe<BusinessWalletSort>;
};

export type BusinessWalletTierCommissionBusinessWalletConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionBusinessWalletConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionBusinessWalletConnectionWhere>>;
  node?: InputMaybe<BusinessWalletWhere>;
};

export type BusinessWalletTierCommissionBusinessWalletCreateFieldInput = {
  node: BusinessWalletCreateInput;
};

export type BusinessWalletTierCommissionBusinessWalletDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectionWhere>;
};

export type BusinessWalletTierCommissionBusinessWalletDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  where?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectionWhere>;
};

export type BusinessWalletTierCommissionBusinessWalletFieldInput = {
  connect?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletTierCommissionBusinessWalletCreateFieldInput>;
};

export type BusinessWalletTierCommissionBusinessWalletNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionBusinessWalletNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionBusinessWalletNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionBusinessWalletNodeAggregationWhereInput>>;
  balance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  balance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MAX_GT?: InputMaybe<Scalars['Float']>;
  balance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  balance_MAX_LT?: InputMaybe<Scalars['Float']>;
  balance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_MIN_GT?: InputMaybe<Scalars['Float']>;
  balance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  balance_MIN_LT?: InputMaybe<Scalars['Float']>;
  balance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  balance_SUM_GT?: InputMaybe<Scalars['Float']>;
  balance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  balance_SUM_LT?: InputMaybe<Scalars['Float']>;
  balance_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletTierCommissionBusinessWalletRelationship = {
  __typename?: 'BusinessWalletTierCommissionBusinessWalletRelationship';
  cursor: Scalars['String'];
  node: BusinessWallet;
};

export type BusinessWalletTierCommissionBusinessWalletUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletUpdateInput>;
};

export type BusinessWalletTierCommissionBusinessWalletUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletTierCommissionBusinessWalletCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletTierCommissionBusinessWalletDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletTierCommissionBusinessWalletDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletTierCommissionBusinessWalletUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectionWhere>;
};

export type BusinessWalletTierCommissionConnectInput = {
  businessWallet?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectFieldInput>;
  defaultTierCommission?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectFieldInput>;
};

export type BusinessWalletTierCommissionConnectOrCreateInput = {
  businessWallet?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectOrCreateFieldInput>;
  defaultTierCommission?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectOrCreateFieldInput>;
};

export type BusinessWalletTierCommissionConnectOrCreateWhere = {
  node: BusinessWalletTierCommissionUniqueWhere;
};

export type BusinessWalletTierCommissionConnectWhere = {
  node: BusinessWalletTierCommissionWhere;
};

export type BusinessWalletTierCommissionCreateInput = {
  b2bFee?: Scalars['Float'];
  businessWallet?: InputMaybe<BusinessWalletTierCommissionBusinessWalletFieldInput>;
  c2bFee?: Scalars['Float'];
  createdBy?: InputMaybe<BusinessWalletTierCommissionCreatedByFieldInput>;
  currency: Scalars['String'];
  defaultTierCommission?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionFieldInput>;
  depositVolume?: Scalars['Float'];
  isActive?: Scalars['Boolean'];
  updatedBy?: InputMaybe<BusinessWalletTierCommissionUpdatedByFieldInput>;
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletTierCommissionCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletTierCommissionCreatedByConnection = {
  __typename?: 'BusinessWalletTierCommissionCreatedByConnection';
  edges: Array<BusinessWalletTierCommissionCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletTierCommissionCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletTierCommissionCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionCreatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletTierCommissionCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletTierCommissionCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectionWhere>;
};

export type BusinessWalletTierCommissionCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectionWhere>;
};

export type BusinessWalletTierCommissionCreatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletTierCommissionCreatedByCreateFieldInput>;
};

export type BusinessWalletTierCommissionCreatedByRelationship = {
  __typename?: 'BusinessWalletTierCommissionCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletTierCommissionCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletTierCommissionCreatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletTierCommissionCreatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletTierCommissionCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletTierCommissionCreatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletTierCommissionCreatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectionWhere>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionDefaultTierCommissionAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionDefaultTierCommissionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionNodeAggregationWhereInput>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionConnectFieldInput = {
  connect?: InputMaybe<DefaultTierCommissionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<DefaultTierCommissionConnectWhere>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionConnectOrCreateFieldInput = {
  onCreate: BusinessWalletTierCommissionDefaultTierCommissionConnectOrCreateFieldInputOnCreate;
  where: DefaultTierCommissionConnectOrCreateWhere;
};

export type BusinessWalletTierCommissionDefaultTierCommissionConnectOrCreateFieldInputOnCreate = {
  node: DefaultTierCommissionOnCreateInput;
};

export type BusinessWalletTierCommissionDefaultTierCommissionConnection = {
  __typename?: 'BusinessWalletTierCommissionDefaultTierCommissionConnection';
  edges: Array<BusinessWalletTierCommissionDefaultTierCommissionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletTierCommissionDefaultTierCommissionConnectionSort = {
  node?: InputMaybe<DefaultTierCommissionSort>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>>;
  node?: InputMaybe<DefaultTierCommissionWhere>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionCreateFieldInput = {
  node: DefaultTierCommissionCreateInput;
};

export type BusinessWalletTierCommissionDefaultTierCommissionDefaultTierCommissionAggregationSelection = {
  __typename?: 'BusinessWalletTierCommissionDefaultTierCommissionDefaultTierCommissionAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<BusinessWalletTierCommissionDefaultTierCommissionDefaultTierCommissionNodeAggregateSelection>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionDefaultTierCommissionNodeAggregateSelection = {
  __typename?: 'BusinessWalletTierCommissionDefaultTierCommissionDefaultTierCommissionNodeAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type BusinessWalletTierCommissionDefaultTierCommissionDeleteFieldInput = {
  delete?: InputMaybe<DefaultTierCommissionDeleteInput>;
  where?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionDisconnectFieldInput = {
  disconnect?: InputMaybe<DefaultTierCommissionDisconnectInput>;
  where?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionFieldInput = {
  connect?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionCreateFieldInput>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionDefaultTierCommissionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionDefaultTierCommissionNodeAggregationWhereInput>>;
  b2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionRelationship = {
  __typename?: 'BusinessWalletTierCommissionDefaultTierCommissionRelationship';
  cursor: Scalars['String'];
  node: DefaultTierCommission;
};

export type BusinessWalletTierCommissionDefaultTierCommissionUpdateConnectionInput = {
  node?: InputMaybe<DefaultTierCommissionUpdateInput>;
};

export type BusinessWalletTierCommissionDefaultTierCommissionUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectFieldInput>;
  connectOrCreate?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectOrCreateFieldInput>;
  create?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>;
};

export type BusinessWalletTierCommissionDeleteInput = {
  businessWallet?: InputMaybe<BusinessWalletTierCommissionBusinessWalletDeleteFieldInput>;
  createdBy?: InputMaybe<BusinessWalletTierCommissionCreatedByDeleteFieldInput>;
  defaultTierCommission?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionDeleteFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletTierCommissionUpdatedByDeleteFieldInput>;
};

export type BusinessWalletTierCommissionDisconnectInput = {
  businessWallet?: InputMaybe<BusinessWalletTierCommissionBusinessWalletDisconnectFieldInput>;
  createdBy?: InputMaybe<BusinessWalletTierCommissionCreatedByDisconnectFieldInput>;
  defaultTierCommission?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionDisconnectFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletTierCommissionUpdatedByDisconnectFieldInput>;
};

export type BusinessWalletTierCommissionOnCreateInput = {
  b2bFee?: Scalars['Float'];
  c2bFee?: Scalars['Float'];
  currency: Scalars['String'];
  depositVolume?: Scalars['Float'];
  isActive?: Scalars['Boolean'];
  usesDefault?: Scalars['Boolean'];
};

export type BusinessWalletTierCommissionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more BusinessWalletTierCommissionSort objects to sort BusinessWalletTierCommissions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<BusinessWalletTierCommissionSort>>;
};

export type BusinessWalletTierCommissionRelationInput = {
  businessWallet?: InputMaybe<BusinessWalletTierCommissionBusinessWalletCreateFieldInput>;
  createdBy?: InputMaybe<BusinessWalletTierCommissionCreatedByCreateFieldInput>;
  defaultTierCommission?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionCreateFieldInput>;
  updatedBy?: InputMaybe<BusinessWalletTierCommissionUpdatedByCreateFieldInput>;
};

/** Fields to sort BusinessWalletTierCommissions by. The order in which sorts are applied is not guaranteed when specifying many fields in one BusinessWalletTierCommissionSort object. */
export type BusinessWalletTierCommissionSort = {
  b2bFee?: InputMaybe<SortDirection>;
  c2bFee?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  depositVolume?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isActive?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  usesDefault?: InputMaybe<SortDirection>;
};

export type BusinessWalletTierCommissionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletTierCommissionUpdateInput = {
  b2bFee?: InputMaybe<Scalars['Float']>;
  b2bFee_ADD?: InputMaybe<Scalars['Float']>;
  b2bFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  b2bFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  b2bFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  businessWallet?: InputMaybe<BusinessWalletTierCommissionBusinessWalletUpdateFieldInput>;
  c2bFee?: InputMaybe<Scalars['Float']>;
  c2bFee_ADD?: InputMaybe<Scalars['Float']>;
  c2bFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  c2bFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  c2bFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  createdBy?: InputMaybe<BusinessWalletTierCommissionCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  defaultTierCommission?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionUpdateFieldInput>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_ADD?: InputMaybe<Scalars['Float']>;
  depositVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  depositVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  depositVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  updatedBy?: InputMaybe<BusinessWalletTierCommissionUpdatedByUpdateFieldInput>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletTierCommissionUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type BusinessWalletTierCommissionUpdatedByConnection = {
  __typename?: 'BusinessWalletTierCommissionUpdatedByConnection';
  edges: Array<BusinessWalletTierCommissionUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletTierCommissionUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type BusinessWalletTierCommissionUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type BusinessWalletTierCommissionUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type BusinessWalletTierCommissionUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectionWhere>;
};

export type BusinessWalletTierCommissionUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectionWhere>;
};

export type BusinessWalletTierCommissionUpdatedByFieldInput = {
  connect?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletTierCommissionUpdatedByCreateFieldInput>;
};

export type BusinessWalletTierCommissionUpdatedByRelationship = {
  __typename?: 'BusinessWalletTierCommissionUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type BusinessWalletTierCommissionUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type BusinessWalletTierCommissionUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectFieldInput>;
  create?: InputMaybe<BusinessWalletTierCommissionUpdatedByCreateFieldInput>;
  delete?: InputMaybe<BusinessWalletTierCommissionUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<BusinessWalletTierCommissionUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<BusinessWalletTierCommissionUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectionWhere>;
};

export type BusinessWalletTierCommissionWhere = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionWhere>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionWhere>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionWhere>>;
  b2bFee?: InputMaybe<Scalars['Float']>;
  b2bFee_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  b2bFee_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_LTE?: InputMaybe<Scalars['Float']>;
  businessWallet?: InputMaybe<BusinessWalletWhere>;
  businessWalletAggregate?: InputMaybe<BusinessWalletTierCommissionBusinessWalletAggregateInput>;
  businessWalletConnection?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectionWhere>;
  businessWalletConnection_NOT?: InputMaybe<BusinessWalletTierCommissionBusinessWalletConnectionWhere>;
  businessWallet_NOT?: InputMaybe<BusinessWalletWhere>;
  c2bFee?: InputMaybe<Scalars['Float']>;
  c2bFee_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  c2bFee_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_LTE?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessWalletTierCommissionCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  defaultTierCommission?: InputMaybe<DefaultTierCommissionWhere>;
  defaultTierCommissionAggregate?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionAggregateInput>;
  defaultTierCommissionConnection?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>;
  defaultTierCommissionConnection_NOT?: InputMaybe<BusinessWalletTierCommissionDefaultTierCommissionConnectionWhere>;
  defaultTierCommission_NOT?: InputMaybe<DefaultTierCommissionWhere>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  depositVolume_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessWalletTierCommissionUpdatedByConnectionWhere>;
  usesDefault?: InputMaybe<Scalars['Boolean']>;
};

export type BusinessWalletTierCommissionsAggregateInput = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionsAggregateInput>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<BusinessWalletTierCommissionsNodeAggregationWhereInput>;
};

export type BusinessWalletTierCommissionsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletTierCommissionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletTierCommissionConnectWhere>;
};

export type BusinessWalletTierCommissionsConnectOrCreateFieldInput = {
  onCreate: BusinessWalletTierCommissionsConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletTierCommissionConnectOrCreateWhere;
};

export type BusinessWalletTierCommissionsConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletTierCommissionOnCreateInput;
};

export type BusinessWalletTierCommissionsConnection = {
  __typename?: 'BusinessWalletTierCommissionsConnection';
  edges: Array<BusinessWalletTierCommissionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWalletTierCommissionsConnectionSort = {
  node?: InputMaybe<BusinessWalletTierCommissionSort>;
};

export type BusinessWalletTierCommissionsConnectionWhere = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionsConnectionWhere>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionsConnectionWhere>>;
  node?: InputMaybe<BusinessWalletTierCommissionWhere>;
};

export type BusinessWalletTierCommissionsCreateFieldInput = {
  node: BusinessWalletTierCommissionCreateInput;
};

export type BusinessWalletTierCommissionsDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletTierCommissionDeleteInput>;
  where?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
};

export type BusinessWalletTierCommissionsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletTierCommissionDisconnectInput>;
  where?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
};

export type BusinessWalletTierCommissionsFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletTierCommissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessWalletTierCommissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessWalletTierCommissionsCreateFieldInput>>;
};

export type BusinessWalletTierCommissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<BusinessWalletTierCommissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<BusinessWalletTierCommissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<BusinessWalletTierCommissionsNodeAggregationWhereInput>>;
  b2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type BusinessWalletTierCommissionsRelationship = {
  __typename?: 'BusinessWalletTierCommissionsRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletTierCommission;
};

export type BusinessWalletTierCommissionsUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletTierCommissionUpdateInput>;
};

export type BusinessWalletTierCommissionsUpdateFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletTierCommissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessWalletTierCommissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<BusinessWalletTierCommissionsCreateFieldInput>>;
  delete?: InputMaybe<Array<BusinessWalletTierCommissionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<BusinessWalletTierCommissionsDisconnectFieldInput>>;
  update?: InputMaybe<BusinessWalletTierCommissionsUpdateConnectionInput>;
  where?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
};

export type BusinessWalletUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type BusinessWalletUpdateInput = {
  accounts?: InputMaybe<Array<BusinessWalletAccountsUpdateFieldInput>>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_ADD?: InputMaybe<Scalars['Float']>;
  balance_DIVIDE?: InputMaybe<Scalars['Float']>;
  balance_MULTIPLY?: InputMaybe<Scalars['Float']>;
  balance_SUBTRACT?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionUpdateFieldInput>;
  business?: InputMaybe<BusinessWalletBusinessUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeUpdateFieldInput>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeUpdateFieldInput>;
  nickname?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitUpdateFieldInput>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeUpdateFieldInput>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeUpdateFieldInput>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeUpdateFieldInput>;
  tierCommissions?: InputMaybe<Array<BusinessWalletTierCommissionsUpdateFieldInput>>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_ADD?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_DIVIDE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_MULTIPLY?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_SUBTRACT?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_AdjustmentsbusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_CurrencyExchangefromBusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_CurrencyExchangetoBusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_DailyCommissionVolumebusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_DailyDepositVolumebusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_DailyWithdrawalVolumebusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_DepositsbusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_LedgersfromBusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_LedgerstoBusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_RollingReservesreleaseToBusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletWhere_Remote_Rel_WithdrawalsbusinessWallet = {
  AND?: InputMaybe<Array<BusinessWalletWhere>>;
  NOT?: InputMaybe<BusinessWalletWhere>;
  OR?: InputMaybe<Array<BusinessWalletWhere>>;
  accountsAggregate?: InputMaybe<BusinessWalletAccountsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_ALL?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_NONE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SINGLE?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletAccountsConnections match this filter */
  accountsConnection_SOME?: InputMaybe<BusinessWalletAccountsConnectionWhere>;
  /** Return BusinessWallets where all of the related Accounts match this filter */
  accounts_ALL?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where none of the related Accounts match this filter */
  accounts_NONE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where one of the related Accounts match this filter */
  accounts_SINGLE?: InputMaybe<AccountWhere>;
  /** Return BusinessWallets where some of the related Accounts match this filter */
  accounts_SOME?: InputMaybe<AccountWhere>;
  balance?: InputMaybe<Scalars['Float']>;
  balance_GT?: InputMaybe<Scalars['Float']>;
  balance_GTE?: InputMaybe<Scalars['Float']>;
  balance_IN?: InputMaybe<Array<Scalars['Float']>>;
  balance_LT?: InputMaybe<Scalars['Float']>;
  balance_LTE?: InputMaybe<Scalars['Float']>;
  baseCommission?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  baseCommissionAggregate?: InputMaybe<BusinessWalletBaseCommissionAggregateInput>;
  baseCommissionConnection?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommissionConnection_NOT?: InputMaybe<BusinessWalletBaseCommissionConnectionWhere>;
  baseCommission_NOT?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  business?: InputMaybe<BusinessWhere>;
  businessAggregate?: InputMaybe<BusinessWalletBusinessAggregateInput>;
  businessConnection?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  businessConnection_NOT?: InputMaybe<BusinessWalletBusinessConnectionWhere>;
  business_NOT?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  joiningFee?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  joiningFeeAggregate?: InputMaybe<BusinessWalletJoiningFeeAggregateInput>;
  joiningFeeConnection?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFeeConnection_NOT?: InputMaybe<BusinessWalletJoiningFeeConnectionWhere>;
  joiningFee_NOT?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  maintenanceFee?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  maintenanceFeeAggregate?: InputMaybe<BusinessWalletMaintenanceFeeAggregateInput>;
  maintenanceFeeConnection?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFeeConnection_NOT?: InputMaybe<BusinessWalletMaintenanceFeeConnectionWhere>;
  maintenanceFee_NOT?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  overDraftLimitAggregate?: InputMaybe<BusinessWalletOverDraftLimitAggregateInput>;
  overDraftLimitConnection?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimitConnection_NOT?: InputMaybe<BusinessWalletOverDraftLimitConnectionWhere>;
  overDraftLimit_NOT?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  payoutFee?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  payoutFeeAggregate?: InputMaybe<BusinessWalletPayoutFeeAggregateInput>;
  payoutFeeConnection?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFeeConnection_NOT?: InputMaybe<BusinessWalletPayoutFeeConnectionWhere>;
  payoutFee_NOT?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  rollingReserveFee?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  rollingReserveFeeAggregate?: InputMaybe<BusinessWalletRollingReserveFeeAggregateInput>;
  rollingReserveFeeConnection?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFeeConnection_NOT?: InputMaybe<BusinessWalletRollingReserveFeeConnectionWhere>;
  rollingReserveFee_NOT?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  settlementFee?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  settlementFeeAggregate?: InputMaybe<BusinessWalletSettlementFeeAggregateInput>;
  settlementFeeConnection?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFeeConnection_NOT?: InputMaybe<BusinessWalletSettlementFeeConnectionWhere>;
  settlementFee_NOT?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  tierCommissionsAggregate?: InputMaybe<BusinessWalletTierCommissionsAggregateInput>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_ALL?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_NONE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SINGLE?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissionsConnections match this filter */
  tierCommissionsConnection_SOME?: InputMaybe<BusinessWalletTierCommissionsConnectionWhere>;
  /** Return BusinessWallets where all of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where none of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where one of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return BusinessWallets where some of the related BusinessWalletTierCommissions match this filter */
  tierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawableRRBalance?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_GTE?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawableRRBalance_LT?: InputMaybe<Scalars['Float']>;
  withdrawableRRBalance_LTE?: InputMaybe<Scalars['Float']>;
};

export type BusinessWalletsConnection = {
  __typename?: 'BusinessWalletsConnection';
  edges: Array<BusinessWalletEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type BusinessWhere = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_AdjustmentsparentBusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_Conversationsbusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_CurrencyExchangeparentBusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_DailyCommissionVolumeparentBusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_DailyDepositVolumeparentBusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_DailyWithdrawalVolumeparentBusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_DepositsparentBusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_LedgersparentBusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessWhere_Remote_Rel_WithdrawalsparentBusiness = {
  AND?: InputMaybe<Array<BusinessWhere>>;
  NOT?: InputMaybe<BusinessWhere>;
  OR?: InputMaybe<Array<BusinessWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  baseCurrencyCode?: InputMaybe<CurrencyWhere>;
  baseCurrencyCodeAggregate?: InputMaybe<BusinessBaseCurrencyCodeAggregateInput>;
  baseCurrencyCodeConnection?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCodeConnection_NOT?: InputMaybe<BusinessBaseCurrencyCodeConnectionWhere>;
  baseCurrencyCode_NOT?: InputMaybe<CurrencyWhere>;
  brandsAggregate?: InputMaybe<BusinessBrandsAggregateInput>;
  /** Return Businesses where all of the related BusinessBrandsConnections match this filter */
  brandsConnection_ALL?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBrandsConnections match this filter */
  brandsConnection_NONE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBrandsConnections match this filter */
  brandsConnection_SINGLE?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBrandsConnections match this filter */
  brandsConnection_SOME?: InputMaybe<BusinessBrandsConnectionWhere>;
  /** Return Businesses where all of the related Brands match this filter */
  brands_ALL?: InputMaybe<BrandWhere>;
  /** Return Businesses where none of the related Brands match this filter */
  brands_NONE?: InputMaybe<BrandWhere>;
  /** Return Businesses where one of the related Brands match this filter */
  brands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Businesses where some of the related Brands match this filter */
  brands_SOME?: InputMaybe<BrandWhere>;
  businessCurrencyConversionFees?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<BusinessBusinessCurrencyConversionFeesAggregateInput>;
  businessCurrencyConversionFeesConnection?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFeesConnection_NOT?: InputMaybe<BusinessBusinessCurrencyConversionFeesConnectionWhere>;
  businessCurrencyConversionFees_NOT?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  businessCurrencyConversionMarkupsAggregate?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_ALL?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_NONE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SINGLE?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessCurrencyConversionMarkupsConnections match this filter */
  businessCurrencyConversionMarkupsConnection_SOME?: InputMaybe<BusinessBusinessCurrencyConversionMarkupsConnectionWhere>;
  /** Return Businesses where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return Businesses where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessCurrencyConversionMarkups_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  businessDocumentsAggregate?: InputMaybe<BusinessBusinessDocumentsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_ALL?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_NONE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SINGLE?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessDocumentsConnections match this filter */
  businessDocumentsConnection_SOME?: InputMaybe<BusinessBusinessDocumentsConnectionWhere>;
  /** Return Businesses where all of the related BusinessDocuments match this filter */
  businessDocuments_ALL?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where none of the related BusinessDocuments match this filter */
  businessDocuments_NONE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where one of the related BusinessDocuments match this filter */
  businessDocuments_SINGLE?: InputMaybe<BusinessDocumentWhere>;
  /** Return Businesses where some of the related BusinessDocuments match this filter */
  businessDocuments_SOME?: InputMaybe<BusinessDocumentWhere>;
  businessOwnersAggregate?: InputMaybe<BusinessBusinessOwnersAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_ALL?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_NONE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SINGLE?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessOwnersConnections match this filter */
  businessOwnersConnection_SOME?: InputMaybe<BusinessBusinessOwnersConnectionWhere>;
  /** Return Businesses where all of the related BusinessOwners match this filter */
  businessOwners_ALL?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where none of the related BusinessOwners match this filter */
  businessOwners_NONE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where one of the related BusinessOwners match this filter */
  businessOwners_SINGLE?: InputMaybe<BusinessOwnerWhere>;
  /** Return Businesses where some of the related BusinessOwners match this filter */
  businessOwners_SOME?: InputMaybe<BusinessOwnerWhere>;
  businessType?: InputMaybe<BusinessTypeWhere>;
  businessTypeAggregate?: InputMaybe<BusinessBusinessTypeAggregateInput>;
  businessTypeConnection?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessTypeConnection_NOT?: InputMaybe<BusinessBusinessTypeConnectionWhere>;
  businessType_NOT?: InputMaybe<BusinessTypeWhere>;
  businessTypes?: InputMaybe<BusinessTypeEnum>;
  businessTypes_IN?: InputMaybe<Array<InputMaybe<BusinessTypeEnum>>>;
  businessWalletsAggregate?: InputMaybe<BusinessBusinessWalletsAggregateInput>;
  /** Return Businesses where all of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_ALL?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where none of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_NONE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where one of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SINGLE?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where some of the related BusinessBusinessWalletsConnections match this filter */
  businessWalletsConnection_SOME?: InputMaybe<BusinessBusinessWalletsConnectionWhere>;
  /** Return Businesses where all of the related BusinessWallets match this filter */
  businessWallets_ALL?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where none of the related BusinessWallets match this filter */
  businessWallets_NONE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where one of the related BusinessWallets match this filter */
  businessWallets_SINGLE?: InputMaybe<BusinessWalletWhere>;
  /** Return Businesses where some of the related BusinessWallets match this filter */
  businessWallets_SOME?: InputMaybe<BusinessWalletWhere>;
  contactNumber?: InputMaybe<Scalars['String']>;
  contactNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  contactNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactNumber_MATCHES?: InputMaybe<Scalars['String']>;
  contactNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_CONTAINS?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_ENDS_WITH?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  contactPersonEmailAddress_MATCHES?: InputMaybe<Scalars['String']>;
  contactPersonEmailAddress_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<BusinessCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<BusinessCreatedByConnectionWhere>;
  dateOfIncorporation?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfIncorporation_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference?: InputMaybe<Scalars['String']>;
  depositReference_CONTAINS?: InputMaybe<Scalars['String']>;
  depositReference_ENDS_WITH?: InputMaybe<Scalars['String']>;
  depositReference_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  depositReference_MATCHES?: InputMaybe<Scalars['String']>;
  depositReference_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  incorporationDetails?: InputMaybe<Scalars['String']>;
  incorporationDetails_CONTAINS?: InputMaybe<Scalars['String']>;
  incorporationDetails_ENDS_WITH?: InputMaybe<Scalars['String']>;
  incorporationDetails_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  incorporationDetails_MATCHES?: InputMaybe<Scalars['String']>;
  incorporationDetails_STARTS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl?: InputMaybe<Scalars['String']>;
  logoUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  logoUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  logoUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  logoUrl_MATCHES?: InputMaybe<Scalars['String']>;
  logoUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  merchant?: InputMaybe<MerchantWhere>;
  merchantAggregate?: InputMaybe<BusinessMerchantAggregateInput>;
  merchantConnection?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchantConnection_NOT?: InputMaybe<BusinessMerchantConnectionWhere>;
  merchant_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  nickname?: InputMaybe<Scalars['String']>;
  nickname_CONTAINS?: InputMaybe<Scalars['String']>;
  nickname_ENDS_WITH?: InputMaybe<Scalars['String']>;
  nickname_IN?: InputMaybe<Array<Scalars['String']>>;
  nickname_MATCHES?: InputMaybe<Scalars['String']>;
  nickname_STARTS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact?: InputMaybe<Scalars['String']>;
  phoneContact_CONTAINS?: InputMaybe<Scalars['String']>;
  phoneContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phoneContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phoneContact_MATCHES?: InputMaybe<Scalars['String']>;
  phoneContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_CONTAINS?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_ENDS_WITH?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  placeOfIncorporation_MATCHES?: InputMaybe<Scalars['String']>;
  placeOfIncorporation_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonEmail_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonEmail_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonName_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPersonPhone_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPersonPhone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_CONTAINS?: InputMaybe<Scalars['String']>;
  primaryContactPerson_ENDS_WITH?: InputMaybe<Scalars['String']>;
  primaryContactPerson_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  primaryContactPerson_MATCHES?: InputMaybe<Scalars['String']>;
  primaryContactPerson_STARTS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner?: InputMaybe<Scalars['String']>;
  referralPartner_CONTAINS?: InputMaybe<Scalars['String']>;
  referralPartner_ENDS_WITH?: InputMaybe<Scalars['String']>;
  referralPartner_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  referralPartner_MATCHES?: InputMaybe<Scalars['String']>;
  referralPartner_STARTS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber?: InputMaybe<Scalars['String']>;
  registrationNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  registrationNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  registrationNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  registrationNumber_MATCHES?: InputMaybe<Scalars['String']>;
  registrationNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  requestedCurrencies?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  requestedCurrencies_INCLUDES?: InputMaybe<Scalars['String']>;
  skypeContact?: InputMaybe<Scalars['String']>;
  skypeContact_CONTAINS?: InputMaybe<Scalars['String']>;
  skypeContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  skypeContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  skypeContact_MATCHES?: InputMaybe<Scalars['String']>;
  skypeContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  solutionsNeeded?: InputMaybe<BusinessSolutionWhere>;
  solutionsNeededAggregate?: InputMaybe<BusinessSolutionsNeededAggregateInput>;
  solutionsNeededConnection?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeededConnection_NOT?: InputMaybe<BusinessSolutionsNeededConnectionWhere>;
  solutionsNeeded_NOT?: InputMaybe<BusinessSolutionWhere>;
  status?: InputMaybe<BusinessStatus>;
  status_IN?: InputMaybe<Array<BusinessStatus>>;
  targetMarketsAggregate?: InputMaybe<BusinessTargetMarketsAggregateInput>;
  /** Return Businesses where all of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_ALL?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_NONE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SINGLE?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTargetMarketsConnections match this filter */
  targetMarketsConnection_SOME?: InputMaybe<BusinessTargetMarketsConnectionWhere>;
  /** Return Businesses where all of the related Countries match this filter */
  targetMarkets_ALL?: InputMaybe<CountryWhere>;
  /** Return Businesses where none of the related Countries match this filter */
  targetMarkets_NONE?: InputMaybe<CountryWhere>;
  /** Return Businesses where one of the related Countries match this filter */
  targetMarkets_SINGLE?: InputMaybe<CountryWhere>;
  /** Return Businesses where some of the related Countries match this filter */
  targetMarkets_SOME?: InputMaybe<CountryWhere>;
  targetRegions?: InputMaybe<Array<MarketRegionsType>>;
  targetRegions_INCLUDES?: InputMaybe<MarketRegionsType>;
  teamsAggregate?: InputMaybe<BusinessTeamsAggregateInput>;
  /** Return Businesses where all of the related BusinessTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where none of the related BusinessTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where one of the related BusinessTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where some of the related BusinessTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<BusinessTeamsConnectionWhere>;
  /** Return Businesses where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return Businesses where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return Businesses where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Businesses where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  telegramContact?: InputMaybe<Scalars['String']>;
  telegramContact_CONTAINS?: InputMaybe<Scalars['String']>;
  telegramContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  telegramContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  telegramContact_MATCHES?: InputMaybe<Scalars['String']>;
  telegramContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<BusinessUpdatedByConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  websiteBrand?: InputMaybe<Scalars['String']>;
  websiteBrand_CONTAINS?: InputMaybe<Scalars['String']>;
  websiteBrand_ENDS_WITH?: InputMaybe<Scalars['String']>;
  websiteBrand_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  websiteBrand_MATCHES?: InputMaybe<Scalars['String']>;
  websiteBrand_STARTS_WITH?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact?: InputMaybe<Scalars['String']>;
  whatsappContact_CONTAINS?: InputMaybe<Scalars['String']>;
  whatsappContact_ENDS_WITH?: InputMaybe<Scalars['String']>;
  whatsappContact_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  whatsappContact_MATCHES?: InputMaybe<Scalars['String']>;
  whatsappContact_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type BusinessesConnection = {
  __typename?: 'BusinessesConnection';
  edges: Array<BusinessEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CountriesConnection = {
  __typename?: 'CountriesConnection';
  edges: Array<CountryEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type Country = {
  __typename?: 'Country';
  bank: Array<Bank>;
  bankAggregate?: Maybe<CountryBankBankAggregationSelection>;
  bankConnection: CountryBankConnection;
  businessMarkets: Array<Business>;
  businessMarketsAggregate?: Maybe<CountryBusinessBusinessMarketsAggregationSelection>;
  businessMarketsConnection: CountryBusinessMarketsConnection;
  code: Scalars['String'];
  createdAt: Scalars['DateTime'];
  customers: Array<Customer>;
  customersAggregate?: Maybe<CountryCustomerCustomersAggregationSelection>;
  customersConnection: CountryCustomersConnection;
  name: Scalars['String'];
  updatedAt: Scalars['DateTime'];
};


export type CountryBankArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BankOptions>;
  where?: InputMaybe<BankWhere>;
};


export type CountryBankAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BankWhere>;
};


export type CountryBankConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CountryBankConnectionSort>>;
  where?: InputMaybe<CountryBankConnectionWhere>;
};


export type CountryBusinessMarketsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type CountryBusinessMarketsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type CountryBusinessMarketsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CountryBusinessMarketsConnectionSort>>;
  where?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
};


export type CountryCustomersArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type CountryCustomersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


export type CountryCustomersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CountryCustomersConnectionSort>>;
  where?: InputMaybe<CountryCustomersConnectionWhere>;
};

export type CountryAggregateSelection = {
  __typename?: 'CountryAggregateSelection';
  code: StringAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type CountryBankAggregateInput = {
  AND?: InputMaybe<Array<CountryBankAggregateInput>>;
  NOT?: InputMaybe<CountryBankAggregateInput>;
  OR?: InputMaybe<Array<CountryBankAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CountryBankNodeAggregationWhereInput>;
};

export type CountryBankBankAggregationSelection = {
  __typename?: 'CountryBankBankAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CountryBankBankNodeAggregateSelection>;
};

export type CountryBankBankNodeAggregateSelection = {
  __typename?: 'CountryBankBankNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type CountryBankConnectFieldInput = {
  connect?: InputMaybe<Array<BankConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BankConnectWhere>;
};

export type CountryBankConnectOrCreateFieldInput = {
  onCreate: CountryBankConnectOrCreateFieldInputOnCreate;
  where: BankConnectOrCreateWhere;
};

export type CountryBankConnectOrCreateFieldInputOnCreate = {
  node: BankOnCreateInput;
};

export type CountryBankConnection = {
  __typename?: 'CountryBankConnection';
  edges: Array<CountryBankRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CountryBankConnectionSort = {
  node?: InputMaybe<BankSort>;
};

export type CountryBankConnectionWhere = {
  AND?: InputMaybe<Array<CountryBankConnectionWhere>>;
  NOT?: InputMaybe<CountryBankConnectionWhere>;
  OR?: InputMaybe<Array<CountryBankConnectionWhere>>;
  node?: InputMaybe<BankWhere>;
};

export type CountryBankCreateFieldInput = {
  node: BankCreateInput;
};

export type CountryBankDeleteFieldInput = {
  delete?: InputMaybe<BankDeleteInput>;
  where?: InputMaybe<CountryBankConnectionWhere>;
};

export type CountryBankDisconnectFieldInput = {
  disconnect?: InputMaybe<BankDisconnectInput>;
  where?: InputMaybe<CountryBankConnectionWhere>;
};

export type CountryBankFieldInput = {
  connect?: InputMaybe<Array<CountryBankConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CountryBankConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CountryBankCreateFieldInput>>;
};

export type CountryBankNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CountryBankNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CountryBankNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CountryBankNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  swiftCode_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type CountryBankRelationship = {
  __typename?: 'CountryBankRelationship';
  cursor: Scalars['String'];
  node: Bank;
};

export type CountryBankUpdateConnectionInput = {
  node?: InputMaybe<BankUpdateInput>;
};

export type CountryBankUpdateFieldInput = {
  connect?: InputMaybe<Array<CountryBankConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CountryBankConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CountryBankCreateFieldInput>>;
  delete?: InputMaybe<Array<CountryBankDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CountryBankDisconnectFieldInput>>;
  update?: InputMaybe<CountryBankUpdateConnectionInput>;
  where?: InputMaybe<CountryBankConnectionWhere>;
};

export type CountryBusinessBusinessMarketsAggregationSelection = {
  __typename?: 'CountryBusinessBusinessMarketsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CountryBusinessBusinessMarketsNodeAggregateSelection>;
};

export type CountryBusinessBusinessMarketsNodeAggregateSelection = {
  __typename?: 'CountryBusinessBusinessMarketsNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type CountryBusinessMarketsAggregateInput = {
  AND?: InputMaybe<Array<CountryBusinessMarketsAggregateInput>>;
  NOT?: InputMaybe<CountryBusinessMarketsAggregateInput>;
  OR?: InputMaybe<Array<CountryBusinessMarketsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CountryBusinessMarketsNodeAggregationWhereInput>;
};

export type CountryBusinessMarketsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type CountryBusinessMarketsConnectOrCreateFieldInput = {
  onCreate: CountryBusinessMarketsConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type CountryBusinessMarketsConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type CountryBusinessMarketsConnection = {
  __typename?: 'CountryBusinessMarketsConnection';
  edges: Array<CountryBusinessMarketsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CountryBusinessMarketsConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type CountryBusinessMarketsConnectionWhere = {
  AND?: InputMaybe<Array<CountryBusinessMarketsConnectionWhere>>;
  NOT?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
  OR?: InputMaybe<Array<CountryBusinessMarketsConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type CountryBusinessMarketsCreateFieldInput = {
  node: BusinessCreateInput;
};

export type CountryBusinessMarketsDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
};

export type CountryBusinessMarketsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
};

export type CountryBusinessMarketsFieldInput = {
  connect?: InputMaybe<Array<CountryBusinessMarketsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CountryBusinessMarketsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CountryBusinessMarketsCreateFieldInput>>;
};

export type CountryBusinessMarketsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CountryBusinessMarketsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CountryBusinessMarketsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CountryBusinessMarketsNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type CountryBusinessMarketsRelationship = {
  __typename?: 'CountryBusinessMarketsRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type CountryBusinessMarketsUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type CountryBusinessMarketsUpdateFieldInput = {
  connect?: InputMaybe<Array<CountryBusinessMarketsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CountryBusinessMarketsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CountryBusinessMarketsCreateFieldInput>>;
  delete?: InputMaybe<Array<CountryBusinessMarketsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CountryBusinessMarketsDisconnectFieldInput>>;
  update?: InputMaybe<CountryBusinessMarketsUpdateConnectionInput>;
  where?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
};

export type CountryConnectInput = {
  bank?: InputMaybe<Array<CountryBankConnectFieldInput>>;
  businessMarkets?: InputMaybe<Array<CountryBusinessMarketsConnectFieldInput>>;
  customers?: InputMaybe<Array<CountryCustomersConnectFieldInput>>;
};

export type CountryConnectOrCreateInput = {
  bank?: InputMaybe<Array<CountryBankConnectOrCreateFieldInput>>;
  businessMarkets?: InputMaybe<Array<CountryBusinessMarketsConnectOrCreateFieldInput>>;
  customers?: InputMaybe<Array<CountryCustomersConnectOrCreateFieldInput>>;
};

export type CountryConnectOrCreateWhere = {
  node: CountryUniqueWhere;
};

export type CountryConnectWhere = {
  node: CountryWhere;
};

export type CountryCreateInput = {
  bank?: InputMaybe<CountryBankFieldInput>;
  businessMarkets?: InputMaybe<CountryBusinessMarketsFieldInput>;
  code: Scalars['String'];
  customers?: InputMaybe<CountryCustomersFieldInput>;
  name: Scalars['String'];
};

export type CountryCustomerCustomersAggregationSelection = {
  __typename?: 'CountryCustomerCustomersAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CountryCustomerCustomersNodeAggregateSelection>;
};

export type CountryCustomerCustomersNodeAggregateSelection = {
  __typename?: 'CountryCustomerCustomersNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type CountryCustomersAggregateInput = {
  AND?: InputMaybe<Array<CountryCustomersAggregateInput>>;
  NOT?: InputMaybe<CountryCustomersAggregateInput>;
  OR?: InputMaybe<Array<CountryCustomersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CountryCustomersNodeAggregationWhereInput>;
};

export type CountryCustomersConnectFieldInput = {
  connect?: InputMaybe<Array<CustomerConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CustomerConnectWhere>;
};

export type CountryCustomersConnectOrCreateFieldInput = {
  onCreate: CountryCustomersConnectOrCreateFieldInputOnCreate;
  where: CustomerConnectOrCreateWhere;
};

export type CountryCustomersConnectOrCreateFieldInputOnCreate = {
  node: CustomerOnCreateInput;
};

export type CountryCustomersConnection = {
  __typename?: 'CountryCustomersConnection';
  edges: Array<CountryCustomersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CountryCustomersConnectionSort = {
  node?: InputMaybe<CustomerSort>;
};

export type CountryCustomersConnectionWhere = {
  AND?: InputMaybe<Array<CountryCustomersConnectionWhere>>;
  NOT?: InputMaybe<CountryCustomersConnectionWhere>;
  OR?: InputMaybe<Array<CountryCustomersConnectionWhere>>;
  node?: InputMaybe<CustomerWhere>;
};

export type CountryCustomersCreateFieldInput = {
  node: CustomerCreateInput;
};

export type CountryCustomersDeleteFieldInput = {
  delete?: InputMaybe<CustomerDeleteInput>;
  where?: InputMaybe<CountryCustomersConnectionWhere>;
};

export type CountryCustomersDisconnectFieldInput = {
  disconnect?: InputMaybe<CustomerDisconnectInput>;
  where?: InputMaybe<CountryCustomersConnectionWhere>;
};

export type CountryCustomersFieldInput = {
  connect?: InputMaybe<Array<CountryCustomersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CountryCustomersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CountryCustomersCreateFieldInput>>;
};

export type CountryCustomersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CountryCustomersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CountryCustomersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CountryCustomersNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type CountryCustomersRelationship = {
  __typename?: 'CountryCustomersRelationship';
  cursor: Scalars['String'];
  node: Customer;
};

export type CountryCustomersUpdateConnectionInput = {
  node?: InputMaybe<CustomerUpdateInput>;
};

export type CountryCustomersUpdateFieldInput = {
  connect?: InputMaybe<Array<CountryCustomersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CountryCustomersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CountryCustomersCreateFieldInput>>;
  delete?: InputMaybe<Array<CountryCustomersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CountryCustomersDisconnectFieldInput>>;
  update?: InputMaybe<CountryCustomersUpdateConnectionInput>;
  where?: InputMaybe<CountryCustomersConnectionWhere>;
};

export type CountryDeleteInput = {
  bank?: InputMaybe<Array<CountryBankDeleteFieldInput>>;
  businessMarkets?: InputMaybe<Array<CountryBusinessMarketsDeleteFieldInput>>;
  customers?: InputMaybe<Array<CountryCustomersDeleteFieldInput>>;
};

export type CountryDisconnectInput = {
  bank?: InputMaybe<Array<CountryBankDisconnectFieldInput>>;
  businessMarkets?: InputMaybe<Array<CountryBusinessMarketsDisconnectFieldInput>>;
  customers?: InputMaybe<Array<CountryCustomersDisconnectFieldInput>>;
};

export type CountryEdge = {
  __typename?: 'CountryEdge';
  cursor: Scalars['String'];
  node: Country;
};

export type CountryOnCreateInput = {
  code: Scalars['String'];
  name: Scalars['String'];
};

export type CountryOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more CountrySort objects to sort Countries by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CountrySort>>;
};

export type CountryRelationInput = {
  bank?: InputMaybe<Array<CountryBankCreateFieldInput>>;
  businessMarkets?: InputMaybe<Array<CountryBusinessMarketsCreateFieldInput>>;
  customers?: InputMaybe<Array<CountryCustomersCreateFieldInput>>;
};

/** Fields to sort Countries by. The order in which sorts are applied is not guaranteed when specifying many fields in one CountrySort object. */
export type CountrySort = {
  code?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type CountryUniqueWhere = {
  code?: InputMaybe<Scalars['String']>;
};

export type CountryUpdateInput = {
  bank?: InputMaybe<Array<CountryBankUpdateFieldInput>>;
  businessMarkets?: InputMaybe<Array<CountryBusinessMarketsUpdateFieldInput>>;
  code?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Array<CountryCustomersUpdateFieldInput>>;
  name?: InputMaybe<Scalars['String']>;
};

export type CountryWhere = {
  AND?: InputMaybe<Array<CountryWhere>>;
  NOT?: InputMaybe<CountryWhere>;
  OR?: InputMaybe<Array<CountryWhere>>;
  bankAggregate?: InputMaybe<CountryBankAggregateInput>;
  /** Return Countries where all of the related CountryBankConnections match this filter */
  bankConnection_ALL?: InputMaybe<CountryBankConnectionWhere>;
  /** Return Countries where none of the related CountryBankConnections match this filter */
  bankConnection_NONE?: InputMaybe<CountryBankConnectionWhere>;
  /** Return Countries where one of the related CountryBankConnections match this filter */
  bankConnection_SINGLE?: InputMaybe<CountryBankConnectionWhere>;
  /** Return Countries where some of the related CountryBankConnections match this filter */
  bankConnection_SOME?: InputMaybe<CountryBankConnectionWhere>;
  /** Return Countries where all of the related Banks match this filter */
  bank_ALL?: InputMaybe<BankWhere>;
  /** Return Countries where none of the related Banks match this filter */
  bank_NONE?: InputMaybe<BankWhere>;
  /** Return Countries where one of the related Banks match this filter */
  bank_SINGLE?: InputMaybe<BankWhere>;
  /** Return Countries where some of the related Banks match this filter */
  bank_SOME?: InputMaybe<BankWhere>;
  businessMarketsAggregate?: InputMaybe<CountryBusinessMarketsAggregateInput>;
  /** Return Countries where all of the related CountryBusinessMarketsConnections match this filter */
  businessMarketsConnection_ALL?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
  /** Return Countries where none of the related CountryBusinessMarketsConnections match this filter */
  businessMarketsConnection_NONE?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
  /** Return Countries where one of the related CountryBusinessMarketsConnections match this filter */
  businessMarketsConnection_SINGLE?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
  /** Return Countries where some of the related CountryBusinessMarketsConnections match this filter */
  businessMarketsConnection_SOME?: InputMaybe<CountryBusinessMarketsConnectionWhere>;
  /** Return Countries where all of the related Businesses match this filter */
  businessMarkets_ALL?: InputMaybe<BusinessWhere>;
  /** Return Countries where none of the related Businesses match this filter */
  businessMarkets_NONE?: InputMaybe<BusinessWhere>;
  /** Return Countries where one of the related Businesses match this filter */
  businessMarkets_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Countries where some of the related Businesses match this filter */
  businessMarkets_SOME?: InputMaybe<BusinessWhere>;
  code?: InputMaybe<Scalars['String']>;
  code_CONTAINS?: InputMaybe<Scalars['String']>;
  code_ENDS_WITH?: InputMaybe<Scalars['String']>;
  code_IN?: InputMaybe<Array<Scalars['String']>>;
  code_MATCHES?: InputMaybe<Scalars['String']>;
  code_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  customersAggregate?: InputMaybe<CountryCustomersAggregateInput>;
  /** Return Countries where all of the related CountryCustomersConnections match this filter */
  customersConnection_ALL?: InputMaybe<CountryCustomersConnectionWhere>;
  /** Return Countries where none of the related CountryCustomersConnections match this filter */
  customersConnection_NONE?: InputMaybe<CountryCustomersConnectionWhere>;
  /** Return Countries where one of the related CountryCustomersConnections match this filter */
  customersConnection_SINGLE?: InputMaybe<CountryCustomersConnectionWhere>;
  /** Return Countries where some of the related CountryCustomersConnections match this filter */
  customersConnection_SOME?: InputMaybe<CountryCustomersConnectionWhere>;
  /** Return Countries where all of the related Customers match this filter */
  customers_ALL?: InputMaybe<CustomerWhere>;
  /** Return Countries where none of the related Customers match this filter */
  customers_NONE?: InputMaybe<CustomerWhere>;
  /** Return Countries where one of the related Customers match this filter */
  customers_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Countries where some of the related Customers match this filter */
  customers_SOME?: InputMaybe<CustomerWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type CreateAccountsMutationResponse = {
  __typename?: 'CreateAccountsMutationResponse';
  accounts: Array<Account>;
  info: CreateInfo;
};

export type CreateAlternateMethodSolutionsMutationResponse = {
  __typename?: 'CreateAlternateMethodSolutionsMutationResponse';
  alternateMethodSolutions: Array<AlternateMethodSolution>;
  info: CreateInfo;
};

export type CreateApiKeyResponse = {
  __typename?: 'CreateApiKeyResponse';
  data?: Maybe<Scalars['String']>;
  message: Scalars['String'];
  status: Scalars['String'];
};

export type CreateBankWireSolutionsMutationResponse = {
  __typename?: 'CreateBankWireSolutionsMutationResponse';
  bankWireSolutions: Array<BankWireSolution>;
  info: CreateInfo;
};

export type CreateBanksMutationResponse = {
  __typename?: 'CreateBanksMutationResponse';
  banks: Array<Bank>;
  info: CreateInfo;
};

export type CreateBaseCurrencyConversionRatesMutationResponse = {
  __typename?: 'CreateBaseCurrencyConversionRatesMutationResponse';
  baseCurrencyConversionRates: Array<BaseCurrencyConversionRate>;
  info: CreateInfo;
};

export type CreateBeneficiariesMutationResponse = {
  __typename?: 'CreateBeneficiariesMutationResponse';
  beneficiaries: Array<Beneficiary>;
  info: CreateInfo;
};

export type CreateBrandsMutationResponse = {
  __typename?: 'CreateBrandsMutationResponse';
  brands: Array<Brand>;
  info: CreateInfo;
};

export type CreateBusinessCurrencyConversionFeesMutationResponse = {
  __typename?: 'CreateBusinessCurrencyConversionFeesMutationResponse';
  businessCurrencyConversionFees: Array<BusinessCurrencyConversionFees>;
  info: CreateInfo;
};

export type CreateBusinessCurrencyConversionMarkupsMutationResponse = {
  __typename?: 'CreateBusinessCurrencyConversionMarkupsMutationResponse';
  businessCurrencyConversionMarkups: Array<BusinessCurrencyConversionMarkup>;
  info: CreateInfo;
};

export type CreateBusinessDocumentsMutationResponse = {
  __typename?: 'CreateBusinessDocumentsMutationResponse';
  businessDocuments: Array<BusinessDocument>;
  info: CreateInfo;
};

export type CreateBusinessOwnersMutationResponse = {
  __typename?: 'CreateBusinessOwnersMutationResponse';
  businessOwners: Array<BusinessOwner>;
  info: CreateInfo;
};

export type CreateBusinessSolutionsMutationResponse = {
  __typename?: 'CreateBusinessSolutionsMutationResponse';
  businessSolutions: Array<BusinessSolution>;
  info: CreateInfo;
};

export type CreateBusinessTypesMutationResponse = {
  __typename?: 'CreateBusinessTypesMutationResponse';
  businessTypes: Array<BusinessType>;
  info: CreateInfo;
};

export type CreateBusinessWalletBaseCommissionsMutationResponse = {
  __typename?: 'CreateBusinessWalletBaseCommissionsMutationResponse';
  businessWalletBaseCommissions: Array<BusinessWalletBaseCommission>;
  info: CreateInfo;
};

export type CreateBusinessWalletJoiningFeesMutationResponse = {
  __typename?: 'CreateBusinessWalletJoiningFeesMutationResponse';
  businessWalletJoiningFees: Array<BusinessWalletJoiningFee>;
  info: CreateInfo;
};

export type CreateBusinessWalletMaintenanceFeesMutationResponse = {
  __typename?: 'CreateBusinessWalletMaintenanceFeesMutationResponse';
  businessWalletMaintenanceFees: Array<BusinessWalletMaintenanceFee>;
  info: CreateInfo;
};

export type CreateBusinessWalletOverDraftLimitsMutationResponse = {
  __typename?: 'CreateBusinessWalletOverDraftLimitsMutationResponse';
  businessWalletOverDraftLimits: Array<BusinessWalletOverDraftLimit>;
  info: CreateInfo;
};

export type CreateBusinessWalletPayoutFeesMutationResponse = {
  __typename?: 'CreateBusinessWalletPayoutFeesMutationResponse';
  businessWalletPayoutFees: Array<BusinessWalletPayoutFee>;
  info: CreateInfo;
};

export type CreateBusinessWalletRollingReserveFeesMutationResponse = {
  __typename?: 'CreateBusinessWalletRollingReserveFeesMutationResponse';
  businessWalletRollingReserveFees: Array<BusinessWalletRollingReserveFee>;
  info: CreateInfo;
};

export type CreateBusinessWalletSettlementFeesMutationResponse = {
  __typename?: 'CreateBusinessWalletSettlementFeesMutationResponse';
  businessWalletSettlementFees: Array<BusinessWalletSettlementFee>;
  info: CreateInfo;
};

export type CreateBusinessWalletTierCommissionsMutationResponse = {
  __typename?: 'CreateBusinessWalletTierCommissionsMutationResponse';
  businessWalletTierCommissions: Array<BusinessWalletTierCommission>;
  info: CreateInfo;
};

export type CreateBusinessWalletsMutationResponse = {
  __typename?: 'CreateBusinessWalletsMutationResponse';
  businessWallets: Array<BusinessWallet>;
  info: CreateInfo;
};

export type CreateBusinessesMutationResponse = {
  __typename?: 'CreateBusinessesMutationResponse';
  businesses: Array<Business>;
  info: CreateInfo;
};

export type CreateCountriesMutationResponse = {
  __typename?: 'CreateCountriesMutationResponse';
  countries: Array<Country>;
  info: CreateInfo;
};

export type CreateCreatedByUsersMutationResponse = {
  __typename?: 'CreateCreatedByUsersMutationResponse';
  createdByUsers: Array<CreatedByUser>;
  info: CreateInfo;
};

export type CreateCreditCartdProcessingSolutionsMutationResponse = {
  __typename?: 'CreateCreditCartdProcessingSolutionsMutationResponse';
  creditCartdProcessingSolutions: Array<CreditCartdProcessingSolution>;
  info: CreateInfo;
};

export type CreateCryptoCurrencySolutionsMutationResponse = {
  __typename?: 'CreateCryptoCurrencySolutionsMutationResponse';
  cryptoCurrencySolutions: Array<CryptoCurrencySolution>;
  info: CreateInfo;
};

export type CreateCurrenciesMutationResponse = {
  __typename?: 'CreateCurrenciesMutationResponse';
  currencies: Array<Currency>;
  info: CreateInfo;
};

export type CreateCustomersMutationResponse = {
  __typename?: 'CreateCustomersMutationResponse';
  customers: Array<Customer>;
  info: CreateInfo;
};

export type CreateDefaultBaseCommissionsMutationResponse = {
  __typename?: 'CreateDefaultBaseCommissionsMutationResponse';
  defaultBaseCommissions: Array<DefaultBaseCommission>;
  info: CreateInfo;
};

export type CreateDefaultCurrencyConversionFeesMutationResponse = {
  __typename?: 'CreateDefaultCurrencyConversionFeesMutationResponse';
  defaultCurrencyConversionFees: Array<DefaultCurrencyConversionFees>;
  info: CreateInfo;
};

export type CreateDefaultCurrencyConversionMarkupsMutationResponse = {
  __typename?: 'CreateDefaultCurrencyConversionMarkupsMutationResponse';
  defaultCurrencyConversionMarkups: Array<DefaultCurrencyConversionMarkup>;
  info: CreateInfo;
};

export type CreateDefaultJoiningFeesMutationResponse = {
  __typename?: 'CreateDefaultJoiningFeesMutationResponse';
  defaultJoiningFees: Array<DefaultJoiningFee>;
  info: CreateInfo;
};

export type CreateDefaultMaintenanceFeesMutationResponse = {
  __typename?: 'CreateDefaultMaintenanceFeesMutationResponse';
  defaultMaintenanceFees: Array<DefaultMaintenanceFee>;
  info: CreateInfo;
};

export type CreateDefaultOverDraftLimitsMutationResponse = {
  __typename?: 'CreateDefaultOverDraftLimitsMutationResponse';
  defaultOverDraftLimits: Array<DefaultOverDraftLimit>;
  info: CreateInfo;
};

export type CreateDefaultPayoutFeesMutationResponse = {
  __typename?: 'CreateDefaultPayoutFeesMutationResponse';
  defaultPayoutFees: Array<DefaultPayoutFee>;
  info: CreateInfo;
};

export type CreateDefaultRollingReserveFeesMutationResponse = {
  __typename?: 'CreateDefaultRollingReserveFeesMutationResponse';
  defaultRollingReserveFees: Array<DefaultRollingReserveFee>;
  info: CreateInfo;
};

export type CreateDefaultSettlementFeesMutationResponse = {
  __typename?: 'CreateDefaultSettlementFeesMutationResponse';
  defaultSettlementFees: Array<DefaultSettlementFee>;
  info: CreateInfo;
};

export type CreateDefaultTierCommissionsMutationResponse = {
  __typename?: 'CreateDefaultTierCommissionsMutationResponse';
  defaultTierCommissions: Array<DefaultTierCommission>;
  info: CreateInfo;
};

export type CreateDepositInput = {
  amountReceived?: InputMaybe<Scalars['numeric']>;
  amountReceivedDate?: InputMaybe<Scalars['timestamp']>;
  businessWalletId: Scalars['uuid'];
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  fromCustomerId: Scalars['uuid'];
  parentBrandId?: InputMaybe<Scalars['uuid']>;
  parentBusinessId: Scalars['uuid'];
  productName?: InputMaybe<Scalars['String']>;
  productPrice?: InputMaybe<Scalars['numeric']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  referenceId?: InputMaybe<Scalars['String']>;
  refundedAmount?: InputMaybe<Scalars['numeric']>;
  refundedDate?: InputMaybe<Scalars['timestamp']>;
  remarks?: InputMaybe<Scalars['String']>;
  signedInvoiceUrl?: InputMaybe<Scalars['String']>;
  status: Scalars['String'];
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  toAccountId: Scalars['uuid'];
  type: Scalars['String'];
};

export type CreateDepositOutput = {
  __typename?: 'CreateDepositOutput';
  data?: Maybe<CreateDepositOutputData>;
  message: Scalars['String'];
  status: Scalars['String'];
};

export type CreateDepositOutputData = {
  __typename?: 'CreateDepositOutputData';
  uuids?: Maybe<Array<Maybe<Scalars['uuid']>>>;
};

export type CreateFeaturePermissionsMutationResponse = {
  __typename?: 'CreateFeaturePermissionsMutationResponse';
  featurePermissions: Array<FeaturePermission>;
  info: CreateInfo;
};

export type CreateGraphDataNeo4JsMutationResponse = {
  __typename?: 'CreateGraphDataNeo4JSMutationResponse';
  graphDataNeo4JS: Array<GraphDataNeo4j>;
  info: CreateInfo;
};

/** Information about the number of nodes and relationships created during a create mutation */
export type CreateInfo = {
  __typename?: 'CreateInfo';
  bookmark?: Maybe<Scalars['String']>;
  nodesCreated: Scalars['Int'];
  relationshipsCreated: Scalars['Int'];
};

export type CreateIntermediaryAccountsMutationResponse = {
  __typename?: 'CreateIntermediaryAccountsMutationResponse';
  info: CreateInfo;
  intermediaryAccounts: Array<IntermediaryAccount>;
};

export type CreateMarketRegionsMutationResponse = {
  __typename?: 'CreateMarketRegionsMutationResponse';
  info: CreateInfo;
  marketRegions: Array<MarketRegions>;
};

export type CreateMerchantsMutationResponse = {
  __typename?: 'CreateMerchantsMutationResponse';
  info: CreateInfo;
  merchants: Array<Merchant>;
};

export type CreateOrganisationTypesMutationResponse = {
  __typename?: 'CreateOrganisationTypesMutationResponse';
  info: CreateInfo;
  organisationTypes: Array<OrganisationType>;
};

export type CreatePersonalDocumentsMutationResponse = {
  __typename?: 'CreatePersonalDocumentsMutationResponse';
  info: CreateInfo;
  personalDocuments: Array<PersonalDocument>;
};

export type CreateSubAdminsMutationResponse = {
  __typename?: 'CreateSubAdminsMutationResponse';
  info: CreateInfo;
  subAdmins: Array<SubAdmin>;
};

export type CreateSuperAdminsMutationResponse = {
  __typename?: 'CreateSuperAdminsMutationResponse';
  info: CreateInfo;
  superAdmins: Array<SuperAdmin>;
};

export type CreateTeamCommonPermisionsMutationResponse = {
  __typename?: 'CreateTeamCommonPermisionsMutationResponse';
  info: CreateInfo;
  teamCommonPermisions: Array<TeamCommonPermision>;
};

export type CreateTeamMembersMutationResponse = {
  __typename?: 'CreateTeamMembersMutationResponse';
  info: CreateInfo;
  teamMembers: Array<TeamMember>;
};

export type CreateTeamsMutationResponse = {
  __typename?: 'CreateTeamsMutationResponse';
  info: CreateInfo;
  teams: Array<Team>;
};

export type CreateWithdrawalInput = {
  amount: Scalars['numeric'];
  amountReturned?: InputMaybe<Scalars['numeric']>;
  bankCharges: Scalars['numeric'];
  businessWalletId: Scalars['uuid'];
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  datePaid?: InputMaybe<Scalars['timestamp']>;
  dateReturned?: InputMaybe<Scalars['timestamp']>;
  fromAccountId: Scalars['uuid'];
  invoiceUrl?: InputMaybe<Scalars['String']>;
  parentBrandId?: InputMaybe<Scalars['uuid']>;
  parentBusinessId: Scalars['uuid'];
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  referenceId?: InputMaybe<Scalars['String']>;
  remarks?: InputMaybe<Scalars['String']>;
  status: Scalars['String'];
  toBeneficiaryId: Scalars['uuid'];
  type: Scalars['String'];
};

export type CreateWithdrawalOutput = {
  __typename?: 'CreateWithdrawalOutput';
  data?: Maybe<CreateWithdrawalOutputData>;
  message: Scalars['String'];
  status: Scalars['String'];
};

export type CreateWithdrawalOutputData = {
  __typename?: 'CreateWithdrawalOutputData';
  uuids?: Maybe<Array<Maybe<Scalars['uuid']>>>;
};

export type CreatedByUser = {
  __typename?: 'CreatedByUser';
  email: Scalars['String'];
  firebaseId: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  userType: UserType;
};

export type CreatedByUserAggregateSelection = {
  __typename?: 'CreatedByUserAggregateSelection';
  count: Scalars['Int'];
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
};

export type CreatedByUserCreateInput = {
  email: Scalars['String'];
  firebaseId: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  userType: UserType;
};

export type CreatedByUserEdge = {
  __typename?: 'CreatedByUserEdge';
  cursor: Scalars['String'];
  node: CreatedByUser;
};

export type CreatedByUserOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more CreatedByUserSort objects to sort CreatedByUsers by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CreatedByUserSort>>;
};

/** Fields to sort CreatedByUsers by. The order in which sorts are applied is not guaranteed when specifying many fields in one CreatedByUserSort object. */
export type CreatedByUserSort = {
  email?: InputMaybe<SortDirection>;
  firebaseId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  userType?: InputMaybe<SortDirection>;
};

export type CreatedByUserUpdateInput = {
  email?: InputMaybe<Scalars['String']>;
  firebaseId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  userType?: InputMaybe<UserType>;
};

export type CreatedByUserWhere = {
  AND?: InputMaybe<Array<CreatedByUserWhere>>;
  NOT?: InputMaybe<CreatedByUserWhere>;
  OR?: InputMaybe<Array<CreatedByUserWhere>>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
};

export type CreatedByUsersConnection = {
  __typename?: 'CreatedByUsersConnection';
  edges: Array<CreatedByUserEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CreditCartdProcessingSolution = {
  __typename?: 'CreditCartdProcessingSolution';
  businessSolution: BusinessSolution;
  businessSolutionAggregate?: Maybe<CreditCartdProcessingSolutionBusinessSolutionBusinessSolutionAggregationSelection>;
  businessSolutionConnection: CreditCartdProcessingSolutionBusinessSolutionConnection;
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  updatedAt: Scalars['DateTime'];
  volume: Scalars['Float'];
};


export type CreditCartdProcessingSolutionBusinessSolutionArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessSolutionOptions>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type CreditCartdProcessingSolutionBusinessSolutionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type CreditCartdProcessingSolutionBusinessSolutionConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CreditCartdProcessingSolutionBusinessSolutionConnectionSort>>;
  where?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>;
};

export type CreditCartdProcessingSolutionAggregateSelection = {
  __typename?: 'CreditCartdProcessingSolutionAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  volume: FloatAggregateSelectionNonNullable;
};

export type CreditCartdProcessingSolutionBusinessSolutionAggregateInput = {
  AND?: InputMaybe<Array<CreditCartdProcessingSolutionBusinessSolutionAggregateInput>>;
  NOT?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionAggregateInput>;
  OR?: InputMaybe<Array<CreditCartdProcessingSolutionBusinessSolutionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionNodeAggregationWhereInput>;
};

export type CreditCartdProcessingSolutionBusinessSolutionBusinessSolutionAggregationSelection = {
  __typename?: 'CreditCartdProcessingSolutionBusinessSolutionBusinessSolutionAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CreditCartdProcessingSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection>;
};

export type CreditCartdProcessingSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection = {
  __typename?: 'CreditCartdProcessingSolutionBusinessSolutionBusinessSolutionNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type CreditCartdProcessingSolutionBusinessSolutionConnectFieldInput = {
  connect?: InputMaybe<BusinessSolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessSolutionConnectWhere>;
};

export type CreditCartdProcessingSolutionBusinessSolutionConnectOrCreateFieldInput = {
  onCreate: CreditCartdProcessingSolutionBusinessSolutionConnectOrCreateFieldInputOnCreate;
  where: BusinessSolutionConnectOrCreateWhere;
};

export type CreditCartdProcessingSolutionBusinessSolutionConnectOrCreateFieldInputOnCreate = {
  node: BusinessSolutionOnCreateInput;
};

export type CreditCartdProcessingSolutionBusinessSolutionConnection = {
  __typename?: 'CreditCartdProcessingSolutionBusinessSolutionConnection';
  edges: Array<CreditCartdProcessingSolutionBusinessSolutionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CreditCartdProcessingSolutionBusinessSolutionConnectionSort = {
  node?: InputMaybe<BusinessSolutionSort>;
};

export type CreditCartdProcessingSolutionBusinessSolutionConnectionWhere = {
  AND?: InputMaybe<Array<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>>;
  NOT?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>;
  OR?: InputMaybe<Array<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>>;
  node?: InputMaybe<BusinessSolutionWhere>;
};

export type CreditCartdProcessingSolutionBusinessSolutionCreateFieldInput = {
  node: BusinessSolutionCreateInput;
};

export type CreditCartdProcessingSolutionBusinessSolutionDeleteFieldInput = {
  delete?: InputMaybe<BusinessSolutionDeleteInput>;
  where?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>;
};

export type CreditCartdProcessingSolutionBusinessSolutionDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessSolutionDisconnectInput>;
  where?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>;
};

export type CreditCartdProcessingSolutionBusinessSolutionFieldInput = {
  connect?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectFieldInput>;
  connectOrCreate?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectOrCreateFieldInput>;
  create?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionCreateFieldInput>;
};

export type CreditCartdProcessingSolutionBusinessSolutionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CreditCartdProcessingSolutionBusinessSolutionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CreditCartdProcessingSolutionBusinessSolutionNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type CreditCartdProcessingSolutionBusinessSolutionRelationship = {
  __typename?: 'CreditCartdProcessingSolutionBusinessSolutionRelationship';
  cursor: Scalars['String'];
  node: BusinessSolution;
};

export type CreditCartdProcessingSolutionBusinessSolutionUpdateConnectionInput = {
  node?: InputMaybe<BusinessSolutionUpdateInput>;
};

export type CreditCartdProcessingSolutionBusinessSolutionUpdateFieldInput = {
  connect?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectFieldInput>;
  connectOrCreate?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectOrCreateFieldInput>;
  create?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionCreateFieldInput>;
  delete?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionDeleteFieldInput>;
  disconnect?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionDisconnectFieldInput>;
  update?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionUpdateConnectionInput>;
  where?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>;
};

export type CreditCartdProcessingSolutionConnectInput = {
  businessSolution?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectFieldInput>;
};

export type CreditCartdProcessingSolutionConnectOrCreateInput = {
  businessSolution?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectOrCreateFieldInput>;
};

export type CreditCartdProcessingSolutionConnectOrCreateWhere = {
  node: CreditCartdProcessingSolutionUniqueWhere;
};

export type CreditCartdProcessingSolutionConnectWhere = {
  node: CreditCartdProcessingSolutionWhere;
};

export type CreditCartdProcessingSolutionCreateInput = {
  businessSolution?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionFieldInput>;
  volume?: Scalars['Float'];
};

export type CreditCartdProcessingSolutionDeleteInput = {
  businessSolution?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionDeleteFieldInput>;
};

export type CreditCartdProcessingSolutionDisconnectInput = {
  businessSolution?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionDisconnectFieldInput>;
};

export type CreditCartdProcessingSolutionEdge = {
  __typename?: 'CreditCartdProcessingSolutionEdge';
  cursor: Scalars['String'];
  node: CreditCartdProcessingSolution;
};

export type CreditCartdProcessingSolutionOnCreateInput = {
  volume?: Scalars['Float'];
};

export type CreditCartdProcessingSolutionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more CreditCartdProcessingSolutionSort objects to sort CreditCartdProcessingSolutions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CreditCartdProcessingSolutionSort>>;
};

export type CreditCartdProcessingSolutionRelationInput = {
  businessSolution?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionCreateFieldInput>;
};

/** Fields to sort CreditCartdProcessingSolutions by. The order in which sorts are applied is not guaranteed when specifying many fields in one CreditCartdProcessingSolutionSort object. */
export type CreditCartdProcessingSolutionSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  volume?: InputMaybe<SortDirection>;
};

export type CreditCartdProcessingSolutionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type CreditCartdProcessingSolutionUpdateInput = {
  businessSolution?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionUpdateFieldInput>;
  volume?: InputMaybe<Scalars['Float']>;
  volume_ADD?: InputMaybe<Scalars['Float']>;
  volume_DIVIDE?: InputMaybe<Scalars['Float']>;
  volume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  volume_SUBTRACT?: InputMaybe<Scalars['Float']>;
};

export type CreditCartdProcessingSolutionWhere = {
  AND?: InputMaybe<Array<CreditCartdProcessingSolutionWhere>>;
  NOT?: InputMaybe<CreditCartdProcessingSolutionWhere>;
  OR?: InputMaybe<Array<CreditCartdProcessingSolutionWhere>>;
  businessSolution?: InputMaybe<BusinessSolutionWhere>;
  businessSolutionAggregate?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionAggregateInput>;
  businessSolutionConnection?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>;
  businessSolutionConnection_NOT?: InputMaybe<CreditCartdProcessingSolutionBusinessSolutionConnectionWhere>;
  businessSolution_NOT?: InputMaybe<BusinessSolutionWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  volume?: InputMaybe<Scalars['Float']>;
  volume_GT?: InputMaybe<Scalars['Float']>;
  volume_GTE?: InputMaybe<Scalars['Float']>;
  volume_IN?: InputMaybe<Array<Scalars['Float']>>;
  volume_LT?: InputMaybe<Scalars['Float']>;
  volume_LTE?: InputMaybe<Scalars['Float']>;
};

export type CreditCartdProcessingSolutionsConnection = {
  __typename?: 'CreditCartdProcessingSolutionsConnection';
  edges: Array<CreditCartdProcessingSolutionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CryptoCurrencySolution = {
  __typename?: 'CryptoCurrencySolution';
  businessSolution: BusinessSolution;
  businessSolutionAggregate?: Maybe<CryptoCurrencySolutionBusinessSolutionBusinessSolutionAggregationSelection>;
  businessSolutionConnection: CryptoCurrencySolutionBusinessSolutionConnection;
  createdAt: Scalars['DateTime'];
  depositVolume: Scalars['Float'];
  id: Scalars['ID'];
  settlementVolume: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  withdrawalVolume: Scalars['Float'];
};


export type CryptoCurrencySolutionBusinessSolutionArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessSolutionOptions>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type CryptoCurrencySolutionBusinessSolutionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type CryptoCurrencySolutionBusinessSolutionConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CryptoCurrencySolutionBusinessSolutionConnectionSort>>;
  where?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectionWhere>;
};

export type CryptoCurrencySolutionAggregateSelection = {
  __typename?: 'CryptoCurrencySolutionAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  settlementVolume: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawalVolume: FloatAggregateSelectionNonNullable;
};

export type CryptoCurrencySolutionBusinessSolutionAggregateInput = {
  AND?: InputMaybe<Array<CryptoCurrencySolutionBusinessSolutionAggregateInput>>;
  NOT?: InputMaybe<CryptoCurrencySolutionBusinessSolutionAggregateInput>;
  OR?: InputMaybe<Array<CryptoCurrencySolutionBusinessSolutionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CryptoCurrencySolutionBusinessSolutionNodeAggregationWhereInput>;
};

export type CryptoCurrencySolutionBusinessSolutionBusinessSolutionAggregationSelection = {
  __typename?: 'CryptoCurrencySolutionBusinessSolutionBusinessSolutionAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CryptoCurrencySolutionBusinessSolutionBusinessSolutionNodeAggregateSelection>;
};

export type CryptoCurrencySolutionBusinessSolutionBusinessSolutionNodeAggregateSelection = {
  __typename?: 'CryptoCurrencySolutionBusinessSolutionBusinessSolutionNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type CryptoCurrencySolutionBusinessSolutionConnectFieldInput = {
  connect?: InputMaybe<BusinessSolutionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessSolutionConnectWhere>;
};

export type CryptoCurrencySolutionBusinessSolutionConnectOrCreateFieldInput = {
  onCreate: CryptoCurrencySolutionBusinessSolutionConnectOrCreateFieldInputOnCreate;
  where: BusinessSolutionConnectOrCreateWhere;
};

export type CryptoCurrencySolutionBusinessSolutionConnectOrCreateFieldInputOnCreate = {
  node: BusinessSolutionOnCreateInput;
};

export type CryptoCurrencySolutionBusinessSolutionConnection = {
  __typename?: 'CryptoCurrencySolutionBusinessSolutionConnection';
  edges: Array<CryptoCurrencySolutionBusinessSolutionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CryptoCurrencySolutionBusinessSolutionConnectionSort = {
  node?: InputMaybe<BusinessSolutionSort>;
};

export type CryptoCurrencySolutionBusinessSolutionConnectionWhere = {
  AND?: InputMaybe<Array<CryptoCurrencySolutionBusinessSolutionConnectionWhere>>;
  NOT?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectionWhere>;
  OR?: InputMaybe<Array<CryptoCurrencySolutionBusinessSolutionConnectionWhere>>;
  node?: InputMaybe<BusinessSolutionWhere>;
};

export type CryptoCurrencySolutionBusinessSolutionCreateFieldInput = {
  node: BusinessSolutionCreateInput;
};

export type CryptoCurrencySolutionBusinessSolutionDeleteFieldInput = {
  delete?: InputMaybe<BusinessSolutionDeleteInput>;
  where?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectionWhere>;
};

export type CryptoCurrencySolutionBusinessSolutionDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessSolutionDisconnectInput>;
  where?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectionWhere>;
};

export type CryptoCurrencySolutionBusinessSolutionFieldInput = {
  connect?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectFieldInput>;
  connectOrCreate?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectOrCreateFieldInput>;
  create?: InputMaybe<CryptoCurrencySolutionBusinessSolutionCreateFieldInput>;
};

export type CryptoCurrencySolutionBusinessSolutionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CryptoCurrencySolutionBusinessSolutionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CryptoCurrencySolutionBusinessSolutionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CryptoCurrencySolutionBusinessSolutionNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type CryptoCurrencySolutionBusinessSolutionRelationship = {
  __typename?: 'CryptoCurrencySolutionBusinessSolutionRelationship';
  cursor: Scalars['String'];
  node: BusinessSolution;
};

export type CryptoCurrencySolutionBusinessSolutionUpdateConnectionInput = {
  node?: InputMaybe<BusinessSolutionUpdateInput>;
};

export type CryptoCurrencySolutionBusinessSolutionUpdateFieldInput = {
  connect?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectFieldInput>;
  connectOrCreate?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectOrCreateFieldInput>;
  create?: InputMaybe<CryptoCurrencySolutionBusinessSolutionCreateFieldInput>;
  delete?: InputMaybe<CryptoCurrencySolutionBusinessSolutionDeleteFieldInput>;
  disconnect?: InputMaybe<CryptoCurrencySolutionBusinessSolutionDisconnectFieldInput>;
  update?: InputMaybe<CryptoCurrencySolutionBusinessSolutionUpdateConnectionInput>;
  where?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectionWhere>;
};

export type CryptoCurrencySolutionConnectInput = {
  businessSolution?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectFieldInput>;
};

export type CryptoCurrencySolutionConnectOrCreateInput = {
  businessSolution?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectOrCreateFieldInput>;
};

export type CryptoCurrencySolutionConnectOrCreateWhere = {
  node: CryptoCurrencySolutionUniqueWhere;
};

export type CryptoCurrencySolutionConnectWhere = {
  node: CryptoCurrencySolutionWhere;
};

export type CryptoCurrencySolutionCreateInput = {
  businessSolution?: InputMaybe<CryptoCurrencySolutionBusinessSolutionFieldInput>;
  depositVolume?: Scalars['Float'];
  settlementVolume?: Scalars['Float'];
  withdrawalVolume?: Scalars['Float'];
};

export type CryptoCurrencySolutionDeleteInput = {
  businessSolution?: InputMaybe<CryptoCurrencySolutionBusinessSolutionDeleteFieldInput>;
};

export type CryptoCurrencySolutionDisconnectInput = {
  businessSolution?: InputMaybe<CryptoCurrencySolutionBusinessSolutionDisconnectFieldInput>;
};

export type CryptoCurrencySolutionEdge = {
  __typename?: 'CryptoCurrencySolutionEdge';
  cursor: Scalars['String'];
  node: CryptoCurrencySolution;
};

export type CryptoCurrencySolutionOnCreateInput = {
  depositVolume?: Scalars['Float'];
  settlementVolume?: Scalars['Float'];
  withdrawalVolume?: Scalars['Float'];
};

export type CryptoCurrencySolutionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more CryptoCurrencySolutionSort objects to sort CryptoCurrencySolutions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CryptoCurrencySolutionSort>>;
};

export type CryptoCurrencySolutionRelationInput = {
  businessSolution?: InputMaybe<CryptoCurrencySolutionBusinessSolutionCreateFieldInput>;
};

/** Fields to sort CryptoCurrencySolutions by. The order in which sorts are applied is not guaranteed when specifying many fields in one CryptoCurrencySolutionSort object. */
export type CryptoCurrencySolutionSort = {
  createdAt?: InputMaybe<SortDirection>;
  depositVolume?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  settlementVolume?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  withdrawalVolume?: InputMaybe<SortDirection>;
};

export type CryptoCurrencySolutionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type CryptoCurrencySolutionUpdateInput = {
  businessSolution?: InputMaybe<CryptoCurrencySolutionBusinessSolutionUpdateFieldInput>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_ADD?: InputMaybe<Scalars['Float']>;
  depositVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  depositVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  depositVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  settlementVolume?: InputMaybe<Scalars['Float']>;
  settlementVolume_ADD?: InputMaybe<Scalars['Float']>;
  settlementVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  settlementVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  settlementVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_ADD?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
};

export type CryptoCurrencySolutionWhere = {
  AND?: InputMaybe<Array<CryptoCurrencySolutionWhere>>;
  NOT?: InputMaybe<CryptoCurrencySolutionWhere>;
  OR?: InputMaybe<Array<CryptoCurrencySolutionWhere>>;
  businessSolution?: InputMaybe<BusinessSolutionWhere>;
  businessSolutionAggregate?: InputMaybe<CryptoCurrencySolutionBusinessSolutionAggregateInput>;
  businessSolutionConnection?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectionWhere>;
  businessSolutionConnection_NOT?: InputMaybe<CryptoCurrencySolutionBusinessSolutionConnectionWhere>;
  businessSolution_NOT?: InputMaybe<BusinessSolutionWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  depositVolume_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  settlementVolume?: InputMaybe<Scalars['Float']>;
  settlementVolume_GT?: InputMaybe<Scalars['Float']>;
  settlementVolume_GTE?: InputMaybe<Scalars['Float']>;
  settlementVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  settlementVolume_LT?: InputMaybe<Scalars['Float']>;
  settlementVolume_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawalVolume?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawalVolume_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_LTE?: InputMaybe<Scalars['Float']>;
};

export type CryptoCurrencySolutionsConnection = {
  __typename?: 'CryptoCurrencySolutionsConnection';
  edges: Array<CryptoCurrencySolutionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CurrenciesConnection = {
  __typename?: 'CurrenciesConnection';
  edges: Array<CurrencyEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type Currency = {
  __typename?: 'Currency';
  code: Scalars['String'];
  createdAt: Scalars['DateTime'];
  flagUrl?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  symbol: Scalars['String'];
  updatedAt: Scalars['DateTime'];
};

export type CurrencyAggregateSelection = {
  __typename?: 'CurrencyAggregateSelection';
  code: StringAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  flagUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  symbol: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type CurrencyConnectOrCreateWhere = {
  node: CurrencyUniqueWhere;
};

export type CurrencyConnectWhere = {
  node: CurrencyWhere;
};

export type CurrencyCreateInput = {
  code: Scalars['String'];
  flagUrl?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  symbol: Scalars['String'];
};

export type CurrencyEdge = {
  __typename?: 'CurrencyEdge';
  cursor: Scalars['String'];
  node: Currency;
};

export type CurrencyExchangeInsert = {
  conversionRate: Scalars['numeric'];
  fees: Scalars['numeric'];
  fromAmount: Scalars['numeric'];
  fromBusinessWalletId: Scalars['uuid'];
  parentBusinessId: Scalars['uuid'];
  toAmount: Scalars['numeric'];
  toBusinessWalletId: Scalars['uuid'];
};

export type CurrencyOnCreateInput = {
  code: Scalars['String'];
  flagUrl?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  symbol: Scalars['String'];
};

export type CurrencyOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more CurrencySort objects to sort Currencies by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CurrencySort>>;
};

/** Fields to sort Currencies by. The order in which sorts are applied is not guaranteed when specifying many fields in one CurrencySort object. */
export type CurrencySort = {
  code?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  flagUrl?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  symbol?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type CurrencyUniqueWhere = {
  code?: InputMaybe<Scalars['String']>;
};

export type CurrencyUpdateInput = {
  code?: InputMaybe<Scalars['String']>;
  flagUrl?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  symbol?: InputMaybe<Scalars['String']>;
};

export type CurrencyWhere = {
  AND?: InputMaybe<Array<CurrencyWhere>>;
  NOT?: InputMaybe<CurrencyWhere>;
  OR?: InputMaybe<Array<CurrencyWhere>>;
  code?: InputMaybe<Scalars['String']>;
  code_CONTAINS?: InputMaybe<Scalars['String']>;
  code_ENDS_WITH?: InputMaybe<Scalars['String']>;
  code_IN?: InputMaybe<Array<Scalars['String']>>;
  code_MATCHES?: InputMaybe<Scalars['String']>;
  code_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  flagUrl?: InputMaybe<Scalars['String']>;
  flagUrl_CONTAINS?: InputMaybe<Scalars['String']>;
  flagUrl_ENDS_WITH?: InputMaybe<Scalars['String']>;
  flagUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  flagUrl_MATCHES?: InputMaybe<Scalars['String']>;
  flagUrl_STARTS_WITH?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  symbol?: InputMaybe<Scalars['String']>;
  symbol_CONTAINS?: InputMaybe<Scalars['String']>;
  symbol_ENDS_WITH?: InputMaybe<Scalars['String']>;
  symbol_IN?: InputMaybe<Array<Scalars['String']>>;
  symbol_MATCHES?: InputMaybe<Scalars['String']>;
  symbol_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type Customer = {
  __typename?: 'Customer';
  address?: Maybe<Scalars['String']>;
  beneficiaries: Array<Beneficiary>;
  beneficiariesAggregate?: Maybe<CustomerBeneficiaryBeneficiariesAggregationSelection>;
  beneficiariesConnection: CustomerBeneficiariesConnection;
  country?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: CustomerCreatedByConnection;
  dateOfBirth?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  firstName: Scalars['String'];
  id: Scalars['ID'];
  idNumber?: Maybe<Scalars['String']>;
  kycStatus?: Maybe<KycStatus>;
  lastName?: Maybe<Scalars['String']>;
  parentBrand: Brand;
  parentBrandAggregate?: Maybe<CustomerBrandParentBrandAggregationSelection>;
  parentBrandConnection: CustomerParentBrandConnection;
  parentTeam?: Maybe<Team>;
  parentTeamAggregate?: Maybe<CustomerTeamParentTeamAggregationSelection>;
  parentTeamConnection: CustomerParentTeamConnection;
  personalDocuments: Array<PersonalDocument>;
  personalDocumentsAggregate?: Maybe<CustomerPersonalDocumentPersonalDocumentsAggregationSelection>;
  personalDocumentsConnection: CustomerPersonalDocumentsConnection;
  /**
   *  parentBusiness: Business
   * @relationship(type: "BELONGS_TO_BUSINESS", direction: OUT)
   */
  phone?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: CustomerUpdatedByConnection;
  username: Scalars['String'];
};


export type CustomerBeneficiariesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BeneficiaryOptions>;
  where?: InputMaybe<BeneficiaryWhere>;
};


export type CustomerBeneficiariesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BeneficiaryWhere>;
};


export type CustomerBeneficiariesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CustomerBeneficiariesConnectionSort>>;
  where?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
};


export type CustomerCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type CustomerCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CustomerCreatedByConnectionSort>>;
  where?: InputMaybe<CustomerCreatedByConnectionWhere>;
};


export type CustomerParentBrandArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type CustomerParentBrandAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BrandWhere>;
};


export type CustomerParentBrandConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CustomerParentBrandConnectionSort>>;
  where?: InputMaybe<CustomerParentBrandConnectionWhere>;
};


export type CustomerParentTeamArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type CustomerParentTeamAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type CustomerParentTeamConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CustomerParentTeamConnectionSort>>;
  where?: InputMaybe<CustomerParentTeamConnectionWhere>;
};


export type CustomerPersonalDocumentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<PersonalDocumentOptions>;
  where?: InputMaybe<PersonalDocumentWhere>;
};


export type CustomerPersonalDocumentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<PersonalDocumentWhere>;
};


export type CustomerPersonalDocumentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CustomerPersonalDocumentsConnectionSort>>;
  where?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
};


export type CustomerUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type CustomerUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<CustomerUpdatedByConnectionSort>>;
  where?: InputMaybe<CustomerUpdatedByConnectionWhere>;
};

export type CustomerAggregateSelection = {
  __typename?: 'CustomerAggregateSelection';
  address: StringAggregateSelectionNullable;
  count: Scalars['Int'];
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type CustomerBeneficiariesAggregateInput = {
  AND?: InputMaybe<Array<CustomerBeneficiariesAggregateInput>>;
  NOT?: InputMaybe<CustomerBeneficiariesAggregateInput>;
  OR?: InputMaybe<Array<CustomerBeneficiariesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CustomerBeneficiariesNodeAggregationWhereInput>;
};

export type CustomerBeneficiariesConnectFieldInput = {
  connect?: InputMaybe<Array<BeneficiaryConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BeneficiaryConnectWhere>;
};

export type CustomerBeneficiariesConnectOrCreateFieldInput = {
  onCreate: CustomerBeneficiariesConnectOrCreateFieldInputOnCreate;
  where: BeneficiaryConnectOrCreateWhere;
};

export type CustomerBeneficiariesConnectOrCreateFieldInputOnCreate = {
  node: BeneficiaryOnCreateInput;
};

export type CustomerBeneficiariesConnection = {
  __typename?: 'CustomerBeneficiariesConnection';
  edges: Array<CustomerBeneficiariesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CustomerBeneficiariesConnectionSort = {
  node?: InputMaybe<BeneficiarySort>;
};

export type CustomerBeneficiariesConnectionWhere = {
  AND?: InputMaybe<Array<CustomerBeneficiariesConnectionWhere>>;
  NOT?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  OR?: InputMaybe<Array<CustomerBeneficiariesConnectionWhere>>;
  node?: InputMaybe<BeneficiaryWhere>;
};

export type CustomerBeneficiariesCreateFieldInput = {
  node: BeneficiaryCreateInput;
};

export type CustomerBeneficiariesDeleteFieldInput = {
  delete?: InputMaybe<BeneficiaryDeleteInput>;
  where?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
};

export type CustomerBeneficiariesDisconnectFieldInput = {
  disconnect?: InputMaybe<BeneficiaryDisconnectInput>;
  where?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
};

export type CustomerBeneficiariesFieldInput = {
  connect?: InputMaybe<Array<CustomerBeneficiariesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerBeneficiariesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CustomerBeneficiariesCreateFieldInput>>;
};

export type CustomerBeneficiariesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CustomerBeneficiariesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CustomerBeneficiariesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CustomerBeneficiariesNodeAggregationWhereInput>>;
  accountNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  accountNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankCountry_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCountry_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankCountry_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankCountry_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankCountry_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankCountry_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankCountry_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankCountry_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankCountry_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankCountry_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  beneficiaryName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  beneficiaryName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  beneficiaryName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  beneficiaryName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  remarks_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  remarks_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  remarks_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  remarks_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  remarks_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  remarks_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  remarks_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  remarks_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  remarks_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  remarks_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  swiftCode_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type CustomerBeneficiariesRelationship = {
  __typename?: 'CustomerBeneficiariesRelationship';
  cursor: Scalars['String'];
  node: Beneficiary;
};

export type CustomerBeneficiariesUpdateConnectionInput = {
  node?: InputMaybe<BeneficiaryUpdateInput>;
};

export type CustomerBeneficiariesUpdateFieldInput = {
  connect?: InputMaybe<Array<CustomerBeneficiariesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerBeneficiariesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CustomerBeneficiariesCreateFieldInput>>;
  delete?: InputMaybe<Array<CustomerBeneficiariesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CustomerBeneficiariesDisconnectFieldInput>>;
  update?: InputMaybe<CustomerBeneficiariesUpdateConnectionInput>;
  where?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
};

export type CustomerBeneficiaryBeneficiariesAggregationSelection = {
  __typename?: 'CustomerBeneficiaryBeneficiariesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CustomerBeneficiaryBeneficiariesNodeAggregateSelection>;
};

export type CustomerBeneficiaryBeneficiariesNodeAggregateSelection = {
  __typename?: 'CustomerBeneficiaryBeneficiariesNodeAggregateSelection';
  accountNumber: StringAggregateSelectionNonNullable;
  bankAddress: StringAggregateSelectionNullable;
  bankCountry: StringAggregateSelectionNullable;
  bankName: StringAggregateSelectionNonNullable;
  beneficiaryAddress: StringAggregateSelectionNullable;
  beneficiaryCountry: StringAggregateSelectionNullable;
  beneficiaryName: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  intermediaryBankAddress: StringAggregateSelectionNullable;
  intermediaryBankName: StringAggregateSelectionNullable;
  intermediaryBankRemarks: StringAggregateSelectionNullable;
  intermediaryBankSwift: StringAggregateSelectionNullable;
  remarks: StringAggregateSelectionNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type CustomerBrandParentBrandAggregationSelection = {
  __typename?: 'CustomerBrandParentBrandAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CustomerBrandParentBrandNodeAggregateSelection>;
};

export type CustomerBrandParentBrandNodeAggregateSelection = {
  __typename?: 'CustomerBrandParentBrandNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type CustomerConnectInput = {
  beneficiaries?: InputMaybe<Array<CustomerBeneficiariesConnectFieldInput>>;
  createdBy?: InputMaybe<CustomerCreatedByConnectFieldInput>;
  parentBrand?: InputMaybe<CustomerParentBrandConnectFieldInput>;
  parentTeam?: InputMaybe<CustomerParentTeamConnectFieldInput>;
  personalDocuments?: InputMaybe<Array<CustomerPersonalDocumentsConnectFieldInput>>;
  updatedBy?: InputMaybe<CustomerUpdatedByConnectFieldInput>;
};

export type CustomerConnectOrCreateInput = {
  beneficiaries?: InputMaybe<Array<CustomerBeneficiariesConnectOrCreateFieldInput>>;
  parentBrand?: InputMaybe<CustomerParentBrandConnectOrCreateFieldInput>;
  parentTeam?: InputMaybe<CustomerParentTeamConnectOrCreateFieldInput>;
  personalDocuments?: InputMaybe<Array<CustomerPersonalDocumentsConnectOrCreateFieldInput>>;
};

export type CustomerConnectOrCreateWhere = {
  node: CustomerUniqueWhere;
};

export type CustomerConnectWhere = {
  node: CustomerWhere;
};

export type CustomerCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  beneficiaries?: InputMaybe<CustomerBeneficiariesFieldInput>;
  country?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<CustomerCreatedByFieldInput>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  firstName: Scalars['String'];
  idNumber?: InputMaybe<Scalars['String']>;
  kycStatus?: InputMaybe<KycStatus>;
  lastName?: InputMaybe<Scalars['String']>;
  parentBrand?: InputMaybe<CustomerParentBrandFieldInput>;
  parentTeam?: InputMaybe<CustomerParentTeamFieldInput>;
  personalDocuments?: InputMaybe<CustomerPersonalDocumentsFieldInput>;
  phone?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<CustomerUpdatedByFieldInput>;
  username: Scalars['String'];
};

export type CustomerCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type CustomerCreatedByConnection = {
  __typename?: 'CustomerCreatedByConnection';
  edges: Array<CustomerCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CustomerCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type CustomerCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<CustomerCreatedByConnectionWhere>>;
  NOT?: InputMaybe<CustomerCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<CustomerCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type CustomerCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type CustomerCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<CustomerCreatedByConnectionWhere>;
};

export type CustomerCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<CustomerCreatedByConnectionWhere>;
};

export type CustomerCreatedByFieldInput = {
  connect?: InputMaybe<CustomerCreatedByConnectFieldInput>;
  create?: InputMaybe<CustomerCreatedByCreateFieldInput>;
};

export type CustomerCreatedByRelationship = {
  __typename?: 'CustomerCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type CustomerCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type CustomerCreatedByUpdateFieldInput = {
  connect?: InputMaybe<CustomerCreatedByConnectFieldInput>;
  create?: InputMaybe<CustomerCreatedByCreateFieldInput>;
  delete?: InputMaybe<CustomerCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<CustomerCreatedByDisconnectFieldInput>;
  update?: InputMaybe<CustomerCreatedByUpdateConnectionInput>;
  where?: InputMaybe<CustomerCreatedByConnectionWhere>;
};

export type CustomerDeleteInput = {
  beneficiaries?: InputMaybe<Array<CustomerBeneficiariesDeleteFieldInput>>;
  createdBy?: InputMaybe<CustomerCreatedByDeleteFieldInput>;
  parentBrand?: InputMaybe<CustomerParentBrandDeleteFieldInput>;
  parentTeam?: InputMaybe<CustomerParentTeamDeleteFieldInput>;
  personalDocuments?: InputMaybe<Array<CustomerPersonalDocumentsDeleteFieldInput>>;
  updatedBy?: InputMaybe<CustomerUpdatedByDeleteFieldInput>;
};

export type CustomerDisconnectInput = {
  beneficiaries?: InputMaybe<Array<CustomerBeneficiariesDisconnectFieldInput>>;
  createdBy?: InputMaybe<CustomerCreatedByDisconnectFieldInput>;
  parentBrand?: InputMaybe<CustomerParentBrandDisconnectFieldInput>;
  parentTeam?: InputMaybe<CustomerParentTeamDisconnectFieldInput>;
  personalDocuments?: InputMaybe<Array<CustomerPersonalDocumentsDisconnectFieldInput>>;
  updatedBy?: InputMaybe<CustomerUpdatedByDisconnectFieldInput>;
};

export type CustomerEdge = {
  __typename?: 'CustomerEdge';
  cursor: Scalars['String'];
  node: Customer;
};

export type CustomerOnCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  firstName: Scalars['String'];
  idNumber?: InputMaybe<Scalars['String']>;
  kycStatus?: InputMaybe<KycStatus>;
  lastName?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  username: Scalars['String'];
};

export type CustomerOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more CustomerSort objects to sort Customers by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CustomerSort>>;
};

export type CustomerOptions_Remote_Rel_DepositsfromCustomer = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more CustomerSort objects to sort Customers by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CustomerSort>>;
};

export type CustomerParentBrandAggregateInput = {
  AND?: InputMaybe<Array<CustomerParentBrandAggregateInput>>;
  NOT?: InputMaybe<CustomerParentBrandAggregateInput>;
  OR?: InputMaybe<Array<CustomerParentBrandAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CustomerParentBrandNodeAggregationWhereInput>;
};

export type CustomerParentBrandConnectFieldInput = {
  connect?: InputMaybe<BrandConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BrandConnectWhere>;
};

export type CustomerParentBrandConnectOrCreateFieldInput = {
  onCreate: CustomerParentBrandConnectOrCreateFieldInputOnCreate;
  where: BrandConnectOrCreateWhere;
};

export type CustomerParentBrandConnectOrCreateFieldInputOnCreate = {
  node: BrandOnCreateInput;
};

export type CustomerParentBrandConnection = {
  __typename?: 'CustomerParentBrandConnection';
  edges: Array<CustomerParentBrandRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CustomerParentBrandConnectionSort = {
  node?: InputMaybe<BrandSort>;
};

export type CustomerParentBrandConnectionWhere = {
  AND?: InputMaybe<Array<CustomerParentBrandConnectionWhere>>;
  NOT?: InputMaybe<CustomerParentBrandConnectionWhere>;
  OR?: InputMaybe<Array<CustomerParentBrandConnectionWhere>>;
  node?: InputMaybe<BrandWhere>;
};

export type CustomerParentBrandCreateFieldInput = {
  node: BrandCreateInput;
};

export type CustomerParentBrandDeleteFieldInput = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<CustomerParentBrandConnectionWhere>;
};

export type CustomerParentBrandDisconnectFieldInput = {
  disconnect?: InputMaybe<BrandDisconnectInput>;
  where?: InputMaybe<CustomerParentBrandConnectionWhere>;
};

export type CustomerParentBrandFieldInput = {
  connect?: InputMaybe<CustomerParentBrandConnectFieldInput>;
  connectOrCreate?: InputMaybe<CustomerParentBrandConnectOrCreateFieldInput>;
  create?: InputMaybe<CustomerParentBrandCreateFieldInput>;
};

export type CustomerParentBrandNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CustomerParentBrandNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CustomerParentBrandNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CustomerParentBrandNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type CustomerParentBrandRelationship = {
  __typename?: 'CustomerParentBrandRelationship';
  cursor: Scalars['String'];
  node: Brand;
};

export type CustomerParentBrandUpdateConnectionInput = {
  node?: InputMaybe<BrandUpdateInput>;
};

export type CustomerParentBrandUpdateFieldInput = {
  connect?: InputMaybe<CustomerParentBrandConnectFieldInput>;
  connectOrCreate?: InputMaybe<CustomerParentBrandConnectOrCreateFieldInput>;
  create?: InputMaybe<CustomerParentBrandCreateFieldInput>;
  delete?: InputMaybe<CustomerParentBrandDeleteFieldInput>;
  disconnect?: InputMaybe<CustomerParentBrandDisconnectFieldInput>;
  update?: InputMaybe<CustomerParentBrandUpdateConnectionInput>;
  where?: InputMaybe<CustomerParentBrandConnectionWhere>;
};

export type CustomerParentTeamAggregateInput = {
  AND?: InputMaybe<Array<CustomerParentTeamAggregateInput>>;
  NOT?: InputMaybe<CustomerParentTeamAggregateInput>;
  OR?: InputMaybe<Array<CustomerParentTeamAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CustomerParentTeamNodeAggregationWhereInput>;
};

export type CustomerParentTeamConnectFieldInput = {
  connect?: InputMaybe<TeamConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<TeamConnectWhere>;
};

export type CustomerParentTeamConnectOrCreateFieldInput = {
  onCreate: CustomerParentTeamConnectOrCreateFieldInputOnCreate;
  where: TeamConnectOrCreateWhere;
};

export type CustomerParentTeamConnectOrCreateFieldInputOnCreate = {
  node: TeamOnCreateInput;
};

export type CustomerParentTeamConnection = {
  __typename?: 'CustomerParentTeamConnection';
  edges: Array<CustomerParentTeamRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CustomerParentTeamConnectionSort = {
  node?: InputMaybe<TeamSort>;
};

export type CustomerParentTeamConnectionWhere = {
  AND?: InputMaybe<Array<CustomerParentTeamConnectionWhere>>;
  NOT?: InputMaybe<CustomerParentTeamConnectionWhere>;
  OR?: InputMaybe<Array<CustomerParentTeamConnectionWhere>>;
  node?: InputMaybe<TeamWhere>;
};

export type CustomerParentTeamCreateFieldInput = {
  node: TeamCreateInput;
};

export type CustomerParentTeamDeleteFieldInput = {
  delete?: InputMaybe<TeamDeleteInput>;
  where?: InputMaybe<CustomerParentTeamConnectionWhere>;
};

export type CustomerParentTeamDisconnectFieldInput = {
  disconnect?: InputMaybe<TeamDisconnectInput>;
  where?: InputMaybe<CustomerParentTeamConnectionWhere>;
};

export type CustomerParentTeamFieldInput = {
  connect?: InputMaybe<CustomerParentTeamConnectFieldInput>;
  connectOrCreate?: InputMaybe<CustomerParentTeamConnectOrCreateFieldInput>;
  create?: InputMaybe<CustomerParentTeamCreateFieldInput>;
};

export type CustomerParentTeamNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CustomerParentTeamNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CustomerParentTeamNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CustomerParentTeamNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type CustomerParentTeamRelationship = {
  __typename?: 'CustomerParentTeamRelationship';
  cursor: Scalars['String'];
  node: Team;
};

export type CustomerParentTeamUpdateConnectionInput = {
  node?: InputMaybe<TeamUpdateInput>;
};

export type CustomerParentTeamUpdateFieldInput = {
  connect?: InputMaybe<CustomerParentTeamConnectFieldInput>;
  connectOrCreate?: InputMaybe<CustomerParentTeamConnectOrCreateFieldInput>;
  create?: InputMaybe<CustomerParentTeamCreateFieldInput>;
  delete?: InputMaybe<CustomerParentTeamDeleteFieldInput>;
  disconnect?: InputMaybe<CustomerParentTeamDisconnectFieldInput>;
  update?: InputMaybe<CustomerParentTeamUpdateConnectionInput>;
  where?: InputMaybe<CustomerParentTeamConnectionWhere>;
};

export type CustomerPersonalDocumentPersonalDocumentsAggregationSelection = {
  __typename?: 'CustomerPersonalDocumentPersonalDocumentsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CustomerPersonalDocumentPersonalDocumentsNodeAggregateSelection>;
};

export type CustomerPersonalDocumentPersonalDocumentsNodeAggregateSelection = {
  __typename?: 'CustomerPersonalDocumentPersonalDocumentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  url: StringAggregateSelectionNonNullable;
};

export type CustomerPersonalDocumentsAggregateInput = {
  AND?: InputMaybe<Array<CustomerPersonalDocumentsAggregateInput>>;
  NOT?: InputMaybe<CustomerPersonalDocumentsAggregateInput>;
  OR?: InputMaybe<Array<CustomerPersonalDocumentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<CustomerPersonalDocumentsNodeAggregationWhereInput>;
};

export type CustomerPersonalDocumentsConnectFieldInput = {
  connect?: InputMaybe<Array<PersonalDocumentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<PersonalDocumentConnectWhere>;
};

export type CustomerPersonalDocumentsConnectOrCreateFieldInput = {
  onCreate: CustomerPersonalDocumentsConnectOrCreateFieldInputOnCreate;
  where: PersonalDocumentConnectOrCreateWhere;
};

export type CustomerPersonalDocumentsConnectOrCreateFieldInputOnCreate = {
  node: PersonalDocumentOnCreateInput;
};

export type CustomerPersonalDocumentsConnection = {
  __typename?: 'CustomerPersonalDocumentsConnection';
  edges: Array<CustomerPersonalDocumentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CustomerPersonalDocumentsConnectionSort = {
  node?: InputMaybe<PersonalDocumentSort>;
};

export type CustomerPersonalDocumentsConnectionWhere = {
  AND?: InputMaybe<Array<CustomerPersonalDocumentsConnectionWhere>>;
  NOT?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  OR?: InputMaybe<Array<CustomerPersonalDocumentsConnectionWhere>>;
  node?: InputMaybe<PersonalDocumentWhere>;
};

export type CustomerPersonalDocumentsCreateFieldInput = {
  node: PersonalDocumentCreateInput;
};

export type CustomerPersonalDocumentsDeleteFieldInput = {
  delete?: InputMaybe<PersonalDocumentDeleteInput>;
  where?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
};

export type CustomerPersonalDocumentsDisconnectFieldInput = {
  disconnect?: InputMaybe<PersonalDocumentDisconnectInput>;
  where?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
};

export type CustomerPersonalDocumentsFieldInput = {
  connect?: InputMaybe<Array<CustomerPersonalDocumentsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerPersonalDocumentsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CustomerPersonalDocumentsCreateFieldInput>>;
};

export type CustomerPersonalDocumentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CustomerPersonalDocumentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CustomerPersonalDocumentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CustomerPersonalDocumentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type CustomerPersonalDocumentsRelationship = {
  __typename?: 'CustomerPersonalDocumentsRelationship';
  cursor: Scalars['String'];
  node: PersonalDocument;
};

export type CustomerPersonalDocumentsUpdateConnectionInput = {
  node?: InputMaybe<PersonalDocumentUpdateInput>;
};

export type CustomerPersonalDocumentsUpdateFieldInput = {
  connect?: InputMaybe<Array<CustomerPersonalDocumentsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerPersonalDocumentsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CustomerPersonalDocumentsCreateFieldInput>>;
  delete?: InputMaybe<Array<CustomerPersonalDocumentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CustomerPersonalDocumentsDisconnectFieldInput>>;
  update?: InputMaybe<CustomerPersonalDocumentsUpdateConnectionInput>;
  where?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
};

export type CustomerRelationInput = {
  beneficiaries?: InputMaybe<Array<CustomerBeneficiariesCreateFieldInput>>;
  createdBy?: InputMaybe<CustomerCreatedByCreateFieldInput>;
  parentBrand?: InputMaybe<CustomerParentBrandCreateFieldInput>;
  parentTeam?: InputMaybe<CustomerParentTeamCreateFieldInput>;
  personalDocuments?: InputMaybe<Array<CustomerPersonalDocumentsCreateFieldInput>>;
  updatedBy?: InputMaybe<CustomerUpdatedByCreateFieldInput>;
};

/** Fields to sort Customers by. The order in which sorts are applied is not guaranteed when specifying many fields in one CustomerSort object. */
export type CustomerSort = {
  address?: InputMaybe<SortDirection>;
  country?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  dateOfBirth?: InputMaybe<SortDirection>;
  email?: InputMaybe<SortDirection>;
  firstName?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  idNumber?: InputMaybe<SortDirection>;
  kycStatus?: InputMaybe<SortDirection>;
  lastName?: InputMaybe<SortDirection>;
  phone?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  username?: InputMaybe<SortDirection>;
};

export type CustomerTeamParentTeamAggregationSelection = {
  __typename?: 'CustomerTeamParentTeamAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<CustomerTeamParentTeamNodeAggregateSelection>;
};

export type CustomerTeamParentTeamNodeAggregateSelection = {
  __typename?: 'CustomerTeamParentTeamNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type CustomerUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
  username?: InputMaybe<Scalars['String']>;
};

export type CustomerUpdateInput = {
  address?: InputMaybe<Scalars['String']>;
  beneficiaries?: InputMaybe<Array<CustomerBeneficiariesUpdateFieldInput>>;
  country?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<CustomerCreatedByUpdateFieldInput>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  idNumber?: InputMaybe<Scalars['String']>;
  kycStatus?: InputMaybe<KycStatus>;
  lastName?: InputMaybe<Scalars['String']>;
  parentBrand?: InputMaybe<CustomerParentBrandUpdateFieldInput>;
  parentTeam?: InputMaybe<CustomerParentTeamUpdateFieldInput>;
  personalDocuments?: InputMaybe<Array<CustomerPersonalDocumentsUpdateFieldInput>>;
  phone?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<CustomerUpdatedByUpdateFieldInput>;
  username?: InputMaybe<Scalars['String']>;
};

export type CustomerUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type CustomerUpdatedByConnection = {
  __typename?: 'CustomerUpdatedByConnection';
  edges: Array<CustomerUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type CustomerUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type CustomerUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<CustomerUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<CustomerUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<CustomerUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type CustomerUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type CustomerUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<CustomerUpdatedByConnectionWhere>;
};

export type CustomerUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<CustomerUpdatedByConnectionWhere>;
};

export type CustomerUpdatedByFieldInput = {
  connect?: InputMaybe<CustomerUpdatedByConnectFieldInput>;
  create?: InputMaybe<CustomerUpdatedByCreateFieldInput>;
};

export type CustomerUpdatedByRelationship = {
  __typename?: 'CustomerUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type CustomerUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type CustomerUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<CustomerUpdatedByConnectFieldInput>;
  create?: InputMaybe<CustomerUpdatedByCreateFieldInput>;
  delete?: InputMaybe<CustomerUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<CustomerUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<CustomerUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<CustomerUpdatedByConnectionWhere>;
};

export type CustomerWhere = {
  AND?: InputMaybe<Array<CustomerWhere>>;
  NOT?: InputMaybe<CustomerWhere>;
  OR?: InputMaybe<Array<CustomerWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<CustomerBeneficiariesAggregateInput>;
  /** Return Customers where all of the related CustomerBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  /** Return Customers where none of the related CustomerBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  /** Return Customers where one of the related CustomerBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  /** Return Customers where some of the related CustomerBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  /** Return Customers where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Customers where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Customers where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Customers where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<CustomerCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<CustomerCreatedByConnectionWhere>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfBirth_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_LTE?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  idNumber?: InputMaybe<Scalars['String']>;
  idNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  idNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  idNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  idNumber_MATCHES?: InputMaybe<Scalars['String']>;
  idNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<InputMaybe<KycStatus>>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  parentBrand?: InputMaybe<BrandWhere>;
  parentBrandAggregate?: InputMaybe<CustomerParentBrandAggregateInput>;
  parentBrandConnection?: InputMaybe<CustomerParentBrandConnectionWhere>;
  parentBrandConnection_NOT?: InputMaybe<CustomerParentBrandConnectionWhere>;
  parentBrand_NOT?: InputMaybe<BrandWhere>;
  parentTeam?: InputMaybe<TeamWhere>;
  parentTeamAggregate?: InputMaybe<CustomerParentTeamAggregateInput>;
  parentTeamConnection?: InputMaybe<CustomerParentTeamConnectionWhere>;
  parentTeamConnection_NOT?: InputMaybe<CustomerParentTeamConnectionWhere>;
  parentTeam_NOT?: InputMaybe<TeamWhere>;
  personalDocumentsAggregate?: InputMaybe<CustomerPersonalDocumentsAggregateInput>;
  /** Return Customers where all of the related CustomerPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  /** Return Customers where none of the related CustomerPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  /** Return Customers where one of the related CustomerPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  /** Return Customers where some of the related CustomerPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  /** Return Customers where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Customers where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Customers where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Customers where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  phone?: InputMaybe<Scalars['String']>;
  phone_CONTAINS?: InputMaybe<Scalars['String']>;
  phone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phone_MATCHES?: InputMaybe<Scalars['String']>;
  phone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<CustomerUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<CustomerUpdatedByConnectionWhere>;
  username?: InputMaybe<Scalars['String']>;
  username_CONTAINS?: InputMaybe<Scalars['String']>;
  username_ENDS_WITH?: InputMaybe<Scalars['String']>;
  username_IN?: InputMaybe<Array<Scalars['String']>>;
  username_MATCHES?: InputMaybe<Scalars['String']>;
  username_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type CustomerWhere_Remote_Rel_DepositsfromCustomer = {
  AND?: InputMaybe<Array<CustomerWhere>>;
  NOT?: InputMaybe<CustomerWhere>;
  OR?: InputMaybe<Array<CustomerWhere>>;
  address?: InputMaybe<Scalars['String']>;
  address_CONTAINS?: InputMaybe<Scalars['String']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<CustomerBeneficiariesAggregateInput>;
  /** Return Customers where all of the related CustomerBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  /** Return Customers where none of the related CustomerBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  /** Return Customers where one of the related CustomerBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  /** Return Customers where some of the related CustomerBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<CustomerBeneficiariesConnectionWhere>;
  /** Return Customers where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Customers where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Customers where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Customers where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<CustomerCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<CustomerCreatedByConnectionWhere>;
  dateOfBirth?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  dateOfBirth_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_LTE?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  idNumber?: InputMaybe<Scalars['String']>;
  idNumber_CONTAINS?: InputMaybe<Scalars['String']>;
  idNumber_ENDS_WITH?: InputMaybe<Scalars['String']>;
  idNumber_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  idNumber_MATCHES?: InputMaybe<Scalars['String']>;
  idNumber_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<InputMaybe<KycStatus>>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  parentBrand?: InputMaybe<BrandWhere>;
  parentBrandAggregate?: InputMaybe<CustomerParentBrandAggregateInput>;
  parentBrandConnection?: InputMaybe<CustomerParentBrandConnectionWhere>;
  parentBrandConnection_NOT?: InputMaybe<CustomerParentBrandConnectionWhere>;
  parentBrand_NOT?: InputMaybe<BrandWhere>;
  parentTeam?: InputMaybe<TeamWhere>;
  parentTeamAggregate?: InputMaybe<CustomerParentTeamAggregateInput>;
  parentTeamConnection?: InputMaybe<CustomerParentTeamConnectionWhere>;
  parentTeamConnection_NOT?: InputMaybe<CustomerParentTeamConnectionWhere>;
  parentTeam_NOT?: InputMaybe<TeamWhere>;
  personalDocumentsAggregate?: InputMaybe<CustomerPersonalDocumentsAggregateInput>;
  /** Return Customers where all of the related CustomerPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  /** Return Customers where none of the related CustomerPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  /** Return Customers where one of the related CustomerPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  /** Return Customers where some of the related CustomerPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<CustomerPersonalDocumentsConnectionWhere>;
  /** Return Customers where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Customers where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Customers where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Customers where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  phone?: InputMaybe<Scalars['String']>;
  phone_CONTAINS?: InputMaybe<Scalars['String']>;
  phone_ENDS_WITH?: InputMaybe<Scalars['String']>;
  phone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  phone_MATCHES?: InputMaybe<Scalars['String']>;
  phone_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<CustomerUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<CustomerUpdatedByConnectionWhere>;
  username?: InputMaybe<Scalars['String']>;
  username_CONTAINS?: InputMaybe<Scalars['String']>;
  username_ENDS_WITH?: InputMaybe<Scalars['String']>;
  username_IN?: InputMaybe<Array<Scalars['String']>>;
  username_MATCHES?: InputMaybe<Scalars['String']>;
  username_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type CustomersConnection = {
  __typename?: 'CustomersConnection';
  edges: Array<CustomerEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DateTimeAggregateSelectionNonNullable = {
  __typename?: 'DateTimeAggregateSelectionNonNullable';
  max: Scalars['DateTime'];
  min: Scalars['DateTime'];
};

export type DateTimeAggregateSelectionNullable = {
  __typename?: 'DateTimeAggregateSelectionNullable';
  max?: Maybe<Scalars['DateTime']>;
  min?: Maybe<Scalars['DateTime']>;
};

export type DefaultBaseCommission = {
  __typename?: 'DefaultBaseCommission';
  b2bFee: Scalars['Float'];
  businessWalletBaseCommissions: Array<BusinessWalletBaseCommission>;
  businessWalletBaseCommissionsAggregate?: Maybe<DefaultBaseCommissionBusinessWalletBaseCommissionBusinessWalletBaseCommissionsAggregationSelection>;
  businessWalletBaseCommissionsConnection: DefaultBaseCommissionBusinessWalletBaseCommissionsConnection;
  c2bFee: Scalars['Float'];
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultBaseCommissionSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultBaseCommissionCreatedByConnection;
  currency: Scalars['String'];
  id: Scalars['ID'];
  updateBy?: Maybe<SuperAdmin>;
  updateByAggregate?: Maybe<DefaultBaseCommissionSuperAdminUpdateByAggregationSelection>;
  updateByConnection: DefaultBaseCommissionUpdateByConnection;
  updatedAt: Scalars['DateTime'];
};


export type DefaultBaseCommissionBusinessWalletBaseCommissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletBaseCommissionOptions>;
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


export type DefaultBaseCommissionBusinessWalletBaseCommissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


export type DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionSort>>;
  where?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
};


export type DefaultBaseCommissionCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultBaseCommissionCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultBaseCommissionCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultBaseCommissionCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultBaseCommissionCreatedByConnectionWhere>;
};


export type DefaultBaseCommissionUpdateByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultBaseCommissionUpdateByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultBaseCommissionUpdateByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultBaseCommissionUpdateByConnectionSort>>;
  where?: InputMaybe<DefaultBaseCommissionUpdateByConnectionWhere>;
};

export type DefaultBaseCommissionAggregateSelection = {
  __typename?: 'DefaultBaseCommissionAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionBusinessWalletBaseCommissionsAggregationSelection = {
  __typename?: 'DefaultBaseCommissionBusinessWalletBaseCommissionBusinessWalletBaseCommissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultBaseCommissionBusinessWalletBaseCommissionBusinessWalletBaseCommissionsNodeAggregateSelection>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionBusinessWalletBaseCommissionsNodeAggregateSelection = {
  __typename?: 'DefaultBaseCommissionBusinessWalletBaseCommissionBusinessWalletBaseCommissionsNodeAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsAggregateInput = {
  AND?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsAggregateInput>>;
  NOT?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsAggregateInput>;
  OR?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsNodeAggregationWhereInput>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletBaseCommissionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletBaseCommissionConnectWhere>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsConnectOrCreateFieldInput = {
  onCreate: DefaultBaseCommissionBusinessWalletBaseCommissionsConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletBaseCommissionConnectOrCreateWhere;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletBaseCommissionOnCreateInput;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsConnection = {
  __typename?: 'DefaultBaseCommissionBusinessWalletBaseCommissionsConnection';
  edges: Array<DefaultBaseCommissionBusinessWalletBaseCommissionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionSort = {
  node?: InputMaybe<BusinessWalletBaseCommissionSort>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere = {
  AND?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>>;
  NOT?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
  OR?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>>;
  node?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsCreateFieldInput = {
  node: BusinessWalletBaseCommissionCreateInput;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletBaseCommissionDeleteInput>;
  where?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletBaseCommissionDisconnectInput>;
  where?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsFieldInput = {
  connect?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsCreateFieldInput>>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsNodeAggregationWhereInput>>;
  b2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsRelationship = {
  __typename?: 'DefaultBaseCommissionBusinessWalletBaseCommissionsRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletBaseCommission;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletBaseCommissionUpdateInput>;
};

export type DefaultBaseCommissionBusinessWalletBaseCommissionsUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsDisconnectFieldInput>>;
  update?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsUpdateConnectionInput>;
  where?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
};

export type DefaultBaseCommissionConnectInput = {
  businessWalletBaseCommissions?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultBaseCommissionCreatedByConnectFieldInput>;
  updateBy?: InputMaybe<DefaultBaseCommissionUpdateByConnectFieldInput>;
};

export type DefaultBaseCommissionConnectOrCreateInput = {
  businessWalletBaseCommissions?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultBaseCommissionCreatedByConnectOrCreateFieldInput>;
  updateBy?: InputMaybe<DefaultBaseCommissionUpdateByConnectOrCreateFieldInput>;
};

export type DefaultBaseCommissionConnectOrCreateWhere = {
  node: DefaultBaseCommissionUniqueWhere;
};

export type DefaultBaseCommissionConnectWhere = {
  node: DefaultBaseCommissionWhere;
};

export type DefaultBaseCommissionCreateInput = {
  b2bFee?: Scalars['Float'];
  businessWalletBaseCommissions?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsFieldInput>;
  c2bFee?: Scalars['Float'];
  createdBy?: InputMaybe<DefaultBaseCommissionCreatedByFieldInput>;
  currency: Scalars['String'];
  updateBy?: InputMaybe<DefaultBaseCommissionUpdateByFieldInput>;
};

export type DefaultBaseCommissionCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultBaseCommissionCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultBaseCommissionCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultBaseCommissionCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultBaseCommissionCreatedByNodeAggregationWhereInput>;
};

export type DefaultBaseCommissionCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultBaseCommissionCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultBaseCommissionCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultBaseCommissionCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultBaseCommissionCreatedByConnection = {
  __typename?: 'DefaultBaseCommissionCreatedByConnection';
  edges: Array<DefaultBaseCommissionCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultBaseCommissionCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultBaseCommissionCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultBaseCommissionCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultBaseCommissionCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultBaseCommissionCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultBaseCommissionCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultBaseCommissionCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultBaseCommissionCreatedByConnectionWhere>;
};

export type DefaultBaseCommissionCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultBaseCommissionCreatedByConnectionWhere>;
};

export type DefaultBaseCommissionCreatedByFieldInput = {
  connect?: InputMaybe<DefaultBaseCommissionCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultBaseCommissionCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultBaseCommissionCreatedByCreateFieldInput>;
};

export type DefaultBaseCommissionCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultBaseCommissionCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultBaseCommissionCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultBaseCommissionCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultBaseCommissionCreatedByRelationship = {
  __typename?: 'DefaultBaseCommissionCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultBaseCommissionCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultBaseCommissionCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultBaseCommissionCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultBaseCommissionCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultBaseCommissionCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultBaseCommissionCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultBaseCommissionCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultBaseCommissionCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultBaseCommissionCreatedByConnectionWhere>;
};

export type DefaultBaseCommissionDeleteInput = {
  businessWalletBaseCommissions?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultBaseCommissionCreatedByDeleteFieldInput>;
  updateBy?: InputMaybe<DefaultBaseCommissionUpdateByDeleteFieldInput>;
};

export type DefaultBaseCommissionDisconnectInput = {
  businessWalletBaseCommissions?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultBaseCommissionCreatedByDisconnectFieldInput>;
  updateBy?: InputMaybe<DefaultBaseCommissionUpdateByDisconnectFieldInput>;
};

export type DefaultBaseCommissionEdge = {
  __typename?: 'DefaultBaseCommissionEdge';
  cursor: Scalars['String'];
  node: DefaultBaseCommission;
};

export type DefaultBaseCommissionOnCreateInput = {
  b2bFee?: Scalars['Float'];
  c2bFee?: Scalars['Float'];
  currency: Scalars['String'];
};

export type DefaultBaseCommissionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultBaseCommissionSort objects to sort DefaultBaseCommissions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultBaseCommissionSort>>;
};

export type DefaultBaseCommissionRelationInput = {
  businessWalletBaseCommissions?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultBaseCommissionCreatedByCreateFieldInput>;
  updateBy?: InputMaybe<DefaultBaseCommissionUpdateByCreateFieldInput>;
};

/** Fields to sort DefaultBaseCommissions by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultBaseCommissionSort object. */
export type DefaultBaseCommissionSort = {
  b2bFee?: InputMaybe<SortDirection>;
  c2bFee?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultBaseCommissionSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultBaseCommissionSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultBaseCommissionSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultBaseCommissionSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultBaseCommissionSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultBaseCommissionSuperAdminUpdateByAggregationSelection = {
  __typename?: 'DefaultBaseCommissionSuperAdminUpdateByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultBaseCommissionSuperAdminUpdateByNodeAggregateSelection>;
};

export type DefaultBaseCommissionSuperAdminUpdateByNodeAggregateSelection = {
  __typename?: 'DefaultBaseCommissionSuperAdminUpdateByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultBaseCommissionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type DefaultBaseCommissionUpdateByAggregateInput = {
  AND?: InputMaybe<Array<DefaultBaseCommissionUpdateByAggregateInput>>;
  NOT?: InputMaybe<DefaultBaseCommissionUpdateByAggregateInput>;
  OR?: InputMaybe<Array<DefaultBaseCommissionUpdateByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultBaseCommissionUpdateByNodeAggregationWhereInput>;
};

export type DefaultBaseCommissionUpdateByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultBaseCommissionUpdateByConnectOrCreateFieldInput = {
  onCreate: DefaultBaseCommissionUpdateByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultBaseCommissionUpdateByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultBaseCommissionUpdateByConnection = {
  __typename?: 'DefaultBaseCommissionUpdateByConnection';
  edges: Array<DefaultBaseCommissionUpdateByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultBaseCommissionUpdateByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultBaseCommissionUpdateByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultBaseCommissionUpdateByConnectionWhere>>;
  NOT?: InputMaybe<DefaultBaseCommissionUpdateByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultBaseCommissionUpdateByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultBaseCommissionUpdateByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultBaseCommissionUpdateByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultBaseCommissionUpdateByConnectionWhere>;
};

export type DefaultBaseCommissionUpdateByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultBaseCommissionUpdateByConnectionWhere>;
};

export type DefaultBaseCommissionUpdateByFieldInput = {
  connect?: InputMaybe<DefaultBaseCommissionUpdateByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultBaseCommissionUpdateByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultBaseCommissionUpdateByCreateFieldInput>;
};

export type DefaultBaseCommissionUpdateByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultBaseCommissionUpdateByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultBaseCommissionUpdateByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultBaseCommissionUpdateByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultBaseCommissionUpdateByRelationship = {
  __typename?: 'DefaultBaseCommissionUpdateByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultBaseCommissionUpdateByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultBaseCommissionUpdateByUpdateFieldInput = {
  connect?: InputMaybe<DefaultBaseCommissionUpdateByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultBaseCommissionUpdateByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultBaseCommissionUpdateByCreateFieldInput>;
  delete?: InputMaybe<DefaultBaseCommissionUpdateByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultBaseCommissionUpdateByDisconnectFieldInput>;
  update?: InputMaybe<DefaultBaseCommissionUpdateByUpdateConnectionInput>;
  where?: InputMaybe<DefaultBaseCommissionUpdateByConnectionWhere>;
};

export type DefaultBaseCommissionUpdateInput = {
  b2bFee?: InputMaybe<Scalars['Float']>;
  b2bFee_ADD?: InputMaybe<Scalars['Float']>;
  b2bFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  b2bFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  b2bFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  businessWalletBaseCommissions?: InputMaybe<Array<DefaultBaseCommissionBusinessWalletBaseCommissionsUpdateFieldInput>>;
  c2bFee?: InputMaybe<Scalars['Float']>;
  c2bFee_ADD?: InputMaybe<Scalars['Float']>;
  c2bFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  c2bFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  c2bFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  createdBy?: InputMaybe<DefaultBaseCommissionCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  updateBy?: InputMaybe<DefaultBaseCommissionUpdateByUpdateFieldInput>;
};

export type DefaultBaseCommissionWhere = {
  AND?: InputMaybe<Array<DefaultBaseCommissionWhere>>;
  NOT?: InputMaybe<DefaultBaseCommissionWhere>;
  OR?: InputMaybe<Array<DefaultBaseCommissionWhere>>;
  b2bFee?: InputMaybe<Scalars['Float']>;
  b2bFee_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  b2bFee_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_LTE?: InputMaybe<Scalars['Float']>;
  businessWalletBaseCommissionsAggregate?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsAggregateInput>;
  /** Return DefaultBaseCommissions where all of the related DefaultBaseCommissionBusinessWalletBaseCommissionsConnections match this filter */
  businessWalletBaseCommissionsConnection_ALL?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
  /** Return DefaultBaseCommissions where none of the related DefaultBaseCommissionBusinessWalletBaseCommissionsConnections match this filter */
  businessWalletBaseCommissionsConnection_NONE?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
  /** Return DefaultBaseCommissions where one of the related DefaultBaseCommissionBusinessWalletBaseCommissionsConnections match this filter */
  businessWalletBaseCommissionsConnection_SINGLE?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
  /** Return DefaultBaseCommissions where some of the related DefaultBaseCommissionBusinessWalletBaseCommissionsConnections match this filter */
  businessWalletBaseCommissionsConnection_SOME?: InputMaybe<DefaultBaseCommissionBusinessWalletBaseCommissionsConnectionWhere>;
  /** Return DefaultBaseCommissions where all of the related BusinessWalletBaseCommissions match this filter */
  businessWalletBaseCommissions_ALL?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  /** Return DefaultBaseCommissions where none of the related BusinessWalletBaseCommissions match this filter */
  businessWalletBaseCommissions_NONE?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  /** Return DefaultBaseCommissions where one of the related BusinessWalletBaseCommissions match this filter */
  businessWalletBaseCommissions_SINGLE?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  /** Return DefaultBaseCommissions where some of the related BusinessWalletBaseCommissions match this filter */
  businessWalletBaseCommissions_SOME?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  c2bFee?: InputMaybe<Scalars['Float']>;
  c2bFee_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  c2bFee_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_LTE?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultBaseCommissionCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultBaseCommissionCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultBaseCommissionCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  updateBy?: InputMaybe<SuperAdminWhere>;
  updateByAggregate?: InputMaybe<DefaultBaseCommissionUpdateByAggregateInput>;
  updateByConnection?: InputMaybe<DefaultBaseCommissionUpdateByConnectionWhere>;
  updateByConnection_NOT?: InputMaybe<DefaultBaseCommissionUpdateByConnectionWhere>;
  updateBy_NOT?: InputMaybe<SuperAdminWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultBaseCommissionsConnection = {
  __typename?: 'DefaultBaseCommissionsConnection';
  edges: Array<DefaultBaseCommissionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionFees = {
  __typename?: 'DefaultCurrencyConversionFees';
  businessCurrencyConversionFees: Array<BusinessCurrencyConversionFees>;
  businessCurrencyConversionFeesAggregate?: Maybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesAggregationSelection>;
  businessCurrencyConversionFeesConnection: DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultCurrencyConversionFeesSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultCurrencyConversionFeesCreatedByConnection;
  flatFee: Scalars['Float'];
  id: Scalars['ID'];
  markupPercentage: Scalars['Float'];
  percentageFee: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultCurrencyConversionFeesSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultCurrencyConversionFeesUpdatedByConnection;
};


export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessCurrencyConversionFeesOptions>;
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionSort>>;
  where?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
};


export type DefaultCurrencyConversionFeesCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultCurrencyConversionFeesCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultCurrencyConversionFeesCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultCurrencyConversionFeesCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectionWhere>;
};


export type DefaultCurrencyConversionFeesUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultCurrencyConversionFeesUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultCurrencyConversionFeesUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultCurrencyConversionFeesUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>;
};

export type DefaultCurrencyConversionFeesAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionFeesAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  flatFee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markupPercentage: FloatAggregateSelectionNonNullable;
  percentageFee: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesAggregateInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesAggregateInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesAggregateInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregationWhereInput>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesAggregationSelection = {
  __typename?: 'DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregateSelection>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  flatFee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markupPercentage: FloatAggregateSelectionNonNullable;
  percentageFee: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessCurrencyConversionFeesConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessCurrencyConversionFeesConnectWhere>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnection = {
  __typename?: 'DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnection';
  edges: Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionSort = {
  node?: InputMaybe<BusinessCurrencyConversionFeesSort>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>>;
  node?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesCreateFieldInput = {
  node: BusinessCurrencyConversionFeesCreateInput;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesDeleteFieldInput = {
  delete?: InputMaybe<BusinessCurrencyConversionFeesDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessCurrencyConversionFeesDisconnectInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesFieldInput = {
  connect?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectFieldInput>>;
  create?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesCreateFieldInput>>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  flatFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  flatFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  flatFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  flatFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  flatFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesRelationship = {
  __typename?: 'DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesRelationship';
  cursor: Scalars['String'];
  node: BusinessCurrencyConversionFees;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesUpdateConnectionInput = {
  node?: InputMaybe<BusinessCurrencyConversionFeesUpdateInput>;
};

export type DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectFieldInput>>;
  create?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesDisconnectFieldInput>>;
  update?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesUpdateConnectionInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
};

export type DefaultCurrencyConversionFeesConnectInput = {
  businessCurrencyConversionFees?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectFieldInput>;
};

export type DefaultCurrencyConversionFeesConnectOrCreateInput = {
  createdBy?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultCurrencyConversionFeesConnectWhere = {
  node: DefaultCurrencyConversionFeesWhere;
};

export type DefaultCurrencyConversionFeesConnection = {
  __typename?: 'DefaultCurrencyConversionFeesConnection';
  edges: Array<DefaultCurrencyConversionFeesEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionFeesCreateInput = {
  businessCurrencyConversionFees?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesFieldInput>;
  createdBy?: InputMaybe<DefaultCurrencyConversionFeesCreatedByFieldInput>;
  flatFee?: Scalars['Float'];
  id: Scalars['ID'];
  markupPercentage?: Scalars['Float'];
  percentageFee?: Scalars['Float'];
  updatedBy?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByFieldInput>;
};

export type DefaultCurrencyConversionFeesCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultCurrencyConversionFeesCreatedByNodeAggregationWhereInput>;
};

export type DefaultCurrencyConversionFeesCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultCurrencyConversionFeesCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultCurrencyConversionFeesCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultCurrencyConversionFeesCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultCurrencyConversionFeesCreatedByConnection = {
  __typename?: 'DefaultCurrencyConversionFeesCreatedByConnection';
  edges: Array<DefaultCurrencyConversionFeesCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionFeesCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultCurrencyConversionFeesCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultCurrencyConversionFeesCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultCurrencyConversionFeesCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectionWhere>;
};

export type DefaultCurrencyConversionFeesCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectionWhere>;
};

export type DefaultCurrencyConversionFeesCreatedByFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionFeesCreatedByCreateFieldInput>;
};

export type DefaultCurrencyConversionFeesCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultCurrencyConversionFeesCreatedByRelationship = {
  __typename?: 'DefaultCurrencyConversionFeesCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultCurrencyConversionFeesCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultCurrencyConversionFeesCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionFeesCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultCurrencyConversionFeesCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultCurrencyConversionFeesCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultCurrencyConversionFeesCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectionWhere>;
};

export type DefaultCurrencyConversionFeesDeleteInput = {
  businessCurrencyConversionFees?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionFeesCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByDeleteFieldInput>;
};

export type DefaultCurrencyConversionFeesDisconnectInput = {
  businessCurrencyConversionFees?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionFeesCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByDisconnectFieldInput>;
};

export type DefaultCurrencyConversionFeesEdge = {
  __typename?: 'DefaultCurrencyConversionFeesEdge';
  cursor: Scalars['String'];
  node: DefaultCurrencyConversionFees;
};

export type DefaultCurrencyConversionFeesOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultCurrencyConversionFeesSort objects to sort DefaultCurrencyConversionFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultCurrencyConversionFeesSort>>;
};

export type DefaultCurrencyConversionFeesRelationInput = {
  businessCurrencyConversionFees?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionFeesCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultCurrencyConversionFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultCurrencyConversionFeesSort object. */
export type DefaultCurrencyConversionFeesSort = {
  createdAt?: InputMaybe<SortDirection>;
  flatFee?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  markupPercentage?: InputMaybe<SortDirection>;
  percentageFee?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultCurrencyConversionFeesSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultCurrencyConversionFeesSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultCurrencyConversionFeesSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultCurrencyConversionFeesSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionFeesSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionFeesSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultCurrencyConversionFeesSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultCurrencyConversionFeesSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultCurrencyConversionFeesSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionFeesSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionFeesUpdateInput = {
  businessCurrencyConversionFees?: InputMaybe<Array<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesUpdateFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionFeesCreatedByUpdateFieldInput>;
  flatFee?: InputMaybe<Scalars['Float']>;
  flatFee_ADD?: InputMaybe<Scalars['Float']>;
  flatFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  flatFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  flatFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  markupPercentage?: InputMaybe<Scalars['Float']>;
  markupPercentage_ADD?: InputMaybe<Scalars['Float']>;
  markupPercentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  markupPercentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  markupPercentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  percentageFee?: InputMaybe<Scalars['Float']>;
  percentageFee_ADD?: InputMaybe<Scalars['Float']>;
  percentageFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  percentageFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  percentageFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByUpdateFieldInput>;
};

export type DefaultCurrencyConversionFeesUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByNodeAggregationWhereInput>;
};

export type DefaultCurrencyConversionFeesUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultCurrencyConversionFeesUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultCurrencyConversionFeesUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultCurrencyConversionFeesUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultCurrencyConversionFeesUpdatedByConnection = {
  __typename?: 'DefaultCurrencyConversionFeesUpdatedByConnection';
  edges: Array<DefaultCurrencyConversionFeesUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionFeesUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultCurrencyConversionFeesUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultCurrencyConversionFeesUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultCurrencyConversionFeesUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>;
};

export type DefaultCurrencyConversionFeesUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>;
};

export type DefaultCurrencyConversionFeesUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByCreateFieldInput>;
};

export type DefaultCurrencyConversionFeesUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultCurrencyConversionFeesUpdatedByRelationship = {
  __typename?: 'DefaultCurrencyConversionFeesUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultCurrencyConversionFeesUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultCurrencyConversionFeesUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>;
};

export type DefaultCurrencyConversionFeesWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionFeesWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionFeesWhere>>;
  businessCurrencyConversionFeesAggregate?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesAggregateInput>;
  /** Return DefaultCurrencyConversionFees where all of the related DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnections match this filter */
  businessCurrencyConversionFeesConnection_ALL?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
  /** Return DefaultCurrencyConversionFees where none of the related DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnections match this filter */
  businessCurrencyConversionFeesConnection_NONE?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
  /** Return DefaultCurrencyConversionFees where one of the related DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnections match this filter */
  businessCurrencyConversionFeesConnection_SINGLE?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
  /** Return DefaultCurrencyConversionFees where some of the related DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnections match this filter */
  businessCurrencyConversionFeesConnection_SOME?: InputMaybe<DefaultCurrencyConversionFeesBusinessCurrencyConversionFeesConnectionWhere>;
  /** Return DefaultCurrencyConversionFees where all of the related BusinessCurrencyConversionFees match this filter */
  businessCurrencyConversionFees_ALL?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  /** Return DefaultCurrencyConversionFees where none of the related BusinessCurrencyConversionFees match this filter */
  businessCurrencyConversionFees_NONE?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  /** Return DefaultCurrencyConversionFees where one of the related BusinessCurrencyConversionFees match this filter */
  businessCurrencyConversionFees_SINGLE?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  /** Return DefaultCurrencyConversionFees where some of the related BusinessCurrencyConversionFees match this filter */
  businessCurrencyConversionFees_SOME?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultCurrencyConversionFeesCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultCurrencyConversionFeesCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  flatFee?: InputMaybe<Scalars['Float']>;
  flatFee_GT?: InputMaybe<Scalars['Float']>;
  flatFee_GTE?: InputMaybe<Scalars['Float']>;
  flatFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  flatFee_LT?: InputMaybe<Scalars['Float']>;
  flatFee_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  markupPercentage?: InputMaybe<Scalars['Float']>;
  markupPercentage_GT?: InputMaybe<Scalars['Float']>;
  markupPercentage_GTE?: InputMaybe<Scalars['Float']>;
  markupPercentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  markupPercentage_LT?: InputMaybe<Scalars['Float']>;
  markupPercentage_LTE?: InputMaybe<Scalars['Float']>;
  percentageFee?: InputMaybe<Scalars['Float']>;
  percentageFee_GT?: InputMaybe<Scalars['Float']>;
  percentageFee_GTE?: InputMaybe<Scalars['Float']>;
  percentageFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  percentageFee_LT?: InputMaybe<Scalars['Float']>;
  percentageFee_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultCurrencyConversionFeesUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
};

export type DefaultCurrencyConversionMarkup = {
  __typename?: 'DefaultCurrencyConversionMarkup';
  adjustedRate: Scalars['Float'];
  autoAdjustMarkupToBaseRate: Scalars['Boolean'];
  baseCurrencyConversionRate: BaseCurrencyConversionRate;
  baseCurrencyConversionRateAggregate?: Maybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateAggregationSelection>;
  baseCurrencyConversionRateConnection: DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnection;
  businessMarkup: Array<BusinessCurrencyConversionMarkup>;
  businessMarkupAggregate?: Maybe<DefaultCurrencyConversionMarkupBusinessCurrencyConversionMarkupBusinessMarkupAggregationSelection>;
  businessMarkupConnection: DefaultCurrencyConversionMarkupBusinessMarkupConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultCurrencyConversionMarkupSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultCurrencyConversionMarkupCreatedByConnection;
  fee: Scalars['Float'];
  forConversion: Scalars['String'];
  id: Scalars['String'];
  isFlatFee: Scalars['Boolean'];
  markup: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultCurrencyConversionMarkupSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultCurrencyConversionMarkupUpdatedByConnection;
};


export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BaseCurrencyConversionRateOptions>;
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionSort>>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
};


export type DefaultCurrencyConversionMarkupBusinessMarkupArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessCurrencyConversionMarkupOptions>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type DefaultCurrencyConversionMarkupBusinessMarkupAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type DefaultCurrencyConversionMarkupBusinessMarkupConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectionSort>>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
};


export type DefaultCurrencyConversionMarkupCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultCurrencyConversionMarkupCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultCurrencyConversionMarkupCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultCurrencyConversionMarkupCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>;
};


export type DefaultCurrencyConversionMarkupUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultCurrencyConversionMarkupUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultCurrencyConversionMarkupUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultCurrencyConversionMarkupUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupAggregateSelection';
  adjustedRate: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  forConversion: StringAggregateSelectionNonNullable;
  id: StringAggregateSelectionNonNullable;
  markup: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateAggregationSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateNodeAggregateSelection>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateNodeAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupBaseCurrencyConversionRateBaseCurrencyConversionRateNodeAggregateSelection';
  baseRate: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  fromCurrency: StringAggregateSelectionNonNullable;
  id: StringAggregateSelectionNonNullable;
  toCurrency: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectFieldInput = {
  connect?: InputMaybe<BaseCurrencyConversionRateConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BaseCurrencyConversionRateConnectWhere>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInput = {
  onCreate: DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInputOnCreate;
  where: BaseCurrencyConversionRateConnectOrCreateWhere;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInputOnCreate = {
  node: BaseCurrencyConversionRateOnCreateInput;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnection = {
  __typename?: 'DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnection';
  edges: Array<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionSort = {
  node?: InputMaybe<BaseCurrencyConversionRateSort>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>>;
  node?: InputMaybe<BaseCurrencyConversionRateWhere>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateCreateFieldInput = {
  node: BaseCurrencyConversionRateCreateInput;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateDeleteFieldInput = {
  delete?: InputMaybe<BaseCurrencyConversionRateDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateDisconnectFieldInput = {
  disconnect?: InputMaybe<BaseCurrencyConversionRateDisconnectInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateCreateFieldInput>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateNodeAggregationWhereInput>>;
  baseRate_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  baseRate_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  baseRate_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  baseRate_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_GT?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_LT?: InputMaybe<Scalars['Float']>;
  baseRate_MAX_LTE?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_GT?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_LT?: InputMaybe<Scalars['Float']>;
  baseRate_MIN_LTE?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_GT?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_GTE?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_LT?: InputMaybe<Scalars['Float']>;
  baseRate_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  fromCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  fromCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  fromCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  fromCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  fromCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  fromCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  fromCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  fromCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  fromCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  fromCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  fromCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  toCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  toCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  toCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  toCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  toCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  toCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  toCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  toCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  toCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  toCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  toCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateRelationship = {
  __typename?: 'DefaultCurrencyConversionMarkupBaseCurrencyConversionRateRelationship';
  cursor: Scalars['String'];
  node: BaseCurrencyConversionRate;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateUpdateConnectionInput = {
  node?: InputMaybe<BaseCurrencyConversionRateUpdateInput>;
};

export type DefaultCurrencyConversionMarkupBaseCurrencyConversionRateUpdateFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateCreateFieldInput>;
  delete?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateDisconnectFieldInput>;
  update?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateUpdateConnectionInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupBusinessCurrencyConversionMarkupBusinessMarkupAggregationSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupBusinessCurrencyConversionMarkupBusinessMarkupAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultCurrencyConversionMarkupBusinessCurrencyConversionMarkupBusinessMarkupNodeAggregateSelection>;
};

export type DefaultCurrencyConversionMarkupBusinessCurrencyConversionMarkupBusinessMarkupNodeAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupBusinessCurrencyConversionMarkupBusinessMarkupNodeAggregateSelection';
  adjustedRate: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  forConversion: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  markup: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupAggregateInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupAggregateInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupAggregateInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupNodeAggregationWhereInput>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessCurrencyConversionMarkupConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessCurrencyConversionMarkupConnectWhere>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupConnectOrCreateFieldInput = {
  onCreate: DefaultCurrencyConversionMarkupBusinessMarkupConnectOrCreateFieldInputOnCreate;
  where: BusinessCurrencyConversionMarkupConnectOrCreateWhere;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupConnectOrCreateFieldInputOnCreate = {
  node: BusinessCurrencyConversionMarkupOnCreateInput;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupConnection = {
  __typename?: 'DefaultCurrencyConversionMarkupBusinessMarkupConnection';
  edges: Array<DefaultCurrencyConversionMarkupBusinessMarkupRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionMarkupBusinessMarkupConnectionSort = {
  node?: InputMaybe<BusinessCurrencyConversionMarkupSort>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>>;
  node?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupCreateFieldInput = {
  node: BusinessCurrencyConversionMarkupCreateInput;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupDeleteFieldInput = {
  delete?: InputMaybe<BusinessCurrencyConversionMarkupDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupDisconnectInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupFieldInput = {
  connect?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupCreateFieldInput>>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupNodeAggregationWhereInput>>;
  adjustedRate_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MAX_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_MIN_LTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  forConversion_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  forConversion_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  forConversion_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  markup_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  markup_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MAX_GT?: InputMaybe<Scalars['Float']>;
  markup_MAX_GTE?: InputMaybe<Scalars['Float']>;
  markup_MAX_LT?: InputMaybe<Scalars['Float']>;
  markup_MAX_LTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_MIN_GT?: InputMaybe<Scalars['Float']>;
  markup_MIN_GTE?: InputMaybe<Scalars['Float']>;
  markup_MIN_LT?: InputMaybe<Scalars['Float']>;
  markup_MIN_LTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  markup_SUM_GT?: InputMaybe<Scalars['Float']>;
  markup_SUM_GTE?: InputMaybe<Scalars['Float']>;
  markup_SUM_LT?: InputMaybe<Scalars['Float']>;
  markup_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupRelationship = {
  __typename?: 'DefaultCurrencyConversionMarkupBusinessMarkupRelationship';
  cursor: Scalars['String'];
  node: BusinessCurrencyConversionMarkup;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupUpdateConnectionInput = {
  node?: InputMaybe<BusinessCurrencyConversionMarkupUpdateInput>;
};

export type DefaultCurrencyConversionMarkupBusinessMarkupUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupDisconnectFieldInput>>;
  update?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupUpdateConnectionInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupConnectInput = {
  baseCurrencyConversionRate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectFieldInput>;
  businessMarkup?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectFieldInput>;
};

export type DefaultCurrencyConversionMarkupConnectOrCreateInput = {
  baseCurrencyConversionRate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectOrCreateFieldInput>;
  businessMarkup?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultCurrencyConversionMarkupConnectOrCreateWhere = {
  node: DefaultCurrencyConversionMarkupUniqueWhere;
};

export type DefaultCurrencyConversionMarkupConnectWhere = {
  node: DefaultCurrencyConversionMarkupWhere;
};

export type DefaultCurrencyConversionMarkupCreateInput = {
  adjustedRate?: Scalars['Float'];
  autoAdjustMarkupToBaseRate?: Scalars['Boolean'];
  baseCurrencyConversionRate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateFieldInput>;
  businessMarkup?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupFieldInput>;
  createdBy?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByFieldInput>;
  fee?: Scalars['Float'];
  forConversion: Scalars['String'];
  id: Scalars['String'];
  isFlatFee?: Scalars['Boolean'];
  markup?: Scalars['Float'];
  updatedBy?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByFieldInput>;
};

export type DefaultCurrencyConversionMarkupCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByNodeAggregationWhereInput>;
};

export type DefaultCurrencyConversionMarkupCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultCurrencyConversionMarkupCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultCurrencyConversionMarkupCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultCurrencyConversionMarkupCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultCurrencyConversionMarkupCreatedByConnection = {
  __typename?: 'DefaultCurrencyConversionMarkupCreatedByConnection';
  edges: Array<DefaultCurrencyConversionMarkupCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionMarkupCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultCurrencyConversionMarkupCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultCurrencyConversionMarkupCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultCurrencyConversionMarkupCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupCreatedByFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByCreateFieldInput>;
};

export type DefaultCurrencyConversionMarkupCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultCurrencyConversionMarkupCreatedByRelationship = {
  __typename?: 'DefaultCurrencyConversionMarkupCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultCurrencyConversionMarkupCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultCurrencyConversionMarkupCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupDeleteInput = {
  baseCurrencyConversionRate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateDeleteFieldInput>;
  businessMarkup?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByDeleteFieldInput>;
};

export type DefaultCurrencyConversionMarkupDisconnectInput = {
  baseCurrencyConversionRate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateDisconnectFieldInput>;
  businessMarkup?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByDisconnectFieldInput>;
};

export type DefaultCurrencyConversionMarkupEdge = {
  __typename?: 'DefaultCurrencyConversionMarkupEdge';
  cursor: Scalars['String'];
  node: DefaultCurrencyConversionMarkup;
};

export type DefaultCurrencyConversionMarkupOnCreateInput = {
  adjustedRate?: Scalars['Float'];
  autoAdjustMarkupToBaseRate?: Scalars['Boolean'];
  fee?: Scalars['Float'];
  forConversion: Scalars['String'];
  id: Scalars['String'];
  isFlatFee?: Scalars['Boolean'];
  markup?: Scalars['Float'];
};

export type DefaultCurrencyConversionMarkupOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultCurrencyConversionMarkupSort objects to sort DefaultCurrencyConversionMarkups by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultCurrencyConversionMarkupSort>>;
};

export type DefaultCurrencyConversionMarkupRelationInput = {
  baseCurrencyConversionRate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateCreateFieldInput>;
  businessMarkup?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultCurrencyConversionMarkups by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultCurrencyConversionMarkupSort object. */
export type DefaultCurrencyConversionMarkupSort = {
  adjustedRate?: InputMaybe<SortDirection>;
  autoAdjustMarkupToBaseRate?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  fee?: InputMaybe<SortDirection>;
  forConversion?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isFlatFee?: InputMaybe<SortDirection>;
  markup?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultCurrencyConversionMarkupSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultCurrencyConversionMarkupSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultCurrencyConversionMarkupSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionMarkupSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultCurrencyConversionMarkupSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultCurrencyConversionMarkupSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultCurrencyConversionMarkupSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultCurrencyConversionMarkupUniqueWhere = {
  id?: InputMaybe<Scalars['String']>;
};

export type DefaultCurrencyConversionMarkupUpdateInput = {
  adjustedRate?: InputMaybe<Scalars['Float']>;
  adjustedRate_ADD?: InputMaybe<Scalars['Float']>;
  adjustedRate_DIVIDE?: InputMaybe<Scalars['Float']>;
  adjustedRate_MULTIPLY?: InputMaybe<Scalars['Float']>;
  adjustedRate_SUBTRACT?: InputMaybe<Scalars['Float']>;
  autoAdjustMarkupToBaseRate?: InputMaybe<Scalars['Boolean']>;
  baseCurrencyConversionRate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateUpdateFieldInput>;
  businessMarkup?: InputMaybe<Array<DefaultCurrencyConversionMarkupBusinessMarkupUpdateFieldInput>>;
  createdBy?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByUpdateFieldInput>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_ADD?: InputMaybe<Scalars['Float']>;
  fee_DIVIDE?: InputMaybe<Scalars['Float']>;
  fee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  fee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  forConversion?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isFlatFee?: InputMaybe<Scalars['Boolean']>;
  markup?: InputMaybe<Scalars['Float']>;
  markup_ADD?: InputMaybe<Scalars['Float']>;
  markup_DIVIDE?: InputMaybe<Scalars['Float']>;
  markup_MULTIPLY?: InputMaybe<Scalars['Float']>;
  markup_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByUpdateFieldInput>;
};

export type DefaultCurrencyConversionMarkupUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByNodeAggregationWhereInput>;
};

export type DefaultCurrencyConversionMarkupUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultCurrencyConversionMarkupUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultCurrencyConversionMarkupUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultCurrencyConversionMarkupUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultCurrencyConversionMarkupUpdatedByConnection = {
  __typename?: 'DefaultCurrencyConversionMarkupUpdatedByConnection';
  edges: Array<DefaultCurrencyConversionMarkupUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultCurrencyConversionMarkupUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultCurrencyConversionMarkupUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultCurrencyConversionMarkupUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultCurrencyConversionMarkupUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByCreateFieldInput>;
};

export type DefaultCurrencyConversionMarkupUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultCurrencyConversionMarkupUpdatedByRelationship = {
  __typename?: 'DefaultCurrencyConversionMarkupUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultCurrencyConversionMarkupUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultCurrencyConversionMarkupUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>;
};

export type DefaultCurrencyConversionMarkupWhere = {
  AND?: InputMaybe<Array<DefaultCurrencyConversionMarkupWhere>>;
  NOT?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
  OR?: InputMaybe<Array<DefaultCurrencyConversionMarkupWhere>>;
  adjustedRate?: InputMaybe<Scalars['Float']>;
  adjustedRate_GT?: InputMaybe<Scalars['Float']>;
  adjustedRate_GTE?: InputMaybe<Scalars['Float']>;
  adjustedRate_IN?: InputMaybe<Array<Scalars['Float']>>;
  adjustedRate_LT?: InputMaybe<Scalars['Float']>;
  adjustedRate_LTE?: InputMaybe<Scalars['Float']>;
  autoAdjustMarkupToBaseRate?: InputMaybe<Scalars['Boolean']>;
  baseCurrencyConversionRate?: InputMaybe<BaseCurrencyConversionRateWhere>;
  baseCurrencyConversionRateAggregate?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateAggregateInput>;
  baseCurrencyConversionRateConnection?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
  baseCurrencyConversionRateConnection_NOT?: InputMaybe<DefaultCurrencyConversionMarkupBaseCurrencyConversionRateConnectionWhere>;
  baseCurrencyConversionRate_NOT?: InputMaybe<BaseCurrencyConversionRateWhere>;
  businessMarkupAggregate?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupAggregateInput>;
  /** Return DefaultCurrencyConversionMarkups where all of the related DefaultCurrencyConversionMarkupBusinessMarkupConnections match this filter */
  businessMarkupConnection_ALL?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
  /** Return DefaultCurrencyConversionMarkups where none of the related DefaultCurrencyConversionMarkupBusinessMarkupConnections match this filter */
  businessMarkupConnection_NONE?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
  /** Return DefaultCurrencyConversionMarkups where one of the related DefaultCurrencyConversionMarkupBusinessMarkupConnections match this filter */
  businessMarkupConnection_SINGLE?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
  /** Return DefaultCurrencyConversionMarkups where some of the related DefaultCurrencyConversionMarkupBusinessMarkupConnections match this filter */
  businessMarkupConnection_SOME?: InputMaybe<DefaultCurrencyConversionMarkupBusinessMarkupConnectionWhere>;
  /** Return DefaultCurrencyConversionMarkups where all of the related BusinessCurrencyConversionMarkups match this filter */
  businessMarkup_ALL?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return DefaultCurrencyConversionMarkups where none of the related BusinessCurrencyConversionMarkups match this filter */
  businessMarkup_NONE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return DefaultCurrencyConversionMarkups where one of the related BusinessCurrencyConversionMarkups match this filter */
  businessMarkup_SINGLE?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  /** Return DefaultCurrencyConversionMarkups where some of the related BusinessCurrencyConversionMarkups match this filter */
  businessMarkup_SOME?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultCurrencyConversionMarkupCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_GT?: InputMaybe<Scalars['Float']>;
  fee_GTE?: InputMaybe<Scalars['Float']>;
  fee_IN?: InputMaybe<Array<Scalars['Float']>>;
  fee_LT?: InputMaybe<Scalars['Float']>;
  fee_LTE?: InputMaybe<Scalars['Float']>;
  forConversion?: InputMaybe<Scalars['String']>;
  forConversion_CONTAINS?: InputMaybe<Scalars['String']>;
  forConversion_ENDS_WITH?: InputMaybe<Scalars['String']>;
  forConversion_IN?: InputMaybe<Array<Scalars['String']>>;
  forConversion_MATCHES?: InputMaybe<Scalars['String']>;
  forConversion_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['String']>;
  id_ENDS_WITH?: InputMaybe<Scalars['String']>;
  id_IN?: InputMaybe<Array<Scalars['String']>>;
  id_MATCHES?: InputMaybe<Scalars['String']>;
  id_STARTS_WITH?: InputMaybe<Scalars['String']>;
  isFlatFee?: InputMaybe<Scalars['Boolean']>;
  markup?: InputMaybe<Scalars['Float']>;
  markup_GT?: InputMaybe<Scalars['Float']>;
  markup_GTE?: InputMaybe<Scalars['Float']>;
  markup_IN?: InputMaybe<Array<Scalars['Float']>>;
  markup_LT?: InputMaybe<Scalars['Float']>;
  markup_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultCurrencyConversionMarkupUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
};

export type DefaultCurrencyConversionMarkupsConnection = {
  __typename?: 'DefaultCurrencyConversionMarkupsConnection';
  edges: Array<DefaultCurrencyConversionMarkupEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultJoiningFee = {
  __typename?: 'DefaultJoiningFee';
  businessWalletJoiningFees: Array<BusinessWalletJoiningFee>;
  businessWalletJoiningFeesAggregate?: Maybe<DefaultJoiningFeeBusinessWalletJoiningFeeBusinessWalletJoiningFeesAggregationSelection>;
  businessWalletJoiningFeesConnection: DefaultJoiningFeeBusinessWalletJoiningFeesConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultJoiningFeeSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultJoiningFeeCreatedByConnection;
  currency: Scalars['String'];
  fee: Scalars['Float'];
  id: Scalars['ID'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultJoiningFeeSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultJoiningFeeUpdatedByConnection;
};


export type DefaultJoiningFeeBusinessWalletJoiningFeesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletJoiningFeeOptions>;
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


export type DefaultJoiningFeeBusinessWalletJoiningFeesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


export type DefaultJoiningFeeBusinessWalletJoiningFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionSort>>;
  where?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
};


export type DefaultJoiningFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultJoiningFeeCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultJoiningFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultJoiningFeeCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultJoiningFeeCreatedByConnectionWhere>;
};


export type DefaultJoiningFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultJoiningFeeUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultJoiningFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultJoiningFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultJoiningFeeUpdatedByConnectionWhere>;
};

export type DefaultJoiningFeeAggregateSelection = {
  __typename?: 'DefaultJoiningFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeeBusinessWalletJoiningFeesAggregationSelection = {
  __typename?: 'DefaultJoiningFeeBusinessWalletJoiningFeeBusinessWalletJoiningFeesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultJoiningFeeBusinessWalletJoiningFeeBusinessWalletJoiningFeesNodeAggregateSelection>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeeBusinessWalletJoiningFeesNodeAggregateSelection = {
  __typename?: 'DefaultJoiningFeeBusinessWalletJoiningFeeBusinessWalletJoiningFeesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesAggregateInput = {
  AND?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesAggregateInput>>;
  NOT?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesAggregateInput>;
  OR?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesNodeAggregationWhereInput>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletJoiningFeeConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletJoiningFeeConnectWhere>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesConnectOrCreateFieldInput = {
  onCreate: DefaultJoiningFeeBusinessWalletJoiningFeesConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletJoiningFeeConnectOrCreateWhere;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletJoiningFeeOnCreateInput;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesConnection = {
  __typename?: 'DefaultJoiningFeeBusinessWalletJoiningFeesConnection';
  edges: Array<DefaultJoiningFeeBusinessWalletJoiningFeesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesConnectionSort = {
  node?: InputMaybe<BusinessWalletJoiningFeeSort>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere = {
  AND?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>>;
  NOT?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
  OR?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>>;
  node?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesCreateFieldInput = {
  node: BusinessWalletJoiningFeeCreateInput;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletJoiningFeeDeleteInput>;
  where?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletJoiningFeeDisconnectInput>;
  where?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesFieldInput = {
  connect?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesCreateFieldInput>>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesRelationship = {
  __typename?: 'DefaultJoiningFeeBusinessWalletJoiningFeesRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletJoiningFee;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletJoiningFeeUpdateInput>;
};

export type DefaultJoiningFeeBusinessWalletJoiningFeesUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesDisconnectFieldInput>>;
  update?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesUpdateConnectionInput>;
  where?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
};

export type DefaultJoiningFeeConnectInput = {
  businessWalletJoiningFees?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultJoiningFeeCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultJoiningFeeUpdatedByConnectFieldInput>;
};

export type DefaultJoiningFeeConnectOrCreateInput = {
  businessWalletJoiningFees?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultJoiningFeeCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultJoiningFeeUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultJoiningFeeConnectOrCreateWhere = {
  node: DefaultJoiningFeeUniqueWhere;
};

export type DefaultJoiningFeeConnectWhere = {
  node: DefaultJoiningFeeWhere;
};

export type DefaultJoiningFeeCreateInput = {
  businessWalletJoiningFees?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesFieldInput>;
  createdBy?: InputMaybe<DefaultJoiningFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  fee?: Scalars['Float'];
  updatedBy?: InputMaybe<DefaultJoiningFeeUpdatedByFieldInput>;
};

export type DefaultJoiningFeeCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultJoiningFeeCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultJoiningFeeCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultJoiningFeeCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultJoiningFeeCreatedByNodeAggregationWhereInput>;
};

export type DefaultJoiningFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultJoiningFeeCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultJoiningFeeCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultJoiningFeeCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultJoiningFeeCreatedByConnection = {
  __typename?: 'DefaultJoiningFeeCreatedByConnection';
  edges: Array<DefaultJoiningFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultJoiningFeeCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultJoiningFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultJoiningFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultJoiningFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultJoiningFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultJoiningFeeCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultJoiningFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultJoiningFeeCreatedByConnectionWhere>;
};

export type DefaultJoiningFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultJoiningFeeCreatedByConnectionWhere>;
};

export type DefaultJoiningFeeCreatedByFieldInput = {
  connect?: InputMaybe<DefaultJoiningFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultJoiningFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultJoiningFeeCreatedByCreateFieldInput>;
};

export type DefaultJoiningFeeCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultJoiningFeeCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultJoiningFeeCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultJoiningFeeCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultJoiningFeeCreatedByRelationship = {
  __typename?: 'DefaultJoiningFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultJoiningFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultJoiningFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultJoiningFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultJoiningFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultJoiningFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultJoiningFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultJoiningFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultJoiningFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultJoiningFeeCreatedByConnectionWhere>;
};

export type DefaultJoiningFeeDeleteInput = {
  businessWalletJoiningFees?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultJoiningFeeCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultJoiningFeeUpdatedByDeleteFieldInput>;
};

export type DefaultJoiningFeeDisconnectInput = {
  businessWalletJoiningFees?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultJoiningFeeCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultJoiningFeeUpdatedByDisconnectFieldInput>;
};

export type DefaultJoiningFeeEdge = {
  __typename?: 'DefaultJoiningFeeEdge';
  cursor: Scalars['String'];
  node: DefaultJoiningFee;
};

export type DefaultJoiningFeeOnCreateInput = {
  currency: Scalars['String'];
  fee?: Scalars['Float'];
};

export type DefaultJoiningFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultJoiningFeeSort objects to sort DefaultJoiningFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultJoiningFeeSort>>;
};

export type DefaultJoiningFeeRelationInput = {
  businessWalletJoiningFees?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultJoiningFeeCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultJoiningFeeUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultJoiningFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultJoiningFeeSort object. */
export type DefaultJoiningFeeSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  fee?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultJoiningFeeSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultJoiningFeeSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultJoiningFeeSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultJoiningFeeSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultJoiningFeeSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultJoiningFeeSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultJoiningFeeSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultJoiningFeeSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultJoiningFeeSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultJoiningFeeSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultJoiningFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type DefaultJoiningFeeUpdateInput = {
  businessWalletJoiningFees?: InputMaybe<Array<DefaultJoiningFeeBusinessWalletJoiningFeesUpdateFieldInput>>;
  createdBy?: InputMaybe<DefaultJoiningFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_ADD?: InputMaybe<Scalars['Float']>;
  fee_DIVIDE?: InputMaybe<Scalars['Float']>;
  fee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  fee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<DefaultJoiningFeeUpdatedByUpdateFieldInput>;
};

export type DefaultJoiningFeeUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultJoiningFeeUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultJoiningFeeUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultJoiningFeeUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultJoiningFeeUpdatedByNodeAggregationWhereInput>;
};

export type DefaultJoiningFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultJoiningFeeUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultJoiningFeeUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultJoiningFeeUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultJoiningFeeUpdatedByConnection = {
  __typename?: 'DefaultJoiningFeeUpdatedByConnection';
  edges: Array<DefaultJoiningFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultJoiningFeeUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultJoiningFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultJoiningFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultJoiningFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultJoiningFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultJoiningFeeUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultJoiningFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultJoiningFeeUpdatedByConnectionWhere>;
};

export type DefaultJoiningFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultJoiningFeeUpdatedByConnectionWhere>;
};

export type DefaultJoiningFeeUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultJoiningFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultJoiningFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultJoiningFeeUpdatedByCreateFieldInput>;
};

export type DefaultJoiningFeeUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultJoiningFeeUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultJoiningFeeUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultJoiningFeeUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultJoiningFeeUpdatedByRelationship = {
  __typename?: 'DefaultJoiningFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultJoiningFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultJoiningFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultJoiningFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultJoiningFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultJoiningFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultJoiningFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultJoiningFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultJoiningFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultJoiningFeeUpdatedByConnectionWhere>;
};

export type DefaultJoiningFeeWhere = {
  AND?: InputMaybe<Array<DefaultJoiningFeeWhere>>;
  NOT?: InputMaybe<DefaultJoiningFeeWhere>;
  OR?: InputMaybe<Array<DefaultJoiningFeeWhere>>;
  businessWalletJoiningFeesAggregate?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesAggregateInput>;
  /** Return DefaultJoiningFees where all of the related DefaultJoiningFeeBusinessWalletJoiningFeesConnections match this filter */
  businessWalletJoiningFeesConnection_ALL?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
  /** Return DefaultJoiningFees where none of the related DefaultJoiningFeeBusinessWalletJoiningFeesConnections match this filter */
  businessWalletJoiningFeesConnection_NONE?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
  /** Return DefaultJoiningFees where one of the related DefaultJoiningFeeBusinessWalletJoiningFeesConnections match this filter */
  businessWalletJoiningFeesConnection_SINGLE?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
  /** Return DefaultJoiningFees where some of the related DefaultJoiningFeeBusinessWalletJoiningFeesConnections match this filter */
  businessWalletJoiningFeesConnection_SOME?: InputMaybe<DefaultJoiningFeeBusinessWalletJoiningFeesConnectionWhere>;
  /** Return DefaultJoiningFees where all of the related BusinessWalletJoiningFees match this filter */
  businessWalletJoiningFees_ALL?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  /** Return DefaultJoiningFees where none of the related BusinessWalletJoiningFees match this filter */
  businessWalletJoiningFees_NONE?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  /** Return DefaultJoiningFees where one of the related BusinessWalletJoiningFees match this filter */
  businessWalletJoiningFees_SINGLE?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  /** Return DefaultJoiningFees where some of the related BusinessWalletJoiningFees match this filter */
  businessWalletJoiningFees_SOME?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultJoiningFeeCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultJoiningFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultJoiningFeeCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_GT?: InputMaybe<Scalars['Float']>;
  fee_GTE?: InputMaybe<Scalars['Float']>;
  fee_IN?: InputMaybe<Array<Scalars['Float']>>;
  fee_LT?: InputMaybe<Scalars['Float']>;
  fee_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultJoiningFeeUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultJoiningFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultJoiningFeeUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
};

export type DefaultJoiningFeesConnection = {
  __typename?: 'DefaultJoiningFeesConnection';
  edges: Array<DefaultJoiningFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultMaintenanceFee = {
  __typename?: 'DefaultMaintenanceFee';
  businessMaintenanceFees: Array<BusinessWalletMaintenanceFee>;
  businessMaintenanceFeesAggregate?: Maybe<DefaultMaintenanceFeeBusinessWalletMaintenanceFeeBusinessMaintenanceFeesAggregationSelection>;
  businessMaintenanceFeesConnection: DefaultMaintenanceFeeBusinessMaintenanceFeesConnection;
  checkType: MaintenanceFeeCheckType;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultMaintenanceFeeSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultMaintenanceFeeCreatedByConnection;
  currency: Scalars['String'];
  depositVolume: Scalars['Float'];
  fee: Scalars['Float'];
  id: Scalars['ID'];
  totalVolume: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultMaintenanceFeeSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultMaintenanceFeeUpdatedByConnection;
  withdrawalVolume: Scalars['Float'];
};


export type DefaultMaintenanceFeeBusinessMaintenanceFeesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletMaintenanceFeeOptions>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


export type DefaultMaintenanceFeeBusinessMaintenanceFeesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


export type DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionSort>>;
  where?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
};


export type DefaultMaintenanceFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultMaintenanceFeeCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultMaintenanceFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultMaintenanceFeeCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectionWhere>;
};


export type DefaultMaintenanceFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultMaintenanceFeeUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultMaintenanceFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultMaintenanceFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectionWhere>;
};

export type DefaultMaintenanceFeeAggregateSelection = {
  __typename?: 'DefaultMaintenanceFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  totalVolume: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawalVolume: FloatAggregateSelectionNonNullable;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesAggregateInput = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesAggregateInput>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesAggregateInput>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesNodeAggregationWhereInput>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletMaintenanceFeeConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletMaintenanceFeeConnectWhere>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesConnectOrCreateFieldInput = {
  onCreate: DefaultMaintenanceFeeBusinessMaintenanceFeesConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletMaintenanceFeeConnectOrCreateWhere;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletMaintenanceFeeOnCreateInput;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesConnection = {
  __typename?: 'DefaultMaintenanceFeeBusinessMaintenanceFeesConnection';
  edges: Array<DefaultMaintenanceFeeBusinessMaintenanceFeesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionSort = {
  node?: InputMaybe<BusinessWalletMaintenanceFeeSort>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>>;
  node?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesCreateFieldInput = {
  node: BusinessWalletMaintenanceFeeCreateInput;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletMaintenanceFeeDeleteInput>;
  where?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletMaintenanceFeeDisconnectInput>;
  where?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesFieldInput = {
  connect?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesCreateFieldInput>>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  withdrawalVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesRelationship = {
  __typename?: 'DefaultMaintenanceFeeBusinessMaintenanceFeesRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletMaintenanceFee;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletMaintenanceFeeUpdateInput>;
};

export type DefaultMaintenanceFeeBusinessMaintenanceFeesUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesDisconnectFieldInput>>;
  update?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesUpdateConnectionInput>;
  where?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
};

export type DefaultMaintenanceFeeBusinessWalletMaintenanceFeeBusinessMaintenanceFeesAggregationSelection = {
  __typename?: 'DefaultMaintenanceFeeBusinessWalletMaintenanceFeeBusinessMaintenanceFeesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultMaintenanceFeeBusinessWalletMaintenanceFeeBusinessMaintenanceFeesNodeAggregateSelection>;
};

export type DefaultMaintenanceFeeBusinessWalletMaintenanceFeeBusinessMaintenanceFeesNodeAggregateSelection = {
  __typename?: 'DefaultMaintenanceFeeBusinessWalletMaintenanceFeeBusinessMaintenanceFeesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  totalVolume: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  withdrawalVolume: FloatAggregateSelectionNonNullable;
};

export type DefaultMaintenanceFeeConnectInput = {
  businessMaintenanceFees?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectFieldInput>;
};

export type DefaultMaintenanceFeeConnectOrCreateInput = {
  businessMaintenanceFees?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultMaintenanceFeeConnectOrCreateWhere = {
  node: DefaultMaintenanceFeeUniqueWhere;
};

export type DefaultMaintenanceFeeConnectWhere = {
  node: DefaultMaintenanceFeeWhere;
};

export type DefaultMaintenanceFeeCreateInput = {
  businessMaintenanceFees?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesFieldInput>;
  checkType?: MaintenanceFeeCheckType;
  createdBy?: InputMaybe<DefaultMaintenanceFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  depositVolume?: Scalars['Float'];
  fee?: Scalars['Float'];
  totalVolume?: Scalars['Float'];
  updatedBy?: InputMaybe<DefaultMaintenanceFeeUpdatedByFieldInput>;
  withdrawalVolume?: Scalars['Float'];
};

export type DefaultMaintenanceFeeCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultMaintenanceFeeCreatedByNodeAggregationWhereInput>;
};

export type DefaultMaintenanceFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultMaintenanceFeeCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultMaintenanceFeeCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultMaintenanceFeeCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultMaintenanceFeeCreatedByConnection = {
  __typename?: 'DefaultMaintenanceFeeCreatedByConnection';
  edges: Array<DefaultMaintenanceFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultMaintenanceFeeCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultMaintenanceFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultMaintenanceFeeCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultMaintenanceFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectionWhere>;
};

export type DefaultMaintenanceFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectionWhere>;
};

export type DefaultMaintenanceFeeCreatedByFieldInput = {
  connect?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultMaintenanceFeeCreatedByCreateFieldInput>;
};

export type DefaultMaintenanceFeeCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultMaintenanceFeeCreatedByRelationship = {
  __typename?: 'DefaultMaintenanceFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultMaintenanceFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultMaintenanceFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultMaintenanceFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultMaintenanceFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultMaintenanceFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultMaintenanceFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectionWhere>;
};

export type DefaultMaintenanceFeeDeleteInput = {
  businessMaintenanceFees?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultMaintenanceFeeCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultMaintenanceFeeUpdatedByDeleteFieldInput>;
};

export type DefaultMaintenanceFeeDisconnectInput = {
  businessMaintenanceFees?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultMaintenanceFeeCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultMaintenanceFeeUpdatedByDisconnectFieldInput>;
};

export type DefaultMaintenanceFeeEdge = {
  __typename?: 'DefaultMaintenanceFeeEdge';
  cursor: Scalars['String'];
  node: DefaultMaintenanceFee;
};

export type DefaultMaintenanceFeeOnCreateInput = {
  checkType?: MaintenanceFeeCheckType;
  currency: Scalars['String'];
  depositVolume?: Scalars['Float'];
  fee?: Scalars['Float'];
  totalVolume?: Scalars['Float'];
  withdrawalVolume?: Scalars['Float'];
};

export type DefaultMaintenanceFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultMaintenanceFeeSort objects to sort DefaultMaintenanceFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultMaintenanceFeeSort>>;
};

export type DefaultMaintenanceFeeRelationInput = {
  businessMaintenanceFees?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultMaintenanceFeeCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultMaintenanceFeeUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultMaintenanceFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultMaintenanceFeeSort object. */
export type DefaultMaintenanceFeeSort = {
  checkType?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  depositVolume?: InputMaybe<SortDirection>;
  fee?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  totalVolume?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  withdrawalVolume?: InputMaybe<SortDirection>;
};

export type DefaultMaintenanceFeeSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultMaintenanceFeeSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultMaintenanceFeeSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultMaintenanceFeeSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultMaintenanceFeeSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultMaintenanceFeeSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultMaintenanceFeeSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultMaintenanceFeeSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultMaintenanceFeeSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultMaintenanceFeeSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultMaintenanceFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type DefaultMaintenanceFeeUpdateInput = {
  businessMaintenanceFees?: InputMaybe<Array<DefaultMaintenanceFeeBusinessMaintenanceFeesUpdateFieldInput>>;
  checkType?: InputMaybe<MaintenanceFeeCheckType>;
  createdBy?: InputMaybe<DefaultMaintenanceFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_ADD?: InputMaybe<Scalars['Float']>;
  depositVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  depositVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  depositVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_ADD?: InputMaybe<Scalars['Float']>;
  fee_DIVIDE?: InputMaybe<Scalars['Float']>;
  fee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  fee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  totalVolume?: InputMaybe<Scalars['Float']>;
  totalVolume_ADD?: InputMaybe<Scalars['Float']>;
  totalVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  totalVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  totalVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<DefaultMaintenanceFeeUpdatedByUpdateFieldInput>;
  withdrawalVolume?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_ADD?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
};

export type DefaultMaintenanceFeeUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultMaintenanceFeeUpdatedByNodeAggregationWhereInput>;
};

export type DefaultMaintenanceFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultMaintenanceFeeUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultMaintenanceFeeUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultMaintenanceFeeUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultMaintenanceFeeUpdatedByConnection = {
  __typename?: 'DefaultMaintenanceFeeUpdatedByConnection';
  edges: Array<DefaultMaintenanceFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultMaintenanceFeeUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultMaintenanceFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultMaintenanceFeeUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultMaintenanceFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectionWhere>;
};

export type DefaultMaintenanceFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectionWhere>;
};

export type DefaultMaintenanceFeeUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultMaintenanceFeeUpdatedByCreateFieldInput>;
};

export type DefaultMaintenanceFeeUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultMaintenanceFeeUpdatedByRelationship = {
  __typename?: 'DefaultMaintenanceFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultMaintenanceFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultMaintenanceFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultMaintenanceFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultMaintenanceFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultMaintenanceFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultMaintenanceFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectionWhere>;
};

export type DefaultMaintenanceFeeWhere = {
  AND?: InputMaybe<Array<DefaultMaintenanceFeeWhere>>;
  NOT?: InputMaybe<DefaultMaintenanceFeeWhere>;
  OR?: InputMaybe<Array<DefaultMaintenanceFeeWhere>>;
  businessMaintenanceFeesAggregate?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesAggregateInput>;
  /** Return DefaultMaintenanceFees where all of the related DefaultMaintenanceFeeBusinessMaintenanceFeesConnections match this filter */
  businessMaintenanceFeesConnection_ALL?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
  /** Return DefaultMaintenanceFees where none of the related DefaultMaintenanceFeeBusinessMaintenanceFeesConnections match this filter */
  businessMaintenanceFeesConnection_NONE?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
  /** Return DefaultMaintenanceFees where one of the related DefaultMaintenanceFeeBusinessMaintenanceFeesConnections match this filter */
  businessMaintenanceFeesConnection_SINGLE?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
  /** Return DefaultMaintenanceFees where some of the related DefaultMaintenanceFeeBusinessMaintenanceFeesConnections match this filter */
  businessMaintenanceFeesConnection_SOME?: InputMaybe<DefaultMaintenanceFeeBusinessMaintenanceFeesConnectionWhere>;
  /** Return DefaultMaintenanceFees where all of the related BusinessWalletMaintenanceFees match this filter */
  businessMaintenanceFees_ALL?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  /** Return DefaultMaintenanceFees where none of the related BusinessWalletMaintenanceFees match this filter */
  businessMaintenanceFees_NONE?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  /** Return DefaultMaintenanceFees where one of the related BusinessWalletMaintenanceFees match this filter */
  businessMaintenanceFees_SINGLE?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  /** Return DefaultMaintenanceFees where some of the related BusinessWalletMaintenanceFees match this filter */
  businessMaintenanceFees_SOME?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  checkType?: InputMaybe<MaintenanceFeeCheckType>;
  checkType_IN?: InputMaybe<Array<MaintenanceFeeCheckType>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultMaintenanceFeeCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultMaintenanceFeeCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  depositVolume_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_LTE?: InputMaybe<Scalars['Float']>;
  fee?: InputMaybe<Scalars['Float']>;
  fee_GT?: InputMaybe<Scalars['Float']>;
  fee_GTE?: InputMaybe<Scalars['Float']>;
  fee_IN?: InputMaybe<Array<Scalars['Float']>>;
  fee_LT?: InputMaybe<Scalars['Float']>;
  fee_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  totalVolume?: InputMaybe<Scalars['Float']>;
  totalVolume_GT?: InputMaybe<Scalars['Float']>;
  totalVolume_GTE?: InputMaybe<Scalars['Float']>;
  totalVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  totalVolume_LT?: InputMaybe<Scalars['Float']>;
  totalVolume_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultMaintenanceFeeUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultMaintenanceFeeUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
  withdrawalVolume?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_GT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_GTE?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  withdrawalVolume_LT?: InputMaybe<Scalars['Float']>;
  withdrawalVolume_LTE?: InputMaybe<Scalars['Float']>;
};

export type DefaultMaintenanceFeesConnection = {
  __typename?: 'DefaultMaintenanceFeesConnection';
  edges: Array<DefaultMaintenanceFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultOverDraftLimit = {
  __typename?: 'DefaultOverDraftLimit';
  businessWalletOverDraftLimits: Array<BusinessWalletOverDraftLimit>;
  businessWalletOverDraftLimitsAggregate?: Maybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitBusinessWalletOverDraftLimitsAggregationSelection>;
  businessWalletOverDraftLimitsConnection: DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultOverDraftLimitSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultOverDraftLimitCreatedByConnection;
  currency: Scalars['String'];
  id: Scalars['ID'];
  overDraftLimit: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultOverDraftLimitSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultOverDraftLimitUpdatedByConnection;
};


export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletOverDraftLimitOptions>;
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionSort>>;
  where?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
};


export type DefaultOverDraftLimitCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultOverDraftLimitCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultOverDraftLimitCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultOverDraftLimitCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultOverDraftLimitCreatedByConnectionWhere>;
};


export type DefaultOverDraftLimitUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultOverDraftLimitUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultOverDraftLimitUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultOverDraftLimitUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectionWhere>;
};

export type DefaultOverDraftLimitAggregateSelection = {
  __typename?: 'DefaultOverDraftLimitAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  overDraftLimit: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitBusinessWalletOverDraftLimitsAggregationSelection = {
  __typename?: 'DefaultOverDraftLimitBusinessWalletOverDraftLimitBusinessWalletOverDraftLimitsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitBusinessWalletOverDraftLimitsNodeAggregateSelection>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitBusinessWalletOverDraftLimitsNodeAggregateSelection = {
  __typename?: 'DefaultOverDraftLimitBusinessWalletOverDraftLimitBusinessWalletOverDraftLimitsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  overDraftLimit: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsAggregateInput = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsAggregateInput>>;
  NOT?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsAggregateInput>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsNodeAggregationWhereInput>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletOverDraftLimitConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletOverDraftLimitConnectWhere>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectOrCreateFieldInput = {
  onCreate: DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletOverDraftLimitConnectOrCreateWhere;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletOverDraftLimitOnCreateInput;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnection = {
  __typename?: 'DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnection';
  edges: Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionSort = {
  node?: InputMaybe<BusinessWalletOverDraftLimitSort>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>>;
  NOT?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>>;
  node?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsCreateFieldInput = {
  node: BusinessWalletOverDraftLimitCreateInput;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletOverDraftLimitDeleteInput>;
  where?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletOverDraftLimitDisconnectInput>;
  where?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsFieldInput = {
  connect?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsCreateFieldInput>>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  overDraftLimit_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MAX_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MIN_LTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsRelationship = {
  __typename?: 'DefaultOverDraftLimitBusinessWalletOverDraftLimitsRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletOverDraftLimit;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletOverDraftLimitUpdateInput>;
};

export type DefaultOverDraftLimitBusinessWalletOverDraftLimitsUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsDisconnectFieldInput>>;
  update?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsUpdateConnectionInput>;
  where?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
};

export type DefaultOverDraftLimitConnectInput = {
  businessWalletOverDraftLimits?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultOverDraftLimitCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectFieldInput>;
};

export type DefaultOverDraftLimitConnectOrCreateInput = {
  businessWalletOverDraftLimits?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultOverDraftLimitCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultOverDraftLimitConnectOrCreateWhere = {
  node: DefaultOverDraftLimitUniqueWhere;
};

export type DefaultOverDraftLimitConnectWhere = {
  node: DefaultOverDraftLimitWhere;
};

export type DefaultOverDraftLimitCreateInput = {
  businessWalletOverDraftLimits?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsFieldInput>;
  createdBy?: InputMaybe<DefaultOverDraftLimitCreatedByFieldInput>;
  currency: Scalars['String'];
  overDraftLimit?: Scalars['Float'];
  updatedBy?: InputMaybe<DefaultOverDraftLimitUpdatedByFieldInput>;
};

export type DefaultOverDraftLimitCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultOverDraftLimitCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultOverDraftLimitCreatedByNodeAggregationWhereInput>;
};

export type DefaultOverDraftLimitCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultOverDraftLimitCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultOverDraftLimitCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultOverDraftLimitCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultOverDraftLimitCreatedByConnection = {
  __typename?: 'DefaultOverDraftLimitCreatedByConnection';
  edges: Array<DefaultOverDraftLimitCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultOverDraftLimitCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultOverDraftLimitCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultOverDraftLimitCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultOverDraftLimitCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultOverDraftLimitCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultOverDraftLimitCreatedByConnectionWhere>;
};

export type DefaultOverDraftLimitCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultOverDraftLimitCreatedByConnectionWhere>;
};

export type DefaultOverDraftLimitCreatedByFieldInput = {
  connect?: InputMaybe<DefaultOverDraftLimitCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultOverDraftLimitCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultOverDraftLimitCreatedByCreateFieldInput>;
};

export type DefaultOverDraftLimitCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultOverDraftLimitCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultOverDraftLimitCreatedByRelationship = {
  __typename?: 'DefaultOverDraftLimitCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultOverDraftLimitCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultOverDraftLimitCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultOverDraftLimitCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultOverDraftLimitCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultOverDraftLimitCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultOverDraftLimitCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultOverDraftLimitCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultOverDraftLimitCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultOverDraftLimitCreatedByConnectionWhere>;
};

export type DefaultOverDraftLimitDeleteInput = {
  businessWalletOverDraftLimits?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultOverDraftLimitCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultOverDraftLimitUpdatedByDeleteFieldInput>;
};

export type DefaultOverDraftLimitDisconnectInput = {
  businessWalletOverDraftLimits?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultOverDraftLimitCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultOverDraftLimitUpdatedByDisconnectFieldInput>;
};

export type DefaultOverDraftLimitEdge = {
  __typename?: 'DefaultOverDraftLimitEdge';
  cursor: Scalars['String'];
  node: DefaultOverDraftLimit;
};

export type DefaultOverDraftLimitOnCreateInput = {
  currency: Scalars['String'];
  overDraftLimit?: Scalars['Float'];
};

export type DefaultOverDraftLimitOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultOverDraftLimitSort objects to sort DefaultOverDraftLimits by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultOverDraftLimitSort>>;
};

export type DefaultOverDraftLimitRelationInput = {
  businessWalletOverDraftLimits?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultOverDraftLimitCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultOverDraftLimitUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultOverDraftLimits by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultOverDraftLimitSort object. */
export type DefaultOverDraftLimitSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  overDraftLimit?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultOverDraftLimitSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultOverDraftLimitSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultOverDraftLimitSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultOverDraftLimitSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultOverDraftLimitSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultOverDraftLimitSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultOverDraftLimitSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultOverDraftLimitSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultOverDraftLimitSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultOverDraftLimitSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultOverDraftLimitUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type DefaultOverDraftLimitUpdateInput = {
  businessWalletOverDraftLimits?: InputMaybe<Array<DefaultOverDraftLimitBusinessWalletOverDraftLimitsUpdateFieldInput>>;
  createdBy?: InputMaybe<DefaultOverDraftLimitCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  overDraftLimit?: InputMaybe<Scalars['Float']>;
  overDraftLimit_ADD?: InputMaybe<Scalars['Float']>;
  overDraftLimit_DIVIDE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_MULTIPLY?: InputMaybe<Scalars['Float']>;
  overDraftLimit_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<DefaultOverDraftLimitUpdatedByUpdateFieldInput>;
};

export type DefaultOverDraftLimitUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultOverDraftLimitUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultOverDraftLimitUpdatedByNodeAggregationWhereInput>;
};

export type DefaultOverDraftLimitUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultOverDraftLimitUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultOverDraftLimitUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultOverDraftLimitUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultOverDraftLimitUpdatedByConnection = {
  __typename?: 'DefaultOverDraftLimitUpdatedByConnection';
  edges: Array<DefaultOverDraftLimitUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultOverDraftLimitUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultOverDraftLimitUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultOverDraftLimitUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultOverDraftLimitUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectionWhere>;
};

export type DefaultOverDraftLimitUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectionWhere>;
};

export type DefaultOverDraftLimitUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultOverDraftLimitUpdatedByCreateFieldInput>;
};

export type DefaultOverDraftLimitUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultOverDraftLimitUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultOverDraftLimitUpdatedByRelationship = {
  __typename?: 'DefaultOverDraftLimitUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultOverDraftLimitUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultOverDraftLimitUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultOverDraftLimitUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultOverDraftLimitUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultOverDraftLimitUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultOverDraftLimitUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectionWhere>;
};

export type DefaultOverDraftLimitWhere = {
  AND?: InputMaybe<Array<DefaultOverDraftLimitWhere>>;
  NOT?: InputMaybe<DefaultOverDraftLimitWhere>;
  OR?: InputMaybe<Array<DefaultOverDraftLimitWhere>>;
  businessWalletOverDraftLimitsAggregate?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsAggregateInput>;
  /** Return DefaultOverDraftLimits where all of the related DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnections match this filter */
  businessWalletOverDraftLimitsConnection_ALL?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
  /** Return DefaultOverDraftLimits where none of the related DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnections match this filter */
  businessWalletOverDraftLimitsConnection_NONE?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
  /** Return DefaultOverDraftLimits where one of the related DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnections match this filter */
  businessWalletOverDraftLimitsConnection_SINGLE?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
  /** Return DefaultOverDraftLimits where some of the related DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnections match this filter */
  businessWalletOverDraftLimitsConnection_SOME?: InputMaybe<DefaultOverDraftLimitBusinessWalletOverDraftLimitsConnectionWhere>;
  /** Return DefaultOverDraftLimits where all of the related BusinessWalletOverDraftLimits match this filter */
  businessWalletOverDraftLimits_ALL?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  /** Return DefaultOverDraftLimits where none of the related BusinessWalletOverDraftLimits match this filter */
  businessWalletOverDraftLimits_NONE?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  /** Return DefaultOverDraftLimits where one of the related BusinessWalletOverDraftLimits match this filter */
  businessWalletOverDraftLimits_SINGLE?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  /** Return DefaultOverDraftLimits where some of the related BusinessWalletOverDraftLimits match this filter */
  businessWalletOverDraftLimits_SOME?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultOverDraftLimitCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultOverDraftLimitCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultOverDraftLimitCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  overDraftLimit?: InputMaybe<Scalars['Float']>;
  overDraftLimit_GT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_GTE?: InputMaybe<Scalars['Float']>;
  overDraftLimit_IN?: InputMaybe<Array<Scalars['Float']>>;
  overDraftLimit_LT?: InputMaybe<Scalars['Float']>;
  overDraftLimit_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultOverDraftLimitUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultOverDraftLimitUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
};

export type DefaultOverDraftLimitsConnection = {
  __typename?: 'DefaultOverDraftLimitsConnection';
  edges: Array<DefaultOverDraftLimitEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultPayoutFee = {
  __typename?: 'DefaultPayoutFee';
  businessWalletPayoutFees: Array<BusinessWalletPayoutFee>;
  businessWalletPayoutFeesAggregate?: Maybe<DefaultPayoutFeeBusinessWalletPayoutFeeBusinessWalletPayoutFeesAggregationSelection>;
  businessWalletPayoutFeesConnection: DefaultPayoutFeeBusinessWalletPayoutFeesConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultPayoutFeeSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultPayoutFeeCreatedByConnection;
  currency: Scalars['String'];
  fee: Scalars['Float'];
  feeFlat: Scalars['Float'];
  feePercentage: Scalars['Float'];
  id: Scalars['ID'];
  isFlatFee: Scalars['Boolean'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultPayoutFeeSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultPayoutFeeUpdatedByConnection;
};


export type DefaultPayoutFeeBusinessWalletPayoutFeesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletPayoutFeeOptions>;
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


export type DefaultPayoutFeeBusinessWalletPayoutFeesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


export type DefaultPayoutFeeBusinessWalletPayoutFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionSort>>;
  where?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
};


export type DefaultPayoutFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultPayoutFeeCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultPayoutFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultPayoutFeeCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultPayoutFeeCreatedByConnectionWhere>;
};


export type DefaultPayoutFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultPayoutFeeUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultPayoutFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultPayoutFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultPayoutFeeUpdatedByConnectionWhere>;
};

export type DefaultPayoutFeeAggregateSelection = {
  __typename?: 'DefaultPayoutFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  feeFlat: FloatAggregateSelectionNonNullable;
  feePercentage: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeeBusinessWalletPayoutFeesAggregationSelection = {
  __typename?: 'DefaultPayoutFeeBusinessWalletPayoutFeeBusinessWalletPayoutFeesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultPayoutFeeBusinessWalletPayoutFeeBusinessWalletPayoutFeesNodeAggregateSelection>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeeBusinessWalletPayoutFeesNodeAggregateSelection = {
  __typename?: 'DefaultPayoutFeeBusinessWalletPayoutFeeBusinessWalletPayoutFeesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  fee: FloatAggregateSelectionNonNullable;
  feeFlat: FloatAggregateSelectionNonNullable;
  feePercentage: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesAggregateInput = {
  AND?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesAggregateInput>>;
  NOT?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesAggregateInput>;
  OR?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesNodeAggregationWhereInput>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletPayoutFeeConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletPayoutFeeConnectWhere>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesConnectOrCreateFieldInput = {
  onCreate: DefaultPayoutFeeBusinessWalletPayoutFeesConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletPayoutFeeConnectOrCreateWhere;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletPayoutFeeOnCreateInput;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesConnection = {
  __typename?: 'DefaultPayoutFeeBusinessWalletPayoutFeesConnection';
  edges: Array<DefaultPayoutFeeBusinessWalletPayoutFeesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesConnectionSort = {
  node?: InputMaybe<BusinessWalletPayoutFeeSort>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere = {
  AND?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>>;
  NOT?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
  OR?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>>;
  node?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesCreateFieldInput = {
  node: BusinessWalletPayoutFeeCreateInput;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletPayoutFeeDeleteInput>;
  where?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletPayoutFeeDisconnectInput>;
  where?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesFieldInput = {
  connect?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesCreateFieldInput>>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  feeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  fee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MAX_GT?: InputMaybe<Scalars['Float']>;
  fee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  fee_MAX_LT?: InputMaybe<Scalars['Float']>;
  fee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_MIN_GT?: InputMaybe<Scalars['Float']>;
  fee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  fee_MIN_LT?: InputMaybe<Scalars['Float']>;
  fee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  fee_SUM_GT?: InputMaybe<Scalars['Float']>;
  fee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  fee_SUM_LT?: InputMaybe<Scalars['Float']>;
  fee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesRelationship = {
  __typename?: 'DefaultPayoutFeeBusinessWalletPayoutFeesRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletPayoutFee;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletPayoutFeeUpdateInput>;
};

export type DefaultPayoutFeeBusinessWalletPayoutFeesUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesDisconnectFieldInput>>;
  update?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesUpdateConnectionInput>;
  where?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
};

export type DefaultPayoutFeeConnectInput = {
  businessWalletPayoutFees?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultPayoutFeeCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultPayoutFeeUpdatedByConnectFieldInput>;
};

export type DefaultPayoutFeeConnectOrCreateInput = {
  businessWalletPayoutFees?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultPayoutFeeCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultPayoutFeeUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultPayoutFeeConnectOrCreateWhere = {
  node: DefaultPayoutFeeUniqueWhere;
};

export type DefaultPayoutFeeConnectWhere = {
  node: DefaultPayoutFeeWhere;
};

export type DefaultPayoutFeeCreateInput = {
  businessWalletPayoutFees?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesFieldInput>;
  createdBy?: InputMaybe<DefaultPayoutFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  fee?: Scalars['Float'];
  feeFlat?: Scalars['Float'];
  feePercentage?: Scalars['Float'];
  isFlatFee?: Scalars['Boolean'];
  updatedBy?: InputMaybe<DefaultPayoutFeeUpdatedByFieldInput>;
};

export type DefaultPayoutFeeCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultPayoutFeeCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultPayoutFeeCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultPayoutFeeCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultPayoutFeeCreatedByNodeAggregationWhereInput>;
};

export type DefaultPayoutFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultPayoutFeeCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultPayoutFeeCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultPayoutFeeCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultPayoutFeeCreatedByConnection = {
  __typename?: 'DefaultPayoutFeeCreatedByConnection';
  edges: Array<DefaultPayoutFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultPayoutFeeCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultPayoutFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultPayoutFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultPayoutFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultPayoutFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultPayoutFeeCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultPayoutFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultPayoutFeeCreatedByConnectionWhere>;
};

export type DefaultPayoutFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultPayoutFeeCreatedByConnectionWhere>;
};

export type DefaultPayoutFeeCreatedByFieldInput = {
  connect?: InputMaybe<DefaultPayoutFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultPayoutFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultPayoutFeeCreatedByCreateFieldInput>;
};

export type DefaultPayoutFeeCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultPayoutFeeCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultPayoutFeeCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultPayoutFeeCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultPayoutFeeCreatedByRelationship = {
  __typename?: 'DefaultPayoutFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultPayoutFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultPayoutFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultPayoutFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultPayoutFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultPayoutFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultPayoutFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultPayoutFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultPayoutFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultPayoutFeeCreatedByConnectionWhere>;
};

export type DefaultPayoutFeeDeleteInput = {
  businessWalletPayoutFees?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultPayoutFeeCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultPayoutFeeUpdatedByDeleteFieldInput>;
};

export type DefaultPayoutFeeDisconnectInput = {
  businessWalletPayoutFees?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultPayoutFeeCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultPayoutFeeUpdatedByDisconnectFieldInput>;
};

export type DefaultPayoutFeeEdge = {
  __typename?: 'DefaultPayoutFeeEdge';
  cursor: Scalars['String'];
  node: DefaultPayoutFee;
};

export type DefaultPayoutFeeOnCreateInput = {
  currency: Scalars['String'];
  fee?: Scalars['Float'];
  feeFlat?: Scalars['Float'];
  feePercentage?: Scalars['Float'];
  isFlatFee?: Scalars['Boolean'];
};

export type DefaultPayoutFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultPayoutFeeSort objects to sort DefaultPayoutFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultPayoutFeeSort>>;
};

export type DefaultPayoutFeeRelationInput = {
  businessWalletPayoutFees?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultPayoutFeeCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultPayoutFeeUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultPayoutFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultPayoutFeeSort object. */
export type DefaultPayoutFeeSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  fee?: InputMaybe<SortDirection>;
  feeFlat?: InputMaybe<SortDirection>;
  feePercentage?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isFlatFee?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultPayoutFeeSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultPayoutFeeSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultPayoutFeeSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultPayoutFeeSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultPayoutFeeSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultPayoutFeeSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultPayoutFeeSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultPayoutFeeSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultPayoutFeeSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultPayoutFeeSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultPayoutFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type DefaultPayoutFeeUpdateInput = {
  businessWalletPayoutFees?: InputMaybe<Array<DefaultPayoutFeeBusinessWalletPayoutFeesUpdateFieldInput>>;
  createdBy?: InputMaybe<DefaultPayoutFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  fee?: InputMaybe<Scalars['Float']>;
  feeFlat?: InputMaybe<Scalars['Float']>;
  feeFlat_ADD?: InputMaybe<Scalars['Float']>;
  feeFlat_DIVIDE?: InputMaybe<Scalars['Float']>;
  feeFlat_MULTIPLY?: InputMaybe<Scalars['Float']>;
  feeFlat_SUBTRACT?: InputMaybe<Scalars['Float']>;
  feePercentage?: InputMaybe<Scalars['Float']>;
  feePercentage_ADD?: InputMaybe<Scalars['Float']>;
  feePercentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  feePercentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  feePercentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  fee_ADD?: InputMaybe<Scalars['Float']>;
  fee_DIVIDE?: InputMaybe<Scalars['Float']>;
  fee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  fee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  isFlatFee?: InputMaybe<Scalars['Boolean']>;
  updatedBy?: InputMaybe<DefaultPayoutFeeUpdatedByUpdateFieldInput>;
};

export type DefaultPayoutFeeUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultPayoutFeeUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultPayoutFeeUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultPayoutFeeUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultPayoutFeeUpdatedByNodeAggregationWhereInput>;
};

export type DefaultPayoutFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultPayoutFeeUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultPayoutFeeUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultPayoutFeeUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultPayoutFeeUpdatedByConnection = {
  __typename?: 'DefaultPayoutFeeUpdatedByConnection';
  edges: Array<DefaultPayoutFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultPayoutFeeUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultPayoutFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultPayoutFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultPayoutFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultPayoutFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultPayoutFeeUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultPayoutFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultPayoutFeeUpdatedByConnectionWhere>;
};

export type DefaultPayoutFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultPayoutFeeUpdatedByConnectionWhere>;
};

export type DefaultPayoutFeeUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultPayoutFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultPayoutFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultPayoutFeeUpdatedByCreateFieldInput>;
};

export type DefaultPayoutFeeUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultPayoutFeeUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultPayoutFeeUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultPayoutFeeUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultPayoutFeeUpdatedByRelationship = {
  __typename?: 'DefaultPayoutFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultPayoutFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultPayoutFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultPayoutFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultPayoutFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultPayoutFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultPayoutFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultPayoutFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultPayoutFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultPayoutFeeUpdatedByConnectionWhere>;
};

export type DefaultPayoutFeeWhere = {
  AND?: InputMaybe<Array<DefaultPayoutFeeWhere>>;
  NOT?: InputMaybe<DefaultPayoutFeeWhere>;
  OR?: InputMaybe<Array<DefaultPayoutFeeWhere>>;
  businessWalletPayoutFeesAggregate?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesAggregateInput>;
  /** Return DefaultPayoutFees where all of the related DefaultPayoutFeeBusinessWalletPayoutFeesConnections match this filter */
  businessWalletPayoutFeesConnection_ALL?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
  /** Return DefaultPayoutFees where none of the related DefaultPayoutFeeBusinessWalletPayoutFeesConnections match this filter */
  businessWalletPayoutFeesConnection_NONE?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
  /** Return DefaultPayoutFees where one of the related DefaultPayoutFeeBusinessWalletPayoutFeesConnections match this filter */
  businessWalletPayoutFeesConnection_SINGLE?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
  /** Return DefaultPayoutFees where some of the related DefaultPayoutFeeBusinessWalletPayoutFeesConnections match this filter */
  businessWalletPayoutFeesConnection_SOME?: InputMaybe<DefaultPayoutFeeBusinessWalletPayoutFeesConnectionWhere>;
  /** Return DefaultPayoutFees where all of the related BusinessWalletPayoutFees match this filter */
  businessWalletPayoutFees_ALL?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  /** Return DefaultPayoutFees where none of the related BusinessWalletPayoutFees match this filter */
  businessWalletPayoutFees_NONE?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  /** Return DefaultPayoutFees where one of the related BusinessWalletPayoutFees match this filter */
  businessWalletPayoutFees_SINGLE?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  /** Return DefaultPayoutFees where some of the related BusinessWalletPayoutFees match this filter */
  businessWalletPayoutFees_SOME?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultPayoutFeeCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultPayoutFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultPayoutFeeCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  fee?: InputMaybe<Scalars['Float']>;
  feeFlat?: InputMaybe<Scalars['Float']>;
  feeFlat_GT?: InputMaybe<Scalars['Float']>;
  feeFlat_GTE?: InputMaybe<Scalars['Float']>;
  feeFlat_IN?: InputMaybe<Array<Scalars['Float']>>;
  feeFlat_LT?: InputMaybe<Scalars['Float']>;
  feeFlat_LTE?: InputMaybe<Scalars['Float']>;
  feePercentage?: InputMaybe<Scalars['Float']>;
  feePercentage_GT?: InputMaybe<Scalars['Float']>;
  feePercentage_GTE?: InputMaybe<Scalars['Float']>;
  feePercentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  feePercentage_LT?: InputMaybe<Scalars['Float']>;
  feePercentage_LTE?: InputMaybe<Scalars['Float']>;
  fee_GT?: InputMaybe<Scalars['Float']>;
  fee_GTE?: InputMaybe<Scalars['Float']>;
  fee_IN?: InputMaybe<Array<Scalars['Float']>>;
  fee_LT?: InputMaybe<Scalars['Float']>;
  fee_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isFlatFee?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultPayoutFeeUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultPayoutFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultPayoutFeeUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
};

export type DefaultPayoutFeesConnection = {
  __typename?: 'DefaultPayoutFeesConnection';
  edges: Array<DefaultPayoutFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultRollingReserveFee = {
  __typename?: 'DefaultRollingReserveFee';
  businessWalletRollingReserveFees: Array<BusinessWalletRollingReserveFee>;
  businessWalletRollingReserveFeesAggregate?: Maybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeeBusinessWalletRollingReserveFeesAggregationSelection>;
  businessWalletRollingReserveFeesConnection: DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultRollingReserveFeeSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultRollingReserveFeeCreatedByConnection;
  currency?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  percentage: Scalars['Float'];
  releaseDays: Scalars['Int'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultRollingReserveFeeSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultRollingReserveFeeUpdatedByConnection;
};


export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletRollingReserveFeeOptions>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionSort>>;
  where?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
};


export type DefaultRollingReserveFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultRollingReserveFeeCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultRollingReserveFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultRollingReserveFeeCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectionWhere>;
};


export type DefaultRollingReserveFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultRollingReserveFeeUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultRollingReserveFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultRollingReserveFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectionWhere>;
};

export type DefaultRollingReserveFeeAggregateSelection = {
  __typename?: 'DefaultRollingReserveFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  percentage: FloatAggregateSelectionNonNullable;
  releaseDays: IntAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeeBusinessWalletRollingReserveFeesAggregationSelection = {
  __typename?: 'DefaultRollingReserveFeeBusinessWalletRollingReserveFeeBusinessWalletRollingReserveFeesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeeBusinessWalletRollingReserveFeesNodeAggregateSelection>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeeBusinessWalletRollingReserveFeesNodeAggregateSelection = {
  __typename?: 'DefaultRollingReserveFeeBusinessWalletRollingReserveFeeBusinessWalletRollingReserveFeesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  percentage: FloatAggregateSelectionNonNullable;
  releaseDays: IntAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesAggregateInput = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesAggregateInput>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesAggregateInput>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesNodeAggregationWhereInput>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletRollingReserveFeeConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletRollingReserveFeeConnectWhere>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectOrCreateFieldInput = {
  onCreate: DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletRollingReserveFeeConnectOrCreateWhere;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletRollingReserveFeeOnCreateInput;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnection = {
  __typename?: 'DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnection';
  edges: Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionSort = {
  node?: InputMaybe<BusinessWalletRollingReserveFeeSort>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>>;
  node?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesCreateFieldInput = {
  node: BusinessWalletRollingReserveFeeCreateInput;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletRollingReserveFeeDeleteInput>;
  where?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletRollingReserveFeeDisconnectInput>;
  where?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesFieldInput = {
  connect?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesCreateFieldInput>>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  percentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  percentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  percentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  percentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  percentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  percentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  percentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  percentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  percentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  percentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  percentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  percentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  percentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  percentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  percentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  releaseDays_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  releaseDays_MAX_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_MAX_LTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_MIN_LTE?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_EQUAL?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_SUM_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesRelationship = {
  __typename?: 'DefaultRollingReserveFeeBusinessWalletRollingReserveFeesRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletRollingReserveFee;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletRollingReserveFeeUpdateInput>;
};

export type DefaultRollingReserveFeeBusinessWalletRollingReserveFeesUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesDisconnectFieldInput>>;
  update?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesUpdateConnectionInput>;
  where?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
};

export type DefaultRollingReserveFeeConnectInput = {
  businessWalletRollingReserveFees?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectFieldInput>;
};

export type DefaultRollingReserveFeeConnectOrCreateInput = {
  businessWalletRollingReserveFees?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultRollingReserveFeeConnectOrCreateWhere = {
  node: DefaultRollingReserveFeeUniqueWhere;
};

export type DefaultRollingReserveFeeConnectWhere = {
  node: DefaultRollingReserveFeeWhere;
};

export type DefaultRollingReserveFeeCreateInput = {
  businessWalletRollingReserveFees?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesFieldInput>;
  createdBy?: InputMaybe<DefaultRollingReserveFeeCreatedByFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  percentage?: Scalars['Float'];
  releaseDays?: Scalars['Int'];
  updatedBy?: InputMaybe<DefaultRollingReserveFeeUpdatedByFieldInput>;
};

export type DefaultRollingReserveFeeCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultRollingReserveFeeCreatedByNodeAggregationWhereInput>;
};

export type DefaultRollingReserveFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultRollingReserveFeeCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultRollingReserveFeeCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultRollingReserveFeeCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultRollingReserveFeeCreatedByConnection = {
  __typename?: 'DefaultRollingReserveFeeCreatedByConnection';
  edges: Array<DefaultRollingReserveFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultRollingReserveFeeCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultRollingReserveFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultRollingReserveFeeCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultRollingReserveFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectionWhere>;
};

export type DefaultRollingReserveFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectionWhere>;
};

export type DefaultRollingReserveFeeCreatedByFieldInput = {
  connect?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultRollingReserveFeeCreatedByCreateFieldInput>;
};

export type DefaultRollingReserveFeeCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultRollingReserveFeeCreatedByRelationship = {
  __typename?: 'DefaultRollingReserveFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultRollingReserveFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultRollingReserveFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultRollingReserveFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultRollingReserveFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultRollingReserveFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultRollingReserveFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectionWhere>;
};

export type DefaultRollingReserveFeeDeleteInput = {
  businessWalletRollingReserveFees?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultRollingReserveFeeCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultRollingReserveFeeUpdatedByDeleteFieldInput>;
};

export type DefaultRollingReserveFeeDisconnectInput = {
  businessWalletRollingReserveFees?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultRollingReserveFeeCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultRollingReserveFeeUpdatedByDisconnectFieldInput>;
};

export type DefaultRollingReserveFeeEdge = {
  __typename?: 'DefaultRollingReserveFeeEdge';
  cursor: Scalars['String'];
  node: DefaultRollingReserveFee;
};

export type DefaultRollingReserveFeeOnCreateInput = {
  currency?: InputMaybe<Scalars['String']>;
  percentage?: Scalars['Float'];
  releaseDays?: Scalars['Int'];
};

export type DefaultRollingReserveFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultRollingReserveFeeSort objects to sort DefaultRollingReserveFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultRollingReserveFeeSort>>;
};

export type DefaultRollingReserveFeeRelationInput = {
  businessWalletRollingReserveFees?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultRollingReserveFeeCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultRollingReserveFeeUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultRollingReserveFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultRollingReserveFeeSort object. */
export type DefaultRollingReserveFeeSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  percentage?: InputMaybe<SortDirection>;
  releaseDays?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultRollingReserveFeeSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultRollingReserveFeeSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultRollingReserveFeeSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultRollingReserveFeeSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultRollingReserveFeeSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultRollingReserveFeeSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultRollingReserveFeeSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultRollingReserveFeeSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultRollingReserveFeeSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultRollingReserveFeeSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultRollingReserveFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type DefaultRollingReserveFeeUpdateInput = {
  businessWalletRollingReserveFees?: InputMaybe<Array<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesUpdateFieldInput>>;
  createdBy?: InputMaybe<DefaultRollingReserveFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  percentage_ADD?: InputMaybe<Scalars['Float']>;
  percentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  percentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  percentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  releaseDays?: InputMaybe<Scalars['Int']>;
  releaseDays_DECREMENT?: InputMaybe<Scalars['Int']>;
  releaseDays_INCREMENT?: InputMaybe<Scalars['Int']>;
  updatedBy?: InputMaybe<DefaultRollingReserveFeeUpdatedByUpdateFieldInput>;
};

export type DefaultRollingReserveFeeUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultRollingReserveFeeUpdatedByNodeAggregationWhereInput>;
};

export type DefaultRollingReserveFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultRollingReserveFeeUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultRollingReserveFeeUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultRollingReserveFeeUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultRollingReserveFeeUpdatedByConnection = {
  __typename?: 'DefaultRollingReserveFeeUpdatedByConnection';
  edges: Array<DefaultRollingReserveFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultRollingReserveFeeUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultRollingReserveFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultRollingReserveFeeUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultRollingReserveFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectionWhere>;
};

export type DefaultRollingReserveFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectionWhere>;
};

export type DefaultRollingReserveFeeUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultRollingReserveFeeUpdatedByCreateFieldInput>;
};

export type DefaultRollingReserveFeeUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultRollingReserveFeeUpdatedByRelationship = {
  __typename?: 'DefaultRollingReserveFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultRollingReserveFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultRollingReserveFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultRollingReserveFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultRollingReserveFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultRollingReserveFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultRollingReserveFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectionWhere>;
};

export type DefaultRollingReserveFeeWhere = {
  AND?: InputMaybe<Array<DefaultRollingReserveFeeWhere>>;
  NOT?: InputMaybe<DefaultRollingReserveFeeWhere>;
  OR?: InputMaybe<Array<DefaultRollingReserveFeeWhere>>;
  businessWalletRollingReserveFeesAggregate?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesAggregateInput>;
  /** Return DefaultRollingReserveFees where all of the related DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnections match this filter */
  businessWalletRollingReserveFeesConnection_ALL?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
  /** Return DefaultRollingReserveFees where none of the related DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnections match this filter */
  businessWalletRollingReserveFeesConnection_NONE?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
  /** Return DefaultRollingReserveFees where one of the related DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnections match this filter */
  businessWalletRollingReserveFeesConnection_SINGLE?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
  /** Return DefaultRollingReserveFees where some of the related DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnections match this filter */
  businessWalletRollingReserveFeesConnection_SOME?: InputMaybe<DefaultRollingReserveFeeBusinessWalletRollingReserveFeesConnectionWhere>;
  /** Return DefaultRollingReserveFees where all of the related BusinessWalletRollingReserveFees match this filter */
  businessWalletRollingReserveFees_ALL?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  /** Return DefaultRollingReserveFees where none of the related BusinessWalletRollingReserveFees match this filter */
  businessWalletRollingReserveFees_NONE?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  /** Return DefaultRollingReserveFees where one of the related BusinessWalletRollingReserveFees match this filter */
  businessWalletRollingReserveFees_SINGLE?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  /** Return DefaultRollingReserveFees where some of the related BusinessWalletRollingReserveFees match this filter */
  businessWalletRollingReserveFees_SOME?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultRollingReserveFeeCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultRollingReserveFeeCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  percentage?: InputMaybe<Scalars['Float']>;
  percentage_GT?: InputMaybe<Scalars['Float']>;
  percentage_GTE?: InputMaybe<Scalars['Float']>;
  percentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  percentage_LT?: InputMaybe<Scalars['Float']>;
  percentage_LTE?: InputMaybe<Scalars['Float']>;
  releaseDays?: InputMaybe<Scalars['Int']>;
  releaseDays_GT?: InputMaybe<Scalars['Int']>;
  releaseDays_GTE?: InputMaybe<Scalars['Int']>;
  releaseDays_IN?: InputMaybe<Array<Scalars['Int']>>;
  releaseDays_LT?: InputMaybe<Scalars['Int']>;
  releaseDays_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultRollingReserveFeeUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultRollingReserveFeeUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
};

export type DefaultRollingReserveFeesConnection = {
  __typename?: 'DefaultRollingReserveFeesConnection';
  edges: Array<DefaultRollingReserveFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultSettlementFee = {
  __typename?: 'DefaultSettlementFee';
  businessWalletSettlementFees: Array<BusinessWalletSettlementFee>;
  businessWalletSettlementFeesAggregate?: Maybe<DefaultSettlementFeeBusinessWalletSettlementFeeBusinessWalletSettlementFeesAggregationSelection>;
  businessWalletSettlementFeesConnection: DefaultSettlementFeeBusinessWalletSettlementFeesConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultSettlementFeeSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultSettlementFeeCreatedByConnection;
  currency: Scalars['String'];
  id: Scalars['ID'];
  isSepaFeeFlat: Scalars['Boolean'];
  isSwiftFeeFlat: Scalars['Boolean'];
  sepaFee: Scalars['Float'];
  sepaFeeFlat: Scalars['Float'];
  sepaFeePercentage: Scalars['Float'];
  swiftFee: Scalars['Float'];
  swiftFeeFlat: Scalars['Float'];
  swiftFeePercentage: Scalars['Float'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultSettlementFeeSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultSettlementFeeUpdatedByConnection;
};


export type DefaultSettlementFeeBusinessWalletSettlementFeesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletSettlementFeeOptions>;
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


export type DefaultSettlementFeeBusinessWalletSettlementFeesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


export type DefaultSettlementFeeBusinessWalletSettlementFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionSort>>;
  where?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
};


export type DefaultSettlementFeeCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultSettlementFeeCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultSettlementFeeCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultSettlementFeeCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultSettlementFeeCreatedByConnectionWhere>;
};


export type DefaultSettlementFeeUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultSettlementFeeUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultSettlementFeeUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultSettlementFeeUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultSettlementFeeUpdatedByConnectionWhere>;
};

export type DefaultSettlementFeeAggregateSelection = {
  __typename?: 'DefaultSettlementFeeAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  sepaFee: FloatAggregateSelectionNonNullable;
  sepaFeeFlat: FloatAggregateSelectionNonNullable;
  sepaFeePercentage: FloatAggregateSelectionNonNullable;
  swiftFee: FloatAggregateSelectionNonNullable;
  swiftFeeFlat: FloatAggregateSelectionNonNullable;
  swiftFeePercentage: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeeBusinessWalletSettlementFeesAggregationSelection = {
  __typename?: 'DefaultSettlementFeeBusinessWalletSettlementFeeBusinessWalletSettlementFeesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultSettlementFeeBusinessWalletSettlementFeeBusinessWalletSettlementFeesNodeAggregateSelection>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeeBusinessWalletSettlementFeesNodeAggregateSelection = {
  __typename?: 'DefaultSettlementFeeBusinessWalletSettlementFeeBusinessWalletSettlementFeesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  sepaFee: FloatAggregateSelectionNonNullable;
  sepaFeeFlat: FloatAggregateSelectionNonNullable;
  sepaFeePercentage: FloatAggregateSelectionNonNullable;
  swiftFee: FloatAggregateSelectionNonNullable;
  swiftFeeFlat: FloatAggregateSelectionNonNullable;
  swiftFeePercentage: FloatAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesAggregateInput = {
  AND?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesAggregateInput>>;
  NOT?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesAggregateInput>;
  OR?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesNodeAggregationWhereInput>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletSettlementFeeConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletSettlementFeeConnectWhere>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesConnectOrCreateFieldInput = {
  onCreate: DefaultSettlementFeeBusinessWalletSettlementFeesConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletSettlementFeeConnectOrCreateWhere;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletSettlementFeeOnCreateInput;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesConnection = {
  __typename?: 'DefaultSettlementFeeBusinessWalletSettlementFeesConnection';
  edges: Array<DefaultSettlementFeeBusinessWalletSettlementFeesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesConnectionSort = {
  node?: InputMaybe<BusinessWalletSettlementFeeSort>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere = {
  AND?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>>;
  NOT?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
  OR?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>>;
  node?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesCreateFieldInput = {
  node: BusinessWalletSettlementFeeCreateInput;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletSettlementFeeDeleteInput>;
  where?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletSettlementFeeDisconnectInput>;
  where?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesFieldInput = {
  connect?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesCreateFieldInput>>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  sepaFeeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUM_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesRelationship = {
  __typename?: 'DefaultSettlementFeeBusinessWalletSettlementFeesRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletSettlementFee;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletSettlementFeeUpdateInput>;
};

export type DefaultSettlementFeeBusinessWalletSettlementFeesUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesDisconnectFieldInput>>;
  update?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesUpdateConnectionInput>;
  where?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
};

export type DefaultSettlementFeeConnectInput = {
  businessWalletSettlementFees?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultSettlementFeeCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultSettlementFeeUpdatedByConnectFieldInput>;
};

export type DefaultSettlementFeeConnectOrCreateInput = {
  businessWalletSettlementFees?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultSettlementFeeCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultSettlementFeeUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultSettlementFeeConnectOrCreateWhere = {
  node: DefaultSettlementFeeUniqueWhere;
};

export type DefaultSettlementFeeConnectWhere = {
  node: DefaultSettlementFeeWhere;
};

export type DefaultSettlementFeeCreateInput = {
  businessWalletSettlementFees?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesFieldInput>;
  createdBy?: InputMaybe<DefaultSettlementFeeCreatedByFieldInput>;
  currency: Scalars['String'];
  isSepaFeeFlat?: Scalars['Boolean'];
  isSwiftFeeFlat?: Scalars['Boolean'];
  sepaFee?: Scalars['Float'];
  sepaFeeFlat?: Scalars['Float'];
  sepaFeePercentage?: Scalars['Float'];
  swiftFee?: Scalars['Float'];
  swiftFeeFlat?: Scalars['Float'];
  swiftFeePercentage?: Scalars['Float'];
  updatedBy?: InputMaybe<DefaultSettlementFeeUpdatedByFieldInput>;
};

export type DefaultSettlementFeeCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultSettlementFeeCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultSettlementFeeCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultSettlementFeeCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultSettlementFeeCreatedByNodeAggregationWhereInput>;
};

export type DefaultSettlementFeeCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultSettlementFeeCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultSettlementFeeCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultSettlementFeeCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultSettlementFeeCreatedByConnection = {
  __typename?: 'DefaultSettlementFeeCreatedByConnection';
  edges: Array<DefaultSettlementFeeCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultSettlementFeeCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultSettlementFeeCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultSettlementFeeCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultSettlementFeeCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultSettlementFeeCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultSettlementFeeCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultSettlementFeeCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultSettlementFeeCreatedByConnectionWhere>;
};

export type DefaultSettlementFeeCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultSettlementFeeCreatedByConnectionWhere>;
};

export type DefaultSettlementFeeCreatedByFieldInput = {
  connect?: InputMaybe<DefaultSettlementFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultSettlementFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultSettlementFeeCreatedByCreateFieldInput>;
};

export type DefaultSettlementFeeCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultSettlementFeeCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultSettlementFeeCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultSettlementFeeCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultSettlementFeeCreatedByRelationship = {
  __typename?: 'DefaultSettlementFeeCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultSettlementFeeCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultSettlementFeeCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultSettlementFeeCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultSettlementFeeCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultSettlementFeeCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultSettlementFeeCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultSettlementFeeCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultSettlementFeeCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultSettlementFeeCreatedByConnectionWhere>;
};

export type DefaultSettlementFeeDeleteInput = {
  businessWalletSettlementFees?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultSettlementFeeCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultSettlementFeeUpdatedByDeleteFieldInput>;
};

export type DefaultSettlementFeeDisconnectInput = {
  businessWalletSettlementFees?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultSettlementFeeCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultSettlementFeeUpdatedByDisconnectFieldInput>;
};

export type DefaultSettlementFeeEdge = {
  __typename?: 'DefaultSettlementFeeEdge';
  cursor: Scalars['String'];
  node: DefaultSettlementFee;
};

export type DefaultSettlementFeeOnCreateInput = {
  currency: Scalars['String'];
  isSepaFeeFlat?: Scalars['Boolean'];
  isSwiftFeeFlat?: Scalars['Boolean'];
  sepaFee?: Scalars['Float'];
  sepaFeeFlat?: Scalars['Float'];
  sepaFeePercentage?: Scalars['Float'];
  swiftFee?: Scalars['Float'];
  swiftFeeFlat?: Scalars['Float'];
  swiftFeePercentage?: Scalars['Float'];
};

export type DefaultSettlementFeeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultSettlementFeeSort objects to sort DefaultSettlementFees by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultSettlementFeeSort>>;
};

export type DefaultSettlementFeeRelationInput = {
  businessWalletSettlementFees?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultSettlementFeeCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultSettlementFeeUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultSettlementFees by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultSettlementFeeSort object. */
export type DefaultSettlementFeeSort = {
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isSepaFeeFlat?: InputMaybe<SortDirection>;
  isSwiftFeeFlat?: InputMaybe<SortDirection>;
  sepaFee?: InputMaybe<SortDirection>;
  sepaFeeFlat?: InputMaybe<SortDirection>;
  sepaFeePercentage?: InputMaybe<SortDirection>;
  swiftFee?: InputMaybe<SortDirection>;
  swiftFeeFlat?: InputMaybe<SortDirection>;
  swiftFeePercentage?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultSettlementFeeSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultSettlementFeeSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultSettlementFeeSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultSettlementFeeSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultSettlementFeeSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultSettlementFeeSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultSettlementFeeSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultSettlementFeeSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultSettlementFeeSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultSettlementFeeSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultSettlementFeeUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type DefaultSettlementFeeUpdateInput = {
  businessWalletSettlementFees?: InputMaybe<Array<DefaultSettlementFeeBusinessWalletSettlementFeesUpdateFieldInput>>;
  createdBy?: InputMaybe<DefaultSettlementFeeCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  isSepaFeeFlat?: InputMaybe<Scalars['Boolean']>;
  isSwiftFeeFlat?: InputMaybe<Scalars['Boolean']>;
  sepaFee?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_ADD?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_DIVIDE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_MULTIPLY?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_SUBTRACT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_ADD?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  sepaFee_ADD?: InputMaybe<Scalars['Float']>;
  sepaFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  sepaFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  sepaFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  swiftFee?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_ADD?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_DIVIDE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_MULTIPLY?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_SUBTRACT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_ADD?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_DIVIDE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_MULTIPLY?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_SUBTRACT?: InputMaybe<Scalars['Float']>;
  swiftFee_ADD?: InputMaybe<Scalars['Float']>;
  swiftFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  swiftFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  swiftFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<DefaultSettlementFeeUpdatedByUpdateFieldInput>;
};

export type DefaultSettlementFeeUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultSettlementFeeUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultSettlementFeeUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultSettlementFeeUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultSettlementFeeUpdatedByNodeAggregationWhereInput>;
};

export type DefaultSettlementFeeUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultSettlementFeeUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultSettlementFeeUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultSettlementFeeUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultSettlementFeeUpdatedByConnection = {
  __typename?: 'DefaultSettlementFeeUpdatedByConnection';
  edges: Array<DefaultSettlementFeeUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultSettlementFeeUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultSettlementFeeUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultSettlementFeeUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultSettlementFeeUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultSettlementFeeUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultSettlementFeeUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultSettlementFeeUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultSettlementFeeUpdatedByConnectionWhere>;
};

export type DefaultSettlementFeeUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultSettlementFeeUpdatedByConnectionWhere>;
};

export type DefaultSettlementFeeUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultSettlementFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultSettlementFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultSettlementFeeUpdatedByCreateFieldInput>;
};

export type DefaultSettlementFeeUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultSettlementFeeUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultSettlementFeeUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultSettlementFeeUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultSettlementFeeUpdatedByRelationship = {
  __typename?: 'DefaultSettlementFeeUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultSettlementFeeUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultSettlementFeeUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultSettlementFeeUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultSettlementFeeUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultSettlementFeeUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultSettlementFeeUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultSettlementFeeUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultSettlementFeeUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultSettlementFeeUpdatedByConnectionWhere>;
};

export type DefaultSettlementFeeWhere = {
  AND?: InputMaybe<Array<DefaultSettlementFeeWhere>>;
  NOT?: InputMaybe<DefaultSettlementFeeWhere>;
  OR?: InputMaybe<Array<DefaultSettlementFeeWhere>>;
  businessWalletSettlementFeesAggregate?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesAggregateInput>;
  /** Return DefaultSettlementFees where all of the related DefaultSettlementFeeBusinessWalletSettlementFeesConnections match this filter */
  businessWalletSettlementFeesConnection_ALL?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
  /** Return DefaultSettlementFees where none of the related DefaultSettlementFeeBusinessWalletSettlementFeesConnections match this filter */
  businessWalletSettlementFeesConnection_NONE?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
  /** Return DefaultSettlementFees where one of the related DefaultSettlementFeeBusinessWalletSettlementFeesConnections match this filter */
  businessWalletSettlementFeesConnection_SINGLE?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
  /** Return DefaultSettlementFees where some of the related DefaultSettlementFeeBusinessWalletSettlementFeesConnections match this filter */
  businessWalletSettlementFeesConnection_SOME?: InputMaybe<DefaultSettlementFeeBusinessWalletSettlementFeesConnectionWhere>;
  /** Return DefaultSettlementFees where all of the related BusinessWalletSettlementFees match this filter */
  businessWalletSettlementFees_ALL?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  /** Return DefaultSettlementFees where none of the related BusinessWalletSettlementFees match this filter */
  businessWalletSettlementFees_NONE?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  /** Return DefaultSettlementFees where one of the related BusinessWalletSettlementFees match this filter */
  businessWalletSettlementFees_SINGLE?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  /** Return DefaultSettlementFees where some of the related BusinessWalletSettlementFees match this filter */
  businessWalletSettlementFees_SOME?: InputMaybe<BusinessWalletSettlementFeeWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultSettlementFeeCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultSettlementFeeCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultSettlementFeeCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isSepaFeeFlat?: InputMaybe<Scalars['Boolean']>;
  isSwiftFeeFlat?: InputMaybe<Scalars['Boolean']>;
  sepaFee?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_GT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_IN?: InputMaybe<Array<Scalars['Float']>>;
  sepaFeeFlat_LT?: InputMaybe<Scalars['Float']>;
  sepaFeeFlat_LTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_GT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_GTE?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  sepaFeePercentage_LT?: InputMaybe<Scalars['Float']>;
  sepaFeePercentage_LTE?: InputMaybe<Scalars['Float']>;
  sepaFee_GT?: InputMaybe<Scalars['Float']>;
  sepaFee_GTE?: InputMaybe<Scalars['Float']>;
  sepaFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  sepaFee_LT?: InputMaybe<Scalars['Float']>;
  sepaFee_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_GT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_IN?: InputMaybe<Array<Scalars['Float']>>;
  swiftFeeFlat_LT?: InputMaybe<Scalars['Float']>;
  swiftFeeFlat_LTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_GT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_GTE?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_IN?: InputMaybe<Array<Scalars['Float']>>;
  swiftFeePercentage_LT?: InputMaybe<Scalars['Float']>;
  swiftFeePercentage_LTE?: InputMaybe<Scalars['Float']>;
  swiftFee_GT?: InputMaybe<Scalars['Float']>;
  swiftFee_GTE?: InputMaybe<Scalars['Float']>;
  swiftFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  swiftFee_LT?: InputMaybe<Scalars['Float']>;
  swiftFee_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultSettlementFeeUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultSettlementFeeUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultSettlementFeeUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
};

export type DefaultSettlementFeesConnection = {
  __typename?: 'DefaultSettlementFeesConnection';
  edges: Array<DefaultSettlementFeeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultTierCommission = {
  __typename?: 'DefaultTierCommission';
  b2bFee: Scalars['Float'];
  businessWalletTierCommissions: Array<BusinessWalletTierCommission>;
  businessWalletTierCommissionsAggregate?: Maybe<DefaultTierCommissionBusinessWalletTierCommissionBusinessWalletTierCommissionsAggregationSelection>;
  businessWalletTierCommissionsConnection: DefaultTierCommissionBusinessWalletTierCommissionsConnection;
  c2bFee: Scalars['Float'];
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<SuperAdmin>;
  createdByAggregate?: Maybe<DefaultTierCommissionSuperAdminCreatedByAggregationSelection>;
  createdByConnection: DefaultTierCommissionCreatedByConnection;
  currency: Scalars['String'];
  depositVolume: Scalars['Float'];
  id: Scalars['ID'];
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<SuperAdmin>;
  updatedByAggregate?: Maybe<DefaultTierCommissionSuperAdminUpdatedByAggregationSelection>;
  updatedByConnection: DefaultTierCommissionUpdatedByConnection;
};


export type DefaultTierCommissionBusinessWalletTierCommissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessWalletTierCommissionOptions>;
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


export type DefaultTierCommissionBusinessWalletTierCommissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


export type DefaultTierCommissionBusinessWalletTierCommissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectionSort>>;
  where?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
};


export type DefaultTierCommissionCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultTierCommissionCreatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultTierCommissionCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultTierCommissionCreatedByConnectionSort>>;
  where?: InputMaybe<DefaultTierCommissionCreatedByConnectionWhere>;
};


export type DefaultTierCommissionUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultTierCommissionUpdatedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type DefaultTierCommissionUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<DefaultTierCommissionUpdatedByConnectionSort>>;
  where?: InputMaybe<DefaultTierCommissionUpdatedByConnectionWhere>;
};

export type DefaultTierCommissionAggregateSelection = {
  __typename?: 'DefaultTierCommissionAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultTierCommissionBusinessWalletTierCommissionBusinessWalletTierCommissionsAggregationSelection = {
  __typename?: 'DefaultTierCommissionBusinessWalletTierCommissionBusinessWalletTierCommissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultTierCommissionBusinessWalletTierCommissionBusinessWalletTierCommissionsNodeAggregateSelection>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionBusinessWalletTierCommissionsNodeAggregateSelection = {
  __typename?: 'DefaultTierCommissionBusinessWalletTierCommissionBusinessWalletTierCommissionsNodeAggregateSelection';
  b2bFee: FloatAggregateSelectionNonNullable;
  c2bFee: FloatAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  depositVolume: FloatAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsAggregateInput = {
  AND?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsAggregateInput>>;
  NOT?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsAggregateInput>;
  OR?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsNodeAggregationWhereInput>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessWalletTierCommissionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessWalletTierCommissionConnectWhere>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsConnectOrCreateFieldInput = {
  onCreate: DefaultTierCommissionBusinessWalletTierCommissionsConnectOrCreateFieldInputOnCreate;
  where: BusinessWalletTierCommissionConnectOrCreateWhere;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsConnectOrCreateFieldInputOnCreate = {
  node: BusinessWalletTierCommissionOnCreateInput;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsConnection = {
  __typename?: 'DefaultTierCommissionBusinessWalletTierCommissionsConnection';
  edges: Array<DefaultTierCommissionBusinessWalletTierCommissionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultTierCommissionBusinessWalletTierCommissionsConnectionSort = {
  node?: InputMaybe<BusinessWalletTierCommissionSort>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere = {
  AND?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>>;
  NOT?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
  OR?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>>;
  node?: InputMaybe<BusinessWalletTierCommissionWhere>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsCreateFieldInput = {
  node: BusinessWalletTierCommissionCreateInput;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsDeleteFieldInput = {
  delete?: InputMaybe<BusinessWalletTierCommissionDeleteInput>;
  where?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessWalletTierCommissionDisconnectInput>;
  where?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsFieldInput = {
  connect?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsCreateFieldInput>>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsNodeAggregationWhereInput>>;
  b2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MAX_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_MIN_LTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_SUM_LTE?: InputMaybe<Scalars['Float']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositVolume_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_AVERAGE_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MAX_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_MIN_LTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_EQUAL?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_SUM_LTE?: InputMaybe<Scalars['Float']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsRelationship = {
  __typename?: 'DefaultTierCommissionBusinessWalletTierCommissionsRelationship';
  cursor: Scalars['String'];
  node: BusinessWalletTierCommission;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsUpdateConnectionInput = {
  node?: InputMaybe<BusinessWalletTierCommissionUpdateInput>;
};

export type DefaultTierCommissionBusinessWalletTierCommissionsUpdateFieldInput = {
  connect?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsCreateFieldInput>>;
  delete?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsDisconnectFieldInput>>;
  update?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsUpdateConnectionInput>;
  where?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
};

export type DefaultTierCommissionConnectInput = {
  businessWalletTierCommissions?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectFieldInput>>;
  createdBy?: InputMaybe<DefaultTierCommissionCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<DefaultTierCommissionUpdatedByConnectFieldInput>;
};

export type DefaultTierCommissionConnectOrCreateInput = {
  businessWalletTierCommissions?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsConnectOrCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultTierCommissionCreatedByConnectOrCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultTierCommissionUpdatedByConnectOrCreateFieldInput>;
};

export type DefaultTierCommissionConnectOrCreateWhere = {
  node: DefaultTierCommissionUniqueWhere;
};

export type DefaultTierCommissionConnectWhere = {
  node: DefaultTierCommissionWhere;
};

export type DefaultTierCommissionCreateInput = {
  b2bFee?: Scalars['Float'];
  businessWalletTierCommissions?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsFieldInput>;
  c2bFee?: Scalars['Float'];
  createdBy?: InputMaybe<DefaultTierCommissionCreatedByFieldInput>;
  currency: Scalars['String'];
  depositVolume?: Scalars['Float'];
  updatedBy?: InputMaybe<DefaultTierCommissionUpdatedByFieldInput>;
};

export type DefaultTierCommissionCreatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultTierCommissionCreatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultTierCommissionCreatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultTierCommissionCreatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultTierCommissionCreatedByNodeAggregationWhereInput>;
};

export type DefaultTierCommissionCreatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultTierCommissionCreatedByConnectOrCreateFieldInput = {
  onCreate: DefaultTierCommissionCreatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultTierCommissionCreatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultTierCommissionCreatedByConnection = {
  __typename?: 'DefaultTierCommissionCreatedByConnection';
  edges: Array<DefaultTierCommissionCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultTierCommissionCreatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultTierCommissionCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultTierCommissionCreatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultTierCommissionCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultTierCommissionCreatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultTierCommissionCreatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultTierCommissionCreatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultTierCommissionCreatedByConnectionWhere>;
};

export type DefaultTierCommissionCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultTierCommissionCreatedByConnectionWhere>;
};

export type DefaultTierCommissionCreatedByFieldInput = {
  connect?: InputMaybe<DefaultTierCommissionCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultTierCommissionCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultTierCommissionCreatedByCreateFieldInput>;
};

export type DefaultTierCommissionCreatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultTierCommissionCreatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultTierCommissionCreatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultTierCommissionCreatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultTierCommissionCreatedByRelationship = {
  __typename?: 'DefaultTierCommissionCreatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultTierCommissionCreatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultTierCommissionCreatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultTierCommissionCreatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultTierCommissionCreatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultTierCommissionCreatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultTierCommissionCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultTierCommissionCreatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultTierCommissionCreatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultTierCommissionCreatedByConnectionWhere>;
};

export type DefaultTierCommissionDeleteInput = {
  businessWalletTierCommissions?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsDeleteFieldInput>>;
  createdBy?: InputMaybe<DefaultTierCommissionCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<DefaultTierCommissionUpdatedByDeleteFieldInput>;
};

export type DefaultTierCommissionDisconnectInput = {
  businessWalletTierCommissions?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsDisconnectFieldInput>>;
  createdBy?: InputMaybe<DefaultTierCommissionCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<DefaultTierCommissionUpdatedByDisconnectFieldInput>;
};

export type DefaultTierCommissionEdge = {
  __typename?: 'DefaultTierCommissionEdge';
  cursor: Scalars['String'];
  node: DefaultTierCommission;
};

export type DefaultTierCommissionOnCreateInput = {
  b2bFee?: Scalars['Float'];
  c2bFee?: Scalars['Float'];
  currency: Scalars['String'];
  depositVolume?: Scalars['Float'];
};

export type DefaultTierCommissionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more DefaultTierCommissionSort objects to sort DefaultTierCommissions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DefaultTierCommissionSort>>;
};

export type DefaultTierCommissionRelationInput = {
  businessWalletTierCommissions?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsCreateFieldInput>>;
  createdBy?: InputMaybe<DefaultTierCommissionCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<DefaultTierCommissionUpdatedByCreateFieldInput>;
};

/** Fields to sort DefaultTierCommissions by. The order in which sorts are applied is not guaranteed when specifying many fields in one DefaultTierCommissionSort object. */
export type DefaultTierCommissionSort = {
  b2bFee?: InputMaybe<SortDirection>;
  c2bFee?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  depositVolume?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DefaultTierCommissionSuperAdminCreatedByAggregationSelection = {
  __typename?: 'DefaultTierCommissionSuperAdminCreatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultTierCommissionSuperAdminCreatedByNodeAggregateSelection>;
};

export type DefaultTierCommissionSuperAdminCreatedByNodeAggregateSelection = {
  __typename?: 'DefaultTierCommissionSuperAdminCreatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultTierCommissionSuperAdminUpdatedByAggregationSelection = {
  __typename?: 'DefaultTierCommissionSuperAdminUpdatedByAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<DefaultTierCommissionSuperAdminUpdatedByNodeAggregateSelection>;
};

export type DefaultTierCommissionSuperAdminUpdatedByNodeAggregateSelection = {
  __typename?: 'DefaultTierCommissionSuperAdminUpdatedByNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type DefaultTierCommissionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type DefaultTierCommissionUpdateInput = {
  b2bFee?: InputMaybe<Scalars['Float']>;
  b2bFee_ADD?: InputMaybe<Scalars['Float']>;
  b2bFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  b2bFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  b2bFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  businessWalletTierCommissions?: InputMaybe<Array<DefaultTierCommissionBusinessWalletTierCommissionsUpdateFieldInput>>;
  c2bFee?: InputMaybe<Scalars['Float']>;
  c2bFee_ADD?: InputMaybe<Scalars['Float']>;
  c2bFee_DIVIDE?: InputMaybe<Scalars['Float']>;
  c2bFee_MULTIPLY?: InputMaybe<Scalars['Float']>;
  c2bFee_SUBTRACT?: InputMaybe<Scalars['Float']>;
  createdBy?: InputMaybe<DefaultTierCommissionCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_ADD?: InputMaybe<Scalars['Float']>;
  depositVolume_DIVIDE?: InputMaybe<Scalars['Float']>;
  depositVolume_MULTIPLY?: InputMaybe<Scalars['Float']>;
  depositVolume_SUBTRACT?: InputMaybe<Scalars['Float']>;
  updatedBy?: InputMaybe<DefaultTierCommissionUpdatedByUpdateFieldInput>;
};

export type DefaultTierCommissionUpdatedByAggregateInput = {
  AND?: InputMaybe<Array<DefaultTierCommissionUpdatedByAggregateInput>>;
  NOT?: InputMaybe<DefaultTierCommissionUpdatedByAggregateInput>;
  OR?: InputMaybe<Array<DefaultTierCommissionUpdatedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<DefaultTierCommissionUpdatedByNodeAggregationWhereInput>;
};

export type DefaultTierCommissionUpdatedByConnectFieldInput = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<SuperAdminConnectWhere>;
};

export type DefaultTierCommissionUpdatedByConnectOrCreateFieldInput = {
  onCreate: DefaultTierCommissionUpdatedByConnectOrCreateFieldInputOnCreate;
  where: SuperAdminConnectOrCreateWhere;
};

export type DefaultTierCommissionUpdatedByConnectOrCreateFieldInputOnCreate = {
  node: SuperAdminOnCreateInput;
};

export type DefaultTierCommissionUpdatedByConnection = {
  __typename?: 'DefaultTierCommissionUpdatedByConnection';
  edges: Array<DefaultTierCommissionUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type DefaultTierCommissionUpdatedByConnectionSort = {
  node?: InputMaybe<SuperAdminSort>;
};

export type DefaultTierCommissionUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<DefaultTierCommissionUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<DefaultTierCommissionUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<DefaultTierCommissionUpdatedByConnectionWhere>>;
  node?: InputMaybe<SuperAdminWhere>;
};

export type DefaultTierCommissionUpdatedByCreateFieldInput = {
  node: SuperAdminCreateInput;
};

export type DefaultTierCommissionUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<DefaultTierCommissionUpdatedByConnectionWhere>;
};

export type DefaultTierCommissionUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  where?: InputMaybe<DefaultTierCommissionUpdatedByConnectionWhere>;
};

export type DefaultTierCommissionUpdatedByFieldInput = {
  connect?: InputMaybe<DefaultTierCommissionUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultTierCommissionUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultTierCommissionUpdatedByCreateFieldInput>;
};

export type DefaultTierCommissionUpdatedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DefaultTierCommissionUpdatedByNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DefaultTierCommissionUpdatedByNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DefaultTierCommissionUpdatedByNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type DefaultTierCommissionUpdatedByRelationship = {
  __typename?: 'DefaultTierCommissionUpdatedByRelationship';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type DefaultTierCommissionUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<SuperAdminUpdateInput>;
};

export type DefaultTierCommissionUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<DefaultTierCommissionUpdatedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<DefaultTierCommissionUpdatedByConnectOrCreateFieldInput>;
  create?: InputMaybe<DefaultTierCommissionUpdatedByCreateFieldInput>;
  delete?: InputMaybe<DefaultTierCommissionUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<DefaultTierCommissionUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<DefaultTierCommissionUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<DefaultTierCommissionUpdatedByConnectionWhere>;
};

export type DefaultTierCommissionWhere = {
  AND?: InputMaybe<Array<DefaultTierCommissionWhere>>;
  NOT?: InputMaybe<DefaultTierCommissionWhere>;
  OR?: InputMaybe<Array<DefaultTierCommissionWhere>>;
  b2bFee?: InputMaybe<Scalars['Float']>;
  b2bFee_GT?: InputMaybe<Scalars['Float']>;
  b2bFee_GTE?: InputMaybe<Scalars['Float']>;
  b2bFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  b2bFee_LT?: InputMaybe<Scalars['Float']>;
  b2bFee_LTE?: InputMaybe<Scalars['Float']>;
  businessWalletTierCommissionsAggregate?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsAggregateInput>;
  /** Return DefaultTierCommissions where all of the related DefaultTierCommissionBusinessWalletTierCommissionsConnections match this filter */
  businessWalletTierCommissionsConnection_ALL?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
  /** Return DefaultTierCommissions where none of the related DefaultTierCommissionBusinessWalletTierCommissionsConnections match this filter */
  businessWalletTierCommissionsConnection_NONE?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
  /** Return DefaultTierCommissions where one of the related DefaultTierCommissionBusinessWalletTierCommissionsConnections match this filter */
  businessWalletTierCommissionsConnection_SINGLE?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
  /** Return DefaultTierCommissions where some of the related DefaultTierCommissionBusinessWalletTierCommissionsConnections match this filter */
  businessWalletTierCommissionsConnection_SOME?: InputMaybe<DefaultTierCommissionBusinessWalletTierCommissionsConnectionWhere>;
  /** Return DefaultTierCommissions where all of the related BusinessWalletTierCommissions match this filter */
  businessWalletTierCommissions_ALL?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return DefaultTierCommissions where none of the related BusinessWalletTierCommissions match this filter */
  businessWalletTierCommissions_NONE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return DefaultTierCommissions where one of the related BusinessWalletTierCommissions match this filter */
  businessWalletTierCommissions_SINGLE?: InputMaybe<BusinessWalletTierCommissionWhere>;
  /** Return DefaultTierCommissions where some of the related BusinessWalletTierCommissions match this filter */
  businessWalletTierCommissions_SOME?: InputMaybe<BusinessWalletTierCommissionWhere>;
  c2bFee?: InputMaybe<Scalars['Float']>;
  c2bFee_GT?: InputMaybe<Scalars['Float']>;
  c2bFee_GTE?: InputMaybe<Scalars['Float']>;
  c2bFee_IN?: InputMaybe<Array<Scalars['Float']>>;
  c2bFee_LT?: InputMaybe<Scalars['Float']>;
  c2bFee_LTE?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<SuperAdminWhere>;
  createdByAggregate?: InputMaybe<DefaultTierCommissionCreatedByAggregateInput>;
  createdByConnection?: InputMaybe<DefaultTierCommissionCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<DefaultTierCommissionCreatedByConnectionWhere>;
  createdBy_NOT?: InputMaybe<SuperAdminWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  depositVolume?: InputMaybe<Scalars['Float']>;
  depositVolume_GT?: InputMaybe<Scalars['Float']>;
  depositVolume_GTE?: InputMaybe<Scalars['Float']>;
  depositVolume_IN?: InputMaybe<Array<Scalars['Float']>>;
  depositVolume_LT?: InputMaybe<Scalars['Float']>;
  depositVolume_LTE?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<SuperAdminWhere>;
  updatedByAggregate?: InputMaybe<DefaultTierCommissionUpdatedByAggregateInput>;
  updatedByConnection?: InputMaybe<DefaultTierCommissionUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<DefaultTierCommissionUpdatedByConnectionWhere>;
  updatedBy_NOT?: InputMaybe<SuperAdminWhere>;
};

export type DefaultTierCommissionsConnection = {
  __typename?: 'DefaultTierCommissionsConnection';
  edges: Array<DefaultTierCommissionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

/** Information about the number of nodes and relationships deleted during a delete mutation */
export type DeleteInfo = {
  __typename?: 'DeleteInfo';
  bookmark?: Maybe<Scalars['String']>;
  nodesDeleted: Scalars['Int'];
  relationshipsDeleted: Scalars['Int'];
};

export type FeaturePermission = {
  __typename?: 'FeaturePermission';
  brand: Brand;
  brandAggregate?: Maybe<FeaturePermissionBrandBrandAggregationSelection>;
  brandConnection: FeaturePermissionBrandConnection;
  createdAt: Scalars['DateTime'];
  featureType: FeatureType;
  id: Scalars['ID'];
  teams: Array<Team>;
  teamsAggregate?: Maybe<FeaturePermissionTeamTeamsAggregationSelection>;
  teamsConnection: FeaturePermissionTeamsConnection;
  updatedAt: Scalars['DateTime'];
  users: Array<User>;
  usersConnection: FeaturePermissionUsersConnection;
};


export type FeaturePermissionBrandArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type FeaturePermissionBrandAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BrandWhere>;
};


export type FeaturePermissionBrandConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<FeaturePermissionBrandConnectionSort>>;
  where?: InputMaybe<FeaturePermissionBrandConnectionWhere>;
};


export type FeaturePermissionTeamsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type FeaturePermissionTeamsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type FeaturePermissionTeamsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<FeaturePermissionTeamsConnectionSort>>;
  where?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
};


export type FeaturePermissionUsersArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type FeaturePermissionUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<FeaturePermissionUsersConnectionSort>>;
  where?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
};

export type FeaturePermissionAggregateSelection = {
  __typename?: 'FeaturePermissionAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type FeaturePermissionBrandAggregateInput = {
  AND?: InputMaybe<Array<FeaturePermissionBrandAggregateInput>>;
  NOT?: InputMaybe<FeaturePermissionBrandAggregateInput>;
  OR?: InputMaybe<Array<FeaturePermissionBrandAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<FeaturePermissionBrandNodeAggregationWhereInput>;
};

export type FeaturePermissionBrandBrandAggregationSelection = {
  __typename?: 'FeaturePermissionBrandBrandAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<FeaturePermissionBrandBrandNodeAggregateSelection>;
};

export type FeaturePermissionBrandBrandNodeAggregateSelection = {
  __typename?: 'FeaturePermissionBrandBrandNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type FeaturePermissionBrandConnectFieldInput = {
  connect?: InputMaybe<BrandConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BrandConnectWhere>;
};

export type FeaturePermissionBrandConnectOrCreateFieldInput = {
  onCreate: FeaturePermissionBrandConnectOrCreateFieldInputOnCreate;
  where: BrandConnectOrCreateWhere;
};

export type FeaturePermissionBrandConnectOrCreateFieldInputOnCreate = {
  node: BrandOnCreateInput;
};

export type FeaturePermissionBrandConnection = {
  __typename?: 'FeaturePermissionBrandConnection';
  edges: Array<FeaturePermissionBrandRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type FeaturePermissionBrandConnectionSort = {
  node?: InputMaybe<BrandSort>;
};

export type FeaturePermissionBrandConnectionWhere = {
  AND?: InputMaybe<Array<FeaturePermissionBrandConnectionWhere>>;
  NOT?: InputMaybe<FeaturePermissionBrandConnectionWhere>;
  OR?: InputMaybe<Array<FeaturePermissionBrandConnectionWhere>>;
  node?: InputMaybe<BrandWhere>;
};

export type FeaturePermissionBrandCreateFieldInput = {
  node: BrandCreateInput;
};

export type FeaturePermissionBrandDeleteFieldInput = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<FeaturePermissionBrandConnectionWhere>;
};

export type FeaturePermissionBrandDisconnectFieldInput = {
  disconnect?: InputMaybe<BrandDisconnectInput>;
  where?: InputMaybe<FeaturePermissionBrandConnectionWhere>;
};

export type FeaturePermissionBrandFieldInput = {
  connect?: InputMaybe<FeaturePermissionBrandConnectFieldInput>;
  connectOrCreate?: InputMaybe<FeaturePermissionBrandConnectOrCreateFieldInput>;
  create?: InputMaybe<FeaturePermissionBrandCreateFieldInput>;
};

export type FeaturePermissionBrandNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FeaturePermissionBrandNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FeaturePermissionBrandNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FeaturePermissionBrandNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type FeaturePermissionBrandRelationship = {
  __typename?: 'FeaturePermissionBrandRelationship';
  cursor: Scalars['String'];
  node: Brand;
};

export type FeaturePermissionBrandUpdateConnectionInput = {
  node?: InputMaybe<BrandUpdateInput>;
};

export type FeaturePermissionBrandUpdateFieldInput = {
  connect?: InputMaybe<FeaturePermissionBrandConnectFieldInput>;
  connectOrCreate?: InputMaybe<FeaturePermissionBrandConnectOrCreateFieldInput>;
  create?: InputMaybe<FeaturePermissionBrandCreateFieldInput>;
  delete?: InputMaybe<FeaturePermissionBrandDeleteFieldInput>;
  disconnect?: InputMaybe<FeaturePermissionBrandDisconnectFieldInput>;
  update?: InputMaybe<FeaturePermissionBrandUpdateConnectionInput>;
  where?: InputMaybe<FeaturePermissionBrandConnectionWhere>;
};

export type FeaturePermissionConnectInput = {
  brand?: InputMaybe<FeaturePermissionBrandConnectFieldInput>;
  teams?: InputMaybe<Array<FeaturePermissionTeamsConnectFieldInput>>;
  users?: InputMaybe<Array<FeaturePermissionUsersConnectFieldInput>>;
};

export type FeaturePermissionConnectOrCreateInput = {
  brand?: InputMaybe<FeaturePermissionBrandConnectOrCreateFieldInput>;
  teams?: InputMaybe<Array<FeaturePermissionTeamsConnectOrCreateFieldInput>>;
};

export type FeaturePermissionConnectOrCreateWhere = {
  node: FeaturePermissionUniqueWhere;
};

export type FeaturePermissionConnectWhere = {
  node: FeaturePermissionWhere;
};

export type FeaturePermissionCreateInput = {
  brand?: InputMaybe<FeaturePermissionBrandFieldInput>;
  featureType: FeatureType;
  teams?: InputMaybe<FeaturePermissionTeamsFieldInput>;
  users?: InputMaybe<FeaturePermissionUsersFieldInput>;
};

export type FeaturePermissionDeleteInput = {
  brand?: InputMaybe<FeaturePermissionBrandDeleteFieldInput>;
  teams?: InputMaybe<Array<FeaturePermissionTeamsDeleteFieldInput>>;
  users?: InputMaybe<Array<FeaturePermissionUsersDeleteFieldInput>>;
};

export type FeaturePermissionDisconnectInput = {
  brand?: InputMaybe<FeaturePermissionBrandDisconnectFieldInput>;
  teams?: InputMaybe<Array<FeaturePermissionTeamsDisconnectFieldInput>>;
  users?: InputMaybe<Array<FeaturePermissionUsersDisconnectFieldInput>>;
};

export type FeaturePermissionEdge = {
  __typename?: 'FeaturePermissionEdge';
  cursor: Scalars['String'];
  node: FeaturePermission;
};

export type FeaturePermissionOnCreateInput = {
  featureType: FeatureType;
};

export type FeaturePermissionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more FeaturePermissionSort objects to sort FeaturePermissions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<FeaturePermissionSort>>;
};

export type FeaturePermissionRelationInput = {
  brand?: InputMaybe<FeaturePermissionBrandCreateFieldInput>;
  teams?: InputMaybe<Array<FeaturePermissionTeamsCreateFieldInput>>;
  users?: InputMaybe<Array<FeaturePermissionUsersCreateFieldInput>>;
};

/** Fields to sort FeaturePermissions by. The order in which sorts are applied is not guaranteed when specifying many fields in one FeaturePermissionSort object. */
export type FeaturePermissionSort = {
  createdAt?: InputMaybe<SortDirection>;
  featureType?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type FeaturePermissionTeamTeamsAggregationSelection = {
  __typename?: 'FeaturePermissionTeamTeamsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<FeaturePermissionTeamTeamsNodeAggregateSelection>;
};

export type FeaturePermissionTeamTeamsNodeAggregateSelection = {
  __typename?: 'FeaturePermissionTeamTeamsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type FeaturePermissionTeamsAggregateInput = {
  AND?: InputMaybe<Array<FeaturePermissionTeamsAggregateInput>>;
  NOT?: InputMaybe<FeaturePermissionTeamsAggregateInput>;
  OR?: InputMaybe<Array<FeaturePermissionTeamsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<FeaturePermissionTeamsNodeAggregationWhereInput>;
};

export type FeaturePermissionTeamsConnectFieldInput = {
  connect?: InputMaybe<Array<TeamConnectInput>>;
  edge: UserFeaturePermissionCreateInput;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<TeamConnectWhere>;
};

export type FeaturePermissionTeamsConnectOrCreateFieldInput = {
  onCreate: FeaturePermissionTeamsConnectOrCreateFieldInputOnCreate;
  where: TeamConnectOrCreateWhere;
};

export type FeaturePermissionTeamsConnectOrCreateFieldInputOnCreate = {
  edge: UserFeaturePermissionCreateInput;
  node: TeamOnCreateInput;
};

export type FeaturePermissionTeamsConnection = {
  __typename?: 'FeaturePermissionTeamsConnection';
  edges: Array<FeaturePermissionTeamsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type FeaturePermissionTeamsConnectionSort = {
  edge?: InputMaybe<UserFeaturePermissionSort>;
  node?: InputMaybe<TeamSort>;
};

export type FeaturePermissionTeamsConnectionWhere = {
  AND?: InputMaybe<Array<FeaturePermissionTeamsConnectionWhere>>;
  NOT?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
  OR?: InputMaybe<Array<FeaturePermissionTeamsConnectionWhere>>;
  edge?: InputMaybe<UserFeaturePermissionWhere>;
  node?: InputMaybe<TeamWhere>;
};

export type FeaturePermissionTeamsCreateFieldInput = {
  edge: UserFeaturePermissionCreateInput;
  node: TeamCreateInput;
};

export type FeaturePermissionTeamsDeleteFieldInput = {
  delete?: InputMaybe<TeamDeleteInput>;
  where?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
};

export type FeaturePermissionTeamsDisconnectFieldInput = {
  disconnect?: InputMaybe<TeamDisconnectInput>;
  where?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
};

export type FeaturePermissionTeamsFieldInput = {
  connect?: InputMaybe<Array<FeaturePermissionTeamsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<FeaturePermissionTeamsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<FeaturePermissionTeamsCreateFieldInput>>;
};

export type FeaturePermissionTeamsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FeaturePermissionTeamsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FeaturePermissionTeamsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FeaturePermissionTeamsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type FeaturePermissionTeamsRelationship = UserFeaturePermission & {
  __typename?: 'FeaturePermissionTeamsRelationship';
  create: Scalars['Boolean'];
  cursor: Scalars['String'];
  delete: Scalars['Boolean'];
  node: Team;
  read: Scalars['Boolean'];
  update: Scalars['Boolean'];
};

export type FeaturePermissionTeamsUpdateConnectionInput = {
  edge?: InputMaybe<UserFeaturePermissionUpdateInput>;
  node?: InputMaybe<TeamUpdateInput>;
};

export type FeaturePermissionTeamsUpdateFieldInput = {
  connect?: InputMaybe<Array<FeaturePermissionTeamsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<FeaturePermissionTeamsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<FeaturePermissionTeamsCreateFieldInput>>;
  delete?: InputMaybe<Array<FeaturePermissionTeamsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<FeaturePermissionTeamsDisconnectFieldInput>>;
  update?: InputMaybe<FeaturePermissionTeamsUpdateConnectionInput>;
  where?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
};

export type FeaturePermissionUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type FeaturePermissionUpdateInput = {
  brand?: InputMaybe<FeaturePermissionBrandUpdateFieldInput>;
  featureType?: InputMaybe<FeatureType>;
  teams?: InputMaybe<Array<FeaturePermissionTeamsUpdateFieldInput>>;
  users?: InputMaybe<Array<FeaturePermissionUsersUpdateFieldInput>>;
};

export type FeaturePermissionUsersConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  edge: UserFeaturePermissionCreateInput;
  where?: InputMaybe<UserConnectWhere>;
};

export type FeaturePermissionUsersConnection = {
  __typename?: 'FeaturePermissionUsersConnection';
  edges: Array<FeaturePermissionUsersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type FeaturePermissionUsersConnectionSort = {
  edge?: InputMaybe<UserFeaturePermissionSort>;
  node?: InputMaybe<UserSort>;
};

export type FeaturePermissionUsersConnectionWhere = {
  AND?: InputMaybe<Array<FeaturePermissionUsersConnectionWhere>>;
  NOT?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
  OR?: InputMaybe<Array<FeaturePermissionUsersConnectionWhere>>;
  edge?: InputMaybe<UserFeaturePermissionWhere>;
  node?: InputMaybe<UserWhere>;
};

export type FeaturePermissionUsersCreateFieldInput = {
  edge: UserFeaturePermissionCreateInput;
  node: UserCreateInput;
};

export type FeaturePermissionUsersDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
};

export type FeaturePermissionUsersDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
};

export type FeaturePermissionUsersFieldInput = {
  connect?: InputMaybe<Array<FeaturePermissionUsersConnectFieldInput>>;
  create?: InputMaybe<Array<FeaturePermissionUsersCreateFieldInput>>;
};

export type FeaturePermissionUsersRelationship = UserFeaturePermission & {
  __typename?: 'FeaturePermissionUsersRelationship';
  create: Scalars['Boolean'];
  cursor: Scalars['String'];
  delete: Scalars['Boolean'];
  node: User;
  read: Scalars['Boolean'];
  update: Scalars['Boolean'];
};

export type FeaturePermissionUsersUpdateConnectionInput = {
  edge?: InputMaybe<UserFeaturePermissionUpdateInput>;
  node?: InputMaybe<UserUpdateInput>;
};

export type FeaturePermissionUsersUpdateFieldInput = {
  connect?: InputMaybe<Array<FeaturePermissionUsersConnectFieldInput>>;
  create?: InputMaybe<Array<FeaturePermissionUsersCreateFieldInput>>;
  delete?: InputMaybe<Array<FeaturePermissionUsersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<FeaturePermissionUsersDisconnectFieldInput>>;
  update?: InputMaybe<FeaturePermissionUsersUpdateConnectionInput>;
  where?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
};

export type FeaturePermissionWhere = {
  AND?: InputMaybe<Array<FeaturePermissionWhere>>;
  NOT?: InputMaybe<FeaturePermissionWhere>;
  OR?: InputMaybe<Array<FeaturePermissionWhere>>;
  brand?: InputMaybe<BrandWhere>;
  brandAggregate?: InputMaybe<FeaturePermissionBrandAggregateInput>;
  brandConnection?: InputMaybe<FeaturePermissionBrandConnectionWhere>;
  brandConnection_NOT?: InputMaybe<FeaturePermissionBrandConnectionWhere>;
  brand_NOT?: InputMaybe<BrandWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  featureType?: InputMaybe<FeatureType>;
  featureType_IN?: InputMaybe<Array<FeatureType>>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  teamsAggregate?: InputMaybe<FeaturePermissionTeamsAggregateInput>;
  /** Return FeaturePermissions where all of the related FeaturePermissionTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
  /** Return FeaturePermissions where none of the related FeaturePermissionTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
  /** Return FeaturePermissions where one of the related FeaturePermissionTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
  /** Return FeaturePermissions where some of the related FeaturePermissionTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<FeaturePermissionTeamsConnectionWhere>;
  /** Return FeaturePermissions where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return FeaturePermissions where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return FeaturePermissions where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return FeaturePermissions where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  /** Return FeaturePermissions where all of the related FeaturePermissionUsersConnections match this filter */
  usersConnection_ALL?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
  /** Return FeaturePermissions where none of the related FeaturePermissionUsersConnections match this filter */
  usersConnection_NONE?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
  /** Return FeaturePermissions where one of the related FeaturePermissionUsersConnections match this filter */
  usersConnection_SINGLE?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
  /** Return FeaturePermissions where some of the related FeaturePermissionUsersConnections match this filter */
  usersConnection_SOME?: InputMaybe<FeaturePermissionUsersConnectionWhere>;
};

export type FeaturePermissionsConnection = {
  __typename?: 'FeaturePermissionsConnection';
  edges: Array<FeaturePermissionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export enum FeatureType {
  Deposit = 'DEPOSIT',
  Withdrawal = 'WITHDRAWAL'
}

export type FeatureWisePermission = {
  create: Scalars['Boolean'];
  delete: Scalars['Boolean'];
  featureType: Scalars['String'];
  read: Scalars['Boolean'];
  update: Scalars['Boolean'];
};

export type FloatAggregateSelectionNonNullable = {
  __typename?: 'FloatAggregateSelectionNonNullable';
  average: Scalars['Float'];
  max: Scalars['Float'];
  min: Scalars['Float'];
  sum: Scalars['Float'];
};

export type GetDepositInvoiceOutput = {
  __typename?: 'GetDepositInvoiceOutput';
  data?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type GetWithdrawalPrfOutput = {
  __typename?: 'GetWithdrawalPRFOutput';
  data?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type GraphDataNeo4JsConnection = {
  __typename?: 'GraphDataNeo4JSConnection';
  edges: Array<GraphDataNeo4jEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type GraphDataNeo4j = {
  __typename?: 'GraphDataNeo4j';
  d1?: Maybe<Scalars['String']>;
  d2?: Maybe<Scalars['String']>;
  d3?: Maybe<Scalars['String']>;
  x: Scalars['String'];
  y: Scalars['Float'];
};

export type GraphDataNeo4jAggregateSelection = {
  __typename?: 'GraphDataNeo4jAggregateSelection';
  count: Scalars['Int'];
  d1: StringAggregateSelectionNullable;
  d2: StringAggregateSelectionNullable;
  d3: StringAggregateSelectionNullable;
  x: StringAggregateSelectionNonNullable;
  y: FloatAggregateSelectionNonNullable;
};

export type GraphDataNeo4jCreateInput = {
  d1?: InputMaybe<Scalars['String']>;
  d2?: InputMaybe<Scalars['String']>;
  d3?: InputMaybe<Scalars['String']>;
  x: Scalars['String'];
  y: Scalars['Float'];
};

export type GraphDataNeo4jEdge = {
  __typename?: 'GraphDataNeo4jEdge';
  cursor: Scalars['String'];
  node: GraphDataNeo4j;
};

export type GraphDataNeo4jOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more GraphDataNeo4jSort objects to sort GraphDataNeo4JS by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<GraphDataNeo4jSort>>;
};

/** Fields to sort GraphDataNeo4JS by. The order in which sorts are applied is not guaranteed when specifying many fields in one GraphDataNeo4jSort object. */
export type GraphDataNeo4jSort = {
  d1?: InputMaybe<SortDirection>;
  d2?: InputMaybe<SortDirection>;
  d3?: InputMaybe<SortDirection>;
  x?: InputMaybe<SortDirection>;
  y?: InputMaybe<SortDirection>;
};

export type GraphDataNeo4jUpdateInput = {
  d1?: InputMaybe<Scalars['String']>;
  d2?: InputMaybe<Scalars['String']>;
  d3?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['String']>;
  y?: InputMaybe<Scalars['Float']>;
  y_ADD?: InputMaybe<Scalars['Float']>;
  y_DIVIDE?: InputMaybe<Scalars['Float']>;
  y_MULTIPLY?: InputMaybe<Scalars['Float']>;
  y_SUBTRACT?: InputMaybe<Scalars['Float']>;
};

export type GraphDataNeo4jWhere = {
  AND?: InputMaybe<Array<GraphDataNeo4jWhere>>;
  NOT?: InputMaybe<GraphDataNeo4jWhere>;
  OR?: InputMaybe<Array<GraphDataNeo4jWhere>>;
  d1?: InputMaybe<Scalars['String']>;
  d1_CONTAINS?: InputMaybe<Scalars['String']>;
  d1_ENDS_WITH?: InputMaybe<Scalars['String']>;
  d1_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  d1_MATCHES?: InputMaybe<Scalars['String']>;
  d1_STARTS_WITH?: InputMaybe<Scalars['String']>;
  d2?: InputMaybe<Scalars['String']>;
  d2_CONTAINS?: InputMaybe<Scalars['String']>;
  d2_ENDS_WITH?: InputMaybe<Scalars['String']>;
  d2_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  d2_MATCHES?: InputMaybe<Scalars['String']>;
  d2_STARTS_WITH?: InputMaybe<Scalars['String']>;
  d3?: InputMaybe<Scalars['String']>;
  d3_CONTAINS?: InputMaybe<Scalars['String']>;
  d3_ENDS_WITH?: InputMaybe<Scalars['String']>;
  d3_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  d3_MATCHES?: InputMaybe<Scalars['String']>;
  d3_STARTS_WITH?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['String']>;
  x_CONTAINS?: InputMaybe<Scalars['String']>;
  x_ENDS_WITH?: InputMaybe<Scalars['String']>;
  x_IN?: InputMaybe<Array<Scalars['String']>>;
  x_MATCHES?: InputMaybe<Scalars['String']>;
  x_STARTS_WITH?: InputMaybe<Scalars['String']>;
  y?: InputMaybe<Scalars['Float']>;
  y_GT?: InputMaybe<Scalars['Float']>;
  y_GTE?: InputMaybe<Scalars['Float']>;
  y_IN?: InputMaybe<Array<Scalars['Float']>>;
  y_LT?: InputMaybe<Scalars['Float']>;
  y_LTE?: InputMaybe<Scalars['Float']>;
};

export type IdAggregateSelectionNonNullable = {
  __typename?: 'IDAggregateSelectionNonNullable';
  longest: Scalars['ID'];
  shortest: Scalars['ID'];
};

export type IntAggregateSelectionNonNullable = {
  __typename?: 'IntAggregateSelectionNonNullable';
  average: Scalars['Float'];
  max: Scalars['Int'];
  min: Scalars['Int'];
  sum: Scalars['Int'];
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']>;
  _gt?: InputMaybe<Scalars['Int']>;
  _gte?: InputMaybe<Scalars['Int']>;
  _in?: InputMaybe<Array<Scalars['Int']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Int']>;
  _lte?: InputMaybe<Scalars['Int']>;
  _neq?: InputMaybe<Scalars['Int']>;
  _nin?: InputMaybe<Array<Scalars['Int']>>;
};

export type IntermediaryAccount = {
  __typename?: 'IntermediaryAccount';
  bank: Bank;
  bankAggregate?: Maybe<IntermediaryAccountBankBankAggregationSelection>;
  bankConnection: IntermediaryAccountBankConnection;
  bankName: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: User;
  createdByConnection: IntermediaryAccountCreatedByConnection;
  currency: Scalars['String'];
  id: Scalars['ID'];
  swiftCode: Scalars['String'];
  updatedAt: Scalars['DateTime'];
  updatedBy: User;
  updatedByConnection: IntermediaryAccountUpdatedByConnection;
};


export type IntermediaryAccountBankArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BankOptions>;
  where?: InputMaybe<BankWhere>;
};


export type IntermediaryAccountBankAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BankWhere>;
};


export type IntermediaryAccountBankConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<IntermediaryAccountBankConnectionSort>>;
  where?: InputMaybe<IntermediaryAccountBankConnectionWhere>;
};


export type IntermediaryAccountCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type IntermediaryAccountCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<IntermediaryAccountCreatedByConnectionSort>>;
  where?: InputMaybe<IntermediaryAccountCreatedByConnectionWhere>;
};


export type IntermediaryAccountUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type IntermediaryAccountUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<IntermediaryAccountUpdatedByConnectionSort>>;
  where?: InputMaybe<IntermediaryAccountUpdatedByConnectionWhere>;
};

export type IntermediaryAccountAggregateSelection = {
  __typename?: 'IntermediaryAccountAggregateSelection';
  bankName: StringAggregateSelectionNonNullable;
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type IntermediaryAccountBankAggregateInput = {
  AND?: InputMaybe<Array<IntermediaryAccountBankAggregateInput>>;
  NOT?: InputMaybe<IntermediaryAccountBankAggregateInput>;
  OR?: InputMaybe<Array<IntermediaryAccountBankAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<IntermediaryAccountBankNodeAggregationWhereInput>;
};

export type IntermediaryAccountBankBankAggregationSelection = {
  __typename?: 'IntermediaryAccountBankBankAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<IntermediaryAccountBankBankNodeAggregateSelection>;
};

export type IntermediaryAccountBankBankNodeAggregateSelection = {
  __typename?: 'IntermediaryAccountBankBankNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type IntermediaryAccountBankConnectFieldInput = {
  connect?: InputMaybe<BankConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BankConnectWhere>;
};

export type IntermediaryAccountBankConnectOrCreateFieldInput = {
  onCreate: IntermediaryAccountBankConnectOrCreateFieldInputOnCreate;
  where: BankConnectOrCreateWhere;
};

export type IntermediaryAccountBankConnectOrCreateFieldInputOnCreate = {
  node: BankOnCreateInput;
};

export type IntermediaryAccountBankConnection = {
  __typename?: 'IntermediaryAccountBankConnection';
  edges: Array<IntermediaryAccountBankRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type IntermediaryAccountBankConnectionSort = {
  node?: InputMaybe<BankSort>;
};

export type IntermediaryAccountBankConnectionWhere = {
  AND?: InputMaybe<Array<IntermediaryAccountBankConnectionWhere>>;
  NOT?: InputMaybe<IntermediaryAccountBankConnectionWhere>;
  OR?: InputMaybe<Array<IntermediaryAccountBankConnectionWhere>>;
  node?: InputMaybe<BankWhere>;
};

export type IntermediaryAccountBankCreateFieldInput = {
  node: BankCreateInput;
};

export type IntermediaryAccountBankDeleteFieldInput = {
  delete?: InputMaybe<BankDeleteInput>;
  where?: InputMaybe<IntermediaryAccountBankConnectionWhere>;
};

export type IntermediaryAccountBankDisconnectFieldInput = {
  disconnect?: InputMaybe<BankDisconnectInput>;
  where?: InputMaybe<IntermediaryAccountBankConnectionWhere>;
};

export type IntermediaryAccountBankFieldInput = {
  connect?: InputMaybe<IntermediaryAccountBankConnectFieldInput>;
  connectOrCreate?: InputMaybe<IntermediaryAccountBankConnectOrCreateFieldInput>;
  create?: InputMaybe<IntermediaryAccountBankCreateFieldInput>;
};

export type IntermediaryAccountBankNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<IntermediaryAccountBankNodeAggregationWhereInput>>;
  NOT?: InputMaybe<IntermediaryAccountBankNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<IntermediaryAccountBankNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  swiftCode_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type IntermediaryAccountBankRelationship = {
  __typename?: 'IntermediaryAccountBankRelationship';
  cursor: Scalars['String'];
  node: Bank;
};

export type IntermediaryAccountBankUpdateConnectionInput = {
  node?: InputMaybe<BankUpdateInput>;
};

export type IntermediaryAccountBankUpdateFieldInput = {
  connect?: InputMaybe<IntermediaryAccountBankConnectFieldInput>;
  connectOrCreate?: InputMaybe<IntermediaryAccountBankConnectOrCreateFieldInput>;
  create?: InputMaybe<IntermediaryAccountBankCreateFieldInput>;
  delete?: InputMaybe<IntermediaryAccountBankDeleteFieldInput>;
  disconnect?: InputMaybe<IntermediaryAccountBankDisconnectFieldInput>;
  update?: InputMaybe<IntermediaryAccountBankUpdateConnectionInput>;
  where?: InputMaybe<IntermediaryAccountBankConnectionWhere>;
};

export type IntermediaryAccountConnectInput = {
  bank?: InputMaybe<IntermediaryAccountBankConnectFieldInput>;
  createdBy?: InputMaybe<IntermediaryAccountCreatedByConnectFieldInput>;
  updatedBy?: InputMaybe<IntermediaryAccountUpdatedByConnectFieldInput>;
};

export type IntermediaryAccountConnectOrCreateInput = {
  bank?: InputMaybe<IntermediaryAccountBankConnectOrCreateFieldInput>;
};

export type IntermediaryAccountConnectOrCreateWhere = {
  node: IntermediaryAccountUniqueWhere;
};

export type IntermediaryAccountConnectWhere = {
  node: IntermediaryAccountWhere;
};

export type IntermediaryAccountCreateInput = {
  bank?: InputMaybe<IntermediaryAccountBankFieldInput>;
  bankName: Scalars['String'];
  createdBy?: InputMaybe<IntermediaryAccountCreatedByFieldInput>;
  currency: Scalars['String'];
  swiftCode: Scalars['String'];
  updatedBy?: InputMaybe<IntermediaryAccountUpdatedByFieldInput>;
};

export type IntermediaryAccountCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type IntermediaryAccountCreatedByConnection = {
  __typename?: 'IntermediaryAccountCreatedByConnection';
  edges: Array<IntermediaryAccountCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type IntermediaryAccountCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type IntermediaryAccountCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<IntermediaryAccountCreatedByConnectionWhere>>;
  NOT?: InputMaybe<IntermediaryAccountCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<IntermediaryAccountCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type IntermediaryAccountCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type IntermediaryAccountCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<IntermediaryAccountCreatedByConnectionWhere>;
};

export type IntermediaryAccountCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<IntermediaryAccountCreatedByConnectionWhere>;
};

export type IntermediaryAccountCreatedByFieldInput = {
  connect?: InputMaybe<IntermediaryAccountCreatedByConnectFieldInput>;
  create?: InputMaybe<IntermediaryAccountCreatedByCreateFieldInput>;
};

export type IntermediaryAccountCreatedByRelationship = {
  __typename?: 'IntermediaryAccountCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type IntermediaryAccountCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type IntermediaryAccountCreatedByUpdateFieldInput = {
  connect?: InputMaybe<IntermediaryAccountCreatedByConnectFieldInput>;
  create?: InputMaybe<IntermediaryAccountCreatedByCreateFieldInput>;
  delete?: InputMaybe<IntermediaryAccountCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<IntermediaryAccountCreatedByDisconnectFieldInput>;
  update?: InputMaybe<IntermediaryAccountCreatedByUpdateConnectionInput>;
  where?: InputMaybe<IntermediaryAccountCreatedByConnectionWhere>;
};

export type IntermediaryAccountDeleteInput = {
  bank?: InputMaybe<IntermediaryAccountBankDeleteFieldInput>;
  createdBy?: InputMaybe<IntermediaryAccountCreatedByDeleteFieldInput>;
  updatedBy?: InputMaybe<IntermediaryAccountUpdatedByDeleteFieldInput>;
};

export type IntermediaryAccountDisconnectInput = {
  bank?: InputMaybe<IntermediaryAccountBankDisconnectFieldInput>;
  createdBy?: InputMaybe<IntermediaryAccountCreatedByDisconnectFieldInput>;
  updatedBy?: InputMaybe<IntermediaryAccountUpdatedByDisconnectFieldInput>;
};

export type IntermediaryAccountEdge = {
  __typename?: 'IntermediaryAccountEdge';
  cursor: Scalars['String'];
  node: IntermediaryAccount;
};

export type IntermediaryAccountOnCreateInput = {
  bankName: Scalars['String'];
  currency: Scalars['String'];
  swiftCode: Scalars['String'];
};

export type IntermediaryAccountOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more IntermediaryAccountSort objects to sort IntermediaryAccounts by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<IntermediaryAccountSort>>;
};

export type IntermediaryAccountRelationInput = {
  bank?: InputMaybe<IntermediaryAccountBankCreateFieldInput>;
  createdBy?: InputMaybe<IntermediaryAccountCreatedByCreateFieldInput>;
  updatedBy?: InputMaybe<IntermediaryAccountUpdatedByCreateFieldInput>;
};

/** Fields to sort IntermediaryAccounts by. The order in which sorts are applied is not guaranteed when specifying many fields in one IntermediaryAccountSort object. */
export type IntermediaryAccountSort = {
  bankName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  currency?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  swiftCode?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type IntermediaryAccountUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type IntermediaryAccountUpdateInput = {
  bank?: InputMaybe<IntermediaryAccountBankUpdateFieldInput>;
  bankName?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<IntermediaryAccountCreatedByUpdateFieldInput>;
  currency?: InputMaybe<Scalars['String']>;
  swiftCode?: InputMaybe<Scalars['String']>;
  updatedBy?: InputMaybe<IntermediaryAccountUpdatedByUpdateFieldInput>;
};

export type IntermediaryAccountUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type IntermediaryAccountUpdatedByConnection = {
  __typename?: 'IntermediaryAccountUpdatedByConnection';
  edges: Array<IntermediaryAccountUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type IntermediaryAccountUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type IntermediaryAccountUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<IntermediaryAccountUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<IntermediaryAccountUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<IntermediaryAccountUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type IntermediaryAccountUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type IntermediaryAccountUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<IntermediaryAccountUpdatedByConnectionWhere>;
};

export type IntermediaryAccountUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<IntermediaryAccountUpdatedByConnectionWhere>;
};

export type IntermediaryAccountUpdatedByFieldInput = {
  connect?: InputMaybe<IntermediaryAccountUpdatedByConnectFieldInput>;
  create?: InputMaybe<IntermediaryAccountUpdatedByCreateFieldInput>;
};

export type IntermediaryAccountUpdatedByRelationship = {
  __typename?: 'IntermediaryAccountUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type IntermediaryAccountUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type IntermediaryAccountUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<IntermediaryAccountUpdatedByConnectFieldInput>;
  create?: InputMaybe<IntermediaryAccountUpdatedByCreateFieldInput>;
  delete?: InputMaybe<IntermediaryAccountUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<IntermediaryAccountUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<IntermediaryAccountUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<IntermediaryAccountUpdatedByConnectionWhere>;
};

export type IntermediaryAccountWhere = {
  AND?: InputMaybe<Array<IntermediaryAccountWhere>>;
  NOT?: InputMaybe<IntermediaryAccountWhere>;
  OR?: InputMaybe<Array<IntermediaryAccountWhere>>;
  bank?: InputMaybe<BankWhere>;
  bankAggregate?: InputMaybe<IntermediaryAccountBankAggregateInput>;
  bankConnection?: InputMaybe<IntermediaryAccountBankConnectionWhere>;
  bankConnection_NOT?: InputMaybe<IntermediaryAccountBankConnectionWhere>;
  bankName?: InputMaybe<Scalars['String']>;
  bankName_CONTAINS?: InputMaybe<Scalars['String']>;
  bankName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  bankName_IN?: InputMaybe<Array<Scalars['String']>>;
  bankName_MATCHES?: InputMaybe<Scalars['String']>;
  bankName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  bank_NOT?: InputMaybe<BankWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<IntermediaryAccountCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<IntermediaryAccountCreatedByConnectionWhere>;
  currency?: InputMaybe<Scalars['String']>;
  currency_CONTAINS?: InputMaybe<Scalars['String']>;
  currency_ENDS_WITH?: InputMaybe<Scalars['String']>;
  currency_IN?: InputMaybe<Array<Scalars['String']>>;
  currency_MATCHES?: InputMaybe<Scalars['String']>;
  currency_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  swiftCode?: InputMaybe<Scalars['String']>;
  swiftCode_CONTAINS?: InputMaybe<Scalars['String']>;
  swiftCode_ENDS_WITH?: InputMaybe<Scalars['String']>;
  swiftCode_IN?: InputMaybe<Array<Scalars['String']>>;
  swiftCode_MATCHES?: InputMaybe<Scalars['String']>;
  swiftCode_STARTS_WITH?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<IntermediaryAccountUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<IntermediaryAccountUpdatedByConnectionWhere>;
};

export type IntermediaryAccountsConnection = {
  __typename?: 'IntermediaryAccountsConnection';
  edges: Array<IntermediaryAccountEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export enum KycStatus {
  Deactivated = 'DEACTIVATED',
  Unverified = 'UNVERIFIED',
  Verified = 'VERIFIED'
}

export type LoginOutput = {
  __typename?: 'LoginOutput';
  data?: Maybe<LoginOutputData>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type LoginOutputData = {
  __typename?: 'LoginOutputData';
  accountCreate: Scalars['Boolean'];
  accountView: Scalars['Boolean'];
  activityLogCreate: Scalars['Boolean'];
  activityLogView: Scalars['Boolean'];
  customerCreate: Scalars['Boolean'];
  customerView: Scalars['Boolean'];
  dashboardView: Scalars['Boolean'];
  depositCreate: Scalars['Boolean'];
  depositView: Scalars['Boolean'];
  email: Scalars['String'];
  mailboxCreate: Scalars['Boolean'];
  mailboxView: Scalars['Boolean'];
  merchantCreate: Scalars['Boolean'];
  merchantView: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate: Scalars['Boolean'];
  settingsView: Scalars['Boolean'];
  taskCreate: Scalars['Boolean'];
  taskView: Scalars['Boolean'];
  userCreate: Scalars['Boolean'];
  userId: Scalars['uuid'];
  userType: Scalars['String'];
  userView: Scalars['Boolean'];
  withdrawalCreate: Scalars['Boolean'];
  withdrawalView: Scalars['Boolean'];
};

export enum MaintenanceFeeCheckType {
  DepositOrWithdrawal = 'DEPOSIT_OR_WITHDRAWAL',
  OnlyDeposit = 'ONLY_DEPOSIT',
  OnlyWithdrawal = 'ONLY_WITHDRAWAL',
  Total = 'TOTAL'
}

export type MarketRegions = {
  __typename?: 'MarketRegions';
  enumValue?: Maybe<MarketRegionsType>;
  name: Scalars['String'];
};

export type MarketRegionsAggregateSelection = {
  __typename?: 'MarketRegionsAggregateSelection';
  count: Scalars['Int'];
  name: StringAggregateSelectionNonNullable;
};

export type MarketRegionsConnection = {
  __typename?: 'MarketRegionsConnection';
  edges: Array<MarketRegionsEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type MarketRegionsCreateInput = {
  enumValue?: InputMaybe<MarketRegionsType>;
  name: Scalars['String'];
};

export type MarketRegionsEdge = {
  __typename?: 'MarketRegionsEdge';
  cursor: Scalars['String'];
  node: MarketRegions;
};

export type MarketRegionsOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MarketRegionsSort objects to sort MarketRegions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MarketRegionsSort>>;
};

/** Fields to sort MarketRegions by. The order in which sorts are applied is not guaranteed when specifying many fields in one MarketRegionsSort object. */
export type MarketRegionsSort = {
  enumValue?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export enum MarketRegionsType {
  Asia = 'ASIA',
  AsiaPacific = 'ASIA_PACIFIC',
  Europe = 'EUROPE',
  Latm = 'LATM',
  Other = 'OTHER',
  Usa = 'USA'
}

export type MarketRegionsUpdateInput = {
  enumValue?: InputMaybe<MarketRegionsType>;
  name?: InputMaybe<Scalars['String']>;
};

export type MarketRegionsWhere = {
  AND?: InputMaybe<Array<MarketRegionsWhere>>;
  NOT?: InputMaybe<MarketRegionsWhere>;
  OR?: InputMaybe<Array<MarketRegionsWhere>>;
  enumValue?: InputMaybe<MarketRegionsType>;
  enumValue_IN?: InputMaybe<Array<InputMaybe<MarketRegionsType>>>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type Merchant = User & {
  __typename?: 'Merchant';
  accountCreate: Scalars['Boolean'];
  accountView: Scalars['Boolean'];
  activityLogCreate: Scalars['Boolean'];
  activityLogView: Scalars['Boolean'];
  apiKey?: Maybe<Scalars['String']>;
  beneficiaries: Array<Beneficiary>;
  beneficiariesAggregate?: Maybe<MerchantBeneficiaryBeneficiariesAggregationSelection>;
  beneficiariesConnection: MerchantBeneficiariesConnection;
  brandsCreated: Array<Brand>;
  brandsCreatedAggregate?: Maybe<MerchantBrandBrandsCreatedAggregationSelection>;
  brandsCreatedConnection: MerchantBrandsCreatedConnection;
  businesses: Array<Business>;
  businessesAggregate?: Maybe<MerchantBusinessBusinessesAggregationSelection>;
  businessesConnection: MerchantBusinessesConnection;
  businessesCreated: Array<Business>;
  businessesCreatedAggregate?: Maybe<MerchantBusinessBusinessesCreatedAggregationSelection>;
  businessesCreatedConnection: MerchantBusinessesCreatedConnection;
  country?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: UserCreatedByConnection;
  customerCreate: Scalars['Boolean'];
  customerView: Scalars['Boolean'];
  customersCreated: Array<Customer>;
  customersCreatedAggregate?: Maybe<MerchantCustomerCustomersCreatedAggregationSelection>;
  customersCreatedConnection: UserCustomersCreatedConnection;
  dashboardView: Scalars['Boolean'];
  depositCreate: Scalars['Boolean'];
  depositView: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions: Array<FeaturePermission>;
  featurePermissionsAggregate?: Maybe<MerchantFeaturePermissionFeaturePermissionsAggregationSelection>;
  featurePermissionsConnection: UserFeaturePermissionsConnection;
  firebaseId: Scalars['String'];
  firstName: Scalars['String'];
  id: Scalars['ID'];
  isApiKeyRequired: Scalars['Boolean'];
  isWhiteLabelRequired: Scalars['Boolean'];
  kycStatus: KycStatus;
  lastName?: Maybe<Scalars['String']>;
  mailboxCreate: Scalars['Boolean'];
  mailboxView: Scalars['Boolean'];
  merchantCreate: Scalars['Boolean'];
  merchantType: MerchantType;
  merchantView: Scalars['Boolean'];
  name: Scalars['String'];
  personalDocuments: Array<PersonalDocument>;
  personalDocumentsAggregate?: Maybe<MerchantPersonalDocumentPersonalDocumentsAggregationSelection>;
  personalDocumentsConnection: MerchantPersonalDocumentsConnection;
  settingsCreate: Scalars['Boolean'];
  settingsView: Scalars['Boolean'];
  taskCreate: Scalars['Boolean'];
  taskView: Scalars['Boolean'];
  teamsCreated: Array<Team>;
  teamsCreatedAggregate?: Maybe<MerchantTeamTeamsCreatedAggregationSelection>;
  teamsCreatedConnection: UserTeamsCreatedConnection;
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: UserUpdatedByConnection;
  userCreate: Scalars['Boolean'];
  userType: UserType;
  userView: Scalars['Boolean'];
  usersCreated: Array<User>;
  usersCreatedConnection: UserUsersCreatedConnection;
  website?: Maybe<Scalars['String']>;
  withdrawalCreate: Scalars['Boolean'];
  withdrawalView: Scalars['Boolean'];
};


export type MerchantBeneficiariesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BeneficiaryOptions>;
  where?: InputMaybe<BeneficiaryWhere>;
};


export type MerchantBeneficiariesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BeneficiaryWhere>;
};


export type MerchantBeneficiariesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<MerchantBeneficiariesConnectionSort>>;
  where?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
};


export type MerchantBrandsCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type MerchantBrandsCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BrandWhere>;
};


export type MerchantBrandsCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<MerchantBrandsCreatedConnectionSort>>;
  where?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
};


export type MerchantBusinessesArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type MerchantBusinessesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type MerchantBusinessesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<MerchantBusinessesConnectionSort>>;
  where?: InputMaybe<MerchantBusinessesConnectionWhere>;
};


export type MerchantBusinessesCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type MerchantBusinessesCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type MerchantBusinessesCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<MerchantBusinessesCreatedConnectionSort>>;
  where?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
};


export type MerchantCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type MerchantCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserCreatedByConnectionSort>>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};


export type MerchantCustomersCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type MerchantCustomersCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


export type MerchantCustomersCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserCustomersCreatedConnectionSort>>;
  where?: InputMaybe<UserCustomersCreatedConnectionWhere>;
};


export type MerchantFeaturePermissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<FeaturePermissionOptions>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type MerchantFeaturePermissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type MerchantFeaturePermissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserFeaturePermissionsConnectionSort>>;
  where?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
};


export type MerchantPersonalDocumentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<PersonalDocumentOptions>;
  where?: InputMaybe<PersonalDocumentWhere>;
};


export type MerchantPersonalDocumentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<PersonalDocumentWhere>;
};


export type MerchantPersonalDocumentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<MerchantPersonalDocumentsConnectionSort>>;
  where?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
};


export type MerchantTeamsCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type MerchantTeamsCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type MerchantTeamsCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserTeamsCreatedConnectionSort>>;
  where?: InputMaybe<UserTeamsCreatedConnectionWhere>;
};


export type MerchantUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type MerchantUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserUpdatedByConnectionSort>>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};


export type MerchantUsersCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type MerchantUsersCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserUsersCreatedConnectionSort>>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type MerchantAggregateSelection = {
  __typename?: 'MerchantAggregateSelection';
  apiKey: StringAggregateSelectionNullable;
  count: Scalars['Int'];
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  lastName: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
};

export type MerchantBeneficiariesAggregateInput = {
  AND?: InputMaybe<Array<MerchantBeneficiariesAggregateInput>>;
  NOT?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  OR?: InputMaybe<Array<MerchantBeneficiariesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<MerchantBeneficiariesNodeAggregationWhereInput>;
};

export type MerchantBeneficiariesConnectFieldInput = {
  connect?: InputMaybe<Array<BeneficiaryConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BeneficiaryConnectWhere>;
};

export type MerchantBeneficiariesConnectOrCreateFieldInput = {
  onCreate: MerchantBeneficiariesConnectOrCreateFieldInputOnCreate;
  where: BeneficiaryConnectOrCreateWhere;
};

export type MerchantBeneficiariesConnectOrCreateFieldInputOnCreate = {
  node: BeneficiaryOnCreateInput;
};

export type MerchantBeneficiariesConnection = {
  __typename?: 'MerchantBeneficiariesConnection';
  edges: Array<MerchantBeneficiariesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type MerchantBeneficiariesConnectionSort = {
  node?: InputMaybe<BeneficiarySort>;
};

export type MerchantBeneficiariesConnectionWhere = {
  AND?: InputMaybe<Array<MerchantBeneficiariesConnectionWhere>>;
  NOT?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  OR?: InputMaybe<Array<MerchantBeneficiariesConnectionWhere>>;
  node?: InputMaybe<BeneficiaryWhere>;
};

export type MerchantBeneficiariesCreateFieldInput = {
  node: BeneficiaryCreateInput;
};

export type MerchantBeneficiariesDeleteFieldInput = {
  delete?: InputMaybe<BeneficiaryDeleteInput>;
  where?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
};

export type MerchantBeneficiariesDisconnectFieldInput = {
  disconnect?: InputMaybe<BeneficiaryDisconnectInput>;
  where?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
};

export type MerchantBeneficiariesFieldInput = {
  connect?: InputMaybe<Array<MerchantBeneficiariesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantBeneficiariesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantBeneficiariesCreateFieldInput>>;
};

export type MerchantBeneficiariesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MerchantBeneficiariesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MerchantBeneficiariesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MerchantBeneficiariesNodeAggregationWhereInput>>;
  accountNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  accountNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  accountNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  accountNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  accountNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankCountry_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankCountry_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankCountry_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankCountry_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankCountry_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankCountry_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankCountry_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankCountry_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankCountry_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankCountry_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankCountry_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  bankName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  bankName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  bankName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryCountry_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryCountry_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  beneficiaryName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  beneficiaryName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  beneficiaryName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  beneficiaryName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  beneficiaryName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  beneficiaryName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  currency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  currency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  currency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  currency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankRemarks_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankRemarks_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  intermediaryBankSwift_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  intermediaryBankSwift_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  remarks_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  remarks_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  remarks_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  remarks_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  remarks_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  remarks_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  remarks_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  remarks_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  remarks_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  remarks_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  remarks_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  swiftCode_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  swiftCode_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  swiftCode_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type MerchantBeneficiariesRelationship = {
  __typename?: 'MerchantBeneficiariesRelationship';
  cursor: Scalars['String'];
  node: Beneficiary;
};

export type MerchantBeneficiariesUpdateConnectionInput = {
  node?: InputMaybe<BeneficiaryUpdateInput>;
};

export type MerchantBeneficiariesUpdateFieldInput = {
  connect?: InputMaybe<Array<MerchantBeneficiariesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantBeneficiariesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantBeneficiariesCreateFieldInput>>;
  delete?: InputMaybe<Array<MerchantBeneficiariesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<MerchantBeneficiariesDisconnectFieldInput>>;
  update?: InputMaybe<MerchantBeneficiariesUpdateConnectionInput>;
  where?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
};

export type MerchantBeneficiaryBeneficiariesAggregationSelection = {
  __typename?: 'MerchantBeneficiaryBeneficiariesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<MerchantBeneficiaryBeneficiariesNodeAggregateSelection>;
};

export type MerchantBeneficiaryBeneficiariesNodeAggregateSelection = {
  __typename?: 'MerchantBeneficiaryBeneficiariesNodeAggregateSelection';
  accountNumber: StringAggregateSelectionNonNullable;
  bankAddress: StringAggregateSelectionNullable;
  bankCountry: StringAggregateSelectionNullable;
  bankName: StringAggregateSelectionNonNullable;
  beneficiaryAddress: StringAggregateSelectionNullable;
  beneficiaryCountry: StringAggregateSelectionNullable;
  beneficiaryName: StringAggregateSelectionNonNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  currency: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  intermediaryBankAddress: StringAggregateSelectionNullable;
  intermediaryBankName: StringAggregateSelectionNullable;
  intermediaryBankRemarks: StringAggregateSelectionNullable;
  intermediaryBankSwift: StringAggregateSelectionNullable;
  remarks: StringAggregateSelectionNullable;
  swiftCode: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type MerchantBrandBrandsCreatedAggregationSelection = {
  __typename?: 'MerchantBrandBrandsCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<MerchantBrandBrandsCreatedNodeAggregateSelection>;
};

export type MerchantBrandBrandsCreatedNodeAggregateSelection = {
  __typename?: 'MerchantBrandBrandsCreatedNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type MerchantBrandsCreatedAggregateInput = {
  AND?: InputMaybe<Array<MerchantBrandsCreatedAggregateInput>>;
  NOT?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  OR?: InputMaybe<Array<MerchantBrandsCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<MerchantBrandsCreatedNodeAggregationWhereInput>;
};

export type MerchantBrandsCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<BrandConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BrandConnectWhere>;
};

export type MerchantBrandsCreatedConnectOrCreateFieldInput = {
  onCreate: MerchantBrandsCreatedConnectOrCreateFieldInputOnCreate;
  where: BrandConnectOrCreateWhere;
};

export type MerchantBrandsCreatedConnectOrCreateFieldInputOnCreate = {
  node: BrandOnCreateInput;
};

export type MerchantBrandsCreatedConnection = {
  __typename?: 'MerchantBrandsCreatedConnection';
  edges: Array<MerchantBrandsCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type MerchantBrandsCreatedConnectionSort = {
  node?: InputMaybe<BrandSort>;
};

export type MerchantBrandsCreatedConnectionWhere = {
  AND?: InputMaybe<Array<MerchantBrandsCreatedConnectionWhere>>;
  NOT?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  OR?: InputMaybe<Array<MerchantBrandsCreatedConnectionWhere>>;
  node?: InputMaybe<BrandWhere>;
};

export type MerchantBrandsCreatedCreateFieldInput = {
  node: BrandCreateInput;
};

export type MerchantBrandsCreatedDeleteFieldInput = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
};

export type MerchantBrandsCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<BrandDisconnectInput>;
  where?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
};

export type MerchantBrandsCreatedFieldInput = {
  connect?: InputMaybe<Array<MerchantBrandsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantBrandsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantBrandsCreatedCreateFieldInput>>;
};

export type MerchantBrandsCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MerchantBrandsCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MerchantBrandsCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MerchantBrandsCreatedNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type MerchantBrandsCreatedRelationship = {
  __typename?: 'MerchantBrandsCreatedRelationship';
  cursor: Scalars['String'];
  node: Brand;
};

export type MerchantBrandsCreatedUpdateConnectionInput = {
  node?: InputMaybe<BrandUpdateInput>;
};

export type MerchantBrandsCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<MerchantBrandsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantBrandsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantBrandsCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<MerchantBrandsCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<MerchantBrandsCreatedDisconnectFieldInput>>;
  update?: InputMaybe<MerchantBrandsCreatedUpdateConnectionInput>;
  where?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
};

export type MerchantBusinessBusinessesAggregationSelection = {
  __typename?: 'MerchantBusinessBusinessesAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<MerchantBusinessBusinessesNodeAggregateSelection>;
};

export type MerchantBusinessBusinessesCreatedAggregationSelection = {
  __typename?: 'MerchantBusinessBusinessesCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<MerchantBusinessBusinessesCreatedNodeAggregateSelection>;
};

export type MerchantBusinessBusinessesCreatedNodeAggregateSelection = {
  __typename?: 'MerchantBusinessBusinessesCreatedNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type MerchantBusinessBusinessesNodeAggregateSelection = {
  __typename?: 'MerchantBusinessBusinessesNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type MerchantBusinessesAggregateInput = {
  AND?: InputMaybe<Array<MerchantBusinessesAggregateInput>>;
  NOT?: InputMaybe<MerchantBusinessesAggregateInput>;
  OR?: InputMaybe<Array<MerchantBusinessesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<MerchantBusinessesNodeAggregationWhereInput>;
};

export type MerchantBusinessesConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type MerchantBusinessesConnectOrCreateFieldInput = {
  onCreate: MerchantBusinessesConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type MerchantBusinessesConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type MerchantBusinessesConnection = {
  __typename?: 'MerchantBusinessesConnection';
  edges: Array<MerchantBusinessesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type MerchantBusinessesConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type MerchantBusinessesConnectionWhere = {
  AND?: InputMaybe<Array<MerchantBusinessesConnectionWhere>>;
  NOT?: InputMaybe<MerchantBusinessesConnectionWhere>;
  OR?: InputMaybe<Array<MerchantBusinessesConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type MerchantBusinessesCreateFieldInput = {
  node: BusinessCreateInput;
};

export type MerchantBusinessesCreatedAggregateInput = {
  AND?: InputMaybe<Array<MerchantBusinessesCreatedAggregateInput>>;
  NOT?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  OR?: InputMaybe<Array<MerchantBusinessesCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<MerchantBusinessesCreatedNodeAggregationWhereInput>;
};

export type MerchantBusinessesCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type MerchantBusinessesCreatedConnectOrCreateFieldInput = {
  onCreate: MerchantBusinessesCreatedConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type MerchantBusinessesCreatedConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type MerchantBusinessesCreatedConnection = {
  __typename?: 'MerchantBusinessesCreatedConnection';
  edges: Array<MerchantBusinessesCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type MerchantBusinessesCreatedConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type MerchantBusinessesCreatedConnectionWhere = {
  AND?: InputMaybe<Array<MerchantBusinessesCreatedConnectionWhere>>;
  NOT?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  OR?: InputMaybe<Array<MerchantBusinessesCreatedConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type MerchantBusinessesCreatedCreateFieldInput = {
  node: BusinessCreateInput;
};

export type MerchantBusinessesCreatedDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
};

export type MerchantBusinessesCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
};

export type MerchantBusinessesCreatedFieldInput = {
  connect?: InputMaybe<Array<MerchantBusinessesCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantBusinessesCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantBusinessesCreatedCreateFieldInput>>;
};

export type MerchantBusinessesCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MerchantBusinessesCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MerchantBusinessesCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MerchantBusinessesCreatedNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type MerchantBusinessesCreatedRelationship = {
  __typename?: 'MerchantBusinessesCreatedRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type MerchantBusinessesCreatedUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type MerchantBusinessesCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<MerchantBusinessesCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantBusinessesCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantBusinessesCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<MerchantBusinessesCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<MerchantBusinessesCreatedDisconnectFieldInput>>;
  update?: InputMaybe<MerchantBusinessesCreatedUpdateConnectionInput>;
  where?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
};

export type MerchantBusinessesDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<MerchantBusinessesConnectionWhere>;
};

export type MerchantBusinessesDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<MerchantBusinessesConnectionWhere>;
};

export type MerchantBusinessesFieldInput = {
  connect?: InputMaybe<Array<MerchantBusinessesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantBusinessesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantBusinessesCreateFieldInput>>;
};

export type MerchantBusinessesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MerchantBusinessesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MerchantBusinessesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MerchantBusinessesNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type MerchantBusinessesRelationship = {
  __typename?: 'MerchantBusinessesRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type MerchantBusinessesUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type MerchantBusinessesUpdateFieldInput = {
  connect?: InputMaybe<Array<MerchantBusinessesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantBusinessesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantBusinessesCreateFieldInput>>;
  delete?: InputMaybe<Array<MerchantBusinessesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<MerchantBusinessesDisconnectFieldInput>>;
  update?: InputMaybe<MerchantBusinessesUpdateConnectionInput>;
  where?: InputMaybe<MerchantBusinessesConnectionWhere>;
};

export type MerchantConnectInput = {
  beneficiaries?: InputMaybe<Array<MerchantBeneficiariesConnectFieldInput>>;
  brandsCreated?: InputMaybe<Array<MerchantBrandsCreatedConnectFieldInput>>;
  businesses?: InputMaybe<Array<MerchantBusinessesConnectFieldInput>>;
  businessesCreated?: InputMaybe<Array<MerchantBusinessesCreatedConnectFieldInput>>;
  createdBy?: InputMaybe<MerchantCreatedByConnectFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedConnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectFieldInput>>;
  personalDocuments?: InputMaybe<Array<MerchantPersonalDocumentsConnectFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedConnectFieldInput>>;
  updatedBy?: InputMaybe<MerchantUpdatedByConnectFieldInput>;
  usersCreated?: InputMaybe<Array<MerchantUsersCreatedConnectFieldInput>>;
};

export type MerchantConnectOrCreateInput = {
  beneficiaries?: InputMaybe<Array<MerchantBeneficiariesConnectOrCreateFieldInput>>;
  brandsCreated?: InputMaybe<Array<MerchantBrandsCreatedConnectOrCreateFieldInput>>;
  businesses?: InputMaybe<Array<MerchantBusinessesConnectOrCreateFieldInput>>;
  businessesCreated?: InputMaybe<Array<MerchantBusinessesCreatedConnectOrCreateFieldInput>>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedConnectOrCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectOrCreateFieldInput>>;
  personalDocuments?: InputMaybe<Array<MerchantPersonalDocumentsConnectOrCreateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedConnectOrCreateFieldInput>>;
};

export type MerchantConnectOrCreateWhere = {
  node: MerchantUniqueWhere;
};

export type MerchantConnectWhere = {
  node: MerchantWhere;
};

export type MerchantCreateInput = {
  accountCreate?: Scalars['Boolean'];
  accountView?: Scalars['Boolean'];
  activityLogCreate?: Scalars['Boolean'];
  activityLogView?: Scalars['Boolean'];
  apiKey?: InputMaybe<Scalars['String']>;
  beneficiaries?: InputMaybe<MerchantBeneficiariesFieldInput>;
  brandsCreated?: InputMaybe<MerchantBrandsCreatedFieldInput>;
  businesses?: InputMaybe<MerchantBusinessesFieldInput>;
  businessesCreated?: InputMaybe<MerchantBusinessesCreatedFieldInput>;
  country?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<UserCreatedByFieldInput>;
  customerCreate?: Scalars['Boolean'];
  customerView?: Scalars['Boolean'];
  customersCreated?: InputMaybe<UserCustomersCreatedFieldInput>;
  dashboardView?: Scalars['Boolean'];
  depositCreate?: Scalars['Boolean'];
  depositView?: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions?: InputMaybe<UserFeaturePermissionsFieldInput>;
  firebaseId: Scalars['String'];
  firstName: Scalars['String'];
  isApiKeyRequired?: Scalars['Boolean'];
  isWhiteLabelRequired?: Scalars['Boolean'];
  kycStatus?: KycStatus;
  lastName?: InputMaybe<Scalars['String']>;
  mailboxCreate?: Scalars['Boolean'];
  mailboxView?: Scalars['Boolean'];
  merchantCreate?: Scalars['Boolean'];
  merchantType?: MerchantType;
  merchantView?: Scalars['Boolean'];
  personalDocuments?: InputMaybe<MerchantPersonalDocumentsFieldInput>;
  settingsCreate?: Scalars['Boolean'];
  settingsView?: Scalars['Boolean'];
  taskCreate?: Scalars['Boolean'];
  taskView?: Scalars['Boolean'];
  teamsCreated?: InputMaybe<UserTeamsCreatedFieldInput>;
  updatedBy?: InputMaybe<UserUpdatedByFieldInput>;
  userCreate?: Scalars['Boolean'];
  userType?: UserType;
  userView?: Scalars['Boolean'];
  usersCreated?: InputMaybe<UserUsersCreatedFieldInput>;
  website?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: Scalars['Boolean'];
  withdrawalView?: Scalars['Boolean'];
};

export type MerchantCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type MerchantCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type MerchantCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type MerchantCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type MerchantCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type MerchantCreatedByUpdateFieldInput = {
  connect?: InputMaybe<MerchantCreatedByConnectFieldInput>;
  create?: InputMaybe<MerchantCreatedByCreateFieldInput>;
  delete?: InputMaybe<MerchantCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<MerchantCreatedByDisconnectFieldInput>;
  update?: InputMaybe<MerchantCreatedByUpdateConnectionInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type MerchantCustomerCustomersCreatedAggregationSelection = {
  __typename?: 'MerchantCustomerCustomersCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<MerchantCustomerCustomersCreatedNodeAggregateSelection>;
};

export type MerchantCustomerCustomersCreatedNodeAggregateSelection = {
  __typename?: 'MerchantCustomerCustomersCreatedNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type MerchantCustomersCreatedAggregateInput = {
  AND?: InputMaybe<Array<MerchantCustomersCreatedAggregateInput>>;
  NOT?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  OR?: InputMaybe<Array<MerchantCustomersCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<MerchantCustomersCreatedNodeAggregationWhereInput>;
};

export type MerchantCustomersCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MerchantCustomersCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MerchantCustomersCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MerchantCustomersCreatedNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type MerchantDeleteInput = {
  beneficiaries?: InputMaybe<Array<MerchantBeneficiariesDeleteFieldInput>>;
  brandsCreated?: InputMaybe<Array<MerchantBrandsCreatedDeleteFieldInput>>;
  businesses?: InputMaybe<Array<MerchantBusinessesDeleteFieldInput>>;
  businessesCreated?: InputMaybe<Array<MerchantBusinessesCreatedDeleteFieldInput>>;
  createdBy?: InputMaybe<MerchantCreatedByDeleteFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedDeleteFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDeleteFieldInput>>;
  personalDocuments?: InputMaybe<Array<MerchantPersonalDocumentsDeleteFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedDeleteFieldInput>>;
  updatedBy?: InputMaybe<MerchantUpdatedByDeleteFieldInput>;
  usersCreated?: InputMaybe<Array<MerchantUsersCreatedDeleteFieldInput>>;
};

export type MerchantDetail = {
  country?: InputMaybe<Scalars['String']>;
  email: Scalars['String'];
  firstName: Scalars['String'];
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Scalars['String']>;
  merchantType?: InputMaybe<Scalars['String']>;
  password: Scalars['String'];
};

export type MerchantDisconnectInput = {
  beneficiaries?: InputMaybe<Array<MerchantBeneficiariesDisconnectFieldInput>>;
  brandsCreated?: InputMaybe<Array<MerchantBrandsCreatedDisconnectFieldInput>>;
  businesses?: InputMaybe<Array<MerchantBusinessesDisconnectFieldInput>>;
  businessesCreated?: InputMaybe<Array<MerchantBusinessesCreatedDisconnectFieldInput>>;
  createdBy?: InputMaybe<MerchantCreatedByDisconnectFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedDisconnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDisconnectFieldInput>>;
  personalDocuments?: InputMaybe<Array<MerchantPersonalDocumentsDisconnectFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedDisconnectFieldInput>>;
  updatedBy?: InputMaybe<MerchantUpdatedByDisconnectFieldInput>;
  usersCreated?: InputMaybe<Array<MerchantUsersCreatedDisconnectFieldInput>>;
};

export type MerchantEdge = {
  __typename?: 'MerchantEdge';
  cursor: Scalars['String'];
  node: Merchant;
};

export type MerchantFeaturePermissionFeaturePermissionsAggregationSelection = {
  __typename?: 'MerchantFeaturePermissionFeaturePermissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<MerchantFeaturePermissionFeaturePermissionsNodeAggregateSelection>;
};

export type MerchantFeaturePermissionFeaturePermissionsNodeAggregateSelection = {
  __typename?: 'MerchantFeaturePermissionFeaturePermissionsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type MerchantFeaturePermissionsAggregateInput = {
  AND?: InputMaybe<Array<MerchantFeaturePermissionsAggregateInput>>;
  NOT?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  OR?: InputMaybe<Array<MerchantFeaturePermissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<MerchantFeaturePermissionsNodeAggregationWhereInput>;
};

export type MerchantFeaturePermissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MerchantFeaturePermissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MerchantFeaturePermissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MerchantFeaturePermissionsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type MerchantOnCreateInput = {
  accountCreate?: Scalars['Boolean'];
  accountView?: Scalars['Boolean'];
  activityLogCreate?: Scalars['Boolean'];
  activityLogView?: Scalars['Boolean'];
  apiKey?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  customerCreate?: Scalars['Boolean'];
  customerView?: Scalars['Boolean'];
  dashboardView?: Scalars['Boolean'];
  depositCreate?: Scalars['Boolean'];
  depositView?: Scalars['Boolean'];
  email: Scalars['String'];
  firebaseId: Scalars['String'];
  firstName: Scalars['String'];
  isApiKeyRequired?: Scalars['Boolean'];
  isWhiteLabelRequired?: Scalars['Boolean'];
  kycStatus?: KycStatus;
  lastName?: InputMaybe<Scalars['String']>;
  mailboxCreate?: Scalars['Boolean'];
  mailboxView?: Scalars['Boolean'];
  merchantCreate?: Scalars['Boolean'];
  merchantType?: MerchantType;
  merchantView?: Scalars['Boolean'];
  settingsCreate?: Scalars['Boolean'];
  settingsView?: Scalars['Boolean'];
  taskCreate?: Scalars['Boolean'];
  taskView?: Scalars['Boolean'];
  userCreate?: Scalars['Boolean'];
  userType?: UserType;
  userView?: Scalars['Boolean'];
  website?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: Scalars['Boolean'];
  withdrawalView?: Scalars['Boolean'];
};

export type MerchantOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MerchantSort objects to sort Merchants by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MerchantSort>>;
};

export type MerchantOptions_Remote_Rel_ActivityLogsactionByMerchant = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MerchantSort objects to sort Merchants by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MerchantSort>>;
};

export type MerchantOptions_Remote_Rel_DepositscreatedByMerchant = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MerchantSort objects to sort Merchants by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MerchantSort>>;
};

export type MerchantOptions_Remote_Rel_DepositsupdatedByMerchant = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MerchantSort objects to sort Merchants by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MerchantSort>>;
};

export type MerchantOptions_Remote_Rel_TaskscreatedByMerchant = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MerchantSort objects to sort Merchants by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MerchantSort>>;
};

export type MerchantOptions_Remote_Rel_TasksupdatedByMerchant = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MerchantSort objects to sort Merchants by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MerchantSort>>;
};

export type MerchantOptions_Remote_Rel_WithdrawalscreatedByMerchant = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MerchantSort objects to sort Merchants by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MerchantSort>>;
};

export type MerchantOptions_Remote_Rel_WithdrawalsupdatedByMerchant = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more MerchantSort objects to sort Merchants by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MerchantSort>>;
};

export type MerchantPersonalDocumentPersonalDocumentsAggregationSelection = {
  __typename?: 'MerchantPersonalDocumentPersonalDocumentsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<MerchantPersonalDocumentPersonalDocumentsNodeAggregateSelection>;
};

export type MerchantPersonalDocumentPersonalDocumentsNodeAggregateSelection = {
  __typename?: 'MerchantPersonalDocumentPersonalDocumentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  url: StringAggregateSelectionNonNullable;
};

export type MerchantPersonalDocumentsAggregateInput = {
  AND?: InputMaybe<Array<MerchantPersonalDocumentsAggregateInput>>;
  NOT?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  OR?: InputMaybe<Array<MerchantPersonalDocumentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<MerchantPersonalDocumentsNodeAggregationWhereInput>;
};

export type MerchantPersonalDocumentsConnectFieldInput = {
  connect?: InputMaybe<Array<PersonalDocumentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<PersonalDocumentConnectWhere>;
};

export type MerchantPersonalDocumentsConnectOrCreateFieldInput = {
  onCreate: MerchantPersonalDocumentsConnectOrCreateFieldInputOnCreate;
  where: PersonalDocumentConnectOrCreateWhere;
};

export type MerchantPersonalDocumentsConnectOrCreateFieldInputOnCreate = {
  node: PersonalDocumentOnCreateInput;
};

export type MerchantPersonalDocumentsConnection = {
  __typename?: 'MerchantPersonalDocumentsConnection';
  edges: Array<MerchantPersonalDocumentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type MerchantPersonalDocumentsConnectionSort = {
  node?: InputMaybe<PersonalDocumentSort>;
};

export type MerchantPersonalDocumentsConnectionWhere = {
  AND?: InputMaybe<Array<MerchantPersonalDocumentsConnectionWhere>>;
  NOT?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  OR?: InputMaybe<Array<MerchantPersonalDocumentsConnectionWhere>>;
  node?: InputMaybe<PersonalDocumentWhere>;
};

export type MerchantPersonalDocumentsCreateFieldInput = {
  node: PersonalDocumentCreateInput;
};

export type MerchantPersonalDocumentsDeleteFieldInput = {
  delete?: InputMaybe<PersonalDocumentDeleteInput>;
  where?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
};

export type MerchantPersonalDocumentsDisconnectFieldInput = {
  disconnect?: InputMaybe<PersonalDocumentDisconnectInput>;
  where?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
};

export type MerchantPersonalDocumentsFieldInput = {
  connect?: InputMaybe<Array<MerchantPersonalDocumentsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantPersonalDocumentsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantPersonalDocumentsCreateFieldInput>>;
};

export type MerchantPersonalDocumentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MerchantPersonalDocumentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MerchantPersonalDocumentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MerchantPersonalDocumentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type MerchantPersonalDocumentsRelationship = {
  __typename?: 'MerchantPersonalDocumentsRelationship';
  cursor: Scalars['String'];
  node: PersonalDocument;
};

export type MerchantPersonalDocumentsUpdateConnectionInput = {
  node?: InputMaybe<PersonalDocumentUpdateInput>;
};

export type MerchantPersonalDocumentsUpdateFieldInput = {
  connect?: InputMaybe<Array<MerchantPersonalDocumentsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<MerchantPersonalDocumentsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<MerchantPersonalDocumentsCreateFieldInput>>;
  delete?: InputMaybe<Array<MerchantPersonalDocumentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<MerchantPersonalDocumentsDisconnectFieldInput>>;
  update?: InputMaybe<MerchantPersonalDocumentsUpdateConnectionInput>;
  where?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
};

export type MerchantRelationInput = {
  beneficiaries?: InputMaybe<Array<MerchantBeneficiariesCreateFieldInput>>;
  brandsCreated?: InputMaybe<Array<MerchantBrandsCreatedCreateFieldInput>>;
  businesses?: InputMaybe<Array<MerchantBusinessesCreateFieldInput>>;
  businessesCreated?: InputMaybe<Array<MerchantBusinessesCreatedCreateFieldInput>>;
  createdBy?: InputMaybe<MerchantCreatedByCreateFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsCreateFieldInput>>;
  personalDocuments?: InputMaybe<Array<MerchantPersonalDocumentsCreateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedCreateFieldInput>>;
  updatedBy?: InputMaybe<MerchantUpdatedByCreateFieldInput>;
  usersCreated?: InputMaybe<Array<MerchantUsersCreatedCreateFieldInput>>;
};

/** Fields to sort Merchants by. The order in which sorts are applied is not guaranteed when specifying many fields in one MerchantSort object. */
export type MerchantSort = {
  accountCreate?: InputMaybe<SortDirection>;
  accountView?: InputMaybe<SortDirection>;
  activityLogCreate?: InputMaybe<SortDirection>;
  activityLogView?: InputMaybe<SortDirection>;
  apiKey?: InputMaybe<SortDirection>;
  country?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  customerCreate?: InputMaybe<SortDirection>;
  customerView?: InputMaybe<SortDirection>;
  dashboardView?: InputMaybe<SortDirection>;
  depositCreate?: InputMaybe<SortDirection>;
  depositView?: InputMaybe<SortDirection>;
  email?: InputMaybe<SortDirection>;
  firebaseId?: InputMaybe<SortDirection>;
  firstName?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isApiKeyRequired?: InputMaybe<SortDirection>;
  isWhiteLabelRequired?: InputMaybe<SortDirection>;
  kycStatus?: InputMaybe<SortDirection>;
  lastName?: InputMaybe<SortDirection>;
  mailboxCreate?: InputMaybe<SortDirection>;
  mailboxView?: InputMaybe<SortDirection>;
  merchantCreate?: InputMaybe<SortDirection>;
  merchantType?: InputMaybe<SortDirection>;
  merchantView?: InputMaybe<SortDirection>;
  settingsCreate?: InputMaybe<SortDirection>;
  settingsView?: InputMaybe<SortDirection>;
  taskCreate?: InputMaybe<SortDirection>;
  taskView?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  userCreate?: InputMaybe<SortDirection>;
  userType?: InputMaybe<SortDirection>;
  userView?: InputMaybe<SortDirection>;
  website?: InputMaybe<SortDirection>;
  withdrawalCreate?: InputMaybe<SortDirection>;
  withdrawalView?: InputMaybe<SortDirection>;
};

export type MerchantTeamTeamsCreatedAggregationSelection = {
  __typename?: 'MerchantTeamTeamsCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<MerchantTeamTeamsCreatedNodeAggregateSelection>;
};

export type MerchantTeamTeamsCreatedNodeAggregateSelection = {
  __typename?: 'MerchantTeamTeamsCreatedNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type MerchantTeamsCreatedAggregateInput = {
  AND?: InputMaybe<Array<MerchantTeamsCreatedAggregateInput>>;
  NOT?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  OR?: InputMaybe<Array<MerchantTeamsCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<MerchantTeamsCreatedNodeAggregationWhereInput>;
};

export type MerchantTeamsCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MerchantTeamsCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MerchantTeamsCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MerchantTeamsCreatedNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export enum MerchantType {
  Merchant = 'MERCHANT',
  Partner = 'PARTNER',
  Psp = 'PSP'
}

export type MerchantUniqueWhere = {
  email?: InputMaybe<Scalars['String']>;
  firebaseId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

export type MerchantUpdateInput = {
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  beneficiaries?: InputMaybe<Array<MerchantBeneficiariesUpdateFieldInput>>;
  brandsCreated?: InputMaybe<Array<MerchantBrandsCreatedUpdateFieldInput>>;
  businesses?: InputMaybe<Array<MerchantBusinessesUpdateFieldInput>>;
  businessesCreated?: InputMaybe<Array<MerchantBusinessesCreatedUpdateFieldInput>>;
  country?: InputMaybe<Scalars['String']>;
  createdBy?: InputMaybe<MerchantCreatedByUpdateFieldInput>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedUpdateFieldInput>>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsUpdateFieldInput>>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  lastName?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocuments?: InputMaybe<Array<MerchantPersonalDocumentsUpdateFieldInput>>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedUpdateFieldInput>>;
  updatedBy?: InputMaybe<MerchantUpdatedByUpdateFieldInput>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userView?: InputMaybe<Scalars['Boolean']>;
  usersCreated?: InputMaybe<Array<MerchantUsersCreatedUpdateFieldInput>>;
  website?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type MerchantUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type MerchantUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type MerchantUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type MerchantUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type MerchantUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<MerchantUpdatedByConnectFieldInput>;
  create?: InputMaybe<MerchantUpdatedByCreateFieldInput>;
  delete?: InputMaybe<MerchantUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<MerchantUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<MerchantUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type MerchantUsersCreatedConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type MerchantUsersCreatedCreateFieldInput = {
  node: UserCreateInput;
};

export type MerchantUsersCreatedDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type MerchantUsersCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type MerchantUsersCreatedUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type MerchantUsersCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<MerchantUsersCreatedConnectFieldInput>>;
  create?: InputMaybe<Array<MerchantUsersCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<MerchantUsersCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<MerchantUsersCreatedDisconnectFieldInput>>;
  update?: InputMaybe<MerchantUsersCreatedUpdateConnectionInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type MerchantWhere = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantWhere_Remote_Rel_ActivityLogsactionByMerchant = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantWhere_Remote_Rel_DepositscreatedByMerchant = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantWhere_Remote_Rel_DepositsupdatedByMerchant = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantWhere_Remote_Rel_Messagesmerchant = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantWhere_Remote_Rel_TaskscreatedByMerchant = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantWhere_Remote_Rel_TasksupdatedByMerchant = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantWhere_Remote_Rel_WithdrawalscreatedByMerchant = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantWhere_Remote_Rel_WithdrawalsupdatedByMerchant = {
  AND?: InputMaybe<Array<MerchantWhere>>;
  NOT?: InputMaybe<MerchantWhere>;
  OR?: InputMaybe<Array<MerchantWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  apiKey?: InputMaybe<Scalars['String']>;
  apiKey_CONTAINS?: InputMaybe<Scalars['String']>;
  apiKey_ENDS_WITH?: InputMaybe<Scalars['String']>;
  apiKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  apiKey_MATCHES?: InputMaybe<Scalars['String']>;
  apiKey_STARTS_WITH?: InputMaybe<Scalars['String']>;
  beneficiariesAggregate?: InputMaybe<MerchantBeneficiariesAggregateInput>;
  /** Return Merchants where all of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_ALL?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_NONE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SINGLE?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBeneficiariesConnections match this filter */
  beneficiariesConnection_SOME?: InputMaybe<MerchantBeneficiariesConnectionWhere>;
  /** Return Merchants where all of the related Beneficiaries match this filter */
  beneficiaries_ALL?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where none of the related Beneficiaries match this filter */
  beneficiaries_NONE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where one of the related Beneficiaries match this filter */
  beneficiaries_SINGLE?: InputMaybe<BeneficiaryWhere>;
  /** Return Merchants where some of the related Beneficiaries match this filter */
  beneficiaries_SOME?: InputMaybe<BeneficiaryWhere>;
  brandsCreatedAggregate?: InputMaybe<MerchantBrandsCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<MerchantBrandsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return Merchants where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return Merchants where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Merchants where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesAggregate?: InputMaybe<MerchantBusinessesAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesConnections match this filter */
  businessesConnection_ALL?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesConnections match this filter */
  businessesConnection_NONE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SINGLE?: InputMaybe<MerchantBusinessesConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesConnections match this filter */
  businessesConnection_SOME?: InputMaybe<MerchantBusinessesConnectionWhere>;
  businessesCreatedAggregate?: InputMaybe<MerchantBusinessesCreatedAggregateInput>;
  /** Return Merchants where all of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where none of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where one of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where some of the related MerchantBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<MerchantBusinessesCreatedConnectionWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  /** Return Merchants where all of the related Businesses match this filter */
  businesses_ALL?: InputMaybe<BusinessWhere>;
  /** Return Merchants where none of the related Businesses match this filter */
  businesses_NONE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where one of the related Businesses match this filter */
  businesses_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return Merchants where some of the related Businesses match this filter */
  businesses_SOME?: InputMaybe<BusinessWhere>;
  country?: InputMaybe<Scalars['String']>;
  country_CONTAINS?: InputMaybe<Scalars['String']>;
  country_ENDS_WITH?: InputMaybe<Scalars['String']>;
  country_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  country_MATCHES?: InputMaybe<Scalars['String']>;
  country_STARTS_WITH?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<MerchantCustomersCreatedAggregateInput>;
  /** Return Merchants where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return Merchants where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return Merchants where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Merchants where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<MerchantFeaturePermissionsAggregateInput>;
  /** Return Merchants where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Merchants where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Merchants where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  firstName?: InputMaybe<Scalars['String']>;
  firstName_CONTAINS?: InputMaybe<Scalars['String']>;
  firstName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firstName_IN?: InputMaybe<Array<Scalars['String']>>;
  firstName_MATCHES?: InputMaybe<Scalars['String']>;
  firstName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isApiKeyRequired?: InputMaybe<Scalars['Boolean']>;
  isWhiteLabelRequired?: InputMaybe<Scalars['Boolean']>;
  kycStatus?: InputMaybe<KycStatus>;
  kycStatus_IN?: InputMaybe<Array<KycStatus>>;
  lastName?: InputMaybe<Scalars['String']>;
  lastName_CONTAINS?: InputMaybe<Scalars['String']>;
  lastName_ENDS_WITH?: InputMaybe<Scalars['String']>;
  lastName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lastName_MATCHES?: InputMaybe<Scalars['String']>;
  lastName_STARTS_WITH?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantType?: InputMaybe<MerchantType>;
  merchantType_IN?: InputMaybe<Array<MerchantType>>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  personalDocumentsAggregate?: InputMaybe<MerchantPersonalDocumentsAggregateInput>;
  /** Return Merchants where all of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_ALL?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where none of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_NONE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where one of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SINGLE?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where some of the related MerchantPersonalDocumentsConnections match this filter */
  personalDocumentsConnection_SOME?: InputMaybe<MerchantPersonalDocumentsConnectionWhere>;
  /** Return Merchants where all of the related PersonalDocuments match this filter */
  personalDocuments_ALL?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where none of the related PersonalDocuments match this filter */
  personalDocuments_NONE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where one of the related PersonalDocuments match this filter */
  personalDocuments_SINGLE?: InputMaybe<PersonalDocumentWhere>;
  /** Return Merchants where some of the related PersonalDocuments match this filter */
  personalDocuments_SOME?: InputMaybe<PersonalDocumentWhere>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<MerchantTeamsCreatedAggregateInput>;
  /** Return Merchants where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return Merchants where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return Merchants where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return Merchants where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return Merchants where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return Merchants where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return Merchants where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  website?: InputMaybe<Scalars['String']>;
  website_CONTAINS?: InputMaybe<Scalars['String']>;
  website_ENDS_WITH?: InputMaybe<Scalars['String']>;
  website_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  website_MATCHES?: InputMaybe<Scalars['String']>;
  website_STARTS_WITH?: InputMaybe<Scalars['String']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantsConnection = {
  __typename?: 'MerchantsConnection';
  edges: Array<MerchantEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

/**
 *  type BusinessDocumentType {
 * 	name: String! @unique
 * 	businessDocuments: [BusinessDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type OrganisationType = {
  __typename?: 'OrganisationType';
  enumValue?: Maybe<OrganisationTypeEnum>;
  name: Scalars['String'];
};

export type OrganisationTypeAggregateSelection = {
  __typename?: 'OrganisationTypeAggregateSelection';
  count: Scalars['Int'];
  name: StringAggregateSelectionNonNullable;
};

export type OrganisationTypeCreateInput = {
  enumValue?: InputMaybe<OrganisationTypeEnum>;
  name: Scalars['String'];
};

export type OrganisationTypeEdge = {
  __typename?: 'OrganisationTypeEdge';
  cursor: Scalars['String'];
  node: OrganisationType;
};

export enum OrganisationTypeEnum {
  Corporation = 'CORPORATION',
  Llc = 'LLC',
  NonProfit = 'NON_PROFIT',
  Partnership = 'PARTNERSHIP',
  Private = 'PRIVATE',
  PublicCorporation = 'PUBLIC_CORPORATION',
  SoleProprietor = 'SOLE_PROPRIETOR'
}

export type OrganisationTypeOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more OrganisationTypeSort objects to sort OrganisationTypes by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<OrganisationTypeSort>>;
};

/** Fields to sort OrganisationTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one OrganisationTypeSort object. */
export type OrganisationTypeSort = {
  enumValue?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type OrganisationTypeUpdateInput = {
  enumValue?: InputMaybe<OrganisationTypeEnum>;
  name?: InputMaybe<Scalars['String']>;
};

export type OrganisationTypeWhere = {
  AND?: InputMaybe<Array<OrganisationTypeWhere>>;
  NOT?: InputMaybe<OrganisationTypeWhere>;
  OR?: InputMaybe<Array<OrganisationTypeWhere>>;
  enumValue?: InputMaybe<OrganisationTypeEnum>;
  enumValue_IN?: InputMaybe<Array<InputMaybe<OrganisationTypeEnum>>>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type OrganisationTypesConnection = {
  __typename?: 'OrganisationTypesConnection';
  edges: Array<OrganisationTypeEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

/** Pagination information (Relay) */
export type PageInfo = {
  __typename?: 'PageInfo';
  endCursor?: Maybe<Scalars['String']>;
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  startCursor?: Maybe<Scalars['String']>;
};

/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocument = {
  __typename?: 'PersonalDocument';
  createdAt: Scalars['DateTime'];
  createdBy: User;
  createdByConnection: PersonalDocumentCreatedByConnection;
  customers?: Maybe<Customer>;
  customersAggregate?: Maybe<PersonalDocumentCustomerCustomersAggregationSelection>;
  customersConnection: PersonalDocumentCustomersConnection;
  id: Scalars['ID'];
  isDeleted: Scalars['Boolean'];
  merchants?: Maybe<Merchant>;
  merchantsAggregate?: Maybe<PersonalDocumentMerchantMerchantsAggregationSelection>;
  merchantsConnection: PersonalDocumentMerchantsConnection;
  name?: Maybe<Scalars['String']>;
  type: PersonalDocumentTypeEnum;
  updatedAt: Scalars['DateTime'];
  updatedBy: User;
  updatedByConnection: PersonalDocumentUpdatedByConnection;
  url: Scalars['String'];
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<PersonalDocumentCreatedByConnectionSort>>;
  where?: InputMaybe<PersonalDocumentCreatedByConnectionWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentCustomersArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentCustomersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentCustomersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<PersonalDocumentCustomersConnectionSort>>;
  where?: InputMaybe<PersonalDocumentCustomersConnectionWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentMerchantsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<MerchantOptions>;
  where?: InputMaybe<MerchantWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentMerchantsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<MerchantWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentMerchantsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<PersonalDocumentMerchantsConnectionSort>>;
  where?: InputMaybe<PersonalDocumentMerchantsConnectionWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


/**
 *  type PersonalDocumentType {
 * 	name: String! @unique
 * 	personalDocuments: [PersonalDocument!]!
 * 		@relationship(type: "OF_TYPE", direction: IN)
 * }
 */
export type PersonalDocumentUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<PersonalDocumentUpdatedByConnectionSort>>;
  where?: InputMaybe<PersonalDocumentUpdatedByConnectionWhere>;
};

export type PersonalDocumentAggregateSelection = {
  __typename?: 'PersonalDocumentAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  url: StringAggregateSelectionNonNullable;
};

export type PersonalDocumentConnectInput = {
  createdBy?: InputMaybe<PersonalDocumentCreatedByConnectFieldInput>;
  customers?: InputMaybe<PersonalDocumentCustomersConnectFieldInput>;
  merchants?: InputMaybe<PersonalDocumentMerchantsConnectFieldInput>;
  updatedBy?: InputMaybe<PersonalDocumentUpdatedByConnectFieldInput>;
};

export type PersonalDocumentConnectOrCreateInput = {
  customers?: InputMaybe<PersonalDocumentCustomersConnectOrCreateFieldInput>;
  merchants?: InputMaybe<PersonalDocumentMerchantsConnectOrCreateFieldInput>;
};

export type PersonalDocumentConnectOrCreateWhere = {
  node: PersonalDocumentUniqueWhere;
};

export type PersonalDocumentConnectWhere = {
  node: PersonalDocumentWhere;
};

export type PersonalDocumentCreateInput = {
  createdBy?: InputMaybe<PersonalDocumentCreatedByFieldInput>;
  customers?: InputMaybe<PersonalDocumentCustomersFieldInput>;
  isDeleted?: Scalars['Boolean'];
  merchants?: InputMaybe<PersonalDocumentMerchantsFieldInput>;
  name?: InputMaybe<Scalars['String']>;
  type: PersonalDocumentTypeEnum;
  updatedBy?: InputMaybe<PersonalDocumentUpdatedByFieldInput>;
  url: Scalars['String'];
};

export type PersonalDocumentCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type PersonalDocumentCreatedByConnection = {
  __typename?: 'PersonalDocumentCreatedByConnection';
  edges: Array<PersonalDocumentCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type PersonalDocumentCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type PersonalDocumentCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<PersonalDocumentCreatedByConnectionWhere>>;
  NOT?: InputMaybe<PersonalDocumentCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<PersonalDocumentCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type PersonalDocumentCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type PersonalDocumentCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<PersonalDocumentCreatedByConnectionWhere>;
};

export type PersonalDocumentCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<PersonalDocumentCreatedByConnectionWhere>;
};

export type PersonalDocumentCreatedByFieldInput = {
  connect?: InputMaybe<PersonalDocumentCreatedByConnectFieldInput>;
  create?: InputMaybe<PersonalDocumentCreatedByCreateFieldInput>;
};

export type PersonalDocumentCreatedByRelationship = {
  __typename?: 'PersonalDocumentCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type PersonalDocumentCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type PersonalDocumentCreatedByUpdateFieldInput = {
  connect?: InputMaybe<PersonalDocumentCreatedByConnectFieldInput>;
  create?: InputMaybe<PersonalDocumentCreatedByCreateFieldInput>;
  delete?: InputMaybe<PersonalDocumentCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<PersonalDocumentCreatedByDisconnectFieldInput>;
  update?: InputMaybe<PersonalDocumentCreatedByUpdateConnectionInput>;
  where?: InputMaybe<PersonalDocumentCreatedByConnectionWhere>;
};

export type PersonalDocumentCustomerCustomersAggregationSelection = {
  __typename?: 'PersonalDocumentCustomerCustomersAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<PersonalDocumentCustomerCustomersNodeAggregateSelection>;
};

export type PersonalDocumentCustomerCustomersNodeAggregateSelection = {
  __typename?: 'PersonalDocumentCustomerCustomersNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type PersonalDocumentCustomersAggregateInput = {
  AND?: InputMaybe<Array<PersonalDocumentCustomersAggregateInput>>;
  NOT?: InputMaybe<PersonalDocumentCustomersAggregateInput>;
  OR?: InputMaybe<Array<PersonalDocumentCustomersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<PersonalDocumentCustomersNodeAggregationWhereInput>;
};

export type PersonalDocumentCustomersConnectFieldInput = {
  connect?: InputMaybe<CustomerConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CustomerConnectWhere>;
};

export type PersonalDocumentCustomersConnectOrCreateFieldInput = {
  onCreate: PersonalDocumentCustomersConnectOrCreateFieldInputOnCreate;
  where: CustomerConnectOrCreateWhere;
};

export type PersonalDocumentCustomersConnectOrCreateFieldInputOnCreate = {
  node: CustomerOnCreateInput;
};

export type PersonalDocumentCustomersConnection = {
  __typename?: 'PersonalDocumentCustomersConnection';
  edges: Array<PersonalDocumentCustomersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type PersonalDocumentCustomersConnectionSort = {
  node?: InputMaybe<CustomerSort>;
};

export type PersonalDocumentCustomersConnectionWhere = {
  AND?: InputMaybe<Array<PersonalDocumentCustomersConnectionWhere>>;
  NOT?: InputMaybe<PersonalDocumentCustomersConnectionWhere>;
  OR?: InputMaybe<Array<PersonalDocumentCustomersConnectionWhere>>;
  node?: InputMaybe<CustomerWhere>;
};

export type PersonalDocumentCustomersCreateFieldInput = {
  node: CustomerCreateInput;
};

export type PersonalDocumentCustomersDeleteFieldInput = {
  delete?: InputMaybe<CustomerDeleteInput>;
  where?: InputMaybe<PersonalDocumentCustomersConnectionWhere>;
};

export type PersonalDocumentCustomersDisconnectFieldInput = {
  disconnect?: InputMaybe<CustomerDisconnectInput>;
  where?: InputMaybe<PersonalDocumentCustomersConnectionWhere>;
};

export type PersonalDocumentCustomersFieldInput = {
  connect?: InputMaybe<PersonalDocumentCustomersConnectFieldInput>;
  connectOrCreate?: InputMaybe<PersonalDocumentCustomersConnectOrCreateFieldInput>;
  create?: InputMaybe<PersonalDocumentCustomersCreateFieldInput>;
};

export type PersonalDocumentCustomersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<PersonalDocumentCustomersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<PersonalDocumentCustomersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<PersonalDocumentCustomersNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type PersonalDocumentCustomersRelationship = {
  __typename?: 'PersonalDocumentCustomersRelationship';
  cursor: Scalars['String'];
  node: Customer;
};

export type PersonalDocumentCustomersUpdateConnectionInput = {
  node?: InputMaybe<CustomerUpdateInput>;
};

export type PersonalDocumentCustomersUpdateFieldInput = {
  connect?: InputMaybe<PersonalDocumentCustomersConnectFieldInput>;
  connectOrCreate?: InputMaybe<PersonalDocumentCustomersConnectOrCreateFieldInput>;
  create?: InputMaybe<PersonalDocumentCustomersCreateFieldInput>;
  delete?: InputMaybe<PersonalDocumentCustomersDeleteFieldInput>;
  disconnect?: InputMaybe<PersonalDocumentCustomersDisconnectFieldInput>;
  update?: InputMaybe<PersonalDocumentCustomersUpdateConnectionInput>;
  where?: InputMaybe<PersonalDocumentCustomersConnectionWhere>;
};

export type PersonalDocumentDeleteInput = {
  createdBy?: InputMaybe<PersonalDocumentCreatedByDeleteFieldInput>;
  customers?: InputMaybe<PersonalDocumentCustomersDeleteFieldInput>;
  merchants?: InputMaybe<PersonalDocumentMerchantsDeleteFieldInput>;
  updatedBy?: InputMaybe<PersonalDocumentUpdatedByDeleteFieldInput>;
};

export type PersonalDocumentDisconnectInput = {
  createdBy?: InputMaybe<PersonalDocumentCreatedByDisconnectFieldInput>;
  customers?: InputMaybe<PersonalDocumentCustomersDisconnectFieldInput>;
  merchants?: InputMaybe<PersonalDocumentMerchantsDisconnectFieldInput>;
  updatedBy?: InputMaybe<PersonalDocumentUpdatedByDisconnectFieldInput>;
};

export type PersonalDocumentEdge = {
  __typename?: 'PersonalDocumentEdge';
  cursor: Scalars['String'];
  node: PersonalDocument;
};

export type PersonalDocumentMerchantMerchantsAggregationSelection = {
  __typename?: 'PersonalDocumentMerchantMerchantsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<PersonalDocumentMerchantMerchantsNodeAggregateSelection>;
};

export type PersonalDocumentMerchantMerchantsNodeAggregateSelection = {
  __typename?: 'PersonalDocumentMerchantMerchantsNodeAggregateSelection';
  apiKey: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  lastName: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
};

export type PersonalDocumentMerchantsAggregateInput = {
  AND?: InputMaybe<Array<PersonalDocumentMerchantsAggregateInput>>;
  NOT?: InputMaybe<PersonalDocumentMerchantsAggregateInput>;
  OR?: InputMaybe<Array<PersonalDocumentMerchantsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<PersonalDocumentMerchantsNodeAggregationWhereInput>;
};

export type PersonalDocumentMerchantsConnectFieldInput = {
  connect?: InputMaybe<MerchantConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<MerchantConnectWhere>;
};

export type PersonalDocumentMerchantsConnectOrCreateFieldInput = {
  onCreate: PersonalDocumentMerchantsConnectOrCreateFieldInputOnCreate;
  where: MerchantConnectOrCreateWhere;
};

export type PersonalDocumentMerchantsConnectOrCreateFieldInputOnCreate = {
  node: MerchantOnCreateInput;
};

export type PersonalDocumentMerchantsConnection = {
  __typename?: 'PersonalDocumentMerchantsConnection';
  edges: Array<PersonalDocumentMerchantsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type PersonalDocumentMerchantsConnectionSort = {
  node?: InputMaybe<MerchantSort>;
};

export type PersonalDocumentMerchantsConnectionWhere = {
  AND?: InputMaybe<Array<PersonalDocumentMerchantsConnectionWhere>>;
  NOT?: InputMaybe<PersonalDocumentMerchantsConnectionWhere>;
  OR?: InputMaybe<Array<PersonalDocumentMerchantsConnectionWhere>>;
  node?: InputMaybe<MerchantWhere>;
};

export type PersonalDocumentMerchantsCreateFieldInput = {
  node: MerchantCreateInput;
};

export type PersonalDocumentMerchantsDeleteFieldInput = {
  delete?: InputMaybe<MerchantDeleteInput>;
  where?: InputMaybe<PersonalDocumentMerchantsConnectionWhere>;
};

export type PersonalDocumentMerchantsDisconnectFieldInput = {
  disconnect?: InputMaybe<MerchantDisconnectInput>;
  where?: InputMaybe<PersonalDocumentMerchantsConnectionWhere>;
};

export type PersonalDocumentMerchantsFieldInput = {
  connect?: InputMaybe<PersonalDocumentMerchantsConnectFieldInput>;
  connectOrCreate?: InputMaybe<PersonalDocumentMerchantsConnectOrCreateFieldInput>;
  create?: InputMaybe<PersonalDocumentMerchantsCreateFieldInput>;
};

export type PersonalDocumentMerchantsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<PersonalDocumentMerchantsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<PersonalDocumentMerchantsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<PersonalDocumentMerchantsNodeAggregationWhereInput>>;
  apiKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  apiKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  apiKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  apiKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  apiKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firebaseId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firebaseId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firebaseId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type PersonalDocumentMerchantsRelationship = {
  __typename?: 'PersonalDocumentMerchantsRelationship';
  cursor: Scalars['String'];
  node: Merchant;
};

export type PersonalDocumentMerchantsUpdateConnectionInput = {
  node?: InputMaybe<MerchantUpdateInput>;
};

export type PersonalDocumentMerchantsUpdateFieldInput = {
  connect?: InputMaybe<PersonalDocumentMerchantsConnectFieldInput>;
  connectOrCreate?: InputMaybe<PersonalDocumentMerchantsConnectOrCreateFieldInput>;
  create?: InputMaybe<PersonalDocumentMerchantsCreateFieldInput>;
  delete?: InputMaybe<PersonalDocumentMerchantsDeleteFieldInput>;
  disconnect?: InputMaybe<PersonalDocumentMerchantsDisconnectFieldInput>;
  update?: InputMaybe<PersonalDocumentMerchantsUpdateConnectionInput>;
  where?: InputMaybe<PersonalDocumentMerchantsConnectionWhere>;
};

export type PersonalDocumentOnCreateInput = {
  isDeleted?: Scalars['Boolean'];
  name?: InputMaybe<Scalars['String']>;
  type: PersonalDocumentTypeEnum;
  url: Scalars['String'];
};

export type PersonalDocumentOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more PersonalDocumentSort objects to sort PersonalDocuments by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<PersonalDocumentSort>>;
};

export type PersonalDocumentRelationInput = {
  createdBy?: InputMaybe<PersonalDocumentCreatedByCreateFieldInput>;
  customers?: InputMaybe<PersonalDocumentCustomersCreateFieldInput>;
  merchants?: InputMaybe<PersonalDocumentMerchantsCreateFieldInput>;
  updatedBy?: InputMaybe<PersonalDocumentUpdatedByCreateFieldInput>;
};

/** Fields to sort PersonalDocuments by. The order in which sorts are applied is not guaranteed when specifying many fields in one PersonalDocumentSort object. */
export type PersonalDocumentSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isDeleted?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  type?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  url?: InputMaybe<SortDirection>;
};

export enum PersonalDocumentTypeEnum {
  BankStatement = 'BANK_STATEMENT',
  Other = 'OTHER',
  PassportBack = 'PASSPORT_BACK',
  PassportFront = 'PASSPORT_FRONT',
  PhotoId = 'PHOTO_ID',
  UtilityBill = 'UTILITY_BILL'
}

export type PersonalDocumentUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type PersonalDocumentUpdateInput = {
  createdBy?: InputMaybe<PersonalDocumentCreatedByUpdateFieldInput>;
  customers?: InputMaybe<PersonalDocumentCustomersUpdateFieldInput>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  merchants?: InputMaybe<PersonalDocumentMerchantsUpdateFieldInput>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<PersonalDocumentTypeEnum>;
  updatedBy?: InputMaybe<PersonalDocumentUpdatedByUpdateFieldInput>;
  url?: InputMaybe<Scalars['String']>;
};

export type PersonalDocumentUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type PersonalDocumentUpdatedByConnection = {
  __typename?: 'PersonalDocumentUpdatedByConnection';
  edges: Array<PersonalDocumentUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type PersonalDocumentUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type PersonalDocumentUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<PersonalDocumentUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<PersonalDocumentUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<PersonalDocumentUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type PersonalDocumentUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type PersonalDocumentUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<PersonalDocumentUpdatedByConnectionWhere>;
};

export type PersonalDocumentUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<PersonalDocumentUpdatedByConnectionWhere>;
};

export type PersonalDocumentUpdatedByFieldInput = {
  connect?: InputMaybe<PersonalDocumentUpdatedByConnectFieldInput>;
  create?: InputMaybe<PersonalDocumentUpdatedByCreateFieldInput>;
};

export type PersonalDocumentUpdatedByRelationship = {
  __typename?: 'PersonalDocumentUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type PersonalDocumentUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type PersonalDocumentUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<PersonalDocumentUpdatedByConnectFieldInput>;
  create?: InputMaybe<PersonalDocumentUpdatedByCreateFieldInput>;
  delete?: InputMaybe<PersonalDocumentUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<PersonalDocumentUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<PersonalDocumentUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<PersonalDocumentUpdatedByConnectionWhere>;
};

export type PersonalDocumentWhere = {
  AND?: InputMaybe<Array<PersonalDocumentWhere>>;
  NOT?: InputMaybe<PersonalDocumentWhere>;
  OR?: InputMaybe<Array<PersonalDocumentWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<PersonalDocumentCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<PersonalDocumentCreatedByConnectionWhere>;
  customers?: InputMaybe<CustomerWhere>;
  customersAggregate?: InputMaybe<PersonalDocumentCustomersAggregateInput>;
  customersConnection?: InputMaybe<PersonalDocumentCustomersConnectionWhere>;
  customersConnection_NOT?: InputMaybe<PersonalDocumentCustomersConnectionWhere>;
  customers_NOT?: InputMaybe<CustomerWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  merchants?: InputMaybe<MerchantWhere>;
  merchantsAggregate?: InputMaybe<PersonalDocumentMerchantsAggregateInput>;
  merchantsConnection?: InputMaybe<PersonalDocumentMerchantsConnectionWhere>;
  merchantsConnection_NOT?: InputMaybe<PersonalDocumentMerchantsConnectionWhere>;
  merchants_NOT?: InputMaybe<MerchantWhere>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<PersonalDocumentTypeEnum>;
  type_IN?: InputMaybe<Array<PersonalDocumentTypeEnum>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<PersonalDocumentUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<PersonalDocumentUpdatedByConnectionWhere>;
  url?: InputMaybe<Scalars['String']>;
  url_CONTAINS?: InputMaybe<Scalars['String']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']>;
  url_IN?: InputMaybe<Array<Scalars['String']>>;
  url_MATCHES?: InputMaybe<Scalars['String']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']>;
};

export type PersonalDocumentsConnection = {
  __typename?: 'PersonalDocumentsConnection';
  edges: Array<PersonalDocumentEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type ReleaseRollingReserveInput = {
  id: Scalars['uuid'];
  status: Scalars['String'];
};

export type RevokeApiKeyResponse = {
  __typename?: 'RevokeApiKeyResponse';
  message: Scalars['String'];
  status: Scalars['String'];
};

export type SignupMerchantOutput = {
  __typename?: 'SignupMerchantOutput';
  data?: Maybe<SignupMerchantResponseData>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type SignupMerchantResponseData = {
  __typename?: 'SignupMerchantResponseData';
  businessId?: Maybe<Scalars['uuid']>;
  merchantId?: Maybe<Scalars['uuid']>;
};

/** An enum for sorting in either ascending or descending order. */
export enum SortDirection {
  /** Sort by field values in ascending order. */
  Asc = 'ASC',
  /** Sort by field values in descending order. */
  Desc = 'DESC'
}

export type StringAggregateSelectionNonNullable = {
  __typename?: 'StringAggregateSelectionNonNullable';
  longest: Scalars['String'];
  shortest: Scalars['String'];
};

export type StringAggregateSelectionNullable = {
  __typename?: 'StringAggregateSelectionNullable';
  longest?: Maybe<Scalars['String']>;
  shortest?: Maybe<Scalars['String']>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']>;
  _gt?: InputMaybe<Scalars['String']>;
  _gte?: InputMaybe<Scalars['String']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']>;
  _in?: InputMaybe<Array<Scalars['String']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']>;
  _lt?: InputMaybe<Scalars['String']>;
  _lte?: InputMaybe<Scalars['String']>;
  _neq?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']>;
  _nin?: InputMaybe<Array<Scalars['String']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']>;
};

export type SubAdmin = User & {
  __typename?: 'SubAdmin';
  accountCreate: Scalars['Boolean'];
  accountView: Scalars['Boolean'];
  activityLogCreate: Scalars['Boolean'];
  activityLogView: Scalars['Boolean'];
  brandsCreated: Array<Brand>;
  brandsCreatedAggregate?: Maybe<SubAdminBrandBrandsCreatedAggregationSelection>;
  brandsCreatedConnection: SubAdminBrandsCreatedConnection;
  businessesCreated: Array<Business>;
  businessesCreatedAggregate?: Maybe<SubAdminBusinessBusinessesCreatedAggregationSelection>;
  businessesCreatedConnection: SubAdminBusinessesCreatedConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: UserCreatedByConnection;
  customerCreate: Scalars['Boolean'];
  customerView: Scalars['Boolean'];
  customersCreated: Array<Customer>;
  customersCreatedAggregate?: Maybe<SubAdminCustomerCustomersCreatedAggregationSelection>;
  customersCreatedConnection: UserCustomersCreatedConnection;
  dashboardView: Scalars['Boolean'];
  depositCreate: Scalars['Boolean'];
  depositView: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions: Array<FeaturePermission>;
  featurePermissionsAggregate?: Maybe<SubAdminFeaturePermissionFeaturePermissionsAggregationSelection>;
  featurePermissionsConnection: UserFeaturePermissionsConnection;
  firebaseId: Scalars['String'];
  id: Scalars['ID'];
  mailboxCreate: Scalars['Boolean'];
  mailboxView: Scalars['Boolean'];
  merchantCreate: Scalars['Boolean'];
  merchantView: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate: Scalars['Boolean'];
  settingsView: Scalars['Boolean'];
  status: SubadminStatus;
  taskCreate: Scalars['Boolean'];
  taskView: Scalars['Boolean'];
  teamsCreated: Array<Team>;
  teamsCreatedAggregate?: Maybe<SubAdminTeamTeamsCreatedAggregationSelection>;
  teamsCreatedConnection: UserTeamsCreatedConnection;
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: UserUpdatedByConnection;
  userCreate: Scalars['Boolean'];
  userType: UserType;
  userView: Scalars['Boolean'];
  usersCreated: Array<User>;
  usersCreatedConnection: UserUsersCreatedConnection;
  withdrawalCreate: Scalars['Boolean'];
  withdrawalView: Scalars['Boolean'];
};


export type SubAdminBrandsCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type SubAdminBrandsCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BrandWhere>;
};


export type SubAdminBrandsCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<SubAdminBrandsCreatedConnectionSort>>;
  where?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
};


export type SubAdminBusinessesCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type SubAdminBusinessesCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type SubAdminBusinessesCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<SubAdminBusinessesCreatedConnectionSort>>;
  where?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
};


export type SubAdminCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type SubAdminCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserCreatedByConnectionSort>>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};


export type SubAdminCustomersCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type SubAdminCustomersCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


export type SubAdminCustomersCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserCustomersCreatedConnectionSort>>;
  where?: InputMaybe<UserCustomersCreatedConnectionWhere>;
};


export type SubAdminFeaturePermissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<FeaturePermissionOptions>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type SubAdminFeaturePermissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type SubAdminFeaturePermissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserFeaturePermissionsConnectionSort>>;
  where?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
};


export type SubAdminTeamsCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type SubAdminTeamsCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type SubAdminTeamsCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserTeamsCreatedConnectionSort>>;
  where?: InputMaybe<UserTeamsCreatedConnectionWhere>;
};


export type SubAdminUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type SubAdminUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserUpdatedByConnectionSort>>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};


export type SubAdminUsersCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type SubAdminUsersCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserUsersCreatedConnectionSort>>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type SubAdminAggregateSelection = {
  __typename?: 'SubAdminAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type SubAdminBrandBrandsCreatedAggregationSelection = {
  __typename?: 'SubAdminBrandBrandsCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SubAdminBrandBrandsCreatedNodeAggregateSelection>;
};

export type SubAdminBrandBrandsCreatedNodeAggregateSelection = {
  __typename?: 'SubAdminBrandBrandsCreatedNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type SubAdminBrandsCreatedAggregateInput = {
  AND?: InputMaybe<Array<SubAdminBrandsCreatedAggregateInput>>;
  NOT?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  OR?: InputMaybe<Array<SubAdminBrandsCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SubAdminBrandsCreatedNodeAggregationWhereInput>;
};

export type SubAdminBrandsCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<BrandConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BrandConnectWhere>;
};

export type SubAdminBrandsCreatedConnectOrCreateFieldInput = {
  onCreate: SubAdminBrandsCreatedConnectOrCreateFieldInputOnCreate;
  where: BrandConnectOrCreateWhere;
};

export type SubAdminBrandsCreatedConnectOrCreateFieldInputOnCreate = {
  node: BrandOnCreateInput;
};

export type SubAdminBrandsCreatedConnection = {
  __typename?: 'SubAdminBrandsCreatedConnection';
  edges: Array<SubAdminBrandsCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type SubAdminBrandsCreatedConnectionSort = {
  node?: InputMaybe<BrandSort>;
};

export type SubAdminBrandsCreatedConnectionWhere = {
  AND?: InputMaybe<Array<SubAdminBrandsCreatedConnectionWhere>>;
  NOT?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  OR?: InputMaybe<Array<SubAdminBrandsCreatedConnectionWhere>>;
  node?: InputMaybe<BrandWhere>;
};

export type SubAdminBrandsCreatedCreateFieldInput = {
  node: BrandCreateInput;
};

export type SubAdminBrandsCreatedDeleteFieldInput = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
};

export type SubAdminBrandsCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<BrandDisconnectInput>;
  where?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
};

export type SubAdminBrandsCreatedFieldInput = {
  connect?: InputMaybe<Array<SubAdminBrandsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<SubAdminBrandsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<SubAdminBrandsCreatedCreateFieldInput>>;
};

export type SubAdminBrandsCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SubAdminBrandsCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SubAdminBrandsCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SubAdminBrandsCreatedNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type SubAdminBrandsCreatedRelationship = {
  __typename?: 'SubAdminBrandsCreatedRelationship';
  cursor: Scalars['String'];
  node: Brand;
};

export type SubAdminBrandsCreatedUpdateConnectionInput = {
  node?: InputMaybe<BrandUpdateInput>;
};

export type SubAdminBrandsCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<SubAdminBrandsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<SubAdminBrandsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<SubAdminBrandsCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<SubAdminBrandsCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<SubAdminBrandsCreatedDisconnectFieldInput>>;
  update?: InputMaybe<SubAdminBrandsCreatedUpdateConnectionInput>;
  where?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
};

export type SubAdminBusinessBusinessesCreatedAggregationSelection = {
  __typename?: 'SubAdminBusinessBusinessesCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SubAdminBusinessBusinessesCreatedNodeAggregateSelection>;
};

export type SubAdminBusinessBusinessesCreatedNodeAggregateSelection = {
  __typename?: 'SubAdminBusinessBusinessesCreatedNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type SubAdminBusinessesCreatedAggregateInput = {
  AND?: InputMaybe<Array<SubAdminBusinessesCreatedAggregateInput>>;
  NOT?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  OR?: InputMaybe<Array<SubAdminBusinessesCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SubAdminBusinessesCreatedNodeAggregationWhereInput>;
};

export type SubAdminBusinessesCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type SubAdminBusinessesCreatedConnectOrCreateFieldInput = {
  onCreate: SubAdminBusinessesCreatedConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type SubAdminBusinessesCreatedConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type SubAdminBusinessesCreatedConnection = {
  __typename?: 'SubAdminBusinessesCreatedConnection';
  edges: Array<SubAdminBusinessesCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type SubAdminBusinessesCreatedConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type SubAdminBusinessesCreatedConnectionWhere = {
  AND?: InputMaybe<Array<SubAdminBusinessesCreatedConnectionWhere>>;
  NOT?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  OR?: InputMaybe<Array<SubAdminBusinessesCreatedConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type SubAdminBusinessesCreatedCreateFieldInput = {
  node: BusinessCreateInput;
};

export type SubAdminBusinessesCreatedDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
};

export type SubAdminBusinessesCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
};

export type SubAdminBusinessesCreatedFieldInput = {
  connect?: InputMaybe<Array<SubAdminBusinessesCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<SubAdminBusinessesCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<SubAdminBusinessesCreatedCreateFieldInput>>;
};

export type SubAdminBusinessesCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SubAdminBusinessesCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SubAdminBusinessesCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SubAdminBusinessesCreatedNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type SubAdminBusinessesCreatedRelationship = {
  __typename?: 'SubAdminBusinessesCreatedRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type SubAdminBusinessesCreatedUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type SubAdminBusinessesCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<SubAdminBusinessesCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<SubAdminBusinessesCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<SubAdminBusinessesCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<SubAdminBusinessesCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<SubAdminBusinessesCreatedDisconnectFieldInput>>;
  update?: InputMaybe<SubAdminBusinessesCreatedUpdateConnectionInput>;
  where?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
};

export type SubAdminConnectInput = {
  brandsCreated?: InputMaybe<Array<SubAdminBrandsCreatedConnectFieldInput>>;
  businessesCreated?: InputMaybe<Array<SubAdminBusinessesCreatedConnectFieldInput>>;
  createdBy?: InputMaybe<SubAdminCreatedByConnectFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedConnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedConnectFieldInput>>;
  updatedBy?: InputMaybe<SubAdminUpdatedByConnectFieldInput>;
  usersCreated?: InputMaybe<Array<SubAdminUsersCreatedConnectFieldInput>>;
};

export type SubAdminConnectOrCreateInput = {
  brandsCreated?: InputMaybe<Array<SubAdminBrandsCreatedConnectOrCreateFieldInput>>;
  businessesCreated?: InputMaybe<Array<SubAdminBusinessesCreatedConnectOrCreateFieldInput>>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedConnectOrCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectOrCreateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedConnectOrCreateFieldInput>>;
};

export type SubAdminCreateInput = {
  accountCreate?: Scalars['Boolean'];
  accountView?: Scalars['Boolean'];
  activityLogCreate?: Scalars['Boolean'];
  activityLogView?: Scalars['Boolean'];
  brandsCreated?: InputMaybe<SubAdminBrandsCreatedFieldInput>;
  businessesCreated?: InputMaybe<SubAdminBusinessesCreatedFieldInput>;
  createdBy?: InputMaybe<UserCreatedByFieldInput>;
  customerCreate?: Scalars['Boolean'];
  customerView?: Scalars['Boolean'];
  customersCreated?: InputMaybe<UserCustomersCreatedFieldInput>;
  dashboardView?: Scalars['Boolean'];
  depositCreate?: Scalars['Boolean'];
  depositView?: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions?: InputMaybe<UserFeaturePermissionsFieldInput>;
  firebaseId: Scalars['String'];
  mailboxCreate?: Scalars['Boolean'];
  mailboxView?: Scalars['Boolean'];
  merchantCreate?: Scalars['Boolean'];
  merchantView?: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate?: Scalars['Boolean'];
  settingsView?: Scalars['Boolean'];
  status?: SubadminStatus;
  taskCreate?: Scalars['Boolean'];
  taskView?: Scalars['Boolean'];
  teamsCreated?: InputMaybe<UserTeamsCreatedFieldInput>;
  updatedBy?: InputMaybe<UserUpdatedByFieldInput>;
  userCreate?: Scalars['Boolean'];
  userType?: UserType;
  userView?: Scalars['Boolean'];
  usersCreated?: InputMaybe<UserUsersCreatedFieldInput>;
  withdrawalCreate?: Scalars['Boolean'];
  withdrawalView?: Scalars['Boolean'];
};

export type SubAdminCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type SubAdminCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type SubAdminCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type SubAdminCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type SubAdminCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type SubAdminCreatedByUpdateFieldInput = {
  connect?: InputMaybe<SubAdminCreatedByConnectFieldInput>;
  create?: InputMaybe<SubAdminCreatedByCreateFieldInput>;
  delete?: InputMaybe<SubAdminCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<SubAdminCreatedByDisconnectFieldInput>;
  update?: InputMaybe<SubAdminCreatedByUpdateConnectionInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type SubAdminCustomerCustomersCreatedAggregationSelection = {
  __typename?: 'SubAdminCustomerCustomersCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SubAdminCustomerCustomersCreatedNodeAggregateSelection>;
};

export type SubAdminCustomerCustomersCreatedNodeAggregateSelection = {
  __typename?: 'SubAdminCustomerCustomersCreatedNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type SubAdminCustomersCreatedAggregateInput = {
  AND?: InputMaybe<Array<SubAdminCustomersCreatedAggregateInput>>;
  NOT?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  OR?: InputMaybe<Array<SubAdminCustomersCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SubAdminCustomersCreatedNodeAggregationWhereInput>;
};

export type SubAdminCustomersCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SubAdminCustomersCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SubAdminCustomersCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SubAdminCustomersCreatedNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type SubAdminDeleteInput = {
  brandsCreated?: InputMaybe<Array<SubAdminBrandsCreatedDeleteFieldInput>>;
  businessesCreated?: InputMaybe<Array<SubAdminBusinessesCreatedDeleteFieldInput>>;
  createdBy?: InputMaybe<SubAdminCreatedByDeleteFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedDeleteFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDeleteFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedDeleteFieldInput>>;
  updatedBy?: InputMaybe<SubAdminUpdatedByDeleteFieldInput>;
  usersCreated?: InputMaybe<Array<SubAdminUsersCreatedDeleteFieldInput>>;
};

export type SubAdminDisconnectInput = {
  brandsCreated?: InputMaybe<Array<SubAdminBrandsCreatedDisconnectFieldInput>>;
  businessesCreated?: InputMaybe<Array<SubAdminBusinessesCreatedDisconnectFieldInput>>;
  createdBy?: InputMaybe<SubAdminCreatedByDisconnectFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedDisconnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDisconnectFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedDisconnectFieldInput>>;
  updatedBy?: InputMaybe<SubAdminUpdatedByDisconnectFieldInput>;
  usersCreated?: InputMaybe<Array<SubAdminUsersCreatedDisconnectFieldInput>>;
};

export type SubAdminEdge = {
  __typename?: 'SubAdminEdge';
  cursor: Scalars['String'];
  node: SubAdmin;
};

export type SubAdminFeaturePermissionFeaturePermissionsAggregationSelection = {
  __typename?: 'SubAdminFeaturePermissionFeaturePermissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SubAdminFeaturePermissionFeaturePermissionsNodeAggregateSelection>;
};

export type SubAdminFeaturePermissionFeaturePermissionsNodeAggregateSelection = {
  __typename?: 'SubAdminFeaturePermissionFeaturePermissionsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type SubAdminFeaturePermissionsAggregateInput = {
  AND?: InputMaybe<Array<SubAdminFeaturePermissionsAggregateInput>>;
  NOT?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  OR?: InputMaybe<Array<SubAdminFeaturePermissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SubAdminFeaturePermissionsNodeAggregationWhereInput>;
};

export type SubAdminFeaturePermissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SubAdminFeaturePermissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SubAdminFeaturePermissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SubAdminFeaturePermissionsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type SubAdminOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SubAdminSort objects to sort SubAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SubAdminSort>>;
};

export type SubAdminOptions_Remote_Rel_ActivityLogsactionBySubAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SubAdminSort objects to sort SubAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SubAdminSort>>;
};

export type SubAdminOptions_Remote_Rel_DepositscreatedBySubAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SubAdminSort objects to sort SubAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SubAdminSort>>;
};

export type SubAdminOptions_Remote_Rel_DepositsupdatedBySubAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SubAdminSort objects to sort SubAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SubAdminSort>>;
};

export type SubAdminOptions_Remote_Rel_TaskscreatedBySubAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SubAdminSort objects to sort SubAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SubAdminSort>>;
};

export type SubAdminOptions_Remote_Rel_TasksupdatedBySubAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SubAdminSort objects to sort SubAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SubAdminSort>>;
};

export type SubAdminOptions_Remote_Rel_WithdrawalscreatedBySubAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SubAdminSort objects to sort SubAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SubAdminSort>>;
};

export type SubAdminOptions_Remote_Rel_WithdrawalsupdatedBySubAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SubAdminSort objects to sort SubAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SubAdminSort>>;
};

export type SubAdminRelationInput = {
  brandsCreated?: InputMaybe<Array<SubAdminBrandsCreatedCreateFieldInput>>;
  businessesCreated?: InputMaybe<Array<SubAdminBusinessesCreatedCreateFieldInput>>;
  createdBy?: InputMaybe<SubAdminCreatedByCreateFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsCreateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedCreateFieldInput>>;
  updatedBy?: InputMaybe<SubAdminUpdatedByCreateFieldInput>;
  usersCreated?: InputMaybe<Array<SubAdminUsersCreatedCreateFieldInput>>;
};

/** Fields to sort SubAdmins by. The order in which sorts are applied is not guaranteed when specifying many fields in one SubAdminSort object. */
export type SubAdminSort = {
  accountCreate?: InputMaybe<SortDirection>;
  accountView?: InputMaybe<SortDirection>;
  activityLogCreate?: InputMaybe<SortDirection>;
  activityLogView?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  customerCreate?: InputMaybe<SortDirection>;
  customerView?: InputMaybe<SortDirection>;
  dashboardView?: InputMaybe<SortDirection>;
  depositCreate?: InputMaybe<SortDirection>;
  depositView?: InputMaybe<SortDirection>;
  email?: InputMaybe<SortDirection>;
  firebaseId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  mailboxCreate?: InputMaybe<SortDirection>;
  mailboxView?: InputMaybe<SortDirection>;
  merchantCreate?: InputMaybe<SortDirection>;
  merchantView?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  settingsCreate?: InputMaybe<SortDirection>;
  settingsView?: InputMaybe<SortDirection>;
  status?: InputMaybe<SortDirection>;
  taskCreate?: InputMaybe<SortDirection>;
  taskView?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  userCreate?: InputMaybe<SortDirection>;
  userType?: InputMaybe<SortDirection>;
  userView?: InputMaybe<SortDirection>;
  withdrawalCreate?: InputMaybe<SortDirection>;
  withdrawalView?: InputMaybe<SortDirection>;
};

export type SubAdminTeamTeamsCreatedAggregationSelection = {
  __typename?: 'SubAdminTeamTeamsCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SubAdminTeamTeamsCreatedNodeAggregateSelection>;
};

export type SubAdminTeamTeamsCreatedNodeAggregateSelection = {
  __typename?: 'SubAdminTeamTeamsCreatedNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type SubAdminTeamsCreatedAggregateInput = {
  AND?: InputMaybe<Array<SubAdminTeamsCreatedAggregateInput>>;
  NOT?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  OR?: InputMaybe<Array<SubAdminTeamsCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SubAdminTeamsCreatedNodeAggregationWhereInput>;
};

export type SubAdminTeamsCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SubAdminTeamsCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SubAdminTeamsCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SubAdminTeamsCreatedNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type SubAdminUpdateInput = {
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreated?: InputMaybe<Array<SubAdminBrandsCreatedUpdateFieldInput>>;
  businessesCreated?: InputMaybe<Array<SubAdminBusinessesCreatedUpdateFieldInput>>;
  createdBy?: InputMaybe<SubAdminCreatedByUpdateFieldInput>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedUpdateFieldInput>>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsUpdateFieldInput>>;
  firebaseId?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedUpdateFieldInput>>;
  updatedBy?: InputMaybe<SubAdminUpdatedByUpdateFieldInput>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userView?: InputMaybe<Scalars['Boolean']>;
  usersCreated?: InputMaybe<Array<SubAdminUsersCreatedUpdateFieldInput>>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type SubAdminUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type SubAdminUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type SubAdminUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type SubAdminUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type SubAdminUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<SubAdminUpdatedByConnectFieldInput>;
  create?: InputMaybe<SubAdminUpdatedByCreateFieldInput>;
  delete?: InputMaybe<SubAdminUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<SubAdminUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<SubAdminUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type SubAdminUsersCreatedConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type SubAdminUsersCreatedCreateFieldInput = {
  node: UserCreateInput;
};

export type SubAdminUsersCreatedDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type SubAdminUsersCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type SubAdminUsersCreatedUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type SubAdminUsersCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<SubAdminUsersCreatedConnectFieldInput>>;
  create?: InputMaybe<Array<SubAdminUsersCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<SubAdminUsersCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<SubAdminUsersCreatedDisconnectFieldInput>>;
  update?: InputMaybe<SubAdminUsersCreatedUpdateConnectionInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type SubAdminWhere = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminWhere_Remote_Rel_ActivityLogsactionBySubAdmin = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminWhere_Remote_Rel_DepositscreatedBySubAdmin = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminWhere_Remote_Rel_DepositsupdatedBySubAdmin = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminWhere_Remote_Rel_TasksassignedToSubAdmin = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminWhere_Remote_Rel_TaskscreatedBySubAdmin = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminWhere_Remote_Rel_TasksupdatedBySubAdmin = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminWhere_Remote_Rel_WithdrawalscreatedBySubAdmin = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminWhere_Remote_Rel_WithdrawalsupdatedBySubAdmin = {
  AND?: InputMaybe<Array<SubAdminWhere>>;
  NOT?: InputMaybe<SubAdminWhere>;
  OR?: InputMaybe<Array<SubAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SubAdminBrandsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SubAdminBrandsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SubAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SubAdminBusinessesCreatedAggregateInput>;
  /** Return SubAdmins where all of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related SubAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SubAdminBusinessesCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SubAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SubAdminCustomersCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SubAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SubAdminFeaturePermissionsAggregateInput>;
  /** Return SubAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SubAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SubAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<SubadminStatus>;
  status_IN?: InputMaybe<Array<SubadminStatus>>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SubAdminTeamsCreatedAggregateInput>;
  /** Return SubAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SubAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SubAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SubAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SubAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SubAdminsConnection = {
  __typename?: 'SubAdminsConnection';
  edges: Array<SubAdminEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export enum SubadminStatus {
  Activated = 'ACTIVATED',
  Deactivated = 'DEACTIVATED'
}

export type SuperAdmin = User & {
  __typename?: 'SuperAdmin';
  accountCreate: Scalars['Boolean'];
  accountView: Scalars['Boolean'];
  activityLogCreate: Scalars['Boolean'];
  activityLogView: Scalars['Boolean'];
  brandsCreated: Array<Brand>;
  brandsCreatedAggregate?: Maybe<SuperAdminBrandBrandsCreatedAggregationSelection>;
  brandsCreatedConnection: SuperAdminBrandsCreatedConnection;
  businessesCreated: Array<Business>;
  businessesCreatedAggregate?: Maybe<SuperAdminBusinessBusinessesCreatedAggregationSelection>;
  businessesCreatedConnection: SuperAdminBusinessesCreatedConnection;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: UserCreatedByConnection;
  customerCreate: Scalars['Boolean'];
  customerView: Scalars['Boolean'];
  customersCreated: Array<Customer>;
  customersCreatedAggregate?: Maybe<SuperAdminCustomerCustomersCreatedAggregationSelection>;
  customersCreatedConnection: UserCustomersCreatedConnection;
  dashboardView: Scalars['Boolean'];
  depositCreate: Scalars['Boolean'];
  depositView: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions: Array<FeaturePermission>;
  featurePermissionsAggregate?: Maybe<SuperAdminFeaturePermissionFeaturePermissionsAggregationSelection>;
  featurePermissionsConnection: UserFeaturePermissionsConnection;
  firebaseId: Scalars['String'];
  id: Scalars['ID'];
  mailboxCreate: Scalars['Boolean'];
  mailboxView: Scalars['Boolean'];
  merchantCreate: Scalars['Boolean'];
  merchantView: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate: Scalars['Boolean'];
  settingsView: Scalars['Boolean'];
  taskCreate: Scalars['Boolean'];
  taskView: Scalars['Boolean'];
  teamsCreated: Array<Team>;
  teamsCreatedAggregate?: Maybe<SuperAdminTeamTeamsCreatedAggregationSelection>;
  teamsCreatedConnection: UserTeamsCreatedConnection;
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: UserUpdatedByConnection;
  userCreate: Scalars['Boolean'];
  userType: UserType;
  userView: Scalars['Boolean'];
  usersCreated: Array<User>;
  usersCreatedConnection: UserUsersCreatedConnection;
  withdrawalCreate: Scalars['Boolean'];
  withdrawalView: Scalars['Boolean'];
};


export type SuperAdminBrandsCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type SuperAdminBrandsCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BrandWhere>;
};


export type SuperAdminBrandsCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<SuperAdminBrandsCreatedConnectionSort>>;
  where?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
};


export type SuperAdminBusinessesCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type SuperAdminBusinessesCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type SuperAdminBusinessesCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectionSort>>;
  where?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
};


export type SuperAdminCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type SuperAdminCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserCreatedByConnectionSort>>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};


export type SuperAdminCustomersCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type SuperAdminCustomersCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


export type SuperAdminCustomersCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserCustomersCreatedConnectionSort>>;
  where?: InputMaybe<UserCustomersCreatedConnectionWhere>;
};


export type SuperAdminFeaturePermissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<FeaturePermissionOptions>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type SuperAdminFeaturePermissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type SuperAdminFeaturePermissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserFeaturePermissionsConnectionSort>>;
  where?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
};


export type SuperAdminTeamsCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type SuperAdminTeamsCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type SuperAdminTeamsCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserTeamsCreatedConnectionSort>>;
  where?: InputMaybe<UserTeamsCreatedConnectionWhere>;
};


export type SuperAdminUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type SuperAdminUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserUpdatedByConnectionSort>>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};


export type SuperAdminUsersCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type SuperAdminUsersCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserUsersCreatedConnectionSort>>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type SuperAdminAggregateSelection = {
  __typename?: 'SuperAdminAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type SuperAdminBrandBrandsCreatedAggregationSelection = {
  __typename?: 'SuperAdminBrandBrandsCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SuperAdminBrandBrandsCreatedNodeAggregateSelection>;
};

export type SuperAdminBrandBrandsCreatedNodeAggregateSelection = {
  __typename?: 'SuperAdminBrandBrandsCreatedNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type SuperAdminBrandsCreatedAggregateInput = {
  AND?: InputMaybe<Array<SuperAdminBrandsCreatedAggregateInput>>;
  NOT?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  OR?: InputMaybe<Array<SuperAdminBrandsCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SuperAdminBrandsCreatedNodeAggregationWhereInput>;
};

export type SuperAdminBrandsCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<BrandConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BrandConnectWhere>;
};

export type SuperAdminBrandsCreatedConnectOrCreateFieldInput = {
  onCreate: SuperAdminBrandsCreatedConnectOrCreateFieldInputOnCreate;
  where: BrandConnectOrCreateWhere;
};

export type SuperAdminBrandsCreatedConnectOrCreateFieldInputOnCreate = {
  node: BrandOnCreateInput;
};

export type SuperAdminBrandsCreatedConnection = {
  __typename?: 'SuperAdminBrandsCreatedConnection';
  edges: Array<SuperAdminBrandsCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type SuperAdminBrandsCreatedConnectionSort = {
  node?: InputMaybe<BrandSort>;
};

export type SuperAdminBrandsCreatedConnectionWhere = {
  AND?: InputMaybe<Array<SuperAdminBrandsCreatedConnectionWhere>>;
  NOT?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  OR?: InputMaybe<Array<SuperAdminBrandsCreatedConnectionWhere>>;
  node?: InputMaybe<BrandWhere>;
};

export type SuperAdminBrandsCreatedCreateFieldInput = {
  node: BrandCreateInput;
};

export type SuperAdminBrandsCreatedDeleteFieldInput = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
};

export type SuperAdminBrandsCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<BrandDisconnectInput>;
  where?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
};

export type SuperAdminBrandsCreatedFieldInput = {
  connect?: InputMaybe<Array<SuperAdminBrandsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<SuperAdminBrandsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<SuperAdminBrandsCreatedCreateFieldInput>>;
};

export type SuperAdminBrandsCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuperAdminBrandsCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuperAdminBrandsCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuperAdminBrandsCreatedNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type SuperAdminBrandsCreatedRelationship = {
  __typename?: 'SuperAdminBrandsCreatedRelationship';
  cursor: Scalars['String'];
  node: Brand;
};

export type SuperAdminBrandsCreatedUpdateConnectionInput = {
  node?: InputMaybe<BrandUpdateInput>;
};

export type SuperAdminBrandsCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<SuperAdminBrandsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<SuperAdminBrandsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<SuperAdminBrandsCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<SuperAdminBrandsCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<SuperAdminBrandsCreatedDisconnectFieldInput>>;
  update?: InputMaybe<SuperAdminBrandsCreatedUpdateConnectionInput>;
  where?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
};

export type SuperAdminBusinessBusinessesCreatedAggregationSelection = {
  __typename?: 'SuperAdminBusinessBusinessesCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SuperAdminBusinessBusinessesCreatedNodeAggregateSelection>;
};

export type SuperAdminBusinessBusinessesCreatedNodeAggregateSelection = {
  __typename?: 'SuperAdminBusinessBusinessesCreatedNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type SuperAdminBusinessesCreatedAggregateInput = {
  AND?: InputMaybe<Array<SuperAdminBusinessesCreatedAggregateInput>>;
  NOT?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  OR?: InputMaybe<Array<SuperAdminBusinessesCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SuperAdminBusinessesCreatedNodeAggregationWhereInput>;
};

export type SuperAdminBusinessesCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type SuperAdminBusinessesCreatedConnectOrCreateFieldInput = {
  onCreate: SuperAdminBusinessesCreatedConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type SuperAdminBusinessesCreatedConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type SuperAdminBusinessesCreatedConnection = {
  __typename?: 'SuperAdminBusinessesCreatedConnection';
  edges: Array<SuperAdminBusinessesCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type SuperAdminBusinessesCreatedConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type SuperAdminBusinessesCreatedConnectionWhere = {
  AND?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectionWhere>>;
  NOT?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  OR?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type SuperAdminBusinessesCreatedCreateFieldInput = {
  node: BusinessCreateInput;
};

export type SuperAdminBusinessesCreatedDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
};

export type SuperAdminBusinessesCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
};

export type SuperAdminBusinessesCreatedFieldInput = {
  connect?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<SuperAdminBusinessesCreatedCreateFieldInput>>;
};

export type SuperAdminBusinessesCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuperAdminBusinessesCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuperAdminBusinessesCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuperAdminBusinessesCreatedNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type SuperAdminBusinessesCreatedRelationship = {
  __typename?: 'SuperAdminBusinessesCreatedRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type SuperAdminBusinessesCreatedUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type SuperAdminBusinessesCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<SuperAdminBusinessesCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<SuperAdminBusinessesCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<SuperAdminBusinessesCreatedDisconnectFieldInput>>;
  update?: InputMaybe<SuperAdminBusinessesCreatedUpdateConnectionInput>;
  where?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
};

export type SuperAdminConnectInput = {
  brandsCreated?: InputMaybe<Array<SuperAdminBrandsCreatedConnectFieldInput>>;
  businessesCreated?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectFieldInput>>;
  createdBy?: InputMaybe<SuperAdminCreatedByConnectFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedConnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedConnectFieldInput>>;
  updatedBy?: InputMaybe<SuperAdminUpdatedByConnectFieldInput>;
  usersCreated?: InputMaybe<Array<SuperAdminUsersCreatedConnectFieldInput>>;
};

export type SuperAdminConnectOrCreateInput = {
  brandsCreated?: InputMaybe<Array<SuperAdminBrandsCreatedConnectOrCreateFieldInput>>;
  businessesCreated?: InputMaybe<Array<SuperAdminBusinessesCreatedConnectOrCreateFieldInput>>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedConnectOrCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectOrCreateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedConnectOrCreateFieldInput>>;
};

export type SuperAdminConnectOrCreateWhere = {
  node: SuperAdminUniqueWhere;
};

export type SuperAdminConnectWhere = {
  node: SuperAdminWhere;
};

export type SuperAdminCreateInput = {
  accountCreate?: Scalars['Boolean'];
  accountView?: Scalars['Boolean'];
  activityLogCreate?: Scalars['Boolean'];
  activityLogView?: Scalars['Boolean'];
  brandsCreated?: InputMaybe<SuperAdminBrandsCreatedFieldInput>;
  businessesCreated?: InputMaybe<SuperAdminBusinessesCreatedFieldInput>;
  createdBy?: InputMaybe<UserCreatedByFieldInput>;
  customerCreate?: Scalars['Boolean'];
  customerView?: Scalars['Boolean'];
  customersCreated?: InputMaybe<UserCustomersCreatedFieldInput>;
  dashboardView?: Scalars['Boolean'];
  depositCreate?: Scalars['Boolean'];
  depositView?: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions?: InputMaybe<UserFeaturePermissionsFieldInput>;
  firebaseId: Scalars['String'];
  mailboxCreate?: Scalars['Boolean'];
  mailboxView?: Scalars['Boolean'];
  merchantCreate?: Scalars['Boolean'];
  merchantView?: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate?: Scalars['Boolean'];
  settingsView?: Scalars['Boolean'];
  taskCreate?: Scalars['Boolean'];
  taskView?: Scalars['Boolean'];
  teamsCreated?: InputMaybe<UserTeamsCreatedFieldInput>;
  updatedBy?: InputMaybe<UserUpdatedByFieldInput>;
  userCreate?: Scalars['Boolean'];
  userType?: UserType;
  userView?: Scalars['Boolean'];
  usersCreated?: InputMaybe<UserUsersCreatedFieldInput>;
  withdrawalCreate?: Scalars['Boolean'];
  withdrawalView?: Scalars['Boolean'];
};

export type SuperAdminCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type SuperAdminCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type SuperAdminCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type SuperAdminCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type SuperAdminCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type SuperAdminCreatedByUpdateFieldInput = {
  connect?: InputMaybe<SuperAdminCreatedByConnectFieldInput>;
  create?: InputMaybe<SuperAdminCreatedByCreateFieldInput>;
  delete?: InputMaybe<SuperAdminCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<SuperAdminCreatedByDisconnectFieldInput>;
  update?: InputMaybe<SuperAdminCreatedByUpdateConnectionInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type SuperAdminCustomerCustomersCreatedAggregationSelection = {
  __typename?: 'SuperAdminCustomerCustomersCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SuperAdminCustomerCustomersCreatedNodeAggregateSelection>;
};

export type SuperAdminCustomerCustomersCreatedNodeAggregateSelection = {
  __typename?: 'SuperAdminCustomerCustomersCreatedNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type SuperAdminCustomersCreatedAggregateInput = {
  AND?: InputMaybe<Array<SuperAdminCustomersCreatedAggregateInput>>;
  NOT?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  OR?: InputMaybe<Array<SuperAdminCustomersCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SuperAdminCustomersCreatedNodeAggregationWhereInput>;
};

export type SuperAdminCustomersCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuperAdminCustomersCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuperAdminCustomersCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuperAdminCustomersCreatedNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type SuperAdminDeleteInput = {
  brandsCreated?: InputMaybe<Array<SuperAdminBrandsCreatedDeleteFieldInput>>;
  businessesCreated?: InputMaybe<Array<SuperAdminBusinessesCreatedDeleteFieldInput>>;
  createdBy?: InputMaybe<SuperAdminCreatedByDeleteFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedDeleteFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDeleteFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedDeleteFieldInput>>;
  updatedBy?: InputMaybe<SuperAdminUpdatedByDeleteFieldInput>;
  usersCreated?: InputMaybe<Array<SuperAdminUsersCreatedDeleteFieldInput>>;
};

export type SuperAdminDisconnectInput = {
  brandsCreated?: InputMaybe<Array<SuperAdminBrandsCreatedDisconnectFieldInput>>;
  businessesCreated?: InputMaybe<Array<SuperAdminBusinessesCreatedDisconnectFieldInput>>;
  createdBy?: InputMaybe<SuperAdminCreatedByDisconnectFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedDisconnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDisconnectFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedDisconnectFieldInput>>;
  updatedBy?: InputMaybe<SuperAdminUpdatedByDisconnectFieldInput>;
  usersCreated?: InputMaybe<Array<SuperAdminUsersCreatedDisconnectFieldInput>>;
};

export type SuperAdminEdge = {
  __typename?: 'SuperAdminEdge';
  cursor: Scalars['String'];
  node: SuperAdmin;
};

export type SuperAdminFeaturePermissionFeaturePermissionsAggregationSelection = {
  __typename?: 'SuperAdminFeaturePermissionFeaturePermissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SuperAdminFeaturePermissionFeaturePermissionsNodeAggregateSelection>;
};

export type SuperAdminFeaturePermissionFeaturePermissionsNodeAggregateSelection = {
  __typename?: 'SuperAdminFeaturePermissionFeaturePermissionsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type SuperAdminFeaturePermissionsAggregateInput = {
  AND?: InputMaybe<Array<SuperAdminFeaturePermissionsAggregateInput>>;
  NOT?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  OR?: InputMaybe<Array<SuperAdminFeaturePermissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SuperAdminFeaturePermissionsNodeAggregationWhereInput>;
};

export type SuperAdminFeaturePermissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuperAdminFeaturePermissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuperAdminFeaturePermissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuperAdminFeaturePermissionsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type SuperAdminOnCreateInput = {
  accountCreate?: Scalars['Boolean'];
  accountView?: Scalars['Boolean'];
  activityLogCreate?: Scalars['Boolean'];
  activityLogView?: Scalars['Boolean'];
  customerCreate?: Scalars['Boolean'];
  customerView?: Scalars['Boolean'];
  dashboardView?: Scalars['Boolean'];
  depositCreate?: Scalars['Boolean'];
  depositView?: Scalars['Boolean'];
  email: Scalars['String'];
  firebaseId: Scalars['String'];
  mailboxCreate?: Scalars['Boolean'];
  mailboxView?: Scalars['Boolean'];
  merchantCreate?: Scalars['Boolean'];
  merchantView?: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate?: Scalars['Boolean'];
  settingsView?: Scalars['Boolean'];
  taskCreate?: Scalars['Boolean'];
  taskView?: Scalars['Boolean'];
  userCreate?: Scalars['Boolean'];
  userType?: UserType;
  userView?: Scalars['Boolean'];
  withdrawalCreate?: Scalars['Boolean'];
  withdrawalView?: Scalars['Boolean'];
};

export type SuperAdminOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SuperAdminSort objects to sort SuperAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuperAdminSort>>;
};

export type SuperAdminOptions_Remote_Rel_ActivityLogsactionBySuperAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SuperAdminSort objects to sort SuperAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuperAdminSort>>;
};

export type SuperAdminOptions_Remote_Rel_DepositscreatedBySuperAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SuperAdminSort objects to sort SuperAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuperAdminSort>>;
};

export type SuperAdminOptions_Remote_Rel_DepositsupdatedBySuperAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SuperAdminSort objects to sort SuperAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuperAdminSort>>;
};

export type SuperAdminOptions_Remote_Rel_TaskscreatedBySuperAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SuperAdminSort objects to sort SuperAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuperAdminSort>>;
};

export type SuperAdminOptions_Remote_Rel_TasksupdatedBySuperAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SuperAdminSort objects to sort SuperAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuperAdminSort>>;
};

export type SuperAdminOptions_Remote_Rel_WithdrawalscreatedBySuperAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SuperAdminSort objects to sort SuperAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuperAdminSort>>;
};

export type SuperAdminOptions_Remote_Rel_WithdrawalsupdatedBySuperAdmin = {
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more SuperAdminSort objects to sort SuperAdmins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuperAdminSort>>;
};

export type SuperAdminRelationInput = {
  brandsCreated?: InputMaybe<Array<SuperAdminBrandsCreatedCreateFieldInput>>;
  businessesCreated?: InputMaybe<Array<SuperAdminBusinessesCreatedCreateFieldInput>>;
  createdBy?: InputMaybe<SuperAdminCreatedByCreateFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsCreateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedCreateFieldInput>>;
  updatedBy?: InputMaybe<SuperAdminUpdatedByCreateFieldInput>;
  usersCreated?: InputMaybe<Array<SuperAdminUsersCreatedCreateFieldInput>>;
};

/** Fields to sort SuperAdmins by. The order in which sorts are applied is not guaranteed when specifying many fields in one SuperAdminSort object. */
export type SuperAdminSort = {
  accountCreate?: InputMaybe<SortDirection>;
  accountView?: InputMaybe<SortDirection>;
  activityLogCreate?: InputMaybe<SortDirection>;
  activityLogView?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  customerCreate?: InputMaybe<SortDirection>;
  customerView?: InputMaybe<SortDirection>;
  dashboardView?: InputMaybe<SortDirection>;
  depositCreate?: InputMaybe<SortDirection>;
  depositView?: InputMaybe<SortDirection>;
  email?: InputMaybe<SortDirection>;
  firebaseId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  mailboxCreate?: InputMaybe<SortDirection>;
  mailboxView?: InputMaybe<SortDirection>;
  merchantCreate?: InputMaybe<SortDirection>;
  merchantView?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  settingsCreate?: InputMaybe<SortDirection>;
  settingsView?: InputMaybe<SortDirection>;
  taskCreate?: InputMaybe<SortDirection>;
  taskView?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  userCreate?: InputMaybe<SortDirection>;
  userType?: InputMaybe<SortDirection>;
  userView?: InputMaybe<SortDirection>;
  withdrawalCreate?: InputMaybe<SortDirection>;
  withdrawalView?: InputMaybe<SortDirection>;
};

export type SuperAdminTeamTeamsCreatedAggregationSelection = {
  __typename?: 'SuperAdminTeamTeamsCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<SuperAdminTeamTeamsCreatedNodeAggregateSelection>;
};

export type SuperAdminTeamTeamsCreatedNodeAggregateSelection = {
  __typename?: 'SuperAdminTeamTeamsCreatedNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type SuperAdminTeamsCreatedAggregateInput = {
  AND?: InputMaybe<Array<SuperAdminTeamsCreatedAggregateInput>>;
  NOT?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  OR?: InputMaybe<Array<SuperAdminTeamsCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<SuperAdminTeamsCreatedNodeAggregationWhereInput>;
};

export type SuperAdminTeamsCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuperAdminTeamsCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuperAdminTeamsCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuperAdminTeamsCreatedNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type SuperAdminUniqueWhere = {
  email?: InputMaybe<Scalars['String']>;
  firebaseId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

export type SuperAdminUpdateInput = {
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreated?: InputMaybe<Array<SuperAdminBrandsCreatedUpdateFieldInput>>;
  businessesCreated?: InputMaybe<Array<SuperAdminBusinessesCreatedUpdateFieldInput>>;
  createdBy?: InputMaybe<SuperAdminCreatedByUpdateFieldInput>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedUpdateFieldInput>>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsUpdateFieldInput>>;
  firebaseId?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedUpdateFieldInput>>;
  updatedBy?: InputMaybe<SuperAdminUpdatedByUpdateFieldInput>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userView?: InputMaybe<Scalars['Boolean']>;
  usersCreated?: InputMaybe<Array<SuperAdminUsersCreatedUpdateFieldInput>>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type SuperAdminUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type SuperAdminUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type SuperAdminUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type SuperAdminUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type SuperAdminUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<SuperAdminUpdatedByConnectFieldInput>;
  create?: InputMaybe<SuperAdminUpdatedByCreateFieldInput>;
  delete?: InputMaybe<SuperAdminUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<SuperAdminUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<SuperAdminUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type SuperAdminUsersCreatedConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type SuperAdminUsersCreatedCreateFieldInput = {
  node: UserCreateInput;
};

export type SuperAdminUsersCreatedDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type SuperAdminUsersCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type SuperAdminUsersCreatedUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type SuperAdminUsersCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<SuperAdminUsersCreatedConnectFieldInput>>;
  create?: InputMaybe<Array<SuperAdminUsersCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<SuperAdminUsersCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<SuperAdminUsersCreatedDisconnectFieldInput>>;
  update?: InputMaybe<SuperAdminUsersCreatedUpdateConnectionInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type SuperAdminWhere = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminWhere_Remote_Rel_ActivityLogsactionBySuperAdmin = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminWhere_Remote_Rel_DepositscreatedBySuperAdmin = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminWhere_Remote_Rel_DepositsupdatedBySuperAdmin = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminWhere_Remote_Rel_TasksassignedToSuperAdmin = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminWhere_Remote_Rel_TaskscreatedBySuperAdmin = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminWhere_Remote_Rel_TasksupdatedBySuperAdmin = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminWhere_Remote_Rel_WithdrawalscreatedBySuperAdmin = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminWhere_Remote_Rel_WithdrawalsupdatedBySuperAdmin = {
  AND?: InputMaybe<Array<SuperAdminWhere>>;
  NOT?: InputMaybe<SuperAdminWhere>;
  OR?: InputMaybe<Array<SuperAdminWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<SuperAdminBrandsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<SuperAdminBrandsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return SuperAdmins where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<SuperAdminBusinessesCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related SuperAdminBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<SuperAdminBusinessesCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return SuperAdmins where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<SuperAdminCustomersCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return SuperAdmins where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<SuperAdminFeaturePermissionsAggregateInput>;
  /** Return SuperAdmins where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return SuperAdmins where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return SuperAdmins where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsCreatedAggregate?: InputMaybe<SuperAdminTeamsCreatedAggregateInput>;
  /** Return SuperAdmins where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return SuperAdmins where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return SuperAdmins where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return SuperAdmins where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return SuperAdmins where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type SuperAdminsConnection = {
  __typename?: 'SuperAdminsConnection';
  edges: Array<SuperAdminEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type Team = {
  __typename?: 'Team';
  accessibleBrands: Array<Brand>;
  accessibleBrandsAggregate?: Maybe<TeamBrandAccessibleBrandsAggregationSelection>;
  accessibleBrandsConnection: TeamAccessibleBrandsConnection;
  commonPermissions?: Maybe<Array<TeamCommonPermision>>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<User>;
  createdByConnection: TeamCreatedByConnection;
  customers: Array<Customer>;
  customersAggregate?: Maybe<TeamCustomerCustomersAggregationSelection>;
  customersConnection: TeamCustomersConnection;
  featurePermissions: Array<FeaturePermission>;
  featurePermissionsAggregate?: Maybe<TeamFeaturePermissionFeaturePermissionsAggregationSelection>;
  featurePermissionsConnection: TeamFeaturePermissionsConnection;
  id: Scalars['ID'];
  isInternalTeam: Scalars['Boolean'];
  name: Scalars['String'];
  parentBusiness?: Maybe<Business>;
  parentBusinessAggregate?: Maybe<TeamBusinessParentBusinessAggregationSelection>;
  parentBusinessConnection: TeamParentBusinessConnection;
  updatedAt: Scalars['DateTime'];
  updatedBy?: Maybe<User>;
  updatedByConnection: TeamUpdatedByConnection;
  users: Array<User>;
  usersConnection: TeamUsersConnection;
};


export type TeamAccessibleBrandsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type TeamAccessibleBrandsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BrandWhere>;
};


export type TeamAccessibleBrandsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamAccessibleBrandsConnectionSort>>;
  where?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
};


export type TeamCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type TeamCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamCreatedByConnectionSort>>;
  where?: InputMaybe<TeamCreatedByConnectionWhere>;
};


export type TeamCustomersArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type TeamCustomersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


export type TeamCustomersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamCustomersConnectionSort>>;
  where?: InputMaybe<TeamCustomersConnectionWhere>;
};


export type TeamFeaturePermissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<FeaturePermissionOptions>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type TeamFeaturePermissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type TeamFeaturePermissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamFeaturePermissionsConnectionSort>>;
  where?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
};


export type TeamParentBusinessArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type TeamParentBusinessAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type TeamParentBusinessConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamParentBusinessConnectionSort>>;
  where?: InputMaybe<TeamParentBusinessConnectionWhere>;
};


export type TeamUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type TeamUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamUpdatedByConnectionSort>>;
  where?: InputMaybe<TeamUpdatedByConnectionWhere>;
};


export type TeamUsersArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type TeamUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamUsersConnectionSort>>;
  where?: InputMaybe<TeamUsersConnectionWhere>;
};

export type TeamAccessibleBrandsAggregateInput = {
  AND?: InputMaybe<Array<TeamAccessibleBrandsAggregateInput>>;
  NOT?: InputMaybe<TeamAccessibleBrandsAggregateInput>;
  OR?: InputMaybe<Array<TeamAccessibleBrandsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamAccessibleBrandsNodeAggregationWhereInput>;
};

export type TeamAccessibleBrandsConnectFieldInput = {
  connect?: InputMaybe<Array<BrandConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BrandConnectWhere>;
};

export type TeamAccessibleBrandsConnectOrCreateFieldInput = {
  onCreate: TeamAccessibleBrandsConnectOrCreateFieldInputOnCreate;
  where: BrandConnectOrCreateWhere;
};

export type TeamAccessibleBrandsConnectOrCreateFieldInputOnCreate = {
  node: BrandOnCreateInput;
};

export type TeamAccessibleBrandsConnection = {
  __typename?: 'TeamAccessibleBrandsConnection';
  edges: Array<TeamAccessibleBrandsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamAccessibleBrandsConnectionSort = {
  node?: InputMaybe<BrandSort>;
};

export type TeamAccessibleBrandsConnectionWhere = {
  AND?: InputMaybe<Array<TeamAccessibleBrandsConnectionWhere>>;
  NOT?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
  OR?: InputMaybe<Array<TeamAccessibleBrandsConnectionWhere>>;
  node?: InputMaybe<BrandWhere>;
};

export type TeamAccessibleBrandsCreateFieldInput = {
  node: BrandCreateInput;
};

export type TeamAccessibleBrandsDeleteFieldInput = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
};

export type TeamAccessibleBrandsDisconnectFieldInput = {
  disconnect?: InputMaybe<BrandDisconnectInput>;
  where?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
};

export type TeamAccessibleBrandsFieldInput = {
  connect?: InputMaybe<Array<TeamAccessibleBrandsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamAccessibleBrandsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamAccessibleBrandsCreateFieldInput>>;
};

export type TeamAccessibleBrandsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamAccessibleBrandsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamAccessibleBrandsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamAccessibleBrandsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type TeamAccessibleBrandsRelationship = {
  __typename?: 'TeamAccessibleBrandsRelationship';
  cursor: Scalars['String'];
  node: Brand;
};

export type TeamAccessibleBrandsUpdateConnectionInput = {
  node?: InputMaybe<BrandUpdateInput>;
};

export type TeamAccessibleBrandsUpdateFieldInput = {
  connect?: InputMaybe<Array<TeamAccessibleBrandsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamAccessibleBrandsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamAccessibleBrandsCreateFieldInput>>;
  delete?: InputMaybe<Array<TeamAccessibleBrandsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TeamAccessibleBrandsDisconnectFieldInput>>;
  update?: InputMaybe<TeamAccessibleBrandsUpdateConnectionInput>;
  where?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
};

export type TeamAggregateSelection = {
  __typename?: 'TeamAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type TeamBrandAccessibleBrandsAggregationSelection = {
  __typename?: 'TeamBrandAccessibleBrandsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamBrandAccessibleBrandsNodeAggregateSelection>;
};

export type TeamBrandAccessibleBrandsNodeAggregateSelection = {
  __typename?: 'TeamBrandAccessibleBrandsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type TeamBusinessParentBusinessAggregationSelection = {
  __typename?: 'TeamBusinessParentBusinessAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamBusinessParentBusinessNodeAggregateSelection>;
};

export type TeamBusinessParentBusinessNodeAggregateSelection = {
  __typename?: 'TeamBusinessParentBusinessNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type TeamCommonPermision = {
  __typename?: 'TeamCommonPermision';
  create: Scalars['Boolean'];
  delete: Scalars['Boolean'];
  featureType: FeatureType;
  read: Scalars['Boolean'];
  update: Scalars['Boolean'];
};

export type TeamCommonPermisionAggregateSelection = {
  __typename?: 'TeamCommonPermisionAggregateSelection';
  count: Scalars['Int'];
};

export type TeamCommonPermisionCreateInput = {
  create: Scalars['Boolean'];
  delete: Scalars['Boolean'];
  featureType: FeatureType;
  read: Scalars['Boolean'];
  update: Scalars['Boolean'];
};

export type TeamCommonPermisionEdge = {
  __typename?: 'TeamCommonPermisionEdge';
  cursor: Scalars['String'];
  node: TeamCommonPermision;
};

export type TeamCommonPermisionOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more TeamCommonPermisionSort objects to sort TeamCommonPermisions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<TeamCommonPermisionSort>>;
};

/** Fields to sort TeamCommonPermisions by. The order in which sorts are applied is not guaranteed when specifying many fields in one TeamCommonPermisionSort object. */
export type TeamCommonPermisionSort = {
  create?: InputMaybe<SortDirection>;
  delete?: InputMaybe<SortDirection>;
  featureType?: InputMaybe<SortDirection>;
  read?: InputMaybe<SortDirection>;
  update?: InputMaybe<SortDirection>;
};

export type TeamCommonPermisionUpdateInput = {
  create?: InputMaybe<Scalars['Boolean']>;
  delete?: InputMaybe<Scalars['Boolean']>;
  featureType?: InputMaybe<FeatureType>;
  read?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<Scalars['Boolean']>;
};

export type TeamCommonPermisionWhere = {
  AND?: InputMaybe<Array<TeamCommonPermisionWhere>>;
  NOT?: InputMaybe<TeamCommonPermisionWhere>;
  OR?: InputMaybe<Array<TeamCommonPermisionWhere>>;
  create?: InputMaybe<Scalars['Boolean']>;
  delete?: InputMaybe<Scalars['Boolean']>;
  featureType?: InputMaybe<FeatureType>;
  featureType_IN?: InputMaybe<Array<FeatureType>>;
  read?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<Scalars['Boolean']>;
};

export type TeamCommonPermisionsConnection = {
  __typename?: 'TeamCommonPermisionsConnection';
  edges: Array<TeamCommonPermisionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamConnectInput = {
  accessibleBrands?: InputMaybe<Array<TeamAccessibleBrandsConnectFieldInput>>;
  createdBy?: InputMaybe<TeamCreatedByConnectFieldInput>;
  customers?: InputMaybe<Array<TeamCustomersConnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<TeamFeaturePermissionsConnectFieldInput>>;
  parentBusiness?: InputMaybe<TeamParentBusinessConnectFieldInput>;
  updatedBy?: InputMaybe<TeamUpdatedByConnectFieldInput>;
  users?: InputMaybe<Array<TeamUsersConnectFieldInput>>;
};

export type TeamConnectOrCreateInput = {
  accessibleBrands?: InputMaybe<Array<TeamAccessibleBrandsConnectOrCreateFieldInput>>;
  customers?: InputMaybe<Array<TeamCustomersConnectOrCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<TeamFeaturePermissionsConnectOrCreateFieldInput>>;
  parentBusiness?: InputMaybe<TeamParentBusinessConnectOrCreateFieldInput>;
};

export type TeamConnectOrCreateWhere = {
  node: TeamUniqueWhere;
};

export type TeamConnectWhere = {
  node: TeamWhere;
};

export type TeamCreateInput = {
  accessibleBrands?: InputMaybe<TeamAccessibleBrandsFieldInput>;
  createdBy?: InputMaybe<TeamCreatedByFieldInput>;
  customers?: InputMaybe<TeamCustomersFieldInput>;
  featurePermissions?: InputMaybe<TeamFeaturePermissionsFieldInput>;
  isInternalTeam?: Scalars['Boolean'];
  name: Scalars['String'];
  parentBusiness?: InputMaybe<TeamParentBusinessFieldInput>;
  updatedBy?: InputMaybe<TeamUpdatedByFieldInput>;
  users?: InputMaybe<TeamUsersFieldInput>;
};

export type TeamCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type TeamCreatedByConnection = {
  __typename?: 'TeamCreatedByConnection';
  edges: Array<TeamCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type TeamCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<TeamCreatedByConnectionWhere>>;
  NOT?: InputMaybe<TeamCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<TeamCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type TeamCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type TeamCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<TeamCreatedByConnectionWhere>;
};

export type TeamCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<TeamCreatedByConnectionWhere>;
};

export type TeamCreatedByFieldInput = {
  connect?: InputMaybe<TeamCreatedByConnectFieldInput>;
  create?: InputMaybe<TeamCreatedByCreateFieldInput>;
};

export type TeamCreatedByRelationship = {
  __typename?: 'TeamCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type TeamCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type TeamCreatedByUpdateFieldInput = {
  connect?: InputMaybe<TeamCreatedByConnectFieldInput>;
  create?: InputMaybe<TeamCreatedByCreateFieldInput>;
  delete?: InputMaybe<TeamCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<TeamCreatedByDisconnectFieldInput>;
  update?: InputMaybe<TeamCreatedByUpdateConnectionInput>;
  where?: InputMaybe<TeamCreatedByConnectionWhere>;
};

export type TeamCustomerCustomersAggregationSelection = {
  __typename?: 'TeamCustomerCustomersAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamCustomerCustomersNodeAggregateSelection>;
};

export type TeamCustomerCustomersNodeAggregateSelection = {
  __typename?: 'TeamCustomerCustomersNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type TeamCustomersAggregateInput = {
  AND?: InputMaybe<Array<TeamCustomersAggregateInput>>;
  NOT?: InputMaybe<TeamCustomersAggregateInput>;
  OR?: InputMaybe<Array<TeamCustomersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamCustomersNodeAggregationWhereInput>;
};

export type TeamCustomersConnectFieldInput = {
  connect?: InputMaybe<Array<CustomerConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CustomerConnectWhere>;
};

export type TeamCustomersConnectOrCreateFieldInput = {
  onCreate: TeamCustomersConnectOrCreateFieldInputOnCreate;
  where: CustomerConnectOrCreateWhere;
};

export type TeamCustomersConnectOrCreateFieldInputOnCreate = {
  node: CustomerOnCreateInput;
};

export type TeamCustomersConnection = {
  __typename?: 'TeamCustomersConnection';
  edges: Array<TeamCustomersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamCustomersConnectionSort = {
  node?: InputMaybe<CustomerSort>;
};

export type TeamCustomersConnectionWhere = {
  AND?: InputMaybe<Array<TeamCustomersConnectionWhere>>;
  NOT?: InputMaybe<TeamCustomersConnectionWhere>;
  OR?: InputMaybe<Array<TeamCustomersConnectionWhere>>;
  node?: InputMaybe<CustomerWhere>;
};

export type TeamCustomersCreateFieldInput = {
  node: CustomerCreateInput;
};

export type TeamCustomersDeleteFieldInput = {
  delete?: InputMaybe<CustomerDeleteInput>;
  where?: InputMaybe<TeamCustomersConnectionWhere>;
};

export type TeamCustomersDisconnectFieldInput = {
  disconnect?: InputMaybe<CustomerDisconnectInput>;
  where?: InputMaybe<TeamCustomersConnectionWhere>;
};

export type TeamCustomersFieldInput = {
  connect?: InputMaybe<Array<TeamCustomersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamCustomersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamCustomersCreateFieldInput>>;
};

export type TeamCustomersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamCustomersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamCustomersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamCustomersNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type TeamCustomersRelationship = {
  __typename?: 'TeamCustomersRelationship';
  cursor: Scalars['String'];
  node: Customer;
};

export type TeamCustomersUpdateConnectionInput = {
  node?: InputMaybe<CustomerUpdateInput>;
};

export type TeamCustomersUpdateFieldInput = {
  connect?: InputMaybe<Array<TeamCustomersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamCustomersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamCustomersCreateFieldInput>>;
  delete?: InputMaybe<Array<TeamCustomersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TeamCustomersDisconnectFieldInput>>;
  update?: InputMaybe<TeamCustomersUpdateConnectionInput>;
  where?: InputMaybe<TeamCustomersConnectionWhere>;
};

export type TeamDeleteInput = {
  accessibleBrands?: InputMaybe<Array<TeamAccessibleBrandsDeleteFieldInput>>;
  createdBy?: InputMaybe<TeamCreatedByDeleteFieldInput>;
  customers?: InputMaybe<Array<TeamCustomersDeleteFieldInput>>;
  featurePermissions?: InputMaybe<Array<TeamFeaturePermissionsDeleteFieldInput>>;
  parentBusiness?: InputMaybe<TeamParentBusinessDeleteFieldInput>;
  updatedBy?: InputMaybe<TeamUpdatedByDeleteFieldInput>;
  users?: InputMaybe<Array<TeamUsersDeleteFieldInput>>;
};

export type TeamDisconnectInput = {
  accessibleBrands?: InputMaybe<Array<TeamAccessibleBrandsDisconnectFieldInput>>;
  createdBy?: InputMaybe<TeamCreatedByDisconnectFieldInput>;
  customers?: InputMaybe<Array<TeamCustomersDisconnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<TeamFeaturePermissionsDisconnectFieldInput>>;
  parentBusiness?: InputMaybe<TeamParentBusinessDisconnectFieldInput>;
  updatedBy?: InputMaybe<TeamUpdatedByDisconnectFieldInput>;
  users?: InputMaybe<Array<TeamUsersDisconnectFieldInput>>;
};

export type TeamEdge = {
  __typename?: 'TeamEdge';
  cursor: Scalars['String'];
  node: Team;
};

export type TeamFeaturePermissionFeaturePermissionsAggregationSelection = {
  __typename?: 'TeamFeaturePermissionFeaturePermissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamFeaturePermissionFeaturePermissionsNodeAggregateSelection>;
};

export type TeamFeaturePermissionFeaturePermissionsNodeAggregateSelection = {
  __typename?: 'TeamFeaturePermissionFeaturePermissionsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type TeamFeaturePermissionsAggregateInput = {
  AND?: InputMaybe<Array<TeamFeaturePermissionsAggregateInput>>;
  NOT?: InputMaybe<TeamFeaturePermissionsAggregateInput>;
  OR?: InputMaybe<Array<TeamFeaturePermissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamFeaturePermissionsNodeAggregationWhereInput>;
};

export type TeamFeaturePermissionsConnectFieldInput = {
  connect?: InputMaybe<Array<FeaturePermissionConnectInput>>;
  edge: UserFeaturePermissionCreateInput;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<FeaturePermissionConnectWhere>;
};

export type TeamFeaturePermissionsConnectOrCreateFieldInput = {
  onCreate: TeamFeaturePermissionsConnectOrCreateFieldInputOnCreate;
  where: FeaturePermissionConnectOrCreateWhere;
};

export type TeamFeaturePermissionsConnectOrCreateFieldInputOnCreate = {
  edge: UserFeaturePermissionCreateInput;
  node: FeaturePermissionOnCreateInput;
};

export type TeamFeaturePermissionsConnection = {
  __typename?: 'TeamFeaturePermissionsConnection';
  edges: Array<TeamFeaturePermissionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamFeaturePermissionsConnectionSort = {
  edge?: InputMaybe<UserFeaturePermissionSort>;
  node?: InputMaybe<FeaturePermissionSort>;
};

export type TeamFeaturePermissionsConnectionWhere = {
  AND?: InputMaybe<Array<TeamFeaturePermissionsConnectionWhere>>;
  NOT?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
  OR?: InputMaybe<Array<TeamFeaturePermissionsConnectionWhere>>;
  edge?: InputMaybe<UserFeaturePermissionWhere>;
  node?: InputMaybe<FeaturePermissionWhere>;
};

export type TeamFeaturePermissionsCreateFieldInput = {
  edge: UserFeaturePermissionCreateInput;
  node: FeaturePermissionCreateInput;
};

export type TeamFeaturePermissionsDeleteFieldInput = {
  delete?: InputMaybe<FeaturePermissionDeleteInput>;
  where?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
};

export type TeamFeaturePermissionsDisconnectFieldInput = {
  disconnect?: InputMaybe<FeaturePermissionDisconnectInput>;
  where?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
};

export type TeamFeaturePermissionsFieldInput = {
  connect?: InputMaybe<Array<TeamFeaturePermissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamFeaturePermissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamFeaturePermissionsCreateFieldInput>>;
};

export type TeamFeaturePermissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamFeaturePermissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamFeaturePermissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamFeaturePermissionsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type TeamFeaturePermissionsRelationship = UserFeaturePermission & {
  __typename?: 'TeamFeaturePermissionsRelationship';
  create: Scalars['Boolean'];
  cursor: Scalars['String'];
  delete: Scalars['Boolean'];
  node: FeaturePermission;
  read: Scalars['Boolean'];
  update: Scalars['Boolean'];
};

export type TeamFeaturePermissionsUpdateConnectionInput = {
  edge?: InputMaybe<UserFeaturePermissionUpdateInput>;
  node?: InputMaybe<FeaturePermissionUpdateInput>;
};

export type TeamFeaturePermissionsUpdateFieldInput = {
  connect?: InputMaybe<Array<TeamFeaturePermissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamFeaturePermissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamFeaturePermissionsCreateFieldInput>>;
  delete?: InputMaybe<Array<TeamFeaturePermissionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TeamFeaturePermissionsDisconnectFieldInput>>;
  update?: InputMaybe<TeamFeaturePermissionsUpdateConnectionInput>;
  where?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
};

export type TeamMember = User & {
  __typename?: 'TeamMember';
  accountCreate: Scalars['Boolean'];
  accountView: Scalars['Boolean'];
  activityLogCreate: Scalars['Boolean'];
  activityLogView: Scalars['Boolean'];
  brandsCreated: Array<Brand>;
  brandsCreatedAggregate?: Maybe<TeamMemberBrandBrandsCreatedAggregationSelection>;
  brandsCreatedConnection: TeamMemberBrandsCreatedConnection;
  businessesCreated: Array<Business>;
  businessesCreatedAggregate?: Maybe<TeamMemberBusinessBusinessesCreatedAggregationSelection>;
  businessesCreatedConnection: TeamMemberBusinessesCreatedConnection;
  createdAt: Scalars['DateTime'];
  createdBy: User;
  createdByConnection: UserCreatedByConnection;
  customerCreate: Scalars['Boolean'];
  customerView: Scalars['Boolean'];
  customersCreated: Array<Customer>;
  customersCreatedAggregate?: Maybe<TeamMemberCustomerCustomersCreatedAggregationSelection>;
  customersCreatedConnection: UserCustomersCreatedConnection;
  dashboardView: Scalars['Boolean'];
  depositCreate: Scalars['Boolean'];
  depositView: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions: Array<FeaturePermission>;
  featurePermissionsAggregate?: Maybe<TeamMemberFeaturePermissionFeaturePermissionsAggregationSelection>;
  featurePermissionsConnection: UserFeaturePermissionsConnection;
  firebaseId: Scalars['String'];
  id: Scalars['ID'];
  mailboxCreate: Scalars['Boolean'];
  mailboxView: Scalars['Boolean'];
  merchantCreate: Scalars['Boolean'];
  merchantView: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate: Scalars['Boolean'];
  settingsView: Scalars['Boolean'];
  taskCreate: Scalars['Boolean'];
  taskView: Scalars['Boolean'];
  teams: Array<Team>;
  teamsAggregate?: Maybe<TeamMemberTeamTeamsAggregationSelection>;
  teamsConnection: TeamMemberTeamsConnection;
  teamsCreated: Array<Team>;
  teamsCreatedAggregate?: Maybe<TeamMemberTeamTeamsCreatedAggregationSelection>;
  teamsCreatedConnection: UserTeamsCreatedConnection;
  updatedAt: Scalars['DateTime'];
  updatedBy: User;
  updatedByConnection: UserUpdatedByConnection;
  userCreate: Scalars['Boolean'];
  userType: UserType;
  userView: Scalars['Boolean'];
  usersCreated: Array<User>;
  usersCreatedConnection: UserUsersCreatedConnection;
  withdrawalCreate: Scalars['Boolean'];
  withdrawalView: Scalars['Boolean'];
};


export type TeamMemberBrandsCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type TeamMemberBrandsCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BrandWhere>;
};


export type TeamMemberBrandsCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamMemberBrandsCreatedConnectionSort>>;
  where?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
};


export type TeamMemberBusinessesCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type TeamMemberBusinessesCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<BusinessWhere>;
};


export type TeamMemberBusinessesCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectionSort>>;
  where?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
};


export type TeamMemberCreatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type TeamMemberCreatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserCreatedByConnectionSort>>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};


export type TeamMemberCustomersCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type TeamMemberCustomersCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<CustomerWhere>;
};


export type TeamMemberCustomersCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserCustomersCreatedConnectionSort>>;
  where?: InputMaybe<UserCustomersCreatedConnectionWhere>;
};


export type TeamMemberFeaturePermissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<FeaturePermissionOptions>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type TeamMemberFeaturePermissionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type TeamMemberFeaturePermissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserFeaturePermissionsConnectionSort>>;
  where?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
};


export type TeamMemberTeamsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type TeamMemberTeamsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type TeamMemberTeamsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<TeamMemberTeamsConnectionSort>>;
  where?: InputMaybe<TeamMemberTeamsConnectionWhere>;
};


export type TeamMemberTeamsCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type TeamMemberTeamsCreatedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  where?: InputMaybe<TeamWhere>;
};


export type TeamMemberTeamsCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserTeamsCreatedConnectionSort>>;
  where?: InputMaybe<UserTeamsCreatedConnectionWhere>;
};


export type TeamMemberUpdatedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type TeamMemberUpdatedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserUpdatedByConnectionSort>>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};


export type TeamMemberUsersCreatedArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type TeamMemberUsersCreatedConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserUsersCreatedConnectionSort>>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type TeamMemberAggregateSelection = {
  __typename?: 'TeamMemberAggregateSelection';
  count: Scalars['Int'];
  createdAt: DateTimeAggregateSelectionNonNullable;
  email: StringAggregateSelectionNonNullable;
  firebaseId: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type TeamMemberBrandBrandsCreatedAggregationSelection = {
  __typename?: 'TeamMemberBrandBrandsCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamMemberBrandBrandsCreatedNodeAggregateSelection>;
};

export type TeamMemberBrandBrandsCreatedNodeAggregateSelection = {
  __typename?: 'TeamMemberBrandBrandsCreatedNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type TeamMemberBrandsCreatedAggregateInput = {
  AND?: InputMaybe<Array<TeamMemberBrandsCreatedAggregateInput>>;
  NOT?: InputMaybe<TeamMemberBrandsCreatedAggregateInput>;
  OR?: InputMaybe<Array<TeamMemberBrandsCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamMemberBrandsCreatedNodeAggregationWhereInput>;
};

export type TeamMemberBrandsCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<BrandConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BrandConnectWhere>;
};

export type TeamMemberBrandsCreatedConnectOrCreateFieldInput = {
  onCreate: TeamMemberBrandsCreatedConnectOrCreateFieldInputOnCreate;
  where: BrandConnectOrCreateWhere;
};

export type TeamMemberBrandsCreatedConnectOrCreateFieldInputOnCreate = {
  node: BrandOnCreateInput;
};

export type TeamMemberBrandsCreatedConnection = {
  __typename?: 'TeamMemberBrandsCreatedConnection';
  edges: Array<TeamMemberBrandsCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamMemberBrandsCreatedConnectionSort = {
  node?: InputMaybe<BrandSort>;
};

export type TeamMemberBrandsCreatedConnectionWhere = {
  AND?: InputMaybe<Array<TeamMemberBrandsCreatedConnectionWhere>>;
  NOT?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
  OR?: InputMaybe<Array<TeamMemberBrandsCreatedConnectionWhere>>;
  node?: InputMaybe<BrandWhere>;
};

export type TeamMemberBrandsCreatedCreateFieldInput = {
  node: BrandCreateInput;
};

export type TeamMemberBrandsCreatedDeleteFieldInput = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
};

export type TeamMemberBrandsCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<BrandDisconnectInput>;
  where?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
};

export type TeamMemberBrandsCreatedFieldInput = {
  connect?: InputMaybe<Array<TeamMemberBrandsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamMemberBrandsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamMemberBrandsCreatedCreateFieldInput>>;
};

export type TeamMemberBrandsCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamMemberBrandsCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamMemberBrandsCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamMemberBrandsCreatedNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type TeamMemberBrandsCreatedRelationship = {
  __typename?: 'TeamMemberBrandsCreatedRelationship';
  cursor: Scalars['String'];
  node: Brand;
};

export type TeamMemberBrandsCreatedUpdateConnectionInput = {
  node?: InputMaybe<BrandUpdateInput>;
};

export type TeamMemberBrandsCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<TeamMemberBrandsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamMemberBrandsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamMemberBrandsCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<TeamMemberBrandsCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TeamMemberBrandsCreatedDisconnectFieldInput>>;
  update?: InputMaybe<TeamMemberBrandsCreatedUpdateConnectionInput>;
  where?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
};

export type TeamMemberBusinessBusinessesCreatedAggregationSelection = {
  __typename?: 'TeamMemberBusinessBusinessesCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamMemberBusinessBusinessesCreatedNodeAggregateSelection>;
};

export type TeamMemberBusinessBusinessesCreatedNodeAggregateSelection = {
  __typename?: 'TeamMemberBusinessBusinessesCreatedNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  contactNumber: StringAggregateSelectionNullable;
  contactPersonEmailAddress: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfIncorporation: DateTimeAggregateSelectionNullable;
  depositReference: StringAggregateSelectionNullable;
  id: IdAggregateSelectionNonNullable;
  incorporationDetails: StringAggregateSelectionNullable;
  logoUrl: StringAggregateSelectionNullable;
  name: StringAggregateSelectionNonNullable;
  nickname: StringAggregateSelectionNonNullable;
  phoneContact: StringAggregateSelectionNullable;
  placeOfIncorporation: StringAggregateSelectionNullable;
  primaryContactPerson: StringAggregateSelectionNullable;
  primaryContactPersonEmail: StringAggregateSelectionNullable;
  primaryContactPersonName: StringAggregateSelectionNullable;
  primaryContactPersonPhone: StringAggregateSelectionNullable;
  referralPartner: StringAggregateSelectionNullable;
  registrationNumber: StringAggregateSelectionNullable;
  skypeContact: StringAggregateSelectionNullable;
  telegramContact: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  website: StringAggregateSelectionNullable;
  websiteBrand: StringAggregateSelectionNullable;
  whatsappContact: StringAggregateSelectionNullable;
};

export type TeamMemberBusinessesCreatedAggregateInput = {
  AND?: InputMaybe<Array<TeamMemberBusinessesCreatedAggregateInput>>;
  NOT?: InputMaybe<TeamMemberBusinessesCreatedAggregateInput>;
  OR?: InputMaybe<Array<TeamMemberBusinessesCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamMemberBusinessesCreatedNodeAggregationWhereInput>;
};

export type TeamMemberBusinessesCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<BusinessConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type TeamMemberBusinessesCreatedConnectOrCreateFieldInput = {
  onCreate: TeamMemberBusinessesCreatedConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type TeamMemberBusinessesCreatedConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type TeamMemberBusinessesCreatedConnection = {
  __typename?: 'TeamMemberBusinessesCreatedConnection';
  edges: Array<TeamMemberBusinessesCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamMemberBusinessesCreatedConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type TeamMemberBusinessesCreatedConnectionWhere = {
  AND?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectionWhere>>;
  NOT?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
  OR?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type TeamMemberBusinessesCreatedCreateFieldInput = {
  node: BusinessCreateInput;
};

export type TeamMemberBusinessesCreatedDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
};

export type TeamMemberBusinessesCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
};

export type TeamMemberBusinessesCreatedFieldInput = {
  connect?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamMemberBusinessesCreatedCreateFieldInput>>;
};

export type TeamMemberBusinessesCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamMemberBusinessesCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamMemberBusinessesCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamMemberBusinessesCreatedNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type TeamMemberBusinessesCreatedRelationship = {
  __typename?: 'TeamMemberBusinessesCreatedRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type TeamMemberBusinessesCreatedUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type TeamMemberBusinessesCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamMemberBusinessesCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<TeamMemberBusinessesCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TeamMemberBusinessesCreatedDisconnectFieldInput>>;
  update?: InputMaybe<TeamMemberBusinessesCreatedUpdateConnectionInput>;
  where?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
};

export type TeamMemberConnectInput = {
  brandsCreated?: InputMaybe<Array<TeamMemberBrandsCreatedConnectFieldInput>>;
  businessesCreated?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectFieldInput>>;
  createdBy?: InputMaybe<TeamMemberCreatedByConnectFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedConnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectFieldInput>>;
  teams?: InputMaybe<Array<TeamMemberTeamsConnectFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedConnectFieldInput>>;
  updatedBy?: InputMaybe<TeamMemberUpdatedByConnectFieldInput>;
  usersCreated?: InputMaybe<Array<TeamMemberUsersCreatedConnectFieldInput>>;
};

export type TeamMemberConnectOrCreateInput = {
  brandsCreated?: InputMaybe<Array<TeamMemberBrandsCreatedConnectOrCreateFieldInput>>;
  businessesCreated?: InputMaybe<Array<TeamMemberBusinessesCreatedConnectOrCreateFieldInput>>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedConnectOrCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectOrCreateFieldInput>>;
  teams?: InputMaybe<Array<TeamMemberTeamsConnectOrCreateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedConnectOrCreateFieldInput>>;
};

export type TeamMemberCreateInput = {
  accountCreate?: Scalars['Boolean'];
  accountView?: Scalars['Boolean'];
  activityLogCreate?: Scalars['Boolean'];
  activityLogView?: Scalars['Boolean'];
  brandsCreated?: InputMaybe<TeamMemberBrandsCreatedFieldInput>;
  businessesCreated?: InputMaybe<TeamMemberBusinessesCreatedFieldInput>;
  createdBy?: InputMaybe<UserCreatedByFieldInput>;
  customerCreate?: Scalars['Boolean'];
  customerView?: Scalars['Boolean'];
  customersCreated?: InputMaybe<UserCustomersCreatedFieldInput>;
  dashboardView?: Scalars['Boolean'];
  depositCreate?: Scalars['Boolean'];
  depositView?: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions?: InputMaybe<UserFeaturePermissionsFieldInput>;
  firebaseId: Scalars['String'];
  mailboxCreate?: Scalars['Boolean'];
  mailboxView?: Scalars['Boolean'];
  merchantCreate?: Scalars['Boolean'];
  merchantView?: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate?: Scalars['Boolean'];
  settingsView?: Scalars['Boolean'];
  taskCreate?: Scalars['Boolean'];
  taskView?: Scalars['Boolean'];
  teams?: InputMaybe<TeamMemberTeamsFieldInput>;
  teamsCreated?: InputMaybe<UserTeamsCreatedFieldInput>;
  updatedBy?: InputMaybe<UserUpdatedByFieldInput>;
  userCreate?: Scalars['Boolean'];
  userType?: UserType;
  userView?: Scalars['Boolean'];
  usersCreated?: InputMaybe<UserUsersCreatedFieldInput>;
  withdrawalCreate?: Scalars['Boolean'];
  withdrawalView?: Scalars['Boolean'];
};

export type TeamMemberCreatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type TeamMemberCreatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type TeamMemberCreatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type TeamMemberCreatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type TeamMemberCreatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type TeamMemberCreatedByUpdateFieldInput = {
  connect?: InputMaybe<TeamMemberCreatedByConnectFieldInput>;
  create?: InputMaybe<TeamMemberCreatedByCreateFieldInput>;
  delete?: InputMaybe<TeamMemberCreatedByDeleteFieldInput>;
  disconnect?: InputMaybe<TeamMemberCreatedByDisconnectFieldInput>;
  update?: InputMaybe<TeamMemberCreatedByUpdateConnectionInput>;
  where?: InputMaybe<UserCreatedByConnectionWhere>;
};

export type TeamMemberCustomerCustomersCreatedAggregationSelection = {
  __typename?: 'TeamMemberCustomerCustomersCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamMemberCustomerCustomersCreatedNodeAggregateSelection>;
};

export type TeamMemberCustomerCustomersCreatedNodeAggregateSelection = {
  __typename?: 'TeamMemberCustomerCustomersCreatedNodeAggregateSelection';
  address: StringAggregateSelectionNullable;
  country: StringAggregateSelectionNullable;
  createdAt: DateTimeAggregateSelectionNonNullable;
  dateOfBirth: DateTimeAggregateSelectionNullable;
  email: StringAggregateSelectionNullable;
  firstName: StringAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  idNumber: StringAggregateSelectionNullable;
  lastName: StringAggregateSelectionNullable;
  phone: StringAggregateSelectionNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
  username: StringAggregateSelectionNonNullable;
};

export type TeamMemberCustomersCreatedAggregateInput = {
  AND?: InputMaybe<Array<TeamMemberCustomersCreatedAggregateInput>>;
  NOT?: InputMaybe<TeamMemberCustomersCreatedAggregateInput>;
  OR?: InputMaybe<Array<TeamMemberCustomersCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamMemberCustomersCreatedNodeAggregationWhereInput>;
};

export type TeamMemberCustomersCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamMemberCustomersCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamMemberCustomersCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamMemberCustomersCreatedNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  country_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  country_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  country_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfBirth_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  firstName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  firstName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  firstName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  idNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  idNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  idNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  lastName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  lastName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  lastName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type TeamMemberDeleteInput = {
  brandsCreated?: InputMaybe<Array<TeamMemberBrandsCreatedDeleteFieldInput>>;
  businessesCreated?: InputMaybe<Array<TeamMemberBusinessesCreatedDeleteFieldInput>>;
  createdBy?: InputMaybe<TeamMemberCreatedByDeleteFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedDeleteFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDeleteFieldInput>>;
  teams?: InputMaybe<Array<TeamMemberTeamsDeleteFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedDeleteFieldInput>>;
  updatedBy?: InputMaybe<TeamMemberUpdatedByDeleteFieldInput>;
  usersCreated?: InputMaybe<Array<TeamMemberUsersCreatedDeleteFieldInput>>;
};

export type TeamMemberDisconnectInput = {
  brandsCreated?: InputMaybe<Array<TeamMemberBrandsCreatedDisconnectFieldInput>>;
  businessesCreated?: InputMaybe<Array<TeamMemberBusinessesCreatedDisconnectFieldInput>>;
  createdBy?: InputMaybe<TeamMemberCreatedByDisconnectFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedDisconnectFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDisconnectFieldInput>>;
  teams?: InputMaybe<Array<TeamMemberTeamsDisconnectFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedDisconnectFieldInput>>;
  updatedBy?: InputMaybe<TeamMemberUpdatedByDisconnectFieldInput>;
  usersCreated?: InputMaybe<Array<TeamMemberUsersCreatedDisconnectFieldInput>>;
};

export type TeamMemberEdge = {
  __typename?: 'TeamMemberEdge';
  cursor: Scalars['String'];
  node: TeamMember;
};

export type TeamMemberFeaturePermissionFeaturePermissionsAggregationSelection = {
  __typename?: 'TeamMemberFeaturePermissionFeaturePermissionsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamMemberFeaturePermissionFeaturePermissionsNodeAggregateSelection>;
};

export type TeamMemberFeaturePermissionFeaturePermissionsNodeAggregateSelection = {
  __typename?: 'TeamMemberFeaturePermissionFeaturePermissionsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type TeamMemberFeaturePermissionsAggregateInput = {
  AND?: InputMaybe<Array<TeamMemberFeaturePermissionsAggregateInput>>;
  NOT?: InputMaybe<TeamMemberFeaturePermissionsAggregateInput>;
  OR?: InputMaybe<Array<TeamMemberFeaturePermissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamMemberFeaturePermissionsNodeAggregationWhereInput>;
};

export type TeamMemberFeaturePermissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamMemberFeaturePermissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamMemberFeaturePermissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamMemberFeaturePermissionsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type TeamMemberOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more TeamMemberSort objects to sort TeamMembers by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<TeamMemberSort>>;
};

export type TeamMemberRelationInput = {
  brandsCreated?: InputMaybe<Array<TeamMemberBrandsCreatedCreateFieldInput>>;
  businessesCreated?: InputMaybe<Array<TeamMemberBusinessesCreatedCreateFieldInput>>;
  createdBy?: InputMaybe<TeamMemberCreatedByCreateFieldInput>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsCreateFieldInput>>;
  teams?: InputMaybe<Array<TeamMemberTeamsCreateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedCreateFieldInput>>;
  updatedBy?: InputMaybe<TeamMemberUpdatedByCreateFieldInput>;
  usersCreated?: InputMaybe<Array<TeamMemberUsersCreatedCreateFieldInput>>;
};

/** Fields to sort TeamMembers by. The order in which sorts are applied is not guaranteed when specifying many fields in one TeamMemberSort object. */
export type TeamMemberSort = {
  accountCreate?: InputMaybe<SortDirection>;
  accountView?: InputMaybe<SortDirection>;
  activityLogCreate?: InputMaybe<SortDirection>;
  activityLogView?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  customerCreate?: InputMaybe<SortDirection>;
  customerView?: InputMaybe<SortDirection>;
  dashboardView?: InputMaybe<SortDirection>;
  depositCreate?: InputMaybe<SortDirection>;
  depositView?: InputMaybe<SortDirection>;
  email?: InputMaybe<SortDirection>;
  firebaseId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  mailboxCreate?: InputMaybe<SortDirection>;
  mailboxView?: InputMaybe<SortDirection>;
  merchantCreate?: InputMaybe<SortDirection>;
  merchantView?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  settingsCreate?: InputMaybe<SortDirection>;
  settingsView?: InputMaybe<SortDirection>;
  taskCreate?: InputMaybe<SortDirection>;
  taskView?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  userCreate?: InputMaybe<SortDirection>;
  userType?: InputMaybe<SortDirection>;
  userView?: InputMaybe<SortDirection>;
  withdrawalCreate?: InputMaybe<SortDirection>;
  withdrawalView?: InputMaybe<SortDirection>;
};

export type TeamMemberTeamTeamsAggregationSelection = {
  __typename?: 'TeamMemberTeamTeamsAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamMemberTeamTeamsNodeAggregateSelection>;
};

export type TeamMemberTeamTeamsCreatedAggregationSelection = {
  __typename?: 'TeamMemberTeamTeamsCreatedAggregationSelection';
  count: Scalars['Int'];
  node?: Maybe<TeamMemberTeamTeamsCreatedNodeAggregateSelection>;
};

export type TeamMemberTeamTeamsCreatedNodeAggregateSelection = {
  __typename?: 'TeamMemberTeamTeamsCreatedNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type TeamMemberTeamTeamsNodeAggregateSelection = {
  __typename?: 'TeamMemberTeamTeamsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelectionNonNullable;
  id: IdAggregateSelectionNonNullable;
  name: StringAggregateSelectionNonNullable;
  updatedAt: DateTimeAggregateSelectionNonNullable;
};

export type TeamMemberTeamsAggregateInput = {
  AND?: InputMaybe<Array<TeamMemberTeamsAggregateInput>>;
  NOT?: InputMaybe<TeamMemberTeamsAggregateInput>;
  OR?: InputMaybe<Array<TeamMemberTeamsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamMemberTeamsNodeAggregationWhereInput>;
};

export type TeamMemberTeamsConnectFieldInput = {
  connect?: InputMaybe<Array<TeamConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<TeamConnectWhere>;
};

export type TeamMemberTeamsConnectOrCreateFieldInput = {
  onCreate: TeamMemberTeamsConnectOrCreateFieldInputOnCreate;
  where: TeamConnectOrCreateWhere;
};

export type TeamMemberTeamsConnectOrCreateFieldInputOnCreate = {
  node: TeamOnCreateInput;
};

export type TeamMemberTeamsConnection = {
  __typename?: 'TeamMemberTeamsConnection';
  edges: Array<TeamMemberTeamsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamMemberTeamsConnectionSort = {
  node?: InputMaybe<TeamSort>;
};

export type TeamMemberTeamsConnectionWhere = {
  AND?: InputMaybe<Array<TeamMemberTeamsConnectionWhere>>;
  NOT?: InputMaybe<TeamMemberTeamsConnectionWhere>;
  OR?: InputMaybe<Array<TeamMemberTeamsConnectionWhere>>;
  node?: InputMaybe<TeamWhere>;
};

export type TeamMemberTeamsCreateFieldInput = {
  node: TeamCreateInput;
};

export type TeamMemberTeamsCreatedAggregateInput = {
  AND?: InputMaybe<Array<TeamMemberTeamsCreatedAggregateInput>>;
  NOT?: InputMaybe<TeamMemberTeamsCreatedAggregateInput>;
  OR?: InputMaybe<Array<TeamMemberTeamsCreatedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamMemberTeamsCreatedNodeAggregationWhereInput>;
};

export type TeamMemberTeamsCreatedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamMemberTeamsCreatedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamMemberTeamsCreatedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamMemberTeamsCreatedNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type TeamMemberTeamsDeleteFieldInput = {
  delete?: InputMaybe<TeamDeleteInput>;
  where?: InputMaybe<TeamMemberTeamsConnectionWhere>;
};

export type TeamMemberTeamsDisconnectFieldInput = {
  disconnect?: InputMaybe<TeamDisconnectInput>;
  where?: InputMaybe<TeamMemberTeamsConnectionWhere>;
};

export type TeamMemberTeamsFieldInput = {
  connect?: InputMaybe<Array<TeamMemberTeamsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamMemberTeamsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamMemberTeamsCreateFieldInput>>;
};

export type TeamMemberTeamsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamMemberTeamsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamMemberTeamsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamMemberTeamsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type TeamMemberTeamsRelationship = {
  __typename?: 'TeamMemberTeamsRelationship';
  cursor: Scalars['String'];
  node: Team;
};

export type TeamMemberTeamsUpdateConnectionInput = {
  node?: InputMaybe<TeamUpdateInput>;
};

export type TeamMemberTeamsUpdateFieldInput = {
  connect?: InputMaybe<Array<TeamMemberTeamsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TeamMemberTeamsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TeamMemberTeamsCreateFieldInput>>;
  delete?: InputMaybe<Array<TeamMemberTeamsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TeamMemberTeamsDisconnectFieldInput>>;
  update?: InputMaybe<TeamMemberTeamsUpdateConnectionInput>;
  where?: InputMaybe<TeamMemberTeamsConnectionWhere>;
};

export type TeamMemberUpdateInput = {
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreated?: InputMaybe<Array<TeamMemberBrandsCreatedUpdateFieldInput>>;
  businessesCreated?: InputMaybe<Array<TeamMemberBusinessesCreatedUpdateFieldInput>>;
  createdBy?: InputMaybe<TeamMemberCreatedByUpdateFieldInput>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreated?: InputMaybe<Array<UserCustomersCreatedUpdateFieldInput>>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsUpdateFieldInput>>;
  firebaseId?: InputMaybe<Scalars['String']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teams?: InputMaybe<Array<TeamMemberTeamsUpdateFieldInput>>;
  teamsCreated?: InputMaybe<Array<UserTeamsCreatedUpdateFieldInput>>;
  updatedBy?: InputMaybe<TeamMemberUpdatedByUpdateFieldInput>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userView?: InputMaybe<Scalars['Boolean']>;
  usersCreated?: InputMaybe<Array<TeamMemberUsersCreatedUpdateFieldInput>>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type TeamMemberUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type TeamMemberUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type TeamMemberUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type TeamMemberUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type TeamMemberUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type TeamMemberUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<TeamMemberUpdatedByConnectFieldInput>;
  create?: InputMaybe<TeamMemberUpdatedByCreateFieldInput>;
  delete?: InputMaybe<TeamMemberUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<TeamMemberUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<TeamMemberUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<UserUpdatedByConnectionWhere>;
};

export type TeamMemberUsersCreatedConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type TeamMemberUsersCreatedCreateFieldInput = {
  node: UserCreateInput;
};

export type TeamMemberUsersCreatedDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type TeamMemberUsersCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type TeamMemberUsersCreatedUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type TeamMemberUsersCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<TeamMemberUsersCreatedConnectFieldInput>>;
  create?: InputMaybe<Array<TeamMemberUsersCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<TeamMemberUsersCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TeamMemberUsersCreatedDisconnectFieldInput>>;
  update?: InputMaybe<TeamMemberUsersCreatedUpdateConnectionInput>;
  where?: InputMaybe<UserUsersCreatedConnectionWhere>;
};

export type TeamMemberWhere = {
  AND?: InputMaybe<Array<TeamMemberWhere>>;
  NOT?: InputMaybe<TeamMemberWhere>;
  OR?: InputMaybe<Array<TeamMemberWhere>>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  brandsCreatedAggregate?: InputMaybe<TeamMemberBrandsCreatedAggregateInput>;
  /** Return TeamMembers where all of the related TeamMemberBrandsCreatedConnections match this filter */
  brandsCreatedConnection_ALL?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
  /** Return TeamMembers where none of the related TeamMemberBrandsCreatedConnections match this filter */
  brandsCreatedConnection_NONE?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
  /** Return TeamMembers where one of the related TeamMemberBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SINGLE?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
  /** Return TeamMembers where some of the related TeamMemberBrandsCreatedConnections match this filter */
  brandsCreatedConnection_SOME?: InputMaybe<TeamMemberBrandsCreatedConnectionWhere>;
  /** Return TeamMembers where all of the related Brands match this filter */
  brandsCreated_ALL?: InputMaybe<BrandWhere>;
  /** Return TeamMembers where none of the related Brands match this filter */
  brandsCreated_NONE?: InputMaybe<BrandWhere>;
  /** Return TeamMembers where one of the related Brands match this filter */
  brandsCreated_SINGLE?: InputMaybe<BrandWhere>;
  /** Return TeamMembers where some of the related Brands match this filter */
  brandsCreated_SOME?: InputMaybe<BrandWhere>;
  businessesCreatedAggregate?: InputMaybe<TeamMemberBusinessesCreatedAggregateInput>;
  /** Return TeamMembers where all of the related TeamMemberBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_ALL?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
  /** Return TeamMembers where none of the related TeamMemberBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_NONE?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
  /** Return TeamMembers where one of the related TeamMemberBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SINGLE?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
  /** Return TeamMembers where some of the related TeamMemberBusinessesCreatedConnections match this filter */
  businessesCreatedConnection_SOME?: InputMaybe<TeamMemberBusinessesCreatedConnectionWhere>;
  /** Return TeamMembers where all of the related Businesses match this filter */
  businessesCreated_ALL?: InputMaybe<BusinessWhere>;
  /** Return TeamMembers where none of the related Businesses match this filter */
  businessesCreated_NONE?: InputMaybe<BusinessWhere>;
  /** Return TeamMembers where one of the related Businesses match this filter */
  businessesCreated_SINGLE?: InputMaybe<BusinessWhere>;
  /** Return TeamMembers where some of the related Businesses match this filter */
  businessesCreated_SOME?: InputMaybe<BusinessWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<UserCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  customersCreatedAggregate?: InputMaybe<TeamMemberCustomersCreatedAggregateInput>;
  /** Return TeamMembers where all of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_ALL?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return TeamMembers where none of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_NONE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return TeamMembers where one of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SINGLE?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return TeamMembers where some of the related UserCustomersCreatedConnections match this filter */
  customersCreatedConnection_SOME?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  /** Return TeamMembers where all of the related Customers match this filter */
  customersCreated_ALL?: InputMaybe<CustomerWhere>;
  /** Return TeamMembers where none of the related Customers match this filter */
  customersCreated_NONE?: InputMaybe<CustomerWhere>;
  /** Return TeamMembers where one of the related Customers match this filter */
  customersCreated_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return TeamMembers where some of the related Customers match this filter */
  customersCreated_SOME?: InputMaybe<CustomerWhere>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_MATCHES?: InputMaybe<Scalars['String']>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<TeamMemberFeaturePermissionsAggregateInput>;
  /** Return TeamMembers where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return TeamMembers where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return TeamMembers where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return TeamMembers where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return TeamMembers where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return TeamMembers where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return TeamMembers where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return TeamMembers where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_MATCHES?: InputMaybe<Scalars['String']>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  teamsAggregate?: InputMaybe<TeamMemberTeamsAggregateInput>;
  /** Return TeamMembers where all of the related TeamMemberTeamsConnections match this filter */
  teamsConnection_ALL?: InputMaybe<TeamMemberTeamsConnectionWhere>;
  /** Return TeamMembers where none of the related TeamMemberTeamsConnections match this filter */
  teamsConnection_NONE?: InputMaybe<TeamMemberTeamsConnectionWhere>;
  /** Return TeamMembers where one of the related TeamMemberTeamsConnections match this filter */
  teamsConnection_SINGLE?: InputMaybe<TeamMemberTeamsConnectionWhere>;
  /** Return TeamMembers where some of the related TeamMemberTeamsConnections match this filter */
  teamsConnection_SOME?: InputMaybe<TeamMemberTeamsConnectionWhere>;
  teamsCreatedAggregate?: InputMaybe<TeamMemberTeamsCreatedAggregateInput>;
  /** Return TeamMembers where all of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_ALL?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return TeamMembers where none of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_NONE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return TeamMembers where one of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SINGLE?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return TeamMembers where some of the related UserTeamsCreatedConnections match this filter */
  teamsCreatedConnection_SOME?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  /** Return TeamMembers where all of the related Teams match this filter */
  teamsCreated_ALL?: InputMaybe<TeamWhere>;
  /** Return TeamMembers where none of the related Teams match this filter */
  teamsCreated_NONE?: InputMaybe<TeamWhere>;
  /** Return TeamMembers where one of the related Teams match this filter */
  teamsCreated_SINGLE?: InputMaybe<TeamWhere>;
  /** Return TeamMembers where some of the related Teams match this filter */
  teamsCreated_SOME?: InputMaybe<TeamWhere>;
  /** Return TeamMembers where all of the related Teams match this filter */
  teams_ALL?: InputMaybe<TeamWhere>;
  /** Return TeamMembers where none of the related Teams match this filter */
  teams_NONE?: InputMaybe<TeamWhere>;
  /** Return TeamMembers where one of the related Teams match this filter */
  teams_SINGLE?: InputMaybe<TeamWhere>;
  /** Return TeamMembers where some of the related Teams match this filter */
  teams_SOME?: InputMaybe<TeamWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<UserUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  /** Return TeamMembers where all of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_ALL?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return TeamMembers where none of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_NONE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return TeamMembers where one of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SINGLE?: InputMaybe<UserUsersCreatedConnectionWhere>;
  /** Return TeamMembers where some of the related UserUsersCreatedConnections match this filter */
  usersCreatedConnection_SOME?: InputMaybe<UserUsersCreatedConnectionWhere>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type TeamMembersConnection = {
  __typename?: 'TeamMembersConnection';
  edges: Array<TeamMemberEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamOnCreateInput = {
  isInternalTeam?: Scalars['Boolean'];
  name: Scalars['String'];
};

export type TeamOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more TeamSort objects to sort Teams by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<TeamSort>>;
};

export type TeamParentBusinessAggregateInput = {
  AND?: InputMaybe<Array<TeamParentBusinessAggregateInput>>;
  NOT?: InputMaybe<TeamParentBusinessAggregateInput>;
  OR?: InputMaybe<Array<TeamParentBusinessAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<TeamParentBusinessNodeAggregationWhereInput>;
};

export type TeamParentBusinessConnectFieldInput = {
  connect?: InputMaybe<BusinessConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<BusinessConnectWhere>;
};

export type TeamParentBusinessConnectOrCreateFieldInput = {
  onCreate: TeamParentBusinessConnectOrCreateFieldInputOnCreate;
  where: BusinessConnectOrCreateWhere;
};

export type TeamParentBusinessConnectOrCreateFieldInputOnCreate = {
  node: BusinessOnCreateInput;
};

export type TeamParentBusinessConnection = {
  __typename?: 'TeamParentBusinessConnection';
  edges: Array<TeamParentBusinessRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamParentBusinessConnectionSort = {
  node?: InputMaybe<BusinessSort>;
};

export type TeamParentBusinessConnectionWhere = {
  AND?: InputMaybe<Array<TeamParentBusinessConnectionWhere>>;
  NOT?: InputMaybe<TeamParentBusinessConnectionWhere>;
  OR?: InputMaybe<Array<TeamParentBusinessConnectionWhere>>;
  node?: InputMaybe<BusinessWhere>;
};

export type TeamParentBusinessCreateFieldInput = {
  node: BusinessCreateInput;
};

export type TeamParentBusinessDeleteFieldInput = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<TeamParentBusinessConnectionWhere>;
};

export type TeamParentBusinessDisconnectFieldInput = {
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  where?: InputMaybe<TeamParentBusinessConnectionWhere>;
};

export type TeamParentBusinessFieldInput = {
  connect?: InputMaybe<TeamParentBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<TeamParentBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<TeamParentBusinessCreateFieldInput>;
};

export type TeamParentBusinessNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TeamParentBusinessNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TeamParentBusinessNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TeamParentBusinessNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  contactPersonEmailAddress_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  contactPersonEmailAddress_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  dateOfIncorporation_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  depositReference_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  depositReference_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  depositReference_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  depositReference_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  incorporationDetails_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  incorporationDetails_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  incorporationDetails_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  logoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  logoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  logoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  nickname_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  nickname_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  nickname_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  phoneContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  phoneContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  phoneContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  placeOfIncorporation_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  placeOfIncorporation_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonEmail_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonEmail_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPersonPhone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPersonPhone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  primaryContactPerson_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  primaryContactPerson_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  referralPartner_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  referralPartner_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  referralPartner_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  registrationNumber_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  registrationNumber_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  registrationNumber_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  skypeContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  skypeContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  skypeContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  telegramContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  telegramContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  telegramContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  websiteBrand_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  websiteBrand_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  websiteBrand_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  websiteBrand_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  website_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  website_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  website_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>;
  whatsappContact_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>;
  whatsappContact_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>;
  whatsappContact_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>;
};

export type TeamParentBusinessRelationship = {
  __typename?: 'TeamParentBusinessRelationship';
  cursor: Scalars['String'];
  node: Business;
};

export type TeamParentBusinessUpdateConnectionInput = {
  node?: InputMaybe<BusinessUpdateInput>;
};

export type TeamParentBusinessUpdateFieldInput = {
  connect?: InputMaybe<TeamParentBusinessConnectFieldInput>;
  connectOrCreate?: InputMaybe<TeamParentBusinessConnectOrCreateFieldInput>;
  create?: InputMaybe<TeamParentBusinessCreateFieldInput>;
  delete?: InputMaybe<TeamParentBusinessDeleteFieldInput>;
  disconnect?: InputMaybe<TeamParentBusinessDisconnectFieldInput>;
  update?: InputMaybe<TeamParentBusinessUpdateConnectionInput>;
  where?: InputMaybe<TeamParentBusinessConnectionWhere>;
};

export type TeamRelationInput = {
  accessibleBrands?: InputMaybe<Array<TeamAccessibleBrandsCreateFieldInput>>;
  createdBy?: InputMaybe<TeamCreatedByCreateFieldInput>;
  customers?: InputMaybe<Array<TeamCustomersCreateFieldInput>>;
  featurePermissions?: InputMaybe<Array<TeamFeaturePermissionsCreateFieldInput>>;
  parentBusiness?: InputMaybe<TeamParentBusinessCreateFieldInput>;
  updatedBy?: InputMaybe<TeamUpdatedByCreateFieldInput>;
  users?: InputMaybe<Array<TeamUsersCreateFieldInput>>;
};

/** Fields to sort Teams by. The order in which sorts are applied is not guaranteed when specifying many fields in one TeamSort object. */
export type TeamSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isInternalTeam?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type TeamUniqueWhere = {
  id?: InputMaybe<Scalars['ID']>;
};

export type TeamUpdateInput = {
  accessibleBrands?: InputMaybe<Array<TeamAccessibleBrandsUpdateFieldInput>>;
  createdBy?: InputMaybe<TeamCreatedByUpdateFieldInput>;
  customers?: InputMaybe<Array<TeamCustomersUpdateFieldInput>>;
  featurePermissions?: InputMaybe<Array<TeamFeaturePermissionsUpdateFieldInput>>;
  isInternalTeam?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  parentBusiness?: InputMaybe<TeamParentBusinessUpdateFieldInput>;
  updatedBy?: InputMaybe<TeamUpdatedByUpdateFieldInput>;
  users?: InputMaybe<Array<TeamUsersUpdateFieldInput>>;
};

export type TeamUpdatedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type TeamUpdatedByConnection = {
  __typename?: 'TeamUpdatedByConnection';
  edges: Array<TeamUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type TeamUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<TeamUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<TeamUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<TeamUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type TeamUpdatedByCreateFieldInput = {
  node: UserCreateInput;
};

export type TeamUpdatedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<TeamUpdatedByConnectionWhere>;
};

export type TeamUpdatedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<TeamUpdatedByConnectionWhere>;
};

export type TeamUpdatedByFieldInput = {
  connect?: InputMaybe<TeamUpdatedByConnectFieldInput>;
  create?: InputMaybe<TeamUpdatedByCreateFieldInput>;
};

export type TeamUpdatedByRelationship = {
  __typename?: 'TeamUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type TeamUpdatedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type TeamUpdatedByUpdateFieldInput = {
  connect?: InputMaybe<TeamUpdatedByConnectFieldInput>;
  create?: InputMaybe<TeamUpdatedByCreateFieldInput>;
  delete?: InputMaybe<TeamUpdatedByDeleteFieldInput>;
  disconnect?: InputMaybe<TeamUpdatedByDisconnectFieldInput>;
  update?: InputMaybe<TeamUpdatedByUpdateConnectionInput>;
  where?: InputMaybe<TeamUpdatedByConnectionWhere>;
};

export type TeamUsersConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type TeamUsersConnection = {
  __typename?: 'TeamUsersConnection';
  edges: Array<TeamUsersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type TeamUsersConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type TeamUsersConnectionWhere = {
  AND?: InputMaybe<Array<TeamUsersConnectionWhere>>;
  NOT?: InputMaybe<TeamUsersConnectionWhere>;
  OR?: InputMaybe<Array<TeamUsersConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type TeamUsersCreateFieldInput = {
  node: UserCreateInput;
};

export type TeamUsersDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<TeamUsersConnectionWhere>;
};

export type TeamUsersDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<TeamUsersConnectionWhere>;
};

export type TeamUsersFieldInput = {
  connect?: InputMaybe<Array<TeamUsersConnectFieldInput>>;
  create?: InputMaybe<Array<TeamUsersCreateFieldInput>>;
};

export type TeamUsersRelationship = {
  __typename?: 'TeamUsersRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type TeamUsersUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type TeamUsersUpdateFieldInput = {
  connect?: InputMaybe<Array<TeamUsersConnectFieldInput>>;
  create?: InputMaybe<Array<TeamUsersCreateFieldInput>>;
  delete?: InputMaybe<Array<TeamUsersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TeamUsersDisconnectFieldInput>>;
  update?: InputMaybe<TeamUsersUpdateConnectionInput>;
  where?: InputMaybe<TeamUsersConnectionWhere>;
};

export type TeamWhere = {
  AND?: InputMaybe<Array<TeamWhere>>;
  NOT?: InputMaybe<TeamWhere>;
  OR?: InputMaybe<Array<TeamWhere>>;
  accessibleBrandsAggregate?: InputMaybe<TeamAccessibleBrandsAggregateInput>;
  /** Return Teams where all of the related TeamAccessibleBrandsConnections match this filter */
  accessibleBrandsConnection_ALL?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
  /** Return Teams where none of the related TeamAccessibleBrandsConnections match this filter */
  accessibleBrandsConnection_NONE?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
  /** Return Teams where one of the related TeamAccessibleBrandsConnections match this filter */
  accessibleBrandsConnection_SINGLE?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
  /** Return Teams where some of the related TeamAccessibleBrandsConnections match this filter */
  accessibleBrandsConnection_SOME?: InputMaybe<TeamAccessibleBrandsConnectionWhere>;
  /** Return Teams where all of the related Brands match this filter */
  accessibleBrands_ALL?: InputMaybe<BrandWhere>;
  /** Return Teams where none of the related Brands match this filter */
  accessibleBrands_NONE?: InputMaybe<BrandWhere>;
  /** Return Teams where one of the related Brands match this filter */
  accessibleBrands_SINGLE?: InputMaybe<BrandWhere>;
  /** Return Teams where some of the related Brands match this filter */
  accessibleBrands_SOME?: InputMaybe<BrandWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']>;
  createdByConnection?: InputMaybe<TeamCreatedByConnectionWhere>;
  createdByConnection_NOT?: InputMaybe<TeamCreatedByConnectionWhere>;
  customersAggregate?: InputMaybe<TeamCustomersAggregateInput>;
  /** Return Teams where all of the related TeamCustomersConnections match this filter */
  customersConnection_ALL?: InputMaybe<TeamCustomersConnectionWhere>;
  /** Return Teams where none of the related TeamCustomersConnections match this filter */
  customersConnection_NONE?: InputMaybe<TeamCustomersConnectionWhere>;
  /** Return Teams where one of the related TeamCustomersConnections match this filter */
  customersConnection_SINGLE?: InputMaybe<TeamCustomersConnectionWhere>;
  /** Return Teams where some of the related TeamCustomersConnections match this filter */
  customersConnection_SOME?: InputMaybe<TeamCustomersConnectionWhere>;
  /** Return Teams where all of the related Customers match this filter */
  customers_ALL?: InputMaybe<CustomerWhere>;
  /** Return Teams where none of the related Customers match this filter */
  customers_NONE?: InputMaybe<CustomerWhere>;
  /** Return Teams where one of the related Customers match this filter */
  customers_SINGLE?: InputMaybe<CustomerWhere>;
  /** Return Teams where some of the related Customers match this filter */
  customers_SOME?: InputMaybe<CustomerWhere>;
  featurePermissionsAggregate?: InputMaybe<TeamFeaturePermissionsAggregateInput>;
  /** Return Teams where all of the related TeamFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
  /** Return Teams where none of the related TeamFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
  /** Return Teams where one of the related TeamFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
  /** Return Teams where some of the related TeamFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<TeamFeaturePermissionsConnectionWhere>;
  /** Return Teams where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Teams where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Teams where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Teams where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  isInternalTeam?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_MATCHES?: InputMaybe<Scalars['String']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  parentBusiness?: InputMaybe<BusinessWhere>;
  parentBusinessAggregate?: InputMaybe<TeamParentBusinessAggregateInput>;
  parentBusinessConnection?: InputMaybe<TeamParentBusinessConnectionWhere>;
  parentBusinessConnection_NOT?: InputMaybe<TeamParentBusinessConnectionWhere>;
  parentBusiness_NOT?: InputMaybe<BusinessWhere>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedByConnection?: InputMaybe<TeamUpdatedByConnectionWhere>;
  updatedByConnection_NOT?: InputMaybe<TeamUpdatedByConnectionWhere>;
  /** Return Teams where all of the related TeamUsersConnections match this filter */
  usersConnection_ALL?: InputMaybe<TeamUsersConnectionWhere>;
  /** Return Teams where none of the related TeamUsersConnections match this filter */
  usersConnection_NONE?: InputMaybe<TeamUsersConnectionWhere>;
  /** Return Teams where one of the related TeamUsersConnections match this filter */
  usersConnection_SINGLE?: InputMaybe<TeamUsersConnectionWhere>;
  /** Return Teams where some of the related TeamUsersConnections match this filter */
  usersConnection_SOME?: InputMaybe<TeamUsersConnectionWhere>;
};

export type TeamsConnection = {
  __typename?: 'TeamsConnection';
  edges: Array<TeamEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type UpdateAccountsMutationResponse = {
  __typename?: 'UpdateAccountsMutationResponse';
  accounts: Array<Account>;
  info: UpdateInfo;
};

export type UpdateAlternateMethodSolutionsMutationResponse = {
  __typename?: 'UpdateAlternateMethodSolutionsMutationResponse';
  alternateMethodSolutions: Array<AlternateMethodSolution>;
  info: UpdateInfo;
};

export type UpdateBankWireSolutionsMutationResponse = {
  __typename?: 'UpdateBankWireSolutionsMutationResponse';
  bankWireSolutions: Array<BankWireSolution>;
  info: UpdateInfo;
};

export type UpdateBanksMutationResponse = {
  __typename?: 'UpdateBanksMutationResponse';
  banks: Array<Bank>;
  info: UpdateInfo;
};

export type UpdateBaseCurrencyConversionRatesMutationResponse = {
  __typename?: 'UpdateBaseCurrencyConversionRatesMutationResponse';
  baseCurrencyConversionRates: Array<BaseCurrencyConversionRate>;
  info: UpdateInfo;
};

export type UpdateBeneficiariesMutationResponse = {
  __typename?: 'UpdateBeneficiariesMutationResponse';
  beneficiaries: Array<Beneficiary>;
  info: UpdateInfo;
};

export type UpdateBrandsMutationResponse = {
  __typename?: 'UpdateBrandsMutationResponse';
  brands: Array<Brand>;
  info: UpdateInfo;
};

export type UpdateBusinessCurrencyConversionFeesMutationResponse = {
  __typename?: 'UpdateBusinessCurrencyConversionFeesMutationResponse';
  businessCurrencyConversionFees: Array<BusinessCurrencyConversionFees>;
  info: UpdateInfo;
};

export type UpdateBusinessCurrencyConversionMarkupsMutationResponse = {
  __typename?: 'UpdateBusinessCurrencyConversionMarkupsMutationResponse';
  businessCurrencyConversionMarkups: Array<BusinessCurrencyConversionMarkup>;
  info: UpdateInfo;
};

export type UpdateBusinessDocumentsMutationResponse = {
  __typename?: 'UpdateBusinessDocumentsMutationResponse';
  businessDocuments: Array<BusinessDocument>;
  info: UpdateInfo;
};

export type UpdateBusinessOwnersMutationResponse = {
  __typename?: 'UpdateBusinessOwnersMutationResponse';
  businessOwners: Array<BusinessOwner>;
  info: UpdateInfo;
};

export type UpdateBusinessSolutionsMutationResponse = {
  __typename?: 'UpdateBusinessSolutionsMutationResponse';
  businessSolutions: Array<BusinessSolution>;
  info: UpdateInfo;
};

export type UpdateBusinessStatusInput = {
  id: Scalars['uuid'];
  status: Scalars['String'];
};

export type UpdateBusinessTypesMutationResponse = {
  __typename?: 'UpdateBusinessTypesMutationResponse';
  businessTypes: Array<BusinessType>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletBaseCommissionsMutationResponse = {
  __typename?: 'UpdateBusinessWalletBaseCommissionsMutationResponse';
  businessWalletBaseCommissions: Array<BusinessWalletBaseCommission>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletJoiningFeesMutationResponse = {
  __typename?: 'UpdateBusinessWalletJoiningFeesMutationResponse';
  businessWalletJoiningFees: Array<BusinessWalletJoiningFee>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletMaintenanceFeesMutationResponse = {
  __typename?: 'UpdateBusinessWalletMaintenanceFeesMutationResponse';
  businessWalletMaintenanceFees: Array<BusinessWalletMaintenanceFee>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletOverDraftLimitsMutationResponse = {
  __typename?: 'UpdateBusinessWalletOverDraftLimitsMutationResponse';
  businessWalletOverDraftLimits: Array<BusinessWalletOverDraftLimit>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletPayoutFeesMutationResponse = {
  __typename?: 'UpdateBusinessWalletPayoutFeesMutationResponse';
  businessWalletPayoutFees: Array<BusinessWalletPayoutFee>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletRollingReserveFeesMutationResponse = {
  __typename?: 'UpdateBusinessWalletRollingReserveFeesMutationResponse';
  businessWalletRollingReserveFees: Array<BusinessWalletRollingReserveFee>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletSettlementFeesMutationResponse = {
  __typename?: 'UpdateBusinessWalletSettlementFeesMutationResponse';
  businessWalletSettlementFees: Array<BusinessWalletSettlementFee>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletTierCommissionsMutationResponse = {
  __typename?: 'UpdateBusinessWalletTierCommissionsMutationResponse';
  businessWalletTierCommissions: Array<BusinessWalletTierCommission>;
  info: UpdateInfo;
};

export type UpdateBusinessWalletsMutationResponse = {
  __typename?: 'UpdateBusinessWalletsMutationResponse';
  businessWallets: Array<BusinessWallet>;
  info: UpdateInfo;
};

export type UpdateBusinessesMutationResponse = {
  __typename?: 'UpdateBusinessesMutationResponse';
  businesses: Array<Business>;
  info: UpdateInfo;
};

export type UpdateCountriesMutationResponse = {
  __typename?: 'UpdateCountriesMutationResponse';
  countries: Array<Country>;
  info: UpdateInfo;
};

export type UpdateCreatedByUsersMutationResponse = {
  __typename?: 'UpdateCreatedByUsersMutationResponse';
  createdByUsers: Array<CreatedByUser>;
  info: UpdateInfo;
};

export type UpdateCreditCartdProcessingSolutionsMutationResponse = {
  __typename?: 'UpdateCreditCartdProcessingSolutionsMutationResponse';
  creditCartdProcessingSolutions: Array<CreditCartdProcessingSolution>;
  info: UpdateInfo;
};

export type UpdateCryptoCurrencySolutionsMutationResponse = {
  __typename?: 'UpdateCryptoCurrencySolutionsMutationResponse';
  cryptoCurrencySolutions: Array<CryptoCurrencySolution>;
  info: UpdateInfo;
};

export type UpdateCurrenciesMutationResponse = {
  __typename?: 'UpdateCurrenciesMutationResponse';
  currencies: Array<Currency>;
  info: UpdateInfo;
};

export type UpdateCustomersMutationResponse = {
  __typename?: 'UpdateCustomersMutationResponse';
  customers: Array<Customer>;
  info: UpdateInfo;
};

export type UpdateDefaultBaseCommissionsMutationResponse = {
  __typename?: 'UpdateDefaultBaseCommissionsMutationResponse';
  defaultBaseCommissions: Array<DefaultBaseCommission>;
  info: UpdateInfo;
};

export type UpdateDefaultCurrencyConversionFeesMutationResponse = {
  __typename?: 'UpdateDefaultCurrencyConversionFeesMutationResponse';
  defaultCurrencyConversionFees: Array<DefaultCurrencyConversionFees>;
  info: UpdateInfo;
};

export type UpdateDefaultCurrencyConversionMarkupsMutationResponse = {
  __typename?: 'UpdateDefaultCurrencyConversionMarkupsMutationResponse';
  defaultCurrencyConversionMarkups: Array<DefaultCurrencyConversionMarkup>;
  info: UpdateInfo;
};

export type UpdateDefaultJoiningFeesMutationResponse = {
  __typename?: 'UpdateDefaultJoiningFeesMutationResponse';
  defaultJoiningFees: Array<DefaultJoiningFee>;
  info: UpdateInfo;
};

export type UpdateDefaultMaintenanceFeesMutationResponse = {
  __typename?: 'UpdateDefaultMaintenanceFeesMutationResponse';
  defaultMaintenanceFees: Array<DefaultMaintenanceFee>;
  info: UpdateInfo;
};

export type UpdateDefaultOverDraftLimitsMutationResponse = {
  __typename?: 'UpdateDefaultOverDraftLimitsMutationResponse';
  defaultOverDraftLimits: Array<DefaultOverDraftLimit>;
  info: UpdateInfo;
};

export type UpdateDefaultPayoutFeesMutationResponse = {
  __typename?: 'UpdateDefaultPayoutFeesMutationResponse';
  defaultPayoutFees: Array<DefaultPayoutFee>;
  info: UpdateInfo;
};

export type UpdateDefaultRollingReserveFeesMutationResponse = {
  __typename?: 'UpdateDefaultRollingReserveFeesMutationResponse';
  defaultRollingReserveFees: Array<DefaultRollingReserveFee>;
  info: UpdateInfo;
};

export type UpdateDefaultSettlementFeesMutationResponse = {
  __typename?: 'UpdateDefaultSettlementFeesMutationResponse';
  defaultSettlementFees: Array<DefaultSettlementFee>;
  info: UpdateInfo;
};

export type UpdateDefaultTierCommissionsMutationResponse = {
  __typename?: 'UpdateDefaultTierCommissionsMutationResponse';
  defaultTierCommissions: Array<DefaultTierCommission>;
  info: UpdateInfo;
};

export type UpdateDepositStatusResponse = {
  __typename?: 'UpdateDepositStatusResponse';
  data?: Maybe<UpdateDepositStatusResponseData>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type UpdateDepositStatusResponseData = {
  __typename?: 'UpdateDepositStatusResponseData';
  status?: Maybe<Scalars['String']>;
};

export type UpdateDepostStatusInput = {
  amountReceived?: InputMaybe<Scalars['numeric']>;
  amountReceivedDate?: InputMaybe<Scalars['timestamp']>;
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  id: Scalars['uuid'];
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  refundedAmount?: InputMaybe<Scalars['numeric']>;
  refundedDate?: InputMaybe<Scalars['timestamp']>;
  signedInvoiceUrl?: InputMaybe<Scalars['String']>;
  status: Scalars['String'];
};

export type UpdateFeaturePermissionsMutationResponse = {
  __typename?: 'UpdateFeaturePermissionsMutationResponse';
  featurePermissions: Array<FeaturePermission>;
  info: UpdateInfo;
};

export type UpdateGraphDataNeo4JsMutationResponse = {
  __typename?: 'UpdateGraphDataNeo4JSMutationResponse';
  graphDataNeo4JS: Array<GraphDataNeo4j>;
  info: UpdateInfo;
};

/** Information about the number of nodes and relationships created and deleted during an update mutation */
export type UpdateInfo = {
  __typename?: 'UpdateInfo';
  bookmark?: Maybe<Scalars['String']>;
  nodesCreated: Scalars['Int'];
  nodesDeleted: Scalars['Int'];
  relationshipsCreated: Scalars['Int'];
  relationshipsDeleted: Scalars['Int'];
};

export type UpdateIntermediaryAccountsMutationResponse = {
  __typename?: 'UpdateIntermediaryAccountsMutationResponse';
  info: UpdateInfo;
  intermediaryAccounts: Array<IntermediaryAccount>;
};

export type UpdateMarketRegionsMutationResponse = {
  __typename?: 'UpdateMarketRegionsMutationResponse';
  info: UpdateInfo;
  marketRegions: Array<MarketRegions>;
};

export type UpdateMerchantsMutationResponse = {
  __typename?: 'UpdateMerchantsMutationResponse';
  info: UpdateInfo;
  merchants: Array<Merchant>;
};

export type UpdateOrganisationTypesMutationResponse = {
  __typename?: 'UpdateOrganisationTypesMutationResponse';
  info: UpdateInfo;
  organisationTypes: Array<OrganisationType>;
};

export type UpdatePersonalDocumentsMutationResponse = {
  __typename?: 'UpdatePersonalDocumentsMutationResponse';
  info: UpdateInfo;
  personalDocuments: Array<PersonalDocument>;
};

export type UpdateRrSettlementStatusInput = {
  amount?: InputMaybe<Scalars['numeric']>;
  id: Scalars['uuid'];
  status: Scalars['String'];
};

export type UpdateRrSettlementStatusResponse = {
  __typename?: 'UpdateRRSettlementStatusResponse';
  data?: Maybe<UpdateRrSettlementStatusResponseData>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type UpdateRrSettlementStatusResponseData = {
  __typename?: 'UpdateRRSettlementStatusResponseData';
  status?: Maybe<Scalars['String']>;
};

export type UpdateSubAdminsMutationResponse = {
  __typename?: 'UpdateSubAdminsMutationResponse';
  info: UpdateInfo;
  subAdmins: Array<SubAdmin>;
};

export type UpdateSuperAdminsMutationResponse = {
  __typename?: 'UpdateSuperAdminsMutationResponse';
  info: UpdateInfo;
  superAdmins: Array<SuperAdmin>;
};

export type UpdateTeamCommonPermisionsMutationResponse = {
  __typename?: 'UpdateTeamCommonPermisionsMutationResponse';
  info: UpdateInfo;
  teamCommonPermisions: Array<TeamCommonPermision>;
};

export type UpdateTeamMembersMutationResponse = {
  __typename?: 'UpdateTeamMembersMutationResponse';
  info: UpdateInfo;
  teamMembers: Array<TeamMember>;
};

export type UpdateTeamsMutationResponse = {
  __typename?: 'UpdateTeamsMutationResponse';
  info: UpdateInfo;
  teams: Array<Team>;
};

export type UpdateWithdrawalStatusInput = {
  amount?: InputMaybe<Scalars['numeric']>;
  amountReturned?: InputMaybe<Scalars['numeric']>;
  bankCharges?: InputMaybe<Scalars['numeric']>;
  cancelledDate?: InputMaybe<Scalars['timestamptz']>;
  datePaid?: InputMaybe<Scalars['timestamptz']>;
  dateReturned?: InputMaybe<Scalars['timestamptz']>;
  id: Scalars['uuid'];
  invoiceUrl?: InputMaybe<Scalars['String']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  status: Scalars['String'];
};

export type UpdateWithdrawalStatusResponse = {
  __typename?: 'UpdateWithdrawalStatusResponse';
  data?: Maybe<UpdateWithdrawalStatusResponseData>;
  message?: Maybe<Scalars['String']>;
  status: Scalars['String'];
};

export type UpdateWithdrawalStatusResponseData = {
  __typename?: 'UpdateWithdrawalStatusResponseData';
  status: Scalars['String'];
};

export type User = {
  accountCreate: Scalars['Boolean'];
  accountView: Scalars['Boolean'];
  activityLogCreate: Scalars['Boolean'];
  activityLogView: Scalars['Boolean'];
  createdBy?: Maybe<User>;
  customerCreate: Scalars['Boolean'];
  customerView: Scalars['Boolean'];
  customersCreated: Array<Customer>;
  dashboardView: Scalars['Boolean'];
  depositCreate: Scalars['Boolean'];
  depositView: Scalars['Boolean'];
  email: Scalars['String'];
  featurePermissions: Array<FeaturePermission>;
  featurePermissionsConnection: UserFeaturePermissionsConnection;
  firebaseId: Scalars['String'];
  id: Scalars['ID'];
  mailboxCreate: Scalars['Boolean'];
  mailboxView: Scalars['Boolean'];
  merchantCreate: Scalars['Boolean'];
  merchantView: Scalars['Boolean'];
  name: Scalars['String'];
  settingsCreate: Scalars['Boolean'];
  settingsView: Scalars['Boolean'];
  taskCreate: Scalars['Boolean'];
  taskView: Scalars['Boolean'];
  teamsCreated: Array<Team>;
  updatedBy?: Maybe<User>;
  userCreate: Scalars['Boolean'];
  userType: UserType;
  userView: Scalars['Boolean'];
  usersCreated: Array<User>;
  withdrawalCreate: Scalars['Boolean'];
  withdrawalView: Scalars['Boolean'];
};


export type UserFeaturePermissionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']>;
  options?: InputMaybe<FeaturePermissionOptions>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type UserFeaturePermissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  directed?: InputMaybe<Scalars['Boolean']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<UserFeaturePermissionsConnectionSort>>;
  where?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
};

export type UserConnectInput = {
  _on?: InputMaybe<UserImplementationsConnectInput>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsConnectFieldInput>>;
};

export type UserConnectWhere = {
  node: UserWhere;
};

export type UserCreateInput = {
  Merchant?: InputMaybe<MerchantCreateInput>;
  SubAdmin?: InputMaybe<SubAdminCreateInput>;
  SuperAdmin?: InputMaybe<SuperAdminCreateInput>;
  TeamMember?: InputMaybe<TeamMemberCreateInput>;
};

export type UserCreatedByConnection = {
  __typename?: 'UserCreatedByConnection';
  edges: Array<UserCreatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type UserCreatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type UserCreatedByConnectionWhere = {
  AND?: InputMaybe<Array<UserCreatedByConnectionWhere>>;
  NOT?: InputMaybe<UserCreatedByConnectionWhere>;
  OR?: InputMaybe<Array<UserCreatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type UserCreatedByFieldInput = {
  connect?: InputMaybe<SuperAdminCreatedByConnectFieldInput>;
  create?: InputMaybe<SuperAdminCreatedByCreateFieldInput>;
};

export type UserCreatedByRelationship = {
  __typename?: 'UserCreatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type UserCustomersCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<CustomerConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<CustomerConnectWhere>;
};

export type UserCustomersCreatedConnectOrCreateFieldInput = {
  onCreate: UserCustomersCreatedConnectOrCreateFieldInputOnCreate;
  where: CustomerConnectOrCreateWhere;
};

export type UserCustomersCreatedConnectOrCreateFieldInputOnCreate = {
  node: CustomerOnCreateInput;
};

export type UserCustomersCreatedConnection = {
  __typename?: 'UserCustomersCreatedConnection';
  edges: Array<UserCustomersCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type UserCustomersCreatedConnectionSort = {
  node?: InputMaybe<CustomerSort>;
};

export type UserCustomersCreatedConnectionWhere = {
  AND?: InputMaybe<Array<UserCustomersCreatedConnectionWhere>>;
  NOT?: InputMaybe<UserCustomersCreatedConnectionWhere>;
  OR?: InputMaybe<Array<UserCustomersCreatedConnectionWhere>>;
  node?: InputMaybe<CustomerWhere>;
};

export type UserCustomersCreatedCreateFieldInput = {
  node: CustomerCreateInput;
};

export type UserCustomersCreatedDeleteFieldInput = {
  delete?: InputMaybe<CustomerDeleteInput>;
  where?: InputMaybe<UserCustomersCreatedConnectionWhere>;
};

export type UserCustomersCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<CustomerDisconnectInput>;
  where?: InputMaybe<UserCustomersCreatedConnectionWhere>;
};

export type UserCustomersCreatedFieldInput = {
  connect?: InputMaybe<Array<UserCustomersCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserCustomersCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserCustomersCreatedCreateFieldInput>>;
};

export type UserCustomersCreatedRelationship = {
  __typename?: 'UserCustomersCreatedRelationship';
  cursor: Scalars['String'];
  node: Customer;
};

export type UserCustomersCreatedUpdateConnectionInput = {
  node?: InputMaybe<CustomerUpdateInput>;
};

export type UserCustomersCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<UserCustomersCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserCustomersCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserCustomersCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<UserCustomersCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserCustomersCreatedDisconnectFieldInput>>;
  update?: InputMaybe<UserCustomersCreatedUpdateConnectionInput>;
  where?: InputMaybe<UserCustomersCreatedConnectionWhere>;
};

export type UserDeleteInput = {
  _on?: InputMaybe<UserImplementationsDeleteInput>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDeleteFieldInput>>;
};

export type UserDisconnectInput = {
  _on?: InputMaybe<UserImplementationsDisconnectInput>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsDisconnectFieldInput>>;
};

export type UserFeaturePermission = {
  create: Scalars['Boolean'];
  delete: Scalars['Boolean'];
  read: Scalars['Boolean'];
  update: Scalars['Boolean'];
};

export type UserFeaturePermissionCreateInput = {
  create?: Scalars['Boolean'];
  delete?: Scalars['Boolean'];
  read?: Scalars['Boolean'];
  update?: Scalars['Boolean'];
};

export type UserFeaturePermissionSort = {
  create?: InputMaybe<SortDirection>;
  delete?: InputMaybe<SortDirection>;
  read?: InputMaybe<SortDirection>;
  update?: InputMaybe<SortDirection>;
};

export type UserFeaturePermissionUpdateInput = {
  create?: InputMaybe<Scalars['Boolean']>;
  delete?: InputMaybe<Scalars['Boolean']>;
  read?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<Scalars['Boolean']>;
};

export type UserFeaturePermissionWhere = {
  AND?: InputMaybe<Array<UserFeaturePermissionWhere>>;
  NOT?: InputMaybe<UserFeaturePermissionWhere>;
  OR?: InputMaybe<Array<UserFeaturePermissionWhere>>;
  create?: InputMaybe<Scalars['Boolean']>;
  delete?: InputMaybe<Scalars['Boolean']>;
  read?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<Scalars['Boolean']>;
};

export type UserFeaturePermissionsAggregateInput = {
  AND?: InputMaybe<Array<UserFeaturePermissionsAggregateInput>>;
  NOT?: InputMaybe<UserFeaturePermissionsAggregateInput>;
  OR?: InputMaybe<Array<UserFeaturePermissionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']>;
  count_GT?: InputMaybe<Scalars['Int']>;
  count_GTE?: InputMaybe<Scalars['Int']>;
  count_LT?: InputMaybe<Scalars['Int']>;
  count_LTE?: InputMaybe<Scalars['Int']>;
  node?: InputMaybe<UserFeaturePermissionsNodeAggregationWhereInput>;
};

export type UserFeaturePermissionsConnectFieldInput = {
  connect?: InputMaybe<Array<FeaturePermissionConnectInput>>;
  edge: UserFeaturePermissionCreateInput;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<FeaturePermissionConnectWhere>;
};

export type UserFeaturePermissionsConnectOrCreateFieldInput = {
  onCreate: UserFeaturePermissionsConnectOrCreateFieldInputOnCreate;
  where: FeaturePermissionConnectOrCreateWhere;
};

export type UserFeaturePermissionsConnectOrCreateFieldInputOnCreate = {
  edge: UserFeaturePermissionCreateInput;
  node: FeaturePermissionOnCreateInput;
};

export type UserFeaturePermissionsConnection = {
  __typename?: 'UserFeaturePermissionsConnection';
  edges: Array<UserFeaturePermissionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type UserFeaturePermissionsConnectionSort = {
  edge?: InputMaybe<UserFeaturePermissionSort>;
  node?: InputMaybe<FeaturePermissionSort>;
};

export type UserFeaturePermissionsConnectionWhere = {
  AND?: InputMaybe<Array<UserFeaturePermissionsConnectionWhere>>;
  NOT?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  OR?: InputMaybe<Array<UserFeaturePermissionsConnectionWhere>>;
  edge?: InputMaybe<UserFeaturePermissionWhere>;
  node?: InputMaybe<FeaturePermissionWhere>;
};

export type UserFeaturePermissionsCreateFieldInput = {
  edge: UserFeaturePermissionCreateInput;
  node: FeaturePermissionCreateInput;
};

export type UserFeaturePermissionsDeleteFieldInput = {
  delete?: InputMaybe<FeaturePermissionDeleteInput>;
  where?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
};

export type UserFeaturePermissionsDisconnectFieldInput = {
  disconnect?: InputMaybe<FeaturePermissionDisconnectInput>;
  where?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
};

export type UserFeaturePermissionsFieldInput = {
  connect?: InputMaybe<Array<UserFeaturePermissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserFeaturePermissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserFeaturePermissionsCreateFieldInput>>;
};

export type UserFeaturePermissionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserFeaturePermissionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserFeaturePermissionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserFeaturePermissionsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']>;
};

export type UserFeaturePermissionsRelationship = UserFeaturePermission & {
  __typename?: 'UserFeaturePermissionsRelationship';
  create: Scalars['Boolean'];
  cursor: Scalars['String'];
  delete: Scalars['Boolean'];
  node: FeaturePermission;
  read: Scalars['Boolean'];
  update: Scalars['Boolean'];
};

export type UserFeaturePermissionsUpdateConnectionInput = {
  edge?: InputMaybe<UserFeaturePermissionUpdateInput>;
  node?: InputMaybe<FeaturePermissionUpdateInput>;
};

export type UserFeaturePermissionsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserFeaturePermissionsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserFeaturePermissionsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserFeaturePermissionsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserFeaturePermissionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserFeaturePermissionsDisconnectFieldInput>>;
  update?: InputMaybe<UserFeaturePermissionsUpdateConnectionInput>;
  where?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
};

export type UserImplementationsConnectInput = {
  Merchant?: InputMaybe<Array<MerchantConnectInput>>;
  SubAdmin?: InputMaybe<Array<SubAdminConnectInput>>;
  SuperAdmin?: InputMaybe<Array<SuperAdminConnectInput>>;
  TeamMember?: InputMaybe<Array<TeamMemberConnectInput>>;
};

export type UserImplementationsDeleteInput = {
  Merchant?: InputMaybe<Array<MerchantDeleteInput>>;
  SubAdmin?: InputMaybe<Array<SubAdminDeleteInput>>;
  SuperAdmin?: InputMaybe<Array<SuperAdminDeleteInput>>;
  TeamMember?: InputMaybe<Array<TeamMemberDeleteInput>>;
};

export type UserImplementationsDisconnectInput = {
  Merchant?: InputMaybe<Array<MerchantDisconnectInput>>;
  SubAdmin?: InputMaybe<Array<SubAdminDisconnectInput>>;
  SuperAdmin?: InputMaybe<Array<SuperAdminDisconnectInput>>;
  TeamMember?: InputMaybe<Array<TeamMemberDisconnectInput>>;
};

export type UserImplementationsUpdateInput = {
  Merchant?: InputMaybe<MerchantUpdateInput>;
  SubAdmin?: InputMaybe<SubAdminUpdateInput>;
  SuperAdmin?: InputMaybe<SuperAdminUpdateInput>;
  TeamMember?: InputMaybe<TeamMemberUpdateInput>;
};

export type UserImplementationsWhere = {
  Merchant?: InputMaybe<MerchantWhere>;
  SubAdmin?: InputMaybe<SubAdminWhere>;
  SuperAdmin?: InputMaybe<SuperAdminWhere>;
  TeamMember?: InputMaybe<TeamMemberWhere>;
};

export type UserOptions = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  /** Specify one or more UserSort objects to sort Users by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<InputMaybe<UserSort>>>;
};

/** Fields to sort Users by. The order in which sorts are applied is not guaranteed when specifying many fields in one UserSort object. */
export type UserSort = {
  accountCreate?: InputMaybe<SortDirection>;
  accountView?: InputMaybe<SortDirection>;
  activityLogCreate?: InputMaybe<SortDirection>;
  activityLogView?: InputMaybe<SortDirection>;
  customerCreate?: InputMaybe<SortDirection>;
  customerView?: InputMaybe<SortDirection>;
  dashboardView?: InputMaybe<SortDirection>;
  depositCreate?: InputMaybe<SortDirection>;
  depositView?: InputMaybe<SortDirection>;
  email?: InputMaybe<SortDirection>;
  firebaseId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  mailboxCreate?: InputMaybe<SortDirection>;
  mailboxView?: InputMaybe<SortDirection>;
  merchantCreate?: InputMaybe<SortDirection>;
  merchantView?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  settingsCreate?: InputMaybe<SortDirection>;
  settingsView?: InputMaybe<SortDirection>;
  taskCreate?: InputMaybe<SortDirection>;
  taskView?: InputMaybe<SortDirection>;
  userCreate?: InputMaybe<SortDirection>;
  userType?: InputMaybe<SortDirection>;
  userView?: InputMaybe<SortDirection>;
  withdrawalCreate?: InputMaybe<SortDirection>;
  withdrawalView?: InputMaybe<SortDirection>;
};

export type UserTeamsCreatedConnectFieldInput = {
  connect?: InputMaybe<Array<TeamConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean'];
  where?: InputMaybe<TeamConnectWhere>;
};

export type UserTeamsCreatedConnectOrCreateFieldInput = {
  onCreate: UserTeamsCreatedConnectOrCreateFieldInputOnCreate;
  where: TeamConnectOrCreateWhere;
};

export type UserTeamsCreatedConnectOrCreateFieldInputOnCreate = {
  node: TeamOnCreateInput;
};

export type UserTeamsCreatedConnection = {
  __typename?: 'UserTeamsCreatedConnection';
  edges: Array<UserTeamsCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type UserTeamsCreatedConnectionSort = {
  node?: InputMaybe<TeamSort>;
};

export type UserTeamsCreatedConnectionWhere = {
  AND?: InputMaybe<Array<UserTeamsCreatedConnectionWhere>>;
  NOT?: InputMaybe<UserTeamsCreatedConnectionWhere>;
  OR?: InputMaybe<Array<UserTeamsCreatedConnectionWhere>>;
  node?: InputMaybe<TeamWhere>;
};

export type UserTeamsCreatedCreateFieldInput = {
  node: TeamCreateInput;
};

export type UserTeamsCreatedDeleteFieldInput = {
  delete?: InputMaybe<TeamDeleteInput>;
  where?: InputMaybe<UserTeamsCreatedConnectionWhere>;
};

export type UserTeamsCreatedDisconnectFieldInput = {
  disconnect?: InputMaybe<TeamDisconnectInput>;
  where?: InputMaybe<UserTeamsCreatedConnectionWhere>;
};

export type UserTeamsCreatedFieldInput = {
  connect?: InputMaybe<Array<UserTeamsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserTeamsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserTeamsCreatedCreateFieldInput>>;
};

export type UserTeamsCreatedRelationship = {
  __typename?: 'UserTeamsCreatedRelationship';
  cursor: Scalars['String'];
  node: Team;
};

export type UserTeamsCreatedUpdateConnectionInput = {
  node?: InputMaybe<TeamUpdateInput>;
};

export type UserTeamsCreatedUpdateFieldInput = {
  connect?: InputMaybe<Array<UserTeamsCreatedConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserTeamsCreatedConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserTeamsCreatedCreateFieldInput>>;
  delete?: InputMaybe<Array<UserTeamsCreatedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserTeamsCreatedDisconnectFieldInput>>;
  update?: InputMaybe<UserTeamsCreatedUpdateConnectionInput>;
  where?: InputMaybe<UserTeamsCreatedConnectionWhere>;
};

export enum UserType {
  Merchant = 'MERCHANT',
  Partner = 'PARTNER',
  SubAdmin = 'SUB_ADMIN',
  SuperAdmin = 'SUPER_ADMIN',
  SuperMerchant = 'SUPER_MERCHANT',
  TeamMember = 'TEAM_MEMBER'
}

export type UserUpdateInput = {
  _on?: InputMaybe<UserImplementationsUpdateInput>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  featurePermissions?: InputMaybe<Array<UserFeaturePermissionsUpdateFieldInput>>;
  firebaseId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userView?: InputMaybe<Scalars['Boolean']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

export type UserUpdatedByConnection = {
  __typename?: 'UserUpdatedByConnection';
  edges: Array<UserUpdatedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type UserUpdatedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type UserUpdatedByConnectionWhere = {
  AND?: InputMaybe<Array<UserUpdatedByConnectionWhere>>;
  NOT?: InputMaybe<UserUpdatedByConnectionWhere>;
  OR?: InputMaybe<Array<UserUpdatedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type UserUpdatedByFieldInput = {
  connect?: InputMaybe<SuperAdminUpdatedByConnectFieldInput>;
  create?: InputMaybe<SuperAdminUpdatedByCreateFieldInput>;
};

export type UserUpdatedByRelationship = {
  __typename?: 'UserUpdatedByRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type UserUsersCreatedConnection = {
  __typename?: 'UserUsersCreatedConnection';
  edges: Array<UserUsersCreatedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

export type UserUsersCreatedConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type UserUsersCreatedConnectionWhere = {
  AND?: InputMaybe<Array<UserUsersCreatedConnectionWhere>>;
  NOT?: InputMaybe<UserUsersCreatedConnectionWhere>;
  OR?: InputMaybe<Array<UserUsersCreatedConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type UserUsersCreatedFieldInput = {
  connect?: InputMaybe<Array<SuperAdminUsersCreatedConnectFieldInput>>;
  create?: InputMaybe<Array<SuperAdminUsersCreatedCreateFieldInput>>;
};

export type UserUsersCreatedRelationship = {
  __typename?: 'UserUsersCreatedRelationship';
  cursor: Scalars['String'];
  node: User;
};

export type UserWhere = {
  _on?: InputMaybe<UserImplementationsWhere>;
  accountCreate?: InputMaybe<Scalars['Boolean']>;
  accountView?: InputMaybe<Scalars['Boolean']>;
  activityLogCreate?: InputMaybe<Scalars['Boolean']>;
  activityLogView?: InputMaybe<Scalars['Boolean']>;
  customerCreate?: InputMaybe<Scalars['Boolean']>;
  customerView?: InputMaybe<Scalars['Boolean']>;
  dashboardView?: InputMaybe<Scalars['Boolean']>;
  depositCreate?: InputMaybe<Scalars['Boolean']>;
  depositView?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Scalars['String']>;
  email_CONTAINS?: InputMaybe<Scalars['String']>;
  email_ENDS_WITH?: InputMaybe<Scalars['String']>;
  email_IN?: InputMaybe<Array<Scalars['String']>>;
  email_STARTS_WITH?: InputMaybe<Scalars['String']>;
  featurePermissionsAggregate?: InputMaybe<UserFeaturePermissionsAggregateInput>;
  /** Return Users where all of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_ALL?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Users where none of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_NONE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Users where one of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SINGLE?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Users where some of the related UserFeaturePermissionsConnections match this filter */
  featurePermissionsConnection_SOME?: InputMaybe<UserFeaturePermissionsConnectionWhere>;
  /** Return Users where all of the related FeaturePermissions match this filter */
  featurePermissions_ALL?: InputMaybe<FeaturePermissionWhere>;
  /** Return Users where none of the related FeaturePermissions match this filter */
  featurePermissions_NONE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Users where one of the related FeaturePermissions match this filter */
  featurePermissions_SINGLE?: InputMaybe<FeaturePermissionWhere>;
  /** Return Users where some of the related FeaturePermissions match this filter */
  featurePermissions_SOME?: InputMaybe<FeaturePermissionWhere>;
  firebaseId?: InputMaybe<Scalars['String']>;
  firebaseId_CONTAINS?: InputMaybe<Scalars['String']>;
  firebaseId_ENDS_WITH?: InputMaybe<Scalars['String']>;
  firebaseId_IN?: InputMaybe<Array<Scalars['String']>>;
  firebaseId_STARTS_WITH?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']>;
  id_IN?: InputMaybe<Array<Scalars['ID']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']>;
  mailboxCreate?: InputMaybe<Scalars['Boolean']>;
  mailboxView?: InputMaybe<Scalars['Boolean']>;
  merchantCreate?: InputMaybe<Scalars['Boolean']>;
  merchantView?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  name_CONTAINS?: InputMaybe<Scalars['String']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']>;
  name_IN?: InputMaybe<Array<Scalars['String']>>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']>;
  settingsCreate?: InputMaybe<Scalars['Boolean']>;
  settingsView?: InputMaybe<Scalars['Boolean']>;
  taskCreate?: InputMaybe<Scalars['Boolean']>;
  taskView?: InputMaybe<Scalars['Boolean']>;
  userCreate?: InputMaybe<Scalars['Boolean']>;
  userType?: InputMaybe<UserType>;
  userType_IN?: InputMaybe<Array<UserType>>;
  userView?: InputMaybe<Scalars['Boolean']>;
  withdrawalCreate?: InputMaybe<Scalars['Boolean']>;
  withdrawalView?: InputMaybe<Scalars['Boolean']>;
};

/** columns and relationships of "accountLedgers" */
export type AccountLedgers = {
  __typename?: 'accountLedgers';
  /** An object relationship */
  adjustment?: Maybe<Adjustments>;
  adjustmentId?: Maybe<Scalars['uuid']>;
  balance?: Maybe<Scalars['numeric']>;
  createdAt: Scalars['timestamptz'];
  creditAmount?: Maybe<Scalars['numeric']>;
  currency?: Maybe<Scalars['String']>;
  /** An object relationship */
  currencyExchange?: Maybe<CurrencyExchange>;
  currencyExchangeId?: Maybe<Scalars['uuid']>;
  debitAmount?: Maybe<Scalars['numeric']>;
  /** An object relationship */
  deposit?: Maybe<Deposits>;
  depositId?: Maybe<Scalars['uuid']>;
  depositType?: Maybe<DepositTypes_Enum>;
  /** An object relationship */
  depositTypeByDeposittype?: Maybe<DepositTypes>;
  description?: Maybe<Scalars['String']>;
  fromAccountCurrency?: Maybe<Scalars['String']>;
  fromAccountIBAN?: Maybe<Scalars['String']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAccountNickname?: Maybe<Scalars['String']>;
  fromBankAddress?: Maybe<Scalars['String']>;
  fromBankName?: Maybe<Scalars['String']>;
  fromBankNickname?: Maybe<Scalars['String']>;
  fromBankSwiftCode?: Maybe<Scalars['String']>;
  fromBeneficiaryName?: Maybe<Scalars['String']>;
  fromBusinessWalletCurrency?: Maybe<Scalars['String']>;
  fromBusinessWalletId?: Maybe<Scalars['uuid']>;
  fromCustomerCountry?: Maybe<Scalars['String']>;
  fromCustomerFirstName?: Maybe<Scalars['String']>;
  fromCustomerId?: Maybe<Scalars['uuid']>;
  fromCustomerLastName?: Maybe<Scalars['String']>;
  fromCustomerUsername?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  internalId: Scalars['bigint'];
  ledgerType: LedgerTypes_Enum;
  /** An object relationship */
  ledgerTypeByLedgertype: LedgerTypes;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  remarks?: Maybe<Scalars['String']>;
  toAccountCurrency?: Maybe<Scalars['String']>;
  toAccountIBAN?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAccountNickname?: Maybe<Scalars['String']>;
  toBankAddress?: Maybe<Scalars['String']>;
  toBankName?: Maybe<Scalars['String']>;
  toBankNickname?: Maybe<Scalars['String']>;
  toBankSwiftCode?: Maybe<Scalars['String']>;
  toBeneficiaryAddress?: Maybe<Scalars['String']>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  toBeneficiaryName?: Maybe<Scalars['String']>;
  toBusinessWalletCurrency?: Maybe<Scalars['String']>;
  toBusinessWalletId?: Maybe<Scalars['uuid']>;
  transactionSubType?: Maybe<Scalars['String']>;
  transactionType: TransactionTypes_Enum;
  /** An object relationship */
  transactionTypeByTransactiontype: TransactionTypes;
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  withdrawal?: Maybe<Withdrawals>;
  withdrawalId?: Maybe<Scalars['uuid']>;
  withdrawalType?: Maybe<WithdrawalTypes_Enum>;
  /** An object relationship */
  withdrawalTypeByWithdrawaltype?: Maybe<WithdrawalTypes>;
};

/** aggregated selection of "accountLedgers" */
export type AccountLedgers_Aggregate = {
  __typename?: 'accountLedgers_aggregate';
  aggregate?: Maybe<AccountLedgers_Aggregate_Fields>;
  nodes: Array<AccountLedgers>;
};

export type AccountLedgers_Aggregate_Bool_Exp = {
  count?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp_Count>;
};

export type AccountLedgers_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<AccountLedgers_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "accountLedgers" */
export type AccountLedgers_Aggregate_Fields = {
  __typename?: 'accountLedgers_aggregate_fields';
  avg?: Maybe<AccountLedgers_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<AccountLedgers_Max_Fields>;
  min?: Maybe<AccountLedgers_Min_Fields>;
  stddev?: Maybe<AccountLedgers_Stddev_Fields>;
  stddev_pop?: Maybe<AccountLedgers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AccountLedgers_Stddev_Samp_Fields>;
  sum?: Maybe<AccountLedgers_Sum_Fields>;
  var_pop?: Maybe<AccountLedgers_Var_Pop_Fields>;
  var_samp?: Maybe<AccountLedgers_Var_Samp_Fields>;
  variance?: Maybe<AccountLedgers_Variance_Fields>;
};


/** aggregate fields of "accountLedgers" */
export type AccountLedgers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "accountLedgers" */
export type AccountLedgers_Aggregate_Order_By = {
  avg?: InputMaybe<AccountLedgers_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<AccountLedgers_Max_Order_By>;
  min?: InputMaybe<AccountLedgers_Min_Order_By>;
  stddev?: InputMaybe<AccountLedgers_Stddev_Order_By>;
  stddev_pop?: InputMaybe<AccountLedgers_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<AccountLedgers_Stddev_Samp_Order_By>;
  sum?: InputMaybe<AccountLedgers_Sum_Order_By>;
  var_pop?: InputMaybe<AccountLedgers_Var_Pop_Order_By>;
  var_samp?: InputMaybe<AccountLedgers_Var_Samp_Order_By>;
  variance?: InputMaybe<AccountLedgers_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "accountLedgers" */
export type AccountLedgers_Arr_Rel_Insert_Input = {
  data: Array<AccountLedgers_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<AccountLedgers_On_Conflict>;
};

/** aggregate avg on columns */
export type AccountLedgers_Avg_Fields = {
  __typename?: 'accountLedgers_avg_fields';
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "accountLedgers" */
export type AccountLedgers_Avg_Order_By = {
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "accountLedgers". All fields are combined with a logical 'AND'. */
export type AccountLedgers_Bool_Exp = {
  _and?: InputMaybe<Array<AccountLedgers_Bool_Exp>>;
  _not?: InputMaybe<AccountLedgers_Bool_Exp>;
  _or?: InputMaybe<Array<AccountLedgers_Bool_Exp>>;
  adjustment?: InputMaybe<Adjustments_Bool_Exp>;
  adjustmentId?: InputMaybe<Uuid_Comparison_Exp>;
  balance?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  creditAmount?: InputMaybe<Numeric_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  currencyExchange?: InputMaybe<CurrencyExchange_Bool_Exp>;
  currencyExchangeId?: InputMaybe<Uuid_Comparison_Exp>;
  debitAmount?: InputMaybe<Numeric_Comparison_Exp>;
  deposit?: InputMaybe<Deposits_Bool_Exp>;
  depositId?: InputMaybe<Uuid_Comparison_Exp>;
  depositType?: InputMaybe<DepositTypes_Enum_Comparison_Exp>;
  depositTypeByDeposittype?: InputMaybe<DepositTypes_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  fromAccountCurrency?: InputMaybe<String_Comparison_Exp>;
  fromAccountIBAN?: InputMaybe<String_Comparison_Exp>;
  fromAccountId?: InputMaybe<Uuid_Comparison_Exp>;
  fromAccountNickname?: InputMaybe<String_Comparison_Exp>;
  fromBankAddress?: InputMaybe<String_Comparison_Exp>;
  fromBankName?: InputMaybe<String_Comparison_Exp>;
  fromBankNickname?: InputMaybe<String_Comparison_Exp>;
  fromBankSwiftCode?: InputMaybe<String_Comparison_Exp>;
  fromBeneficiaryName?: InputMaybe<String_Comparison_Exp>;
  fromBusinessWalletCurrency?: InputMaybe<String_Comparison_Exp>;
  fromBusinessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  fromCustomerCountry?: InputMaybe<String_Comparison_Exp>;
  fromCustomerFirstName?: InputMaybe<String_Comparison_Exp>;
  fromCustomerId?: InputMaybe<Uuid_Comparison_Exp>;
  fromCustomerLastName?: InputMaybe<String_Comparison_Exp>;
  fromCustomerUsername?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  internalId?: InputMaybe<Bigint_Comparison_Exp>;
  ledgerType?: InputMaybe<LedgerTypes_Enum_Comparison_Exp>;
  ledgerTypeByLedgertype?: InputMaybe<LedgerTypes_Bool_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  remarks?: InputMaybe<String_Comparison_Exp>;
  toAccountCurrency?: InputMaybe<String_Comparison_Exp>;
  toAccountIBAN?: InputMaybe<String_Comparison_Exp>;
  toAccountId?: InputMaybe<Uuid_Comparison_Exp>;
  toAccountNickname?: InputMaybe<String_Comparison_Exp>;
  toBankAddress?: InputMaybe<String_Comparison_Exp>;
  toBankName?: InputMaybe<String_Comparison_Exp>;
  toBankNickname?: InputMaybe<String_Comparison_Exp>;
  toBankSwiftCode?: InputMaybe<String_Comparison_Exp>;
  toBeneficiaryAddress?: InputMaybe<String_Comparison_Exp>;
  toBeneficiaryId?: InputMaybe<Uuid_Comparison_Exp>;
  toBeneficiaryName?: InputMaybe<String_Comparison_Exp>;
  toBusinessWalletCurrency?: InputMaybe<String_Comparison_Exp>;
  toBusinessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  transactionSubType?: InputMaybe<String_Comparison_Exp>;
  transactionType?: InputMaybe<TransactionTypes_Enum_Comparison_Exp>;
  transactionTypeByTransactiontype?: InputMaybe<TransactionTypes_Bool_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  withdrawal?: InputMaybe<Withdrawals_Bool_Exp>;
  withdrawalId?: InputMaybe<Uuid_Comparison_Exp>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Enum_Comparison_Exp>;
  withdrawalTypeByWithdrawaltype?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};

/** unique or primary key constraints on table "accountLedgers" */
export enum AccountLedgers_Constraint {
  /** unique or primary key constraint on columns "id" */
  AccountLedgersPkey = 'accountLedgers_pkey'
}

/** input type for incrementing numeric columns in table "accountLedgers" */
export type AccountLedgers_Inc_Input = {
  balance?: InputMaybe<Scalars['numeric']>;
  creditAmount?: InputMaybe<Scalars['numeric']>;
  debitAmount?: InputMaybe<Scalars['numeric']>;
  internalId?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "accountLedgers" */
export type AccountLedgers_Insert_Input = {
  adjustment?: InputMaybe<Adjustments_Obj_Rel_Insert_Input>;
  adjustmentId?: InputMaybe<Scalars['uuid']>;
  balance?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  creditAmount?: InputMaybe<Scalars['numeric']>;
  currency?: InputMaybe<Scalars['String']>;
  currencyExchange?: InputMaybe<CurrencyExchange_Obj_Rel_Insert_Input>;
  currencyExchangeId?: InputMaybe<Scalars['uuid']>;
  debitAmount?: InputMaybe<Scalars['numeric']>;
  deposit?: InputMaybe<Deposits_Obj_Rel_Insert_Input>;
  depositId?: InputMaybe<Scalars['uuid']>;
  depositType?: InputMaybe<DepositTypes_Enum>;
  depositTypeByDeposittype?: InputMaybe<DepositTypes_Obj_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  fromAccountCurrency?: InputMaybe<Scalars['String']>;
  fromAccountIBAN?: InputMaybe<Scalars['String']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAccountNickname?: InputMaybe<Scalars['String']>;
  fromBankAddress?: InputMaybe<Scalars['String']>;
  fromBankName?: InputMaybe<Scalars['String']>;
  fromBankNickname?: InputMaybe<Scalars['String']>;
  fromBankSwiftCode?: InputMaybe<Scalars['String']>;
  fromBeneficiaryName?: InputMaybe<Scalars['String']>;
  fromBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCustomerCountry?: InputMaybe<Scalars['String']>;
  fromCustomerFirstName?: InputMaybe<Scalars['String']>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  fromCustomerLastName?: InputMaybe<Scalars['String']>;
  fromCustomerUsername?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  ledgerType?: InputMaybe<LedgerTypes_Enum>;
  ledgerTypeByLedgertype?: InputMaybe<LedgerTypes_Obj_Rel_Insert_Input>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  toAccountCurrency?: InputMaybe<Scalars['String']>;
  toAccountIBAN?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAccountNickname?: InputMaybe<Scalars['String']>;
  toBankAddress?: InputMaybe<Scalars['String']>;
  toBankName?: InputMaybe<Scalars['String']>;
  toBankNickname?: InputMaybe<Scalars['String']>;
  toBankSwiftCode?: InputMaybe<Scalars['String']>;
  toBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  toBeneficiaryName?: InputMaybe<Scalars['String']>;
  toBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  transactionSubType?: InputMaybe<Scalars['String']>;
  transactionType?: InputMaybe<TransactionTypes_Enum>;
  transactionTypeByTransactiontype?: InputMaybe<TransactionTypes_Obj_Rel_Insert_Input>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawal?: InputMaybe<Withdrawals_Obj_Rel_Insert_Input>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Enum>;
  withdrawalTypeByWithdrawaltype?: InputMaybe<WithdrawalTypes_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type AccountLedgers_Max_Fields = {
  __typename?: 'accountLedgers_max_fields';
  adjustmentId?: Maybe<Scalars['uuid']>;
  balance?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  creditAmount?: Maybe<Scalars['numeric']>;
  currency?: Maybe<Scalars['String']>;
  currencyExchangeId?: Maybe<Scalars['uuid']>;
  debitAmount?: Maybe<Scalars['numeric']>;
  depositId?: Maybe<Scalars['uuid']>;
  description?: Maybe<Scalars['String']>;
  fromAccountCurrency?: Maybe<Scalars['String']>;
  fromAccountIBAN?: Maybe<Scalars['String']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAccountNickname?: Maybe<Scalars['String']>;
  fromBankAddress?: Maybe<Scalars['String']>;
  fromBankName?: Maybe<Scalars['String']>;
  fromBankNickname?: Maybe<Scalars['String']>;
  fromBankSwiftCode?: Maybe<Scalars['String']>;
  fromBeneficiaryName?: Maybe<Scalars['String']>;
  fromBusinessWalletCurrency?: Maybe<Scalars['String']>;
  fromBusinessWalletId?: Maybe<Scalars['uuid']>;
  fromCustomerCountry?: Maybe<Scalars['String']>;
  fromCustomerFirstName?: Maybe<Scalars['String']>;
  fromCustomerId?: Maybe<Scalars['uuid']>;
  fromCustomerLastName?: Maybe<Scalars['String']>;
  fromCustomerUsername?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  remarks?: Maybe<Scalars['String']>;
  toAccountCurrency?: Maybe<Scalars['String']>;
  toAccountIBAN?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAccountNickname?: Maybe<Scalars['String']>;
  toBankAddress?: Maybe<Scalars['String']>;
  toBankName?: Maybe<Scalars['String']>;
  toBankNickname?: Maybe<Scalars['String']>;
  toBankSwiftCode?: Maybe<Scalars['String']>;
  toBeneficiaryAddress?: Maybe<Scalars['String']>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  toBeneficiaryName?: Maybe<Scalars['String']>;
  toBusinessWalletCurrency?: Maybe<Scalars['String']>;
  toBusinessWalletId?: Maybe<Scalars['uuid']>;
  transactionSubType?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "accountLedgers" */
export type AccountLedgers_Max_Order_By = {
  adjustmentId?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  currencyExchangeId?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  fromAccountCurrency?: InputMaybe<Order_By>;
  fromAccountIBAN?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  fromAccountNickname?: InputMaybe<Order_By>;
  fromBankAddress?: InputMaybe<Order_By>;
  fromBankName?: InputMaybe<Order_By>;
  fromBankNickname?: InputMaybe<Order_By>;
  fromBankSwiftCode?: InputMaybe<Order_By>;
  fromBeneficiaryName?: InputMaybe<Order_By>;
  fromBusinessWalletCurrency?: InputMaybe<Order_By>;
  fromBusinessWalletId?: InputMaybe<Order_By>;
  fromCustomerCountry?: InputMaybe<Order_By>;
  fromCustomerFirstName?: InputMaybe<Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  fromCustomerLastName?: InputMaybe<Order_By>;
  fromCustomerUsername?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  toAccountCurrency?: InputMaybe<Order_By>;
  toAccountIBAN?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  toAccountNickname?: InputMaybe<Order_By>;
  toBankAddress?: InputMaybe<Order_By>;
  toBankName?: InputMaybe<Order_By>;
  toBankNickname?: InputMaybe<Order_By>;
  toBankSwiftCode?: InputMaybe<Order_By>;
  toBeneficiaryAddress?: InputMaybe<Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  toBeneficiaryName?: InputMaybe<Order_By>;
  toBusinessWalletCurrency?: InputMaybe<Order_By>;
  toBusinessWalletId?: InputMaybe<Order_By>;
  transactionSubType?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type AccountLedgers_Min_Fields = {
  __typename?: 'accountLedgers_min_fields';
  adjustmentId?: Maybe<Scalars['uuid']>;
  balance?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  creditAmount?: Maybe<Scalars['numeric']>;
  currency?: Maybe<Scalars['String']>;
  currencyExchangeId?: Maybe<Scalars['uuid']>;
  debitAmount?: Maybe<Scalars['numeric']>;
  depositId?: Maybe<Scalars['uuid']>;
  description?: Maybe<Scalars['String']>;
  fromAccountCurrency?: Maybe<Scalars['String']>;
  fromAccountIBAN?: Maybe<Scalars['String']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAccountNickname?: Maybe<Scalars['String']>;
  fromBankAddress?: Maybe<Scalars['String']>;
  fromBankName?: Maybe<Scalars['String']>;
  fromBankNickname?: Maybe<Scalars['String']>;
  fromBankSwiftCode?: Maybe<Scalars['String']>;
  fromBeneficiaryName?: Maybe<Scalars['String']>;
  fromBusinessWalletCurrency?: Maybe<Scalars['String']>;
  fromBusinessWalletId?: Maybe<Scalars['uuid']>;
  fromCustomerCountry?: Maybe<Scalars['String']>;
  fromCustomerFirstName?: Maybe<Scalars['String']>;
  fromCustomerId?: Maybe<Scalars['uuid']>;
  fromCustomerLastName?: Maybe<Scalars['String']>;
  fromCustomerUsername?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  remarks?: Maybe<Scalars['String']>;
  toAccountCurrency?: Maybe<Scalars['String']>;
  toAccountIBAN?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAccountNickname?: Maybe<Scalars['String']>;
  toBankAddress?: Maybe<Scalars['String']>;
  toBankName?: Maybe<Scalars['String']>;
  toBankNickname?: Maybe<Scalars['String']>;
  toBankSwiftCode?: Maybe<Scalars['String']>;
  toBeneficiaryAddress?: Maybe<Scalars['String']>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  toBeneficiaryName?: Maybe<Scalars['String']>;
  toBusinessWalletCurrency?: Maybe<Scalars['String']>;
  toBusinessWalletId?: Maybe<Scalars['uuid']>;
  transactionSubType?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "accountLedgers" */
export type AccountLedgers_Min_Order_By = {
  adjustmentId?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  currencyExchangeId?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  fromAccountCurrency?: InputMaybe<Order_By>;
  fromAccountIBAN?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  fromAccountNickname?: InputMaybe<Order_By>;
  fromBankAddress?: InputMaybe<Order_By>;
  fromBankName?: InputMaybe<Order_By>;
  fromBankNickname?: InputMaybe<Order_By>;
  fromBankSwiftCode?: InputMaybe<Order_By>;
  fromBeneficiaryName?: InputMaybe<Order_By>;
  fromBusinessWalletCurrency?: InputMaybe<Order_By>;
  fromBusinessWalletId?: InputMaybe<Order_By>;
  fromCustomerCountry?: InputMaybe<Order_By>;
  fromCustomerFirstName?: InputMaybe<Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  fromCustomerLastName?: InputMaybe<Order_By>;
  fromCustomerUsername?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  toAccountCurrency?: InputMaybe<Order_By>;
  toAccountIBAN?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  toAccountNickname?: InputMaybe<Order_By>;
  toBankAddress?: InputMaybe<Order_By>;
  toBankName?: InputMaybe<Order_By>;
  toBankNickname?: InputMaybe<Order_By>;
  toBankSwiftCode?: InputMaybe<Order_By>;
  toBeneficiaryAddress?: InputMaybe<Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  toBeneficiaryName?: InputMaybe<Order_By>;
  toBusinessWalletCurrency?: InputMaybe<Order_By>;
  toBusinessWalletId?: InputMaybe<Order_By>;
  transactionSubType?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "accountLedgers" */
export type AccountLedgers_Mutation_Response = {
  __typename?: 'accountLedgers_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<AccountLedgers>;
};

/** on_conflict condition type for table "accountLedgers" */
export type AccountLedgers_On_Conflict = {
  constraint: AccountLedgers_Constraint;
  update_columns?: Array<AccountLedgers_Update_Column>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};

/** Ordering options when selecting data from "accountLedgers". */
export type AccountLedgers_Order_By = {
  adjustment?: InputMaybe<Adjustments_Order_By>;
  adjustmentId?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  currencyExchange?: InputMaybe<CurrencyExchange_Order_By>;
  currencyExchangeId?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  deposit?: InputMaybe<Deposits_Order_By>;
  depositId?: InputMaybe<Order_By>;
  depositType?: InputMaybe<Order_By>;
  depositTypeByDeposittype?: InputMaybe<DepositTypes_Order_By>;
  description?: InputMaybe<Order_By>;
  fromAccountCurrency?: InputMaybe<Order_By>;
  fromAccountIBAN?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  fromAccountNickname?: InputMaybe<Order_By>;
  fromBankAddress?: InputMaybe<Order_By>;
  fromBankName?: InputMaybe<Order_By>;
  fromBankNickname?: InputMaybe<Order_By>;
  fromBankSwiftCode?: InputMaybe<Order_By>;
  fromBeneficiaryName?: InputMaybe<Order_By>;
  fromBusinessWalletCurrency?: InputMaybe<Order_By>;
  fromBusinessWalletId?: InputMaybe<Order_By>;
  fromCustomerCountry?: InputMaybe<Order_By>;
  fromCustomerFirstName?: InputMaybe<Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  fromCustomerLastName?: InputMaybe<Order_By>;
  fromCustomerUsername?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  ledgerType?: InputMaybe<Order_By>;
  ledgerTypeByLedgertype?: InputMaybe<LedgerTypes_Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  toAccountCurrency?: InputMaybe<Order_By>;
  toAccountIBAN?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  toAccountNickname?: InputMaybe<Order_By>;
  toBankAddress?: InputMaybe<Order_By>;
  toBankName?: InputMaybe<Order_By>;
  toBankNickname?: InputMaybe<Order_By>;
  toBankSwiftCode?: InputMaybe<Order_By>;
  toBeneficiaryAddress?: InputMaybe<Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  toBeneficiaryName?: InputMaybe<Order_By>;
  toBusinessWalletCurrency?: InputMaybe<Order_By>;
  toBusinessWalletId?: InputMaybe<Order_By>;
  transactionSubType?: InputMaybe<Order_By>;
  transactionType?: InputMaybe<Order_By>;
  transactionTypeByTransactiontype?: InputMaybe<TransactionTypes_Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawal?: InputMaybe<Withdrawals_Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
  withdrawalType?: InputMaybe<Order_By>;
  withdrawalTypeByWithdrawaltype?: InputMaybe<WithdrawalTypes_Order_By>;
};

/** primary key columns input for table: accountLedgers */
export type AccountLedgers_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "accountLedgers" */
export enum AccountLedgers_Select_Column {
  /** column name */
  AdjustmentId = 'adjustmentId',
  /** column name */
  Balance = 'balance',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreditAmount = 'creditAmount',
  /** column name */
  Currency = 'currency',
  /** column name */
  CurrencyExchangeId = 'currencyExchangeId',
  /** column name */
  DebitAmount = 'debitAmount',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  DepositType = 'depositType',
  /** column name */
  Description = 'description',
  /** column name */
  FromAccountCurrency = 'fromAccountCurrency',
  /** column name */
  FromAccountIban = 'fromAccountIBAN',
  /** column name */
  FromAccountId = 'fromAccountId',
  /** column name */
  FromAccountNickname = 'fromAccountNickname',
  /** column name */
  FromBankAddress = 'fromBankAddress',
  /** column name */
  FromBankName = 'fromBankName',
  /** column name */
  FromBankNickname = 'fromBankNickname',
  /** column name */
  FromBankSwiftCode = 'fromBankSwiftCode',
  /** column name */
  FromBeneficiaryName = 'fromBeneficiaryName',
  /** column name */
  FromBusinessWalletCurrency = 'fromBusinessWalletCurrency',
  /** column name */
  FromBusinessWalletId = 'fromBusinessWalletId',
  /** column name */
  FromCustomerCountry = 'fromCustomerCountry',
  /** column name */
  FromCustomerFirstName = 'fromCustomerFirstName',
  /** column name */
  FromCustomerId = 'fromCustomerId',
  /** column name */
  FromCustomerLastName = 'fromCustomerLastName',
  /** column name */
  FromCustomerUsername = 'fromCustomerUsername',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  LedgerType = 'ledgerType',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ToAccountCurrency = 'toAccountCurrency',
  /** column name */
  ToAccountIban = 'toAccountIBAN',
  /** column name */
  ToAccountId = 'toAccountId',
  /** column name */
  ToAccountNickname = 'toAccountNickname',
  /** column name */
  ToBankAddress = 'toBankAddress',
  /** column name */
  ToBankName = 'toBankName',
  /** column name */
  ToBankNickname = 'toBankNickname',
  /** column name */
  ToBankSwiftCode = 'toBankSwiftCode',
  /** column name */
  ToBeneficiaryAddress = 'toBeneficiaryAddress',
  /** column name */
  ToBeneficiaryId = 'toBeneficiaryId',
  /** column name */
  ToBeneficiaryName = 'toBeneficiaryName',
  /** column name */
  ToBusinessWalletCurrency = 'toBusinessWalletCurrency',
  /** column name */
  ToBusinessWalletId = 'toBusinessWalletId',
  /** column name */
  TransactionSubType = 'transactionSubType',
  /** column name */
  TransactionType = 'transactionType',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  WithdrawalId = 'withdrawalId',
  /** column name */
  WithdrawalType = 'withdrawalType'
}

/** input type for updating data in table "accountLedgers" */
export type AccountLedgers_Set_Input = {
  adjustmentId?: InputMaybe<Scalars['uuid']>;
  balance?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  creditAmount?: InputMaybe<Scalars['numeric']>;
  currency?: InputMaybe<Scalars['String']>;
  currencyExchangeId?: InputMaybe<Scalars['uuid']>;
  debitAmount?: InputMaybe<Scalars['numeric']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  depositType?: InputMaybe<DepositTypes_Enum>;
  description?: InputMaybe<Scalars['String']>;
  fromAccountCurrency?: InputMaybe<Scalars['String']>;
  fromAccountIBAN?: InputMaybe<Scalars['String']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAccountNickname?: InputMaybe<Scalars['String']>;
  fromBankAddress?: InputMaybe<Scalars['String']>;
  fromBankName?: InputMaybe<Scalars['String']>;
  fromBankNickname?: InputMaybe<Scalars['String']>;
  fromBankSwiftCode?: InputMaybe<Scalars['String']>;
  fromBeneficiaryName?: InputMaybe<Scalars['String']>;
  fromBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCustomerCountry?: InputMaybe<Scalars['String']>;
  fromCustomerFirstName?: InputMaybe<Scalars['String']>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  fromCustomerLastName?: InputMaybe<Scalars['String']>;
  fromCustomerUsername?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  ledgerType?: InputMaybe<LedgerTypes_Enum>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  toAccountCurrency?: InputMaybe<Scalars['String']>;
  toAccountIBAN?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAccountNickname?: InputMaybe<Scalars['String']>;
  toBankAddress?: InputMaybe<Scalars['String']>;
  toBankName?: InputMaybe<Scalars['String']>;
  toBankNickname?: InputMaybe<Scalars['String']>;
  toBankSwiftCode?: InputMaybe<Scalars['String']>;
  toBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  toBeneficiaryName?: InputMaybe<Scalars['String']>;
  toBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  transactionSubType?: InputMaybe<Scalars['String']>;
  transactionType?: InputMaybe<TransactionTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Enum>;
};

/** aggregate stddev on columns */
export type AccountLedgers_Stddev_Fields = {
  __typename?: 'accountLedgers_stddev_fields';
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "accountLedgers" */
export type AccountLedgers_Stddev_Order_By = {
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type AccountLedgers_Stddev_Pop_Fields = {
  __typename?: 'accountLedgers_stddev_pop_fields';
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "accountLedgers" */
export type AccountLedgers_Stddev_Pop_Order_By = {
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type AccountLedgers_Stddev_Samp_Fields = {
  __typename?: 'accountLedgers_stddev_samp_fields';
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "accountLedgers" */
export type AccountLedgers_Stddev_Samp_Order_By = {
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "accountLedgers" */
export type AccountLedgers_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: AccountLedgers_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type AccountLedgers_Stream_Cursor_Value_Input = {
  adjustmentId?: InputMaybe<Scalars['uuid']>;
  balance?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  creditAmount?: InputMaybe<Scalars['numeric']>;
  currency?: InputMaybe<Scalars['String']>;
  currencyExchangeId?: InputMaybe<Scalars['uuid']>;
  debitAmount?: InputMaybe<Scalars['numeric']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  depositType?: InputMaybe<DepositTypes_Enum>;
  description?: InputMaybe<Scalars['String']>;
  fromAccountCurrency?: InputMaybe<Scalars['String']>;
  fromAccountIBAN?: InputMaybe<Scalars['String']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAccountNickname?: InputMaybe<Scalars['String']>;
  fromBankAddress?: InputMaybe<Scalars['String']>;
  fromBankName?: InputMaybe<Scalars['String']>;
  fromBankNickname?: InputMaybe<Scalars['String']>;
  fromBankSwiftCode?: InputMaybe<Scalars['String']>;
  fromBeneficiaryName?: InputMaybe<Scalars['String']>;
  fromBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCustomerCountry?: InputMaybe<Scalars['String']>;
  fromCustomerFirstName?: InputMaybe<Scalars['String']>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  fromCustomerLastName?: InputMaybe<Scalars['String']>;
  fromCustomerUsername?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  ledgerType?: InputMaybe<LedgerTypes_Enum>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  toAccountCurrency?: InputMaybe<Scalars['String']>;
  toAccountIBAN?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAccountNickname?: InputMaybe<Scalars['String']>;
  toBankAddress?: InputMaybe<Scalars['String']>;
  toBankName?: InputMaybe<Scalars['String']>;
  toBankNickname?: InputMaybe<Scalars['String']>;
  toBankSwiftCode?: InputMaybe<Scalars['String']>;
  toBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  toBeneficiaryName?: InputMaybe<Scalars['String']>;
  toBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  transactionSubType?: InputMaybe<Scalars['String']>;
  transactionType?: InputMaybe<TransactionTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Enum>;
};

/** aggregate sum on columns */
export type AccountLedgers_Sum_Fields = {
  __typename?: 'accountLedgers_sum_fields';
  balance?: Maybe<Scalars['numeric']>;
  creditAmount?: Maybe<Scalars['numeric']>;
  debitAmount?: Maybe<Scalars['numeric']>;
  internalId?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "accountLedgers" */
export type AccountLedgers_Sum_Order_By = {
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** update columns of table "accountLedgers" */
export enum AccountLedgers_Update_Column {
  /** column name */
  AdjustmentId = 'adjustmentId',
  /** column name */
  Balance = 'balance',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreditAmount = 'creditAmount',
  /** column name */
  Currency = 'currency',
  /** column name */
  CurrencyExchangeId = 'currencyExchangeId',
  /** column name */
  DebitAmount = 'debitAmount',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  DepositType = 'depositType',
  /** column name */
  Description = 'description',
  /** column name */
  FromAccountCurrency = 'fromAccountCurrency',
  /** column name */
  FromAccountIban = 'fromAccountIBAN',
  /** column name */
  FromAccountId = 'fromAccountId',
  /** column name */
  FromAccountNickname = 'fromAccountNickname',
  /** column name */
  FromBankAddress = 'fromBankAddress',
  /** column name */
  FromBankName = 'fromBankName',
  /** column name */
  FromBankNickname = 'fromBankNickname',
  /** column name */
  FromBankSwiftCode = 'fromBankSwiftCode',
  /** column name */
  FromBeneficiaryName = 'fromBeneficiaryName',
  /** column name */
  FromBusinessWalletCurrency = 'fromBusinessWalletCurrency',
  /** column name */
  FromBusinessWalletId = 'fromBusinessWalletId',
  /** column name */
  FromCustomerCountry = 'fromCustomerCountry',
  /** column name */
  FromCustomerFirstName = 'fromCustomerFirstName',
  /** column name */
  FromCustomerId = 'fromCustomerId',
  /** column name */
  FromCustomerLastName = 'fromCustomerLastName',
  /** column name */
  FromCustomerUsername = 'fromCustomerUsername',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  LedgerType = 'ledgerType',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ToAccountCurrency = 'toAccountCurrency',
  /** column name */
  ToAccountIban = 'toAccountIBAN',
  /** column name */
  ToAccountId = 'toAccountId',
  /** column name */
  ToAccountNickname = 'toAccountNickname',
  /** column name */
  ToBankAddress = 'toBankAddress',
  /** column name */
  ToBankName = 'toBankName',
  /** column name */
  ToBankNickname = 'toBankNickname',
  /** column name */
  ToBankSwiftCode = 'toBankSwiftCode',
  /** column name */
  ToBeneficiaryAddress = 'toBeneficiaryAddress',
  /** column name */
  ToBeneficiaryId = 'toBeneficiaryId',
  /** column name */
  ToBeneficiaryName = 'toBeneficiaryName',
  /** column name */
  ToBusinessWalletCurrency = 'toBusinessWalletCurrency',
  /** column name */
  ToBusinessWalletId = 'toBusinessWalletId',
  /** column name */
  TransactionSubType = 'transactionSubType',
  /** column name */
  TransactionType = 'transactionType',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  WithdrawalId = 'withdrawalId',
  /** column name */
  WithdrawalType = 'withdrawalType'
}

export type AccountLedgers_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<AccountLedgers_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AccountLedgers_Set_Input>;
  /** filter the rows which have to be updated */
  where: AccountLedgers_Bool_Exp;
};

/** aggregate var_pop on columns */
export type AccountLedgers_Var_Pop_Fields = {
  __typename?: 'accountLedgers_var_pop_fields';
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "accountLedgers" */
export type AccountLedgers_Var_Pop_Order_By = {
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type AccountLedgers_Var_Samp_Fields = {
  __typename?: 'accountLedgers_var_samp_fields';
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "accountLedgers" */
export type AccountLedgers_Var_Samp_Order_By = {
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type AccountLedgers_Variance_Fields = {
  __typename?: 'accountLedgers_variance_fields';
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "accountLedgers" */
export type AccountLedgers_Variance_Order_By = {
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** columns and relationships of "activityLogs" */
export type ActivityLogs = {
  __typename?: 'activityLogs';
  actionByMerchant: Array<Merchant>;
  actionBySubAdmin: Array<SubAdmin>;
  actionBySuperAdmin: Array<SuperAdmin>;
  actionByUserId?: Maybe<Scalars['uuid']>;
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  deposit?: Maybe<Deposits>;
  depositId?: Maybe<Scalars['uuid']>;
  featureType?: Maybe<FeatureTypes_Enum>;
  /** An object relationship */
  featureTypeByFeaturetype?: Maybe<FeatureTypes>;
  id: Scalars['uuid'];
  /** An object relationship */
  ledger?: Maybe<Ledgers>;
  ledgerId?: Maybe<Scalars['uuid']>;
  message: Scalars['String'];
  /** An object relationship */
  task?: Maybe<Tasks>;
  taskId?: Maybe<Scalars['uuid']>;
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  withdrawal?: Maybe<Withdrawals>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "activityLogs" */
export type ActivityLogsActionByMerchantArgs = {
  options?: InputMaybe<MerchantOptions_Remote_Rel_ActivityLogsactionByMerchant>;
  where?: InputMaybe<MerchantWhere_Remote_Rel_ActivityLogsactionByMerchant>;
};


/** columns and relationships of "activityLogs" */
export type ActivityLogsActionBySubAdminArgs = {
  options?: InputMaybe<SubAdminOptions_Remote_Rel_ActivityLogsactionBySubAdmin>;
  where?: InputMaybe<SubAdminWhere_Remote_Rel_ActivityLogsactionBySubAdmin>;
};


/** columns and relationships of "activityLogs" */
export type ActivityLogsActionBySuperAdminArgs = {
  options?: InputMaybe<SuperAdminOptions_Remote_Rel_ActivityLogsactionBySuperAdmin>;
  where?: InputMaybe<SuperAdminWhere_Remote_Rel_ActivityLogsactionBySuperAdmin>;
};

/** aggregated selection of "activityLogs" */
export type ActivityLogs_Aggregate = {
  __typename?: 'activityLogs_aggregate';
  aggregate?: Maybe<ActivityLogs_Aggregate_Fields>;
  nodes: Array<ActivityLogs>;
};

export type ActivityLogs_Aggregate_Bool_Exp = {
  count?: InputMaybe<ActivityLogs_Aggregate_Bool_Exp_Count>;
};

export type ActivityLogs_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<ActivityLogs_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "activityLogs" */
export type ActivityLogs_Aggregate_Fields = {
  __typename?: 'activityLogs_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<ActivityLogs_Max_Fields>;
  min?: Maybe<ActivityLogs_Min_Fields>;
};


/** aggregate fields of "activityLogs" */
export type ActivityLogs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "activityLogs" */
export type ActivityLogs_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ActivityLogs_Max_Order_By>;
  min?: InputMaybe<ActivityLogs_Min_Order_By>;
};

/** input type for inserting array relation for remote table "activityLogs" */
export type ActivityLogs_Arr_Rel_Insert_Input = {
  data: Array<ActivityLogs_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ActivityLogs_On_Conflict>;
};

/** Boolean expression to filter rows from the table "activityLogs". All fields are combined with a logical 'AND'. */
export type ActivityLogs_Bool_Exp = {
  _and?: InputMaybe<Array<ActivityLogs_Bool_Exp>>;
  _not?: InputMaybe<ActivityLogs_Bool_Exp>;
  _or?: InputMaybe<Array<ActivityLogs_Bool_Exp>>;
  actionByUserId?: InputMaybe<Uuid_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  deposit?: InputMaybe<Deposits_Bool_Exp>;
  depositId?: InputMaybe<Uuid_Comparison_Exp>;
  featureType?: InputMaybe<FeatureTypes_Enum_Comparison_Exp>;
  featureTypeByFeaturetype?: InputMaybe<FeatureTypes_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ledger?: InputMaybe<Ledgers_Bool_Exp>;
  ledgerId?: InputMaybe<Uuid_Comparison_Exp>;
  message?: InputMaybe<String_Comparison_Exp>;
  task?: InputMaybe<Tasks_Bool_Exp>;
  taskId?: InputMaybe<Uuid_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  withdrawal?: InputMaybe<Withdrawals_Bool_Exp>;
  withdrawalId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "activityLogs" */
export enum ActivityLogs_Constraint {
  /** unique or primary key constraint on columns "id" */
  ActivityLogsPkey = 'activityLogs_pkey'
}

/** input type for inserting data into table "activityLogs" */
export type ActivityLogs_Insert_Input = {
  actionByUserId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deposit?: InputMaybe<Deposits_Obj_Rel_Insert_Input>;
  depositId?: InputMaybe<Scalars['uuid']>;
  featureType?: InputMaybe<FeatureTypes_Enum>;
  featureTypeByFeaturetype?: InputMaybe<FeatureTypes_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  ledger?: InputMaybe<Ledgers_Obj_Rel_Insert_Input>;
  ledgerId?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  task?: InputMaybe<Tasks_Obj_Rel_Insert_Input>;
  taskId?: InputMaybe<Scalars['uuid']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawal?: InputMaybe<Withdrawals_Obj_Rel_Insert_Input>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type ActivityLogs_Max_Fields = {
  __typename?: 'activityLogs_max_fields';
  actionByUserId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  depositId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  ledgerId?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  taskId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "activityLogs" */
export type ActivityLogs_Max_Order_By = {
  actionByUserId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ledgerId?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  taskId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ActivityLogs_Min_Fields = {
  __typename?: 'activityLogs_min_fields';
  actionByUserId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  depositId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  ledgerId?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  taskId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "activityLogs" */
export type ActivityLogs_Min_Order_By = {
  actionByUserId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ledgerId?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  taskId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "activityLogs" */
export type ActivityLogs_Mutation_Response = {
  __typename?: 'activityLogs_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ActivityLogs>;
};

/** on_conflict condition type for table "activityLogs" */
export type ActivityLogs_On_Conflict = {
  constraint: ActivityLogs_Constraint;
  update_columns?: Array<ActivityLogs_Update_Column>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};

/** Ordering options when selecting data from "activityLogs". */
export type ActivityLogs_Order_By = {
  actionByUserId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deposit?: InputMaybe<Deposits_Order_By>;
  depositId?: InputMaybe<Order_By>;
  featureType?: InputMaybe<Order_By>;
  featureTypeByFeaturetype?: InputMaybe<FeatureTypes_Order_By>;
  id?: InputMaybe<Order_By>;
  ledger?: InputMaybe<Ledgers_Order_By>;
  ledgerId?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  task?: InputMaybe<Tasks_Order_By>;
  taskId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawal?: InputMaybe<Withdrawals_Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: activityLogs */
export type ActivityLogs_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "activityLogs" */
export enum ActivityLogs_Select_Column {
  /** column name */
  ActionByUserId = 'actionByUserId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  FeatureType = 'featureType',
  /** column name */
  Id = 'id',
  /** column name */
  LedgerId = 'ledgerId',
  /** column name */
  Message = 'message',
  /** column name */
  TaskId = 'taskId',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  WithdrawalId = 'withdrawalId'
}

/** input type for updating data in table "activityLogs" */
export type ActivityLogs_Set_Input = {
  actionByUserId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  featureType?: InputMaybe<FeatureTypes_Enum>;
  id?: InputMaybe<Scalars['uuid']>;
  ledgerId?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  taskId?: InputMaybe<Scalars['uuid']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** Streaming cursor of the table "activityLogs" */
export type ActivityLogs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ActivityLogs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ActivityLogs_Stream_Cursor_Value_Input = {
  actionByUserId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  featureType?: InputMaybe<FeatureTypes_Enum>;
  id?: InputMaybe<Scalars['uuid']>;
  ledgerId?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  taskId?: InputMaybe<Scalars['uuid']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "activityLogs" */
export enum ActivityLogs_Update_Column {
  /** column name */
  ActionByUserId = 'actionByUserId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  FeatureType = 'featureType',
  /** column name */
  Id = 'id',
  /** column name */
  LedgerId = 'ledgerId',
  /** column name */
  Message = 'message',
  /** column name */
  TaskId = 'taskId',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  WithdrawalId = 'withdrawalId'
}

export type ActivityLogs_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ActivityLogs_Set_Input>;
  /** filter the rows which have to be updated */
  where: ActivityLogs_Bool_Exp;
};

/** columns and relationships of "adjustmentTypes" */
export type AdjustmentTypes = {
  __typename?: 'adjustmentTypes';
  /** An array relationship */
  adjustments: Array<Adjustments>;
  /** An aggregate relationship */
  adjustments_aggregate: Adjustments_Aggregate;
  description?: Maybe<Scalars['String']>;
  name: Scalars['String'];
};


/** columns and relationships of "adjustmentTypes" */
export type AdjustmentTypesAdjustmentsArgs = {
  distinct_on?: InputMaybe<Array<Adjustments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Adjustments_Order_By>>;
  where?: InputMaybe<Adjustments_Bool_Exp>;
};


/** columns and relationships of "adjustmentTypes" */
export type AdjustmentTypesAdjustments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Adjustments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Adjustments_Order_By>>;
  where?: InputMaybe<Adjustments_Bool_Exp>;
};

/** aggregated selection of "adjustmentTypes" */
export type AdjustmentTypes_Aggregate = {
  __typename?: 'adjustmentTypes_aggregate';
  aggregate?: Maybe<AdjustmentTypes_Aggregate_Fields>;
  nodes: Array<AdjustmentTypes>;
};

/** aggregate fields of "adjustmentTypes" */
export type AdjustmentTypes_Aggregate_Fields = {
  __typename?: 'adjustmentTypes_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<AdjustmentTypes_Max_Fields>;
  min?: Maybe<AdjustmentTypes_Min_Fields>;
};


/** aggregate fields of "adjustmentTypes" */
export type AdjustmentTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<AdjustmentTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "adjustmentTypes". All fields are combined with a logical 'AND'. */
export type AdjustmentTypes_Bool_Exp = {
  _and?: InputMaybe<Array<AdjustmentTypes_Bool_Exp>>;
  _not?: InputMaybe<AdjustmentTypes_Bool_Exp>;
  _or?: InputMaybe<Array<AdjustmentTypes_Bool_Exp>>;
  adjustments?: InputMaybe<Adjustments_Bool_Exp>;
  adjustments_aggregate?: InputMaybe<Adjustments_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "adjustmentTypes" */
export enum AdjustmentTypes_Constraint {
  /** unique or primary key constraint on columns "name" */
  AdjustmentTypesPkey = 'adjustmentTypes_pkey'
}

export enum AdjustmentTypes_Enum {
  Other = 'OTHER'
}

/** Boolean expression to compare columns of type "adjustmentTypes_enum". All fields are combined with logical 'AND'. */
export type AdjustmentTypes_Enum_Comparison_Exp = {
  _eq?: InputMaybe<AdjustmentTypes_Enum>;
  _in?: InputMaybe<Array<AdjustmentTypes_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<AdjustmentTypes_Enum>;
  _nin?: InputMaybe<Array<AdjustmentTypes_Enum>>;
};

/** input type for inserting data into table "adjustmentTypes" */
export type AdjustmentTypes_Insert_Input = {
  adjustments?: InputMaybe<Adjustments_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type AdjustmentTypes_Max_Fields = {
  __typename?: 'adjustmentTypes_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type AdjustmentTypes_Min_Fields = {
  __typename?: 'adjustmentTypes_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "adjustmentTypes" */
export type AdjustmentTypes_Mutation_Response = {
  __typename?: 'adjustmentTypes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<AdjustmentTypes>;
};

/** input type for inserting object relation for remote table "adjustmentTypes" */
export type AdjustmentTypes_Obj_Rel_Insert_Input = {
  data: AdjustmentTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<AdjustmentTypes_On_Conflict>;
};

/** on_conflict condition type for table "adjustmentTypes" */
export type AdjustmentTypes_On_Conflict = {
  constraint: AdjustmentTypes_Constraint;
  update_columns?: Array<AdjustmentTypes_Update_Column>;
  where?: InputMaybe<AdjustmentTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "adjustmentTypes". */
export type AdjustmentTypes_Order_By = {
  adjustments_aggregate?: InputMaybe<Adjustments_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: adjustmentTypes */
export type AdjustmentTypes_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "adjustmentTypes" */
export enum AdjustmentTypes_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "adjustmentTypes" */
export type AdjustmentTypes_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "adjustmentTypes" */
export type AdjustmentTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: AdjustmentTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type AdjustmentTypes_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "adjustmentTypes" */
export enum AdjustmentTypes_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type AdjustmentTypes_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AdjustmentTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: AdjustmentTypes_Bool_Exp;
};

/** columns and relationships of "adjustments" */
export type Adjustments = {
  __typename?: 'adjustments';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  /** An object relationship */
  adjustmentType: AdjustmentTypes;
  amount: Scalars['numeric'];
  businessWallet: Array<BusinessWallet>;
  businessWalletId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  isCredit: Scalars['Boolean'];
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  otherType?: Maybe<Scalars['String']>;
  parentBusiness: Array<Business>;
  parentBusinessId: Scalars['uuid'];
  remarks?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['jsonb']>;
  type: AdjustmentTypes_Enum;
  updatedAt: Scalars['timestamptz'];
  updatedByUserId?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "adjustments" */
export type AdjustmentsAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "adjustments" */
export type AdjustmentsAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "adjustments" */
export type AdjustmentsBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_AdjustmentsbusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_AdjustmentsbusinessWallet>;
};


/** columns and relationships of "adjustments" */
export type AdjustmentsLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "adjustments" */
export type AdjustmentsLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "adjustments" */
export type AdjustmentsParentBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_AdjustmentsparentBusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_AdjustmentsparentBusiness>;
};


/** columns and relationships of "adjustments" */
export type AdjustmentsTagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "adjustments" */
export type Adjustments_Aggregate = {
  __typename?: 'adjustments_aggregate';
  aggregate?: Maybe<Adjustments_Aggregate_Fields>;
  nodes: Array<Adjustments>;
};

export type Adjustments_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Adjustments_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Adjustments_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Adjustments_Aggregate_Bool_Exp_Count>;
};

export type Adjustments_Aggregate_Bool_Exp_Bool_And = {
  arguments: Adjustments_Select_Column_Adjustments_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Adjustments_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Adjustments_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Adjustments_Select_Column_Adjustments_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Adjustments_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Adjustments_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Adjustments_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Adjustments_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "adjustments" */
export type Adjustments_Aggregate_Fields = {
  __typename?: 'adjustments_aggregate_fields';
  avg?: Maybe<Adjustments_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Adjustments_Max_Fields>;
  min?: Maybe<Adjustments_Min_Fields>;
  stddev?: Maybe<Adjustments_Stddev_Fields>;
  stddev_pop?: Maybe<Adjustments_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Adjustments_Stddev_Samp_Fields>;
  sum?: Maybe<Adjustments_Sum_Fields>;
  var_pop?: Maybe<Adjustments_Var_Pop_Fields>;
  var_samp?: Maybe<Adjustments_Var_Samp_Fields>;
  variance?: Maybe<Adjustments_Variance_Fields>;
};


/** aggregate fields of "adjustments" */
export type Adjustments_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Adjustments_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "adjustments" */
export type Adjustments_Aggregate_Order_By = {
  avg?: InputMaybe<Adjustments_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Adjustments_Max_Order_By>;
  min?: InputMaybe<Adjustments_Min_Order_By>;
  stddev?: InputMaybe<Adjustments_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Adjustments_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Adjustments_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Adjustments_Sum_Order_By>;
  var_pop?: InputMaybe<Adjustments_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Adjustments_Var_Samp_Order_By>;
  variance?: InputMaybe<Adjustments_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Adjustments_Append_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "adjustments" */
export type Adjustments_Arr_Rel_Insert_Input = {
  data: Array<Adjustments_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Adjustments_On_Conflict>;
};

/** aggregate avg on columns */
export type Adjustments_Avg_Fields = {
  __typename?: 'adjustments_avg_fields';
  amount?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "adjustments" */
export type Adjustments_Avg_Order_By = {
  amount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "adjustments". All fields are combined with a logical 'AND'. */
export type Adjustments_Bool_Exp = {
  _and?: InputMaybe<Array<Adjustments_Bool_Exp>>;
  _not?: InputMaybe<Adjustments_Bool_Exp>;
  _or?: InputMaybe<Array<Adjustments_Bool_Exp>>;
  accountLedgers?: InputMaybe<AccountLedgers_Bool_Exp>;
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp>;
  adjustmentType?: InputMaybe<AdjustmentTypes_Bool_Exp>;
  amount?: InputMaybe<Numeric_Comparison_Exp>;
  businessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  createdByUserId?: InputMaybe<Uuid_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  isCredit?: InputMaybe<Boolean_Comparison_Exp>;
  ledgers?: InputMaybe<Ledgers_Bool_Exp>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  otherType?: InputMaybe<String_Comparison_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  remarks?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  type?: InputMaybe<AdjustmentTypes_Enum_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedByUserId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "adjustments" */
export enum Adjustments_Constraint {
  /** unique or primary key constraint on columns "id" */
  AdjustmentsPkey = 'adjustments_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Adjustments_Delete_At_Path_Input = {
  tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Adjustments_Delete_Elem_Input = {
  tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Adjustments_Delete_Key_Input = {
  tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "adjustments" */
export type Adjustments_Inc_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "adjustments" */
export type Adjustments_Insert_Input = {
  accountLedgers?: InputMaybe<AccountLedgers_Arr_Rel_Insert_Input>;
  adjustmentType?: InputMaybe<AdjustmentTypes_Obj_Rel_Insert_Input>;
  amount?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isCredit?: InputMaybe<Scalars['Boolean']>;
  ledgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  otherType?: InputMaybe<Scalars['String']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  type?: InputMaybe<AdjustmentTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Adjustments_Max_Fields = {
  __typename?: 'adjustments_max_fields';
  amount?: Maybe<Scalars['numeric']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  otherType?: Maybe<Scalars['String']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  remarks?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "adjustments" */
export type Adjustments_Max_Order_By = {
  amount?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  otherType?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Adjustments_Min_Fields = {
  __typename?: 'adjustments_min_fields';
  amount?: Maybe<Scalars['numeric']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  otherType?: Maybe<Scalars['String']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  remarks?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "adjustments" */
export type Adjustments_Min_Order_By = {
  amount?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  otherType?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "adjustments" */
export type Adjustments_Mutation_Response = {
  __typename?: 'adjustments_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Adjustments>;
};

/** input type for inserting object relation for remote table "adjustments" */
export type Adjustments_Obj_Rel_Insert_Input = {
  data: Adjustments_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Adjustments_On_Conflict>;
};

/** on_conflict condition type for table "adjustments" */
export type Adjustments_On_Conflict = {
  constraint: Adjustments_Constraint;
  update_columns?: Array<Adjustments_Update_Column>;
  where?: InputMaybe<Adjustments_Bool_Exp>;
};

/** Ordering options when selecting data from "adjustments". */
export type Adjustments_Order_By = {
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Order_By>;
  adjustmentType?: InputMaybe<AdjustmentTypes_Order_By>;
  amount?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isCredit?: InputMaybe<Order_By>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  otherType?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: adjustments */
export type Adjustments_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Adjustments_Prepend_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "adjustments" */
export enum Adjustments_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  Currency = 'currency',
  /** column name */
  Id = 'id',
  /** column name */
  IsCredit = 'isCredit',
  /** column name */
  OtherType = 'otherType',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  Tags = 'tags',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

/** select "adjustments_aggregate_bool_exp_bool_and_arguments_columns" columns of table "adjustments" */
export enum Adjustments_Select_Column_Adjustments_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsCredit = 'isCredit'
}

/** select "adjustments_aggregate_bool_exp_bool_or_arguments_columns" columns of table "adjustments" */
export enum Adjustments_Select_Column_Adjustments_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsCredit = 'isCredit'
}

/** input type for updating data in table "adjustments" */
export type Adjustments_Set_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isCredit?: InputMaybe<Scalars['Boolean']>;
  otherType?: InputMaybe<Scalars['String']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  type?: InputMaybe<AdjustmentTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Adjustments_Stddev_Fields = {
  __typename?: 'adjustments_stddev_fields';
  amount?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "adjustments" */
export type Adjustments_Stddev_Order_By = {
  amount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Adjustments_Stddev_Pop_Fields = {
  __typename?: 'adjustments_stddev_pop_fields';
  amount?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "adjustments" */
export type Adjustments_Stddev_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Adjustments_Stddev_Samp_Fields = {
  __typename?: 'adjustments_stddev_samp_fields';
  amount?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "adjustments" */
export type Adjustments_Stddev_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "adjustments" */
export type Adjustments_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Adjustments_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Adjustments_Stream_Cursor_Value_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  isCredit?: InputMaybe<Scalars['Boolean']>;
  otherType?: InputMaybe<Scalars['String']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  type?: InputMaybe<AdjustmentTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Adjustments_Sum_Fields = {
  __typename?: 'adjustments_sum_fields';
  amount?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "adjustments" */
export type Adjustments_Sum_Order_By = {
  amount?: InputMaybe<Order_By>;
};

/** update columns of table "adjustments" */
export enum Adjustments_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  Currency = 'currency',
  /** column name */
  Id = 'id',
  /** column name */
  IsCredit = 'isCredit',
  /** column name */
  OtherType = 'otherType',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  Tags = 'tags',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

export type Adjustments_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Adjustments_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Adjustments_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Adjustments_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Adjustments_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Adjustments_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Adjustments_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Adjustments_Set_Input>;
  /** filter the rows which have to be updated */
  where: Adjustments_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Adjustments_Var_Pop_Fields = {
  __typename?: 'adjustments_var_pop_fields';
  amount?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "adjustments" */
export type Adjustments_Var_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Adjustments_Var_Samp_Fields = {
  __typename?: 'adjustments_var_samp_fields';
  amount?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "adjustments" */
export type Adjustments_Var_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Adjustments_Variance_Fields = {
  __typename?: 'adjustments_variance_fields';
  amount?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "adjustments" */
export type Adjustments_Variance_Order_By = {
  amount?: InputMaybe<Order_By>;
};

/** columns and relationships of "apiTemplates" */
export type ApiTemplates = {
  __typename?: 'apiTemplates';
  conditions?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  graphqlQuery: Scalars['String'];
  id: Scalars['String'];
  requiredFields: Scalars['jsonb'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "apiTemplates" */
export type ApiTemplatesConditionsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "apiTemplates" */
export type ApiTemplatesRequiredFieldsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "apiTemplates" */
export type ApiTemplates_Aggregate = {
  __typename?: 'apiTemplates_aggregate';
  aggregate?: Maybe<ApiTemplates_Aggregate_Fields>;
  nodes: Array<ApiTemplates>;
};

/** aggregate fields of "apiTemplates" */
export type ApiTemplates_Aggregate_Fields = {
  __typename?: 'apiTemplates_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<ApiTemplates_Max_Fields>;
  min?: Maybe<ApiTemplates_Min_Fields>;
};


/** aggregate fields of "apiTemplates" */
export type ApiTemplates_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ApiTemplates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ApiTemplates_Append_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  requiredFields?: InputMaybe<Scalars['jsonb']>;
};

/** Boolean expression to filter rows from the table "apiTemplates". All fields are combined with a logical 'AND'. */
export type ApiTemplates_Bool_Exp = {
  _and?: InputMaybe<Array<ApiTemplates_Bool_Exp>>;
  _not?: InputMaybe<ApiTemplates_Bool_Exp>;
  _or?: InputMaybe<Array<ApiTemplates_Bool_Exp>>;
  conditions?: InputMaybe<Jsonb_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  graphqlQuery?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<String_Comparison_Exp>;
  requiredFields?: InputMaybe<Jsonb_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "apiTemplates" */
export enum ApiTemplates_Constraint {
  /** unique or primary key constraint on columns "id" */
  ApiTemplatesPkey = 'apiTemplates_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ApiTemplates_Delete_At_Path_Input = {
  conditions?: InputMaybe<Array<Scalars['String']>>;
  requiredFields?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ApiTemplates_Delete_Elem_Input = {
  conditions?: InputMaybe<Scalars['Int']>;
  requiredFields?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ApiTemplates_Delete_Key_Input = {
  conditions?: InputMaybe<Scalars['String']>;
  requiredFields?: InputMaybe<Scalars['String']>;
};

/** input type for inserting data into table "apiTemplates" */
export type ApiTemplates_Insert_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  graphqlQuery?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  requiredFields?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ApiTemplates_Max_Fields = {
  __typename?: 'apiTemplates_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  graphqlQuery?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type ApiTemplates_Min_Fields = {
  __typename?: 'apiTemplates_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  graphqlQuery?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "apiTemplates" */
export type ApiTemplates_Mutation_Response = {
  __typename?: 'apiTemplates_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ApiTemplates>;
};

/** on_conflict condition type for table "apiTemplates" */
export type ApiTemplates_On_Conflict = {
  constraint: ApiTemplates_Constraint;
  update_columns?: Array<ApiTemplates_Update_Column>;
  where?: InputMaybe<ApiTemplates_Bool_Exp>;
};

/** Ordering options when selecting data from "apiTemplates". */
export type ApiTemplates_Order_By = {
  conditions?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  graphqlQuery?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  requiredFields?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: apiTemplates */
export type ApiTemplates_Pk_Columns_Input = {
  id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ApiTemplates_Prepend_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  requiredFields?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "apiTemplates" */
export enum ApiTemplates_Select_Column {
  /** column name */
  Conditions = 'conditions',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GraphqlQuery = 'graphqlQuery',
  /** column name */
  Id = 'id',
  /** column name */
  RequiredFields = 'requiredFields',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "apiTemplates" */
export type ApiTemplates_Set_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  graphqlQuery?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  requiredFields?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** Streaming cursor of the table "apiTemplates" */
export type ApiTemplates_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ApiTemplates_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ApiTemplates_Stream_Cursor_Value_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  graphqlQuery?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  requiredFields?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "apiTemplates" */
export enum ApiTemplates_Update_Column {
  /** column name */
  Conditions = 'conditions',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GraphqlQuery = 'graphqlQuery',
  /** column name */
  Id = 'id',
  /** column name */
  RequiredFields = 'requiredFields',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type ApiTemplates_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ApiTemplates_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ApiTemplates_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ApiTemplates_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ApiTemplates_Delete_Key_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ApiTemplates_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ApiTemplates_Set_Input>;
  /** filter the rows which have to be updated */
  where: ApiTemplates_Bool_Exp;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']>;
  _gt?: InputMaybe<Scalars['bigint']>;
  _gte?: InputMaybe<Scalars['bigint']>;
  _in?: InputMaybe<Array<Scalars['bigint']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['bigint']>;
  _lte?: InputMaybe<Scalars['bigint']>;
  _neq?: InputMaybe<Scalars['bigint']>;
  _nin?: InputMaybe<Array<Scalars['bigint']>>;
};

export type CommissionVolumeGraph_Args = {
  aggregate_by?: InputMaybe<Scalars['String']>;
  currency_code?: InputMaybe<Scalars['String']>;
  fromdate?: InputMaybe<Scalars['timestamptz']>;
  tformat?: InputMaybe<Scalars['String']>;
  todate?: InputMaybe<Scalars['timestamptz']>;
  xformat?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "conversationCategories" */
export type ConversationCategories = {
  __typename?: 'conversationCategories';
  category: Scalars['String'];
  /** An array relationship */
  conversations: Array<Conversations>;
  /** An aggregate relationship */
  conversations_aggregate: Conversations_Aggregate;
  id: Scalars['Int'];
};


/** columns and relationships of "conversationCategories" */
export type ConversationCategoriesConversationsArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


/** columns and relationships of "conversationCategories" */
export type ConversationCategoriesConversations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};

/** aggregated selection of "conversationCategories" */
export type ConversationCategories_Aggregate = {
  __typename?: 'conversationCategories_aggregate';
  aggregate?: Maybe<ConversationCategories_Aggregate_Fields>;
  nodes: Array<ConversationCategories>;
};

/** aggregate fields of "conversationCategories" */
export type ConversationCategories_Aggregate_Fields = {
  __typename?: 'conversationCategories_aggregate_fields';
  avg?: Maybe<ConversationCategories_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ConversationCategories_Max_Fields>;
  min?: Maybe<ConversationCategories_Min_Fields>;
  stddev?: Maybe<ConversationCategories_Stddev_Fields>;
  stddev_pop?: Maybe<ConversationCategories_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ConversationCategories_Stddev_Samp_Fields>;
  sum?: Maybe<ConversationCategories_Sum_Fields>;
  var_pop?: Maybe<ConversationCategories_Var_Pop_Fields>;
  var_samp?: Maybe<ConversationCategories_Var_Samp_Fields>;
  variance?: Maybe<ConversationCategories_Variance_Fields>;
};


/** aggregate fields of "conversationCategories" */
export type ConversationCategories_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ConversationCategories_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type ConversationCategories_Avg_Fields = {
  __typename?: 'conversationCategories_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "conversationCategories". All fields are combined with a logical 'AND'. */
export type ConversationCategories_Bool_Exp = {
  _and?: InputMaybe<Array<ConversationCategories_Bool_Exp>>;
  _not?: InputMaybe<ConversationCategories_Bool_Exp>;
  _or?: InputMaybe<Array<ConversationCategories_Bool_Exp>>;
  category?: InputMaybe<String_Comparison_Exp>;
  conversations?: InputMaybe<Conversations_Bool_Exp>;
  conversations_aggregate?: InputMaybe<Conversations_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "conversationCategories" */
export enum ConversationCategories_Constraint {
  /** unique or primary key constraint on columns "id" */
  ConversationCategoriesPkey = 'conversationCategories_pkey'
}

/** input type for incrementing numeric columns in table "conversationCategories" */
export type ConversationCategories_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "conversationCategories" */
export type ConversationCategories_Insert_Input = {
  category?: InputMaybe<Scalars['String']>;
  conversations?: InputMaybe<Conversations_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type ConversationCategories_Max_Fields = {
  __typename?: 'conversationCategories_max_fields';
  category?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
};

/** aggregate min on columns */
export type ConversationCategories_Min_Fields = {
  __typename?: 'conversationCategories_min_fields';
  category?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
};

/** response of any mutation on the table "conversationCategories" */
export type ConversationCategories_Mutation_Response = {
  __typename?: 'conversationCategories_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ConversationCategories>;
};

/** input type for inserting object relation for remote table "conversationCategories" */
export type ConversationCategories_Obj_Rel_Insert_Input = {
  data: ConversationCategories_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ConversationCategories_On_Conflict>;
};

/** on_conflict condition type for table "conversationCategories" */
export type ConversationCategories_On_Conflict = {
  constraint: ConversationCategories_Constraint;
  update_columns?: Array<ConversationCategories_Update_Column>;
  where?: InputMaybe<ConversationCategories_Bool_Exp>;
};

/** Ordering options when selecting data from "conversationCategories". */
export type ConversationCategories_Order_By = {
  category?: InputMaybe<Order_By>;
  conversations_aggregate?: InputMaybe<Conversations_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conversationCategories */
export type ConversationCategories_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "conversationCategories" */
export enum ConversationCategories_Select_Column {
  /** column name */
  Category = 'category',
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "conversationCategories" */
export type ConversationCategories_Set_Input = {
  category?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type ConversationCategories_Stddev_Fields = {
  __typename?: 'conversationCategories_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ConversationCategories_Stddev_Pop_Fields = {
  __typename?: 'conversationCategories_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ConversationCategories_Stddev_Samp_Fields = {
  __typename?: 'conversationCategories_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "conversationCategories" */
export type ConversationCategories_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ConversationCategories_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ConversationCategories_Stream_Cursor_Value_Input = {
  category?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** aggregate sum on columns */
export type ConversationCategories_Sum_Fields = {
  __typename?: 'conversationCategories_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "conversationCategories" */
export enum ConversationCategories_Update_Column {
  /** column name */
  Category = 'category',
  /** column name */
  Id = 'id'
}

export type ConversationCategories_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ConversationCategories_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ConversationCategories_Set_Input>;
  /** filter the rows which have to be updated */
  where: ConversationCategories_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ConversationCategories_Var_Pop_Fields = {
  __typename?: 'conversationCategories_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ConversationCategories_Var_Samp_Fields = {
  __typename?: 'conversationCategories_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ConversationCategories_Variance_Fields = {
  __typename?: 'conversationCategories_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "conversationStatus" */
export type ConversationStatus = {
  __typename?: 'conversationStatus';
  name: Scalars['String'];
};

/** aggregated selection of "conversationStatus" */
export type ConversationStatus_Aggregate = {
  __typename?: 'conversationStatus_aggregate';
  aggregate?: Maybe<ConversationStatus_Aggregate_Fields>;
  nodes: Array<ConversationStatus>;
};

/** aggregate fields of "conversationStatus" */
export type ConversationStatus_Aggregate_Fields = {
  __typename?: 'conversationStatus_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<ConversationStatus_Max_Fields>;
  min?: Maybe<ConversationStatus_Min_Fields>;
};


/** aggregate fields of "conversationStatus" */
export type ConversationStatus_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ConversationStatus_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "conversationStatus". All fields are combined with a logical 'AND'. */
export type ConversationStatus_Bool_Exp = {
  _and?: InputMaybe<Array<ConversationStatus_Bool_Exp>>;
  _not?: InputMaybe<ConversationStatus_Bool_Exp>;
  _or?: InputMaybe<Array<ConversationStatus_Bool_Exp>>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "conversationStatus" */
export enum ConversationStatus_Constraint {
  /** unique or primary key constraint on columns "name" */
  ConversationStatusPkey = 'conversationStatus_pkey'
}

/** input type for inserting data into table "conversationStatus" */
export type ConversationStatus_Insert_Input = {
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type ConversationStatus_Max_Fields = {
  __typename?: 'conversationStatus_max_fields';
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type ConversationStatus_Min_Fields = {
  __typename?: 'conversationStatus_min_fields';
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "conversationStatus" */
export type ConversationStatus_Mutation_Response = {
  __typename?: 'conversationStatus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ConversationStatus>;
};

/** on_conflict condition type for table "conversationStatus" */
export type ConversationStatus_On_Conflict = {
  constraint: ConversationStatus_Constraint;
  update_columns?: Array<ConversationStatus_Update_Column>;
  where?: InputMaybe<ConversationStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "conversationStatus". */
export type ConversationStatus_Order_By = {
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conversationStatus */
export type ConversationStatus_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "conversationStatus" */
export enum ConversationStatus_Select_Column {
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "conversationStatus" */
export type ConversationStatus_Set_Input = {
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "conversationStatus" */
export type ConversationStatus_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ConversationStatus_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ConversationStatus_Stream_Cursor_Value_Input = {
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "conversationStatus" */
export enum ConversationStatus_Update_Column {
  /** column name */
  Name = 'name'
}

export type ConversationStatus_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ConversationStatus_Set_Input>;
  /** filter the rows which have to be updated */
  where: ConversationStatus_Bool_Exp;
};

/** mailbox for merchant and admin communication */
export type Conversations = {
  __typename?: 'conversations';
  adminRead: Scalars['Boolean'];
  business: Array<Business>;
  businessId: Scalars['uuid'];
  categoryId?: Maybe<Scalars['Int']>;
  /** An object relationship */
  conversationCategory?: Maybe<ConversationCategories>;
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  deposit?: Maybe<Deposits>;
  depositId?: Maybe<Scalars['uuid']>;
  id: Scalars['uuid'];
  merchantRead: Scalars['Boolean'];
  /** An array relationship */
  messages: Array<Messages>;
  /** An aggregate relationship */
  messages_aggregate: Messages_Aggregate;
  status: Scalars['String'];
  tags?: Maybe<Scalars['jsonb']>;
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  withdrawal?: Maybe<Withdrawals>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};


/** mailbox for merchant and admin communication */
export type ConversationsBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_Conversationsbusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_Conversationsbusiness>;
};


/** mailbox for merchant and admin communication */
export type ConversationsMessagesArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


/** mailbox for merchant and admin communication */
export type ConversationsMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


/** mailbox for merchant and admin communication */
export type ConversationsTagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "conversations" */
export type Conversations_Aggregate = {
  __typename?: 'conversations_aggregate';
  aggregate?: Maybe<Conversations_Aggregate_Fields>;
  nodes: Array<Conversations>;
};

export type Conversations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Conversations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Conversations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Conversations_Aggregate_Bool_Exp_Count>;
};

export type Conversations_Aggregate_Bool_Exp_Bool_And = {
  arguments: Conversations_Select_Column_Conversations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Conversations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Conversations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Conversations_Select_Column_Conversations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Conversations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Conversations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Conversations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Conversations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "conversations" */
export type Conversations_Aggregate_Fields = {
  __typename?: 'conversations_aggregate_fields';
  avg?: Maybe<Conversations_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Conversations_Max_Fields>;
  min?: Maybe<Conversations_Min_Fields>;
  stddev?: Maybe<Conversations_Stddev_Fields>;
  stddev_pop?: Maybe<Conversations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Conversations_Stddev_Samp_Fields>;
  sum?: Maybe<Conversations_Sum_Fields>;
  var_pop?: Maybe<Conversations_Var_Pop_Fields>;
  var_samp?: Maybe<Conversations_Var_Samp_Fields>;
  variance?: Maybe<Conversations_Variance_Fields>;
};


/** aggregate fields of "conversations" */
export type Conversations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Conversations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "conversations" */
export type Conversations_Aggregate_Order_By = {
  avg?: InputMaybe<Conversations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Conversations_Max_Order_By>;
  min?: InputMaybe<Conversations_Min_Order_By>;
  stddev?: InputMaybe<Conversations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Conversations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Conversations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Conversations_Sum_Order_By>;
  var_pop?: InputMaybe<Conversations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Conversations_Var_Samp_Order_By>;
  variance?: InputMaybe<Conversations_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Conversations_Append_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "conversations" */
export type Conversations_Arr_Rel_Insert_Input = {
  data: Array<Conversations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Conversations_On_Conflict>;
};

/** aggregate avg on columns */
export type Conversations_Avg_Fields = {
  __typename?: 'conversations_avg_fields';
  categoryId?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "conversations" */
export type Conversations_Avg_Order_By = {
  categoryId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "conversations". All fields are combined with a logical 'AND'. */
export type Conversations_Bool_Exp = {
  _and?: InputMaybe<Array<Conversations_Bool_Exp>>;
  _not?: InputMaybe<Conversations_Bool_Exp>;
  _or?: InputMaybe<Array<Conversations_Bool_Exp>>;
  adminRead?: InputMaybe<Boolean_Comparison_Exp>;
  businessId?: InputMaybe<Uuid_Comparison_Exp>;
  categoryId?: InputMaybe<Int_Comparison_Exp>;
  conversationCategory?: InputMaybe<ConversationCategories_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  deposit?: InputMaybe<Deposits_Bool_Exp>;
  depositId?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  merchantRead?: InputMaybe<Boolean_Comparison_Exp>;
  messages?: InputMaybe<Messages_Bool_Exp>;
  messages_aggregate?: InputMaybe<Messages_Aggregate_Bool_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  withdrawal?: InputMaybe<Withdrawals_Bool_Exp>;
  withdrawalId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "conversations" */
export enum Conversations_Constraint {
  /** unique or primary key constraint on columns "id" */
  ConversationsPkey = 'conversations_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Conversations_Delete_At_Path_Input = {
  tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Conversations_Delete_Elem_Input = {
  tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Conversations_Delete_Key_Input = {
  tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "conversations" */
export type Conversations_Inc_Input = {
  categoryId?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "conversations" */
export type Conversations_Insert_Input = {
  adminRead?: InputMaybe<Scalars['Boolean']>;
  businessId?: InputMaybe<Scalars['uuid']>;
  categoryId?: InputMaybe<Scalars['Int']>;
  conversationCategory?: InputMaybe<ConversationCategories_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deposit?: InputMaybe<Deposits_Obj_Rel_Insert_Input>;
  depositId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  merchantRead?: InputMaybe<Scalars['Boolean']>;
  messages?: InputMaybe<Messages_Arr_Rel_Insert_Input>;
  status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawal?: InputMaybe<Withdrawals_Obj_Rel_Insert_Input>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Conversations_Max_Fields = {
  __typename?: 'conversations_max_fields';
  businessId?: Maybe<Scalars['uuid']>;
  categoryId?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  depositId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "conversations" */
export type Conversations_Max_Order_By = {
  businessId?: InputMaybe<Order_By>;
  categoryId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conversations_Min_Fields = {
  __typename?: 'conversations_min_fields';
  businessId?: Maybe<Scalars['uuid']>;
  categoryId?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  depositId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "conversations" */
export type Conversations_Min_Order_By = {
  businessId?: InputMaybe<Order_By>;
  categoryId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conversations" */
export type Conversations_Mutation_Response = {
  __typename?: 'conversations_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Conversations>;
};

/** input type for inserting object relation for remote table "conversations" */
export type Conversations_Obj_Rel_Insert_Input = {
  data: Conversations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Conversations_On_Conflict>;
};

/** on_conflict condition type for table "conversations" */
export type Conversations_On_Conflict = {
  constraint: Conversations_Constraint;
  update_columns?: Array<Conversations_Update_Column>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};

/** Ordering options when selecting data from "conversations". */
export type Conversations_Order_By = {
  adminRead?: InputMaybe<Order_By>;
  businessId?: InputMaybe<Order_By>;
  categoryId?: InputMaybe<Order_By>;
  conversationCategory?: InputMaybe<ConversationCategories_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deposit?: InputMaybe<Deposits_Order_By>;
  depositId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  merchantRead?: InputMaybe<Order_By>;
  messages_aggregate?: InputMaybe<Messages_Aggregate_Order_By>;
  status?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawal?: InputMaybe<Withdrawals_Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conversations */
export type Conversations_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Conversations_Prepend_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "conversations" */
export enum Conversations_Select_Column {
  /** column name */
  AdminRead = 'adminRead',
  /** column name */
  BusinessId = 'businessId',
  /** column name */
  CategoryId = 'categoryId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  Id = 'id',
  /** column name */
  MerchantRead = 'merchantRead',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  WithdrawalId = 'withdrawalId'
}

/** select "conversations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "conversations" */
export enum Conversations_Select_Column_Conversations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  AdminRead = 'adminRead',
  /** column name */
  MerchantRead = 'merchantRead'
}

/** select "conversations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "conversations" */
export enum Conversations_Select_Column_Conversations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  AdminRead = 'adminRead',
  /** column name */
  MerchantRead = 'merchantRead'
}

/** input type for updating data in table "conversations" */
export type Conversations_Set_Input = {
  adminRead?: InputMaybe<Scalars['Boolean']>;
  businessId?: InputMaybe<Scalars['uuid']>;
  categoryId?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  merchantRead?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Conversations_Stddev_Fields = {
  __typename?: 'conversations_stddev_fields';
  categoryId?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "conversations" */
export type Conversations_Stddev_Order_By = {
  categoryId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Conversations_Stddev_Pop_Fields = {
  __typename?: 'conversations_stddev_pop_fields';
  categoryId?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "conversations" */
export type Conversations_Stddev_Pop_Order_By = {
  categoryId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Conversations_Stddev_Samp_Fields = {
  __typename?: 'conversations_stddev_samp_fields';
  categoryId?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "conversations" */
export type Conversations_Stddev_Samp_Order_By = {
  categoryId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "conversations" */
export type Conversations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Conversations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Conversations_Stream_Cursor_Value_Input = {
  adminRead?: InputMaybe<Scalars['Boolean']>;
  businessId?: InputMaybe<Scalars['uuid']>;
  categoryId?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  merchantRead?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Conversations_Sum_Fields = {
  __typename?: 'conversations_sum_fields';
  categoryId?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "conversations" */
export type Conversations_Sum_Order_By = {
  categoryId?: InputMaybe<Order_By>;
};

/** update columns of table "conversations" */
export enum Conversations_Update_Column {
  /** column name */
  AdminRead = 'adminRead',
  /** column name */
  BusinessId = 'businessId',
  /** column name */
  CategoryId = 'categoryId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  Id = 'id',
  /** column name */
  MerchantRead = 'merchantRead',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  WithdrawalId = 'withdrawalId'
}

export type Conversations_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Conversations_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Conversations_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Conversations_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Conversations_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Conversations_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Conversations_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Conversations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Conversations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Conversations_Var_Pop_Fields = {
  __typename?: 'conversations_var_pop_fields';
  categoryId?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "conversations" */
export type Conversations_Var_Pop_Order_By = {
  categoryId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Conversations_Var_Samp_Fields = {
  __typename?: 'conversations_var_samp_fields';
  categoryId?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "conversations" */
export type Conversations_Var_Samp_Order_By = {
  categoryId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Conversations_Variance_Fields = {
  __typename?: 'conversations_variance_fields';
  categoryId?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "conversations" */
export type Conversations_Variance_Order_By = {
  categoryId?: InputMaybe<Order_By>;
};

/** columns and relationships of "currencyExchange" */
export type CurrencyExchange = {
  __typename?: 'currencyExchange';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  conversionRate: Scalars['numeric'];
  createdAt: Scalars['timestamptz'];
  createdByUserId?: Maybe<Scalars['uuid']>;
  feePercentage?: Maybe<Scalars['numeric']>;
  fees: Scalars['numeric'];
  fromAmount: Scalars['numeric'];
  fromBusinessWallet: Array<BusinessWallet>;
  fromBusinessWalletId: Scalars['uuid'];
  fromCurrency?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  liveRate?: Maybe<Scalars['numeric']>;
  parentBusiness: Array<Business>;
  parentBusinessId: Scalars['uuid'];
  tags?: Maybe<Scalars['jsonb']>;
  toAmount: Scalars['numeric'];
  toBusinessWallet: Array<BusinessWallet>;
  toBusinessWalletId: Scalars['uuid'];
  toCurrency?: Maybe<Scalars['String']>;
  updatedAt: Scalars['timestamptz'];
  updatedByUserId?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "currencyExchange" */
export type CurrencyExchangeAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "currencyExchange" */
export type CurrencyExchangeAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "currencyExchange" */
export type CurrencyExchangeFromBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_CurrencyExchangefromBusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_CurrencyExchangefromBusinessWallet>;
};


/** columns and relationships of "currencyExchange" */
export type CurrencyExchangeLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "currencyExchange" */
export type CurrencyExchangeLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "currencyExchange" */
export type CurrencyExchangeParentBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_CurrencyExchangeparentBusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_CurrencyExchangeparentBusiness>;
};


/** columns and relationships of "currencyExchange" */
export type CurrencyExchangeTagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "currencyExchange" */
export type CurrencyExchangeToBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_CurrencyExchangetoBusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_CurrencyExchangetoBusinessWallet>;
};

/** aggregated selection of "currencyExchange" */
export type CurrencyExchange_Aggregate = {
  __typename?: 'currencyExchange_aggregate';
  aggregate?: Maybe<CurrencyExchange_Aggregate_Fields>;
  nodes: Array<CurrencyExchange>;
};

/** aggregate fields of "currencyExchange" */
export type CurrencyExchange_Aggregate_Fields = {
  __typename?: 'currencyExchange_aggregate_fields';
  avg?: Maybe<CurrencyExchange_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<CurrencyExchange_Max_Fields>;
  min?: Maybe<CurrencyExchange_Min_Fields>;
  stddev?: Maybe<CurrencyExchange_Stddev_Fields>;
  stddev_pop?: Maybe<CurrencyExchange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CurrencyExchange_Stddev_Samp_Fields>;
  sum?: Maybe<CurrencyExchange_Sum_Fields>;
  var_pop?: Maybe<CurrencyExchange_Var_Pop_Fields>;
  var_samp?: Maybe<CurrencyExchange_Var_Samp_Fields>;
  variance?: Maybe<CurrencyExchange_Variance_Fields>;
};


/** aggregate fields of "currencyExchange" */
export type CurrencyExchange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<CurrencyExchange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CurrencyExchange_Append_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type CurrencyExchange_Avg_Fields = {
  __typename?: 'currencyExchange_avg_fields';
  conversionRate?: Maybe<Scalars['Float']>;
  feePercentage?: Maybe<Scalars['Float']>;
  fees?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  liveRate?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "currencyExchange". All fields are combined with a logical 'AND'. */
export type CurrencyExchange_Bool_Exp = {
  _and?: InputMaybe<Array<CurrencyExchange_Bool_Exp>>;
  _not?: InputMaybe<CurrencyExchange_Bool_Exp>;
  _or?: InputMaybe<Array<CurrencyExchange_Bool_Exp>>;
  accountLedgers?: InputMaybe<AccountLedgers_Bool_Exp>;
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp>;
  conversionRate?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  createdByUserId?: InputMaybe<Uuid_Comparison_Exp>;
  feePercentage?: InputMaybe<Numeric_Comparison_Exp>;
  fees?: InputMaybe<Numeric_Comparison_Exp>;
  fromAmount?: InputMaybe<Numeric_Comparison_Exp>;
  fromBusinessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  fromCurrency?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ledgers?: InputMaybe<Ledgers_Bool_Exp>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  liveRate?: InputMaybe<Numeric_Comparison_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  toAmount?: InputMaybe<Numeric_Comparison_Exp>;
  toBusinessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  toCurrency?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedByUserId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "currencyExchange" */
export enum CurrencyExchange_Constraint {
  /** unique or primary key constraint on columns "id" */
  CurrencyExchangePkey = 'currencyExchange_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CurrencyExchange_Delete_At_Path_Input = {
  tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CurrencyExchange_Delete_Elem_Input = {
  tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CurrencyExchange_Delete_Key_Input = {
  tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "currencyExchange" */
export type CurrencyExchange_Inc_Input = {
  conversionRate?: InputMaybe<Scalars['numeric']>;
  feePercentage?: InputMaybe<Scalars['numeric']>;
  fees?: InputMaybe<Scalars['numeric']>;
  fromAmount?: InputMaybe<Scalars['numeric']>;
  liveRate?: InputMaybe<Scalars['numeric']>;
  toAmount?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "currencyExchange" */
export type CurrencyExchange_Insert_Input = {
  accountLedgers?: InputMaybe<AccountLedgers_Arr_Rel_Insert_Input>;
  conversionRate?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  feePercentage?: InputMaybe<Scalars['numeric']>;
  fees?: InputMaybe<Scalars['numeric']>;
  fromAmount?: InputMaybe<Scalars['numeric']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCurrency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  ledgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  liveRate?: InputMaybe<Scalars['numeric']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAmount?: InputMaybe<Scalars['numeric']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  toCurrency?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type CurrencyExchange_Max_Fields = {
  __typename?: 'currencyExchange_max_fields';
  conversionRate?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  feePercentage?: Maybe<Scalars['numeric']>;
  fees?: Maybe<Scalars['numeric']>;
  fromAmount?: Maybe<Scalars['numeric']>;
  fromBusinessWalletId?: Maybe<Scalars['uuid']>;
  fromCurrency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  liveRate?: Maybe<Scalars['numeric']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  toAmount?: Maybe<Scalars['numeric']>;
  toBusinessWalletId?: Maybe<Scalars['uuid']>;
  toCurrency?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** aggregate min on columns */
export type CurrencyExchange_Min_Fields = {
  __typename?: 'currencyExchange_min_fields';
  conversionRate?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  feePercentage?: Maybe<Scalars['numeric']>;
  fees?: Maybe<Scalars['numeric']>;
  fromAmount?: Maybe<Scalars['numeric']>;
  fromBusinessWalletId?: Maybe<Scalars['uuid']>;
  fromCurrency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  liveRate?: Maybe<Scalars['numeric']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  toAmount?: Maybe<Scalars['numeric']>;
  toBusinessWalletId?: Maybe<Scalars['uuid']>;
  toCurrency?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** response of any mutation on the table "currencyExchange" */
export type CurrencyExchange_Mutation_Response = {
  __typename?: 'currencyExchange_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CurrencyExchange>;
};

/** input type for inserting object relation for remote table "currencyExchange" */
export type CurrencyExchange_Obj_Rel_Insert_Input = {
  data: CurrencyExchange_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<CurrencyExchange_On_Conflict>;
};

/** on_conflict condition type for table "currencyExchange" */
export type CurrencyExchange_On_Conflict = {
  constraint: CurrencyExchange_Constraint;
  update_columns?: Array<CurrencyExchange_Update_Column>;
  where?: InputMaybe<CurrencyExchange_Bool_Exp>;
};

/** Ordering options when selecting data from "currencyExchange". */
export type CurrencyExchange_Order_By = {
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Order_By>;
  conversionRate?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  feePercentage?: InputMaybe<Order_By>;
  fees?: InputMaybe<Order_By>;
  fromAmount?: InputMaybe<Order_By>;
  fromBusinessWalletId?: InputMaybe<Order_By>;
  fromCurrency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  liveRate?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  toAmount?: InputMaybe<Order_By>;
  toBusinessWalletId?: InputMaybe<Order_By>;
  toCurrency?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: currencyExchange */
export type CurrencyExchange_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CurrencyExchange_Prepend_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "currencyExchange" */
export enum CurrencyExchange_Select_Column {
  /** column name */
  ConversionRate = 'conversionRate',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  FeePercentage = 'feePercentage',
  /** column name */
  Fees = 'fees',
  /** column name */
  FromAmount = 'fromAmount',
  /** column name */
  FromBusinessWalletId = 'fromBusinessWalletId',
  /** column name */
  FromCurrency = 'fromCurrency',
  /** column name */
  Id = 'id',
  /** column name */
  LiveRate = 'liveRate',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Tags = 'tags',
  /** column name */
  ToAmount = 'toAmount',
  /** column name */
  ToBusinessWalletId = 'toBusinessWalletId',
  /** column name */
  ToCurrency = 'toCurrency',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

/** input type for updating data in table "currencyExchange" */
export type CurrencyExchange_Set_Input = {
  conversionRate?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  feePercentage?: InputMaybe<Scalars['numeric']>;
  fees?: InputMaybe<Scalars['numeric']>;
  fromAmount?: InputMaybe<Scalars['numeric']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCurrency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  liveRate?: InputMaybe<Scalars['numeric']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAmount?: InputMaybe<Scalars['numeric']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  toCurrency?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type CurrencyExchange_Stddev_Fields = {
  __typename?: 'currencyExchange_stddev_fields';
  conversionRate?: Maybe<Scalars['Float']>;
  feePercentage?: Maybe<Scalars['Float']>;
  fees?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  liveRate?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type CurrencyExchange_Stddev_Pop_Fields = {
  __typename?: 'currencyExchange_stddev_pop_fields';
  conversionRate?: Maybe<Scalars['Float']>;
  feePercentage?: Maybe<Scalars['Float']>;
  fees?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  liveRate?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type CurrencyExchange_Stddev_Samp_Fields = {
  __typename?: 'currencyExchange_stddev_samp_fields';
  conversionRate?: Maybe<Scalars['Float']>;
  feePercentage?: Maybe<Scalars['Float']>;
  fees?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  liveRate?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "currencyExchange" */
export type CurrencyExchange_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CurrencyExchange_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CurrencyExchange_Stream_Cursor_Value_Input = {
  conversionRate?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  feePercentage?: InputMaybe<Scalars['numeric']>;
  fees?: InputMaybe<Scalars['numeric']>;
  fromAmount?: InputMaybe<Scalars['numeric']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCurrency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  liveRate?: InputMaybe<Scalars['numeric']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAmount?: InputMaybe<Scalars['numeric']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  toCurrency?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type CurrencyExchange_Sum_Fields = {
  __typename?: 'currencyExchange_sum_fields';
  conversionRate?: Maybe<Scalars['numeric']>;
  feePercentage?: Maybe<Scalars['numeric']>;
  fees?: Maybe<Scalars['numeric']>;
  fromAmount?: Maybe<Scalars['numeric']>;
  liveRate?: Maybe<Scalars['numeric']>;
  toAmount?: Maybe<Scalars['numeric']>;
};

/** update columns of table "currencyExchange" */
export enum CurrencyExchange_Update_Column {
  /** column name */
  ConversionRate = 'conversionRate',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  FeePercentage = 'feePercentage',
  /** column name */
  Fees = 'fees',
  /** column name */
  FromAmount = 'fromAmount',
  /** column name */
  FromBusinessWalletId = 'fromBusinessWalletId',
  /** column name */
  FromCurrency = 'fromCurrency',
  /** column name */
  Id = 'id',
  /** column name */
  LiveRate = 'liveRate',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Tags = 'tags',
  /** column name */
  ToAmount = 'toAmount',
  /** column name */
  ToBusinessWalletId = 'toBusinessWalletId',
  /** column name */
  ToCurrency = 'toCurrency',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

export type CurrencyExchange_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<CurrencyExchange_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<CurrencyExchange_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<CurrencyExchange_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<CurrencyExchange_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<CurrencyExchange_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<CurrencyExchange_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CurrencyExchange_Set_Input>;
  /** filter the rows which have to be updated */
  where: CurrencyExchange_Bool_Exp;
};

/** aggregate var_pop on columns */
export type CurrencyExchange_Var_Pop_Fields = {
  __typename?: 'currencyExchange_var_pop_fields';
  conversionRate?: Maybe<Scalars['Float']>;
  feePercentage?: Maybe<Scalars['Float']>;
  fees?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  liveRate?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type CurrencyExchange_Var_Samp_Fields = {
  __typename?: 'currencyExchange_var_samp_fields';
  conversionRate?: Maybe<Scalars['Float']>;
  feePercentage?: Maybe<Scalars['Float']>;
  fees?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  liveRate?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type CurrencyExchange_Variance_Fields = {
  __typename?: 'currencyExchange_variance_fields';
  conversionRate?: Maybe<Scalars['Float']>;
  feePercentage?: Maybe<Scalars['Float']>;
  fees?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  liveRate?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** ordering argument of a cursor */
export enum Cursor_Ordering {
  /** ascending ordering of the cursor */
  Asc = 'ASC',
  /** descending ordering of the cursor */
  Desc = 'DESC'
}

/** columns and relationships of "dailyCommissionVolume" */
export type DailyCommissionVolume = {
  __typename?: 'dailyCommissionVolume';
  b2b: Scalars['numeric'];
  businessWallet: Array<BusinessWallet>;
  businessWalletId: Scalars['uuid'];
  c2b: Scalars['numeric'];
  createdAt: Scalars['timestamptz'];
  currency: Scalars['String'];
  date: Scalars['date'];
  id: Scalars['Int'];
  parentBusiness: Array<Business>;
  parentBusinessId: Scalars['uuid'];
  payout: Scalars['numeric'];
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "dailyCommissionVolume" */
export type DailyCommissionVolumeBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_DailyCommissionVolumebusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_DailyCommissionVolumebusinessWallet>;
};


/** columns and relationships of "dailyCommissionVolume" */
export type DailyCommissionVolumeParentBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_DailyCommissionVolumeparentBusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_DailyCommissionVolumeparentBusiness>;
};

/** aggregated selection of "dailyCommissionVolume" */
export type DailyCommissionVolume_Aggregate = {
  __typename?: 'dailyCommissionVolume_aggregate';
  aggregate?: Maybe<DailyCommissionVolume_Aggregate_Fields>;
  nodes: Array<DailyCommissionVolume>;
};

/** aggregate fields of "dailyCommissionVolume" */
export type DailyCommissionVolume_Aggregate_Fields = {
  __typename?: 'dailyCommissionVolume_aggregate_fields';
  avg?: Maybe<DailyCommissionVolume_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<DailyCommissionVolume_Max_Fields>;
  min?: Maybe<DailyCommissionVolume_Min_Fields>;
  stddev?: Maybe<DailyCommissionVolume_Stddev_Fields>;
  stddev_pop?: Maybe<DailyCommissionVolume_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DailyCommissionVolume_Stddev_Samp_Fields>;
  sum?: Maybe<DailyCommissionVolume_Sum_Fields>;
  var_pop?: Maybe<DailyCommissionVolume_Var_Pop_Fields>;
  var_samp?: Maybe<DailyCommissionVolume_Var_Samp_Fields>;
  variance?: Maybe<DailyCommissionVolume_Variance_Fields>;
};


/** aggregate fields of "dailyCommissionVolume" */
export type DailyCommissionVolume_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DailyCommissionVolume_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type DailyCommissionVolume_Avg_Fields = {
  __typename?: 'dailyCommissionVolume_avg_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "dailyCommissionVolume". All fields are combined with a logical 'AND'. */
export type DailyCommissionVolume_Bool_Exp = {
  _and?: InputMaybe<Array<DailyCommissionVolume_Bool_Exp>>;
  _not?: InputMaybe<DailyCommissionVolume_Bool_Exp>;
  _or?: InputMaybe<Array<DailyCommissionVolume_Bool_Exp>>;
  b2b?: InputMaybe<Numeric_Comparison_Exp>;
  businessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  c2b?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  date?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  payout?: InputMaybe<Numeric_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "dailyCommissionVolume" */
export enum DailyCommissionVolume_Constraint {
  /** unique or primary key constraint on columns "parentBusinessId", "businessWalletId", "date" */
  DailyCommissionVolumeDateParentBusinessIdBusinessWalletIdKe = 'dailyCommissionVolume_date_parentBusinessId_businessWalletId_ke',
  /** unique or primary key constraint on columns "id" */
  DailyCommissionVolumePkey = 'dailyCommissionVolume_pkey'
}

/** input type for incrementing numeric columns in table "dailyCommissionVolume" */
export type DailyCommissionVolume_Inc_Input = {
  b2b?: InputMaybe<Scalars['numeric']>;
  c2b?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['Int']>;
  payout?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "dailyCommissionVolume" */
export type DailyCommissionVolume_Insert_Input = {
  b2b?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  c2b?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payout?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type DailyCommissionVolume_Max_Fields = {
  __typename?: 'dailyCommissionVolume_max_fields';
  b2b?: Maybe<Scalars['numeric']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  c2b?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['Int']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  payout?: Maybe<Scalars['numeric']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type DailyCommissionVolume_Min_Fields = {
  __typename?: 'dailyCommissionVolume_min_fields';
  b2b?: Maybe<Scalars['numeric']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  c2b?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['Int']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  payout?: Maybe<Scalars['numeric']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "dailyCommissionVolume" */
export type DailyCommissionVolume_Mutation_Response = {
  __typename?: 'dailyCommissionVolume_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<DailyCommissionVolume>;
};

/** on_conflict condition type for table "dailyCommissionVolume" */
export type DailyCommissionVolume_On_Conflict = {
  constraint: DailyCommissionVolume_Constraint;
  update_columns?: Array<DailyCommissionVolume_Update_Column>;
  where?: InputMaybe<DailyCommissionVolume_Bool_Exp>;
};

/** Ordering options when selecting data from "dailyCommissionVolume". */
export type DailyCommissionVolume_Order_By = {
  b2b?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  c2b?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  payout?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: dailyCommissionVolume */
export type DailyCommissionVolume_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "dailyCommissionVolume" */
export enum DailyCommissionVolume_Select_Column {
  /** column name */
  B2b = 'b2b',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  C2b = 'c2b',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Currency = 'currency',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Payout = 'payout',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "dailyCommissionVolume" */
export type DailyCommissionVolume_Set_Input = {
  b2b?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  c2b?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payout?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type DailyCommissionVolume_Stddev_Fields = {
  __typename?: 'dailyCommissionVolume_stddev_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type DailyCommissionVolume_Stddev_Pop_Fields = {
  __typename?: 'dailyCommissionVolume_stddev_pop_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type DailyCommissionVolume_Stddev_Samp_Fields = {
  __typename?: 'dailyCommissionVolume_stddev_samp_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "dailyCommissionVolume" */
export type DailyCommissionVolume_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DailyCommissionVolume_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DailyCommissionVolume_Stream_Cursor_Value_Input = {
  b2b?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  c2b?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payout?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type DailyCommissionVolume_Sum_Fields = {
  __typename?: 'dailyCommissionVolume_sum_fields';
  b2b?: Maybe<Scalars['numeric']>;
  c2b?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['Int']>;
  payout?: Maybe<Scalars['numeric']>;
};

/** update columns of table "dailyCommissionVolume" */
export enum DailyCommissionVolume_Update_Column {
  /** column name */
  B2b = 'b2b',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  C2b = 'c2b',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Currency = 'currency',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Payout = 'payout',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type DailyCommissionVolume_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DailyCommissionVolume_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DailyCommissionVolume_Set_Input>;
  /** filter the rows which have to be updated */
  where: DailyCommissionVolume_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DailyCommissionVolume_Var_Pop_Fields = {
  __typename?: 'dailyCommissionVolume_var_pop_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type DailyCommissionVolume_Var_Samp_Fields = {
  __typename?: 'dailyCommissionVolume_var_samp_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type DailyCommissionVolume_Variance_Fields = {
  __typename?: 'dailyCommissionVolume_variance_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "dailyDepositVolume" */
export type DailyDepositVolume = {
  __typename?: 'dailyDepositVolume';
  b2b: Scalars['numeric'];
  businessWallet: Array<BusinessWallet>;
  businessWalletId: Scalars['uuid'];
  c2b: Scalars['numeric'];
  createdAt: Scalars['timestamptz'];
  currency?: Maybe<Scalars['String']>;
  date: Scalars['date'];
  id: Scalars['Int'];
  parentBusiness: Array<Business>;
  parentBusinessId: Scalars['uuid'];
  updatedAt?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "dailyDepositVolume" */
export type DailyDepositVolumeBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_DailyDepositVolumebusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_DailyDepositVolumebusinessWallet>;
};


/** columns and relationships of "dailyDepositVolume" */
export type DailyDepositVolumeParentBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_DailyDepositVolumeparentBusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_DailyDepositVolumeparentBusiness>;
};

/** aggregated selection of "dailyDepositVolume" */
export type DailyDepositVolume_Aggregate = {
  __typename?: 'dailyDepositVolume_aggregate';
  aggregate?: Maybe<DailyDepositVolume_Aggregate_Fields>;
  nodes: Array<DailyDepositVolume>;
};

/** aggregate fields of "dailyDepositVolume" */
export type DailyDepositVolume_Aggregate_Fields = {
  __typename?: 'dailyDepositVolume_aggregate_fields';
  avg?: Maybe<DailyDepositVolume_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<DailyDepositVolume_Max_Fields>;
  min?: Maybe<DailyDepositVolume_Min_Fields>;
  stddev?: Maybe<DailyDepositVolume_Stddev_Fields>;
  stddev_pop?: Maybe<DailyDepositVolume_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DailyDepositVolume_Stddev_Samp_Fields>;
  sum?: Maybe<DailyDepositVolume_Sum_Fields>;
  var_pop?: Maybe<DailyDepositVolume_Var_Pop_Fields>;
  var_samp?: Maybe<DailyDepositVolume_Var_Samp_Fields>;
  variance?: Maybe<DailyDepositVolume_Variance_Fields>;
};


/** aggregate fields of "dailyDepositVolume" */
export type DailyDepositVolume_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DailyDepositVolume_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type DailyDepositVolume_Avg_Fields = {
  __typename?: 'dailyDepositVolume_avg_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "dailyDepositVolume". All fields are combined with a logical 'AND'. */
export type DailyDepositVolume_Bool_Exp = {
  _and?: InputMaybe<Array<DailyDepositVolume_Bool_Exp>>;
  _not?: InputMaybe<DailyDepositVolume_Bool_Exp>;
  _or?: InputMaybe<Array<DailyDepositVolume_Bool_Exp>>;
  b2b?: InputMaybe<Numeric_Comparison_Exp>;
  businessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  c2b?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  date?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "dailyDepositVolume" */
export enum DailyDepositVolume_Constraint {
  /** unique or primary key constraint on columns "parentBusinessId", "businessWalletId", "date" */
  DailyDepositVolumeDateParentBusinessIdBusinessWalletIdKey = 'dailyDepositVolume_date_parentBusinessId_businessWalletId_key',
  /** unique or primary key constraint on columns "id" */
  DailyDepositVolumePkey = 'dailyDepositVolume_pkey'
}

/** input type for incrementing numeric columns in table "dailyDepositVolume" */
export type DailyDepositVolume_Inc_Input = {
  b2b?: InputMaybe<Scalars['numeric']>;
  c2b?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "dailyDepositVolume" */
export type DailyDepositVolume_Insert_Input = {
  b2b?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  c2b?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type DailyDepositVolume_Max_Fields = {
  __typename?: 'dailyDepositVolume_max_fields';
  b2b?: Maybe<Scalars['numeric']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  c2b?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['Int']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type DailyDepositVolume_Min_Fields = {
  __typename?: 'dailyDepositVolume_min_fields';
  b2b?: Maybe<Scalars['numeric']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  c2b?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['Int']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "dailyDepositVolume" */
export type DailyDepositVolume_Mutation_Response = {
  __typename?: 'dailyDepositVolume_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<DailyDepositVolume>;
};

/** on_conflict condition type for table "dailyDepositVolume" */
export type DailyDepositVolume_On_Conflict = {
  constraint: DailyDepositVolume_Constraint;
  update_columns?: Array<DailyDepositVolume_Update_Column>;
  where?: InputMaybe<DailyDepositVolume_Bool_Exp>;
};

/** Ordering options when selecting data from "dailyDepositVolume". */
export type DailyDepositVolume_Order_By = {
  b2b?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  c2b?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: dailyDepositVolume */
export type DailyDepositVolume_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "dailyDepositVolume" */
export enum DailyDepositVolume_Select_Column {
  /** column name */
  B2b = 'b2b',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  C2b = 'c2b',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Currency = 'currency',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "dailyDepositVolume" */
export type DailyDepositVolume_Set_Input = {
  b2b?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  c2b?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type DailyDepositVolume_Stddev_Fields = {
  __typename?: 'dailyDepositVolume_stddev_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type DailyDepositVolume_Stddev_Pop_Fields = {
  __typename?: 'dailyDepositVolume_stddev_pop_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type DailyDepositVolume_Stddev_Samp_Fields = {
  __typename?: 'dailyDepositVolume_stddev_samp_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "dailyDepositVolume" */
export type DailyDepositVolume_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DailyDepositVolume_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DailyDepositVolume_Stream_Cursor_Value_Input = {
  b2b?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  c2b?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type DailyDepositVolume_Sum_Fields = {
  __typename?: 'dailyDepositVolume_sum_fields';
  b2b?: Maybe<Scalars['numeric']>;
  c2b?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "dailyDepositVolume" */
export enum DailyDepositVolume_Update_Column {
  /** column name */
  B2b = 'b2b',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  C2b = 'c2b',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Currency = 'currency',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type DailyDepositVolume_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DailyDepositVolume_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DailyDepositVolume_Set_Input>;
  /** filter the rows which have to be updated */
  where: DailyDepositVolume_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DailyDepositVolume_Var_Pop_Fields = {
  __typename?: 'dailyDepositVolume_var_pop_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type DailyDepositVolume_Var_Samp_Fields = {
  __typename?: 'dailyDepositVolume_var_samp_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type DailyDepositVolume_Variance_Fields = {
  __typename?: 'dailyDepositVolume_variance_fields';
  b2b?: Maybe<Scalars['Float']>;
  c2b?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume = {
  __typename?: 'dailyWithdrawalVolume';
  businessWallet: Array<BusinessWallet>;
  businessWalletId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  currency: Scalars['String'];
  date: Scalars['date'];
  id: Scalars['Int'];
  parentBusiness: Array<Business>;
  parentBusinessId: Scalars['uuid'];
  payout: Scalars['numeric'];
  settlement: Scalars['numeric'];
  updatedAt?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "dailyWithdrawalVolume" */
export type DailyWithdrawalVolumeBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_DailyWithdrawalVolumebusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_DailyWithdrawalVolumebusinessWallet>;
};


/** columns and relationships of "dailyWithdrawalVolume" */
export type DailyWithdrawalVolumeParentBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_DailyWithdrawalVolumeparentBusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_DailyWithdrawalVolumeparentBusiness>;
};

/** aggregated selection of "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_Aggregate = {
  __typename?: 'dailyWithdrawalVolume_aggregate';
  aggregate?: Maybe<DailyWithdrawalVolume_Aggregate_Fields>;
  nodes: Array<DailyWithdrawalVolume>;
};

/** aggregate fields of "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_Aggregate_Fields = {
  __typename?: 'dailyWithdrawalVolume_aggregate_fields';
  avg?: Maybe<DailyWithdrawalVolume_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<DailyWithdrawalVolume_Max_Fields>;
  min?: Maybe<DailyWithdrawalVolume_Min_Fields>;
  stddev?: Maybe<DailyWithdrawalVolume_Stddev_Fields>;
  stddev_pop?: Maybe<DailyWithdrawalVolume_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DailyWithdrawalVolume_Stddev_Samp_Fields>;
  sum?: Maybe<DailyWithdrawalVolume_Sum_Fields>;
  var_pop?: Maybe<DailyWithdrawalVolume_Var_Pop_Fields>;
  var_samp?: Maybe<DailyWithdrawalVolume_Var_Samp_Fields>;
  variance?: Maybe<DailyWithdrawalVolume_Variance_Fields>;
};


/** aggregate fields of "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DailyWithdrawalVolume_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type DailyWithdrawalVolume_Avg_Fields = {
  __typename?: 'dailyWithdrawalVolume_avg_fields';
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
  settlement?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "dailyWithdrawalVolume". All fields are combined with a logical 'AND'. */
export type DailyWithdrawalVolume_Bool_Exp = {
  _and?: InputMaybe<Array<DailyWithdrawalVolume_Bool_Exp>>;
  _not?: InputMaybe<DailyWithdrawalVolume_Bool_Exp>;
  _or?: InputMaybe<Array<DailyWithdrawalVolume_Bool_Exp>>;
  businessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  date?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  payout?: InputMaybe<Numeric_Comparison_Exp>;
  settlement?: InputMaybe<Numeric_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "dailyWithdrawalVolume" */
export enum DailyWithdrawalVolume_Constraint {
  /** unique or primary key constraint on columns "parentBusinessId", "businessWalletId", "date" */
  DailyWithdrawalVolumeDateParentBusinessIdBusinessWalletIdKe = 'dailyWithdrawalVolume_date_parentBusinessId_businessWalletId_ke',
  /** unique or primary key constraint on columns "id" */
  DailyWithdrawalVolumePkey = 'dailyWithdrawalVolume_pkey'
}

/** input type for incrementing numeric columns in table "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  payout?: InputMaybe<Scalars['numeric']>;
  settlement?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_Insert_Input = {
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payout?: InputMaybe<Scalars['numeric']>;
  settlement?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type DailyWithdrawalVolume_Max_Fields = {
  __typename?: 'dailyWithdrawalVolume_max_fields';
  businessWalletId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['Int']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  payout?: Maybe<Scalars['numeric']>;
  settlement?: Maybe<Scalars['numeric']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type DailyWithdrawalVolume_Min_Fields = {
  __typename?: 'dailyWithdrawalVolume_min_fields';
  businessWalletId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['Int']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  payout?: Maybe<Scalars['numeric']>;
  settlement?: Maybe<Scalars['numeric']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_Mutation_Response = {
  __typename?: 'dailyWithdrawalVolume_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<DailyWithdrawalVolume>;
};

/** on_conflict condition type for table "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_On_Conflict = {
  constraint: DailyWithdrawalVolume_Constraint;
  update_columns?: Array<DailyWithdrawalVolume_Update_Column>;
  where?: InputMaybe<DailyWithdrawalVolume_Bool_Exp>;
};

/** Ordering options when selecting data from "dailyWithdrawalVolume". */
export type DailyWithdrawalVolume_Order_By = {
  businessWalletId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  payout?: InputMaybe<Order_By>;
  settlement?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: dailyWithdrawalVolume */
export type DailyWithdrawalVolume_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "dailyWithdrawalVolume" */
export enum DailyWithdrawalVolume_Select_Column {
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Currency = 'currency',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Payout = 'payout',
  /** column name */
  Settlement = 'settlement',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_Set_Input = {
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payout?: InputMaybe<Scalars['numeric']>;
  settlement?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type DailyWithdrawalVolume_Stddev_Fields = {
  __typename?: 'dailyWithdrawalVolume_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
  settlement?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type DailyWithdrawalVolume_Stddev_Pop_Fields = {
  __typename?: 'dailyWithdrawalVolume_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
  settlement?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type DailyWithdrawalVolume_Stddev_Samp_Fields = {
  __typename?: 'dailyWithdrawalVolume_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
  settlement?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "dailyWithdrawalVolume" */
export type DailyWithdrawalVolume_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DailyWithdrawalVolume_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DailyWithdrawalVolume_Stream_Cursor_Value_Input = {
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['date']>;
  id?: InputMaybe<Scalars['Int']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payout?: InputMaybe<Scalars['numeric']>;
  settlement?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type DailyWithdrawalVolume_Sum_Fields = {
  __typename?: 'dailyWithdrawalVolume_sum_fields';
  id?: Maybe<Scalars['Int']>;
  payout?: Maybe<Scalars['numeric']>;
  settlement?: Maybe<Scalars['numeric']>;
};

/** update columns of table "dailyWithdrawalVolume" */
export enum DailyWithdrawalVolume_Update_Column {
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Currency = 'currency',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  Payout = 'payout',
  /** column name */
  Settlement = 'settlement',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type DailyWithdrawalVolume_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DailyWithdrawalVolume_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DailyWithdrawalVolume_Set_Input>;
  /** filter the rows which have to be updated */
  where: DailyWithdrawalVolume_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DailyWithdrawalVolume_Var_Pop_Fields = {
  __typename?: 'dailyWithdrawalVolume_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
  settlement?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type DailyWithdrawalVolume_Var_Samp_Fields = {
  __typename?: 'dailyWithdrawalVolume_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
  settlement?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type DailyWithdrawalVolume_Variance_Fields = {
  __typename?: 'dailyWithdrawalVolume_variance_fields';
  id?: Maybe<Scalars['Float']>;
  payout?: Maybe<Scalars['Float']>;
  settlement?: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
export type Date_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['date']>;
  _gt?: InputMaybe<Scalars['date']>;
  _gte?: InputMaybe<Scalars['date']>;
  _in?: InputMaybe<Array<Scalars['date']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['date']>;
  _lte?: InputMaybe<Scalars['date']>;
  _neq?: InputMaybe<Scalars['date']>;
  _nin?: InputMaybe<Array<Scalars['date']>>;
};

/** columns and relationships of "depositStatuses" */
export type DepositStatuses = {
  __typename?: 'depositStatuses';
  /** An array relationship */
  deposits: Array<Deposits>;
  /** An aggregate relationship */
  deposits_aggregate: Deposits_Aggregate;
  description?: Maybe<Scalars['String']>;
  name: Scalars['String'];
};


/** columns and relationships of "depositStatuses" */
export type DepositStatusesDepositsArgs = {
  distinct_on?: InputMaybe<Array<Deposits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Deposits_Order_By>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};


/** columns and relationships of "depositStatuses" */
export type DepositStatusesDeposits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Deposits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Deposits_Order_By>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};

/** aggregated selection of "depositStatuses" */
export type DepositStatuses_Aggregate = {
  __typename?: 'depositStatuses_aggregate';
  aggregate?: Maybe<DepositStatuses_Aggregate_Fields>;
  nodes: Array<DepositStatuses>;
};

/** aggregate fields of "depositStatuses" */
export type DepositStatuses_Aggregate_Fields = {
  __typename?: 'depositStatuses_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<DepositStatuses_Max_Fields>;
  min?: Maybe<DepositStatuses_Min_Fields>;
};


/** aggregate fields of "depositStatuses" */
export type DepositStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DepositStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "depositStatuses". All fields are combined with a logical 'AND'. */
export type DepositStatuses_Bool_Exp = {
  _and?: InputMaybe<Array<DepositStatuses_Bool_Exp>>;
  _not?: InputMaybe<DepositStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<DepositStatuses_Bool_Exp>>;
  deposits?: InputMaybe<Deposits_Bool_Exp>;
  deposits_aggregate?: InputMaybe<Deposits_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "depositStatuses" */
export enum DepositStatuses_Constraint {
  /** unique or primary key constraint on columns "name" */
  DepositStatusPkey = 'depositStatus_pkey'
}

export enum DepositStatuses_Enum {
  Cancelled = 'CANCELLED',
  New = 'NEW',
  Pending = 'PENDING',
  Received = 'RECEIVED',
  Refunded = 'REFUNDED'
}

/** Boolean expression to compare columns of type "depositStatuses_enum". All fields are combined with logical 'AND'. */
export type DepositStatuses_Enum_Comparison_Exp = {
  _eq?: InputMaybe<DepositStatuses_Enum>;
  _in?: InputMaybe<Array<DepositStatuses_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<DepositStatuses_Enum>;
  _nin?: InputMaybe<Array<DepositStatuses_Enum>>;
};

/** input type for inserting data into table "depositStatuses" */
export type DepositStatuses_Insert_Input = {
  deposits?: InputMaybe<Deposits_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type DepositStatuses_Max_Fields = {
  __typename?: 'depositStatuses_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type DepositStatuses_Min_Fields = {
  __typename?: 'depositStatuses_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "depositStatuses" */
export type DepositStatuses_Mutation_Response = {
  __typename?: 'depositStatuses_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<DepositStatuses>;
};

/** input type for inserting object relation for remote table "depositStatuses" */
export type DepositStatuses_Obj_Rel_Insert_Input = {
  data: DepositStatuses_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<DepositStatuses_On_Conflict>;
};

/** on_conflict condition type for table "depositStatuses" */
export type DepositStatuses_On_Conflict = {
  constraint: DepositStatuses_Constraint;
  update_columns?: Array<DepositStatuses_Update_Column>;
  where?: InputMaybe<DepositStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "depositStatuses". */
export type DepositStatuses_Order_By = {
  deposits_aggregate?: InputMaybe<Deposits_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: depositStatuses */
export type DepositStatuses_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "depositStatuses" */
export enum DepositStatuses_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "depositStatuses" */
export type DepositStatuses_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "depositStatuses" */
export type DepositStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DepositStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DepositStatuses_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "depositStatuses" */
export enum DepositStatuses_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type DepositStatuses_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DepositStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: DepositStatuses_Bool_Exp;
};

/** columns and relationships of "depositTypes" */
export type DepositTypes = {
  __typename?: 'depositTypes';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  /** An array relationship */
  deposits: Array<Deposits>;
  /** An aggregate relationship */
  deposits_aggregate: Deposits_Aggregate;
  description?: Maybe<Scalars['String']>;
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  name: Scalars['String'];
};


/** columns and relationships of "depositTypes" */
export type DepositTypesAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "depositTypes" */
export type DepositTypesAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "depositTypes" */
export type DepositTypesDepositsArgs = {
  distinct_on?: InputMaybe<Array<Deposits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Deposits_Order_By>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};


/** columns and relationships of "depositTypes" */
export type DepositTypesDeposits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Deposits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Deposits_Order_By>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};


/** columns and relationships of "depositTypes" */
export type DepositTypesLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "depositTypes" */
export type DepositTypesLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};

/** aggregated selection of "depositTypes" */
export type DepositTypes_Aggregate = {
  __typename?: 'depositTypes_aggregate';
  aggregate?: Maybe<DepositTypes_Aggregate_Fields>;
  nodes: Array<DepositTypes>;
};

/** aggregate fields of "depositTypes" */
export type DepositTypes_Aggregate_Fields = {
  __typename?: 'depositTypes_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<DepositTypes_Max_Fields>;
  min?: Maybe<DepositTypes_Min_Fields>;
};


/** aggregate fields of "depositTypes" */
export type DepositTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DepositTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "depositTypes". All fields are combined with a logical 'AND'. */
export type DepositTypes_Bool_Exp = {
  _and?: InputMaybe<Array<DepositTypes_Bool_Exp>>;
  _not?: InputMaybe<DepositTypes_Bool_Exp>;
  _or?: InputMaybe<Array<DepositTypes_Bool_Exp>>;
  accountLedgers?: InputMaybe<AccountLedgers_Bool_Exp>;
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp>;
  deposits?: InputMaybe<Deposits_Bool_Exp>;
  deposits_aggregate?: InputMaybe<Deposits_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  ledgers?: InputMaybe<Ledgers_Bool_Exp>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "depositTypes" */
export enum DepositTypes_Constraint {
  /** unique or primary key constraint on columns "name" */
  DepositTypePkey = 'depositType_pkey'
}

export enum DepositTypes_Enum {
  B2B = 'B2B',
  C2B = 'C2B'
}

/** Boolean expression to compare columns of type "depositTypes_enum". All fields are combined with logical 'AND'. */
export type DepositTypes_Enum_Comparison_Exp = {
  _eq?: InputMaybe<DepositTypes_Enum>;
  _in?: InputMaybe<Array<DepositTypes_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<DepositTypes_Enum>;
  _nin?: InputMaybe<Array<DepositTypes_Enum>>;
};

/** input type for inserting data into table "depositTypes" */
export type DepositTypes_Insert_Input = {
  accountLedgers?: InputMaybe<AccountLedgers_Arr_Rel_Insert_Input>;
  deposits?: InputMaybe<Deposits_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  ledgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type DepositTypes_Max_Fields = {
  __typename?: 'depositTypes_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type DepositTypes_Min_Fields = {
  __typename?: 'depositTypes_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "depositTypes" */
export type DepositTypes_Mutation_Response = {
  __typename?: 'depositTypes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<DepositTypes>;
};

/** input type for inserting object relation for remote table "depositTypes" */
export type DepositTypes_Obj_Rel_Insert_Input = {
  data: DepositTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<DepositTypes_On_Conflict>;
};

/** on_conflict condition type for table "depositTypes" */
export type DepositTypes_On_Conflict = {
  constraint: DepositTypes_Constraint;
  update_columns?: Array<DepositTypes_Update_Column>;
  where?: InputMaybe<DepositTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "depositTypes". */
export type DepositTypes_Order_By = {
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Order_By>;
  deposits_aggregate?: InputMaybe<Deposits_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: depositTypes */
export type DepositTypes_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "depositTypes" */
export enum DepositTypes_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "depositTypes" */
export type DepositTypes_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "depositTypes" */
export type DepositTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DepositTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DepositTypes_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "depositTypes" */
export enum DepositTypes_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type DepositTypes_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DepositTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: DepositTypes_Bool_Exp;
};

export type DepositVolumeGraphWithCurrency_Args = {
  aggregate_by?: InputMaybe<Scalars['String']>;
  currency_code?: InputMaybe<Scalars['String']>;
  fromdate?: InputMaybe<Scalars['timestamptz']>;
  tformat?: InputMaybe<Scalars['String']>;
  todate?: InputMaybe<Scalars['timestamptz']>;
  xformat?: InputMaybe<Scalars['String']>;
};

export type DepositVolumeGraph_Args = {
  aggregate_by?: InputMaybe<Scalars['String']>;
  fromdate?: InputMaybe<Scalars['timestamptz']>;
  tformat?: InputMaybe<Scalars['String']>;
  todate?: InputMaybe<Scalars['timestamptz']>;
  xformat?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "deposits" */
export type Deposits = {
  __typename?: 'deposits';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  /** An array relationship */
  activityLogs: Array<ActivityLogs>;
  /** An aggregate relationship */
  activityLogs_aggregate: ActivityLogs_Aggregate;
  amountReceived?: Maybe<Scalars['numeric']>;
  amountReceivedDate?: Maybe<Scalars['timestamp']>;
  businessWallet: Array<BusinessWallet>;
  businessWalletId: Scalars['uuid'];
  cancelledDate?: Maybe<Scalars['timestamp']>;
  /** An array relationship */
  conversations: Array<Conversations>;
  /** An aggregate relationship */
  conversations_aggregate: Conversations_Aggregate;
  createdAt: Scalars['timestamptz'];
  createdByMerchant: Array<Merchant>;
  createdBySubAdmin: Array<SubAdmin>;
  createdBySuperAdmin: Array<SuperAdmin>;
  createdByUser?: Maybe<Array<Maybe<CreatedByUser>>>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  /** An object relationship */
  depositStatus: DepositStatuses;
  /** An object relationship */
  depositType: DepositTypes;
  fromCustomer: Array<Customer>;
  fromCustomerId: Scalars['uuid'];
  id: Scalars['uuid'];
  internalId: Scalars['bigint'];
  invoiceDate?: Maybe<Scalars['timestamptz']>;
  invoiceUrl?: Maybe<Scalars['String']>;
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  parentBrand: Array<Brand>;
  parentBrandId?: Maybe<Scalars['uuid']>;
  parentBusiness: Array<Business>;
  parentBusinessId: Scalars['uuid'];
  productName: Scalars['String'];
  productPrice: Scalars['numeric'];
  proofOfPaymentUrl?: Maybe<Scalars['String']>;
  referenceId?: Maybe<Scalars['String']>;
  refundedAmount?: Maybe<Scalars['numeric']>;
  refundedDate?: Maybe<Scalars['timestamp']>;
  remarks?: Maybe<Scalars['String']>;
  /** An array relationship */
  rollingReserves: Array<RollingReserves>;
  /** An aggregate relationship */
  rollingReserves_aggregate: RollingReserves_Aggregate;
  signedInvoiceUrl?: Maybe<Scalars['String']>;
  status: DepositStatuses_Enum;
  tags?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  tasks: Array<Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Tasks_Aggregate;
  toAccount: Array<Account>;
  toAccountId?: Maybe<Scalars['uuid']>;
  type: DepositTypes_Enum;
  updatedAt: Scalars['timestamptz'];
  updatedByMerchant: Array<Merchant>;
  updatedBySubAdmin: Array<SubAdmin>;
  updatedBySuperAdmin: Array<SuperAdmin>;
  updatedByUser?: Maybe<Array<Maybe<CreatedByUser>>>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "deposits" */
export type DepositsAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsActivityLogsArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsActivityLogs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_DepositsbusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_DepositsbusinessWallet>;
};


/** columns and relationships of "deposits" */
export type DepositsConversationsArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsConversations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsCreatedByMerchantArgs = {
  options?: InputMaybe<MerchantOptions_Remote_Rel_DepositscreatedByMerchant>;
  where?: InputMaybe<MerchantWhere_Remote_Rel_DepositscreatedByMerchant>;
};


/** columns and relationships of "deposits" */
export type DepositsCreatedBySubAdminArgs = {
  options?: InputMaybe<SubAdminOptions_Remote_Rel_DepositscreatedBySubAdmin>;
  where?: InputMaybe<SubAdminWhere_Remote_Rel_DepositscreatedBySubAdmin>;
};


/** columns and relationships of "deposits" */
export type DepositsCreatedBySuperAdminArgs = {
  options?: InputMaybe<SuperAdminOptions_Remote_Rel_DepositscreatedBySuperAdmin>;
  where?: InputMaybe<SuperAdminWhere_Remote_Rel_DepositscreatedBySuperAdmin>;
};


/** columns and relationships of "deposits" */
export type DepositsFromCustomerArgs = {
  options?: InputMaybe<CustomerOptions_Remote_Rel_DepositsfromCustomer>;
  where?: InputMaybe<CustomerWhere_Remote_Rel_DepositsfromCustomer>;
};


/** columns and relationships of "deposits" */
export type DepositsLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsParentBrandArgs = {
  options?: InputMaybe<BrandOptions_Remote_Rel_DepositsparentBrand>;
  where?: InputMaybe<BrandWhere_Remote_Rel_DepositsparentBrand>;
};


/** columns and relationships of "deposits" */
export type DepositsParentBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_DepositsparentBusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_DepositsparentBusiness>;
};


/** columns and relationships of "deposits" */
export type DepositsRollingReservesArgs = {
  distinct_on?: InputMaybe<Array<RollingReserves_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserves_Order_By>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsRollingReserves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<RollingReserves_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserves_Order_By>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsTagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "deposits" */
export type DepositsTasksArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


/** columns and relationships of "deposits" */
export type DepositsToAccountArgs = {
  options?: InputMaybe<AccountOptions_Remote_Rel_DepositstoAccount>;
  where?: InputMaybe<AccountWhere_Remote_Rel_DepositstoAccount>;
};


/** columns and relationships of "deposits" */
export type DepositsUpdatedByMerchantArgs = {
  options?: InputMaybe<MerchantOptions_Remote_Rel_DepositsupdatedByMerchant>;
  where?: InputMaybe<MerchantWhere_Remote_Rel_DepositsupdatedByMerchant>;
};


/** columns and relationships of "deposits" */
export type DepositsUpdatedBySubAdminArgs = {
  options?: InputMaybe<SubAdminOptions_Remote_Rel_DepositsupdatedBySubAdmin>;
  where?: InputMaybe<SubAdminWhere_Remote_Rel_DepositsupdatedBySubAdmin>;
};


/** columns and relationships of "deposits" */
export type DepositsUpdatedBySuperAdminArgs = {
  options?: InputMaybe<SuperAdminOptions_Remote_Rel_DepositsupdatedBySuperAdmin>;
  where?: InputMaybe<SuperAdminWhere_Remote_Rel_DepositsupdatedBySuperAdmin>;
};

/** aggregated selection of "deposits" */
export type Deposits_Aggregate = {
  __typename?: 'deposits_aggregate';
  aggregate?: Maybe<Deposits_Aggregate_Fields>;
  nodes: Array<Deposits>;
};

export type Deposits_Aggregate_Bool_Exp = {
  count?: InputMaybe<Deposits_Aggregate_Bool_Exp_Count>;
};

export type Deposits_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Deposits_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Deposits_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "deposits" */
export type Deposits_Aggregate_Fields = {
  __typename?: 'deposits_aggregate_fields';
  avg?: Maybe<Deposits_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Deposits_Max_Fields>;
  min?: Maybe<Deposits_Min_Fields>;
  stddev?: Maybe<Deposits_Stddev_Fields>;
  stddev_pop?: Maybe<Deposits_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Deposits_Stddev_Samp_Fields>;
  sum?: Maybe<Deposits_Sum_Fields>;
  var_pop?: Maybe<Deposits_Var_Pop_Fields>;
  var_samp?: Maybe<Deposits_Var_Samp_Fields>;
  variance?: Maybe<Deposits_Variance_Fields>;
};


/** aggregate fields of "deposits" */
export type Deposits_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Deposits_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "deposits" */
export type Deposits_Aggregate_Order_By = {
  avg?: InputMaybe<Deposits_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Deposits_Max_Order_By>;
  min?: InputMaybe<Deposits_Min_Order_By>;
  stddev?: InputMaybe<Deposits_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Deposits_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Deposits_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Deposits_Sum_Order_By>;
  var_pop?: InputMaybe<Deposits_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Deposits_Var_Samp_Order_By>;
  variance?: InputMaybe<Deposits_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Deposits_Append_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "deposits" */
export type Deposits_Arr_Rel_Insert_Input = {
  data: Array<Deposits_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Deposits_On_Conflict>;
};

/** aggregate avg on columns */
export type Deposits_Avg_Fields = {
  __typename?: 'deposits_avg_fields';
  amountReceived?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  productPrice?: Maybe<Scalars['Float']>;
  refundedAmount?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "deposits" */
export type Deposits_Avg_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "deposits". All fields are combined with a logical 'AND'. */
export type Deposits_Bool_Exp = {
  _and?: InputMaybe<Array<Deposits_Bool_Exp>>;
  _not?: InputMaybe<Deposits_Bool_Exp>;
  _or?: InputMaybe<Array<Deposits_Bool_Exp>>;
  accountLedgers?: InputMaybe<AccountLedgers_Bool_Exp>;
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp>;
  activityLogs?: InputMaybe<ActivityLogs_Bool_Exp>;
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Bool_Exp>;
  amountReceived?: InputMaybe<Numeric_Comparison_Exp>;
  amountReceivedDate?: InputMaybe<Timestamp_Comparison_Exp>;
  businessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  cancelledDate?: InputMaybe<Timestamp_Comparison_Exp>;
  conversations?: InputMaybe<Conversations_Bool_Exp>;
  conversations_aggregate?: InputMaybe<Conversations_Aggregate_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  createdByUserId?: InputMaybe<Uuid_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  depositStatus?: InputMaybe<DepositStatuses_Bool_Exp>;
  depositType?: InputMaybe<DepositTypes_Bool_Exp>;
  fromCustomerId?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  internalId?: InputMaybe<Bigint_Comparison_Exp>;
  invoiceDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  invoiceUrl?: InputMaybe<String_Comparison_Exp>;
  ledgers?: InputMaybe<Ledgers_Bool_Exp>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  parentBrandId?: InputMaybe<Uuid_Comparison_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  productName?: InputMaybe<String_Comparison_Exp>;
  productPrice?: InputMaybe<Numeric_Comparison_Exp>;
  proofOfPaymentUrl?: InputMaybe<String_Comparison_Exp>;
  referenceId?: InputMaybe<String_Comparison_Exp>;
  refundedAmount?: InputMaybe<Numeric_Comparison_Exp>;
  refundedDate?: InputMaybe<Timestamp_Comparison_Exp>;
  remarks?: InputMaybe<String_Comparison_Exp>;
  rollingReserves?: InputMaybe<RollingReserves_Bool_Exp>;
  rollingReserves_aggregate?: InputMaybe<RollingReserves_Aggregate_Bool_Exp>;
  signedInvoiceUrl?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<DepositStatuses_Enum_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  tasks?: InputMaybe<Tasks_Bool_Exp>;
  tasks_aggregate?: InputMaybe<Tasks_Aggregate_Bool_Exp>;
  toAccountId?: InputMaybe<Uuid_Comparison_Exp>;
  type?: InputMaybe<DepositTypes_Enum_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedByUserId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "deposits" */
export enum Deposits_Constraint {
  /** unique or primary key constraint on columns "id" */
  DepositsPkey = 'deposits_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Deposits_Delete_At_Path_Input = {
  tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Deposits_Delete_Elem_Input = {
  tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Deposits_Delete_Key_Input = {
  tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "deposits" */
export type Deposits_Inc_Input = {
  amountReceived?: InputMaybe<Scalars['numeric']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  productPrice?: InputMaybe<Scalars['numeric']>;
  refundedAmount?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "deposits" */
export type Deposits_Insert_Input = {
  accountLedgers?: InputMaybe<AccountLedgers_Arr_Rel_Insert_Input>;
  activityLogs?: InputMaybe<ActivityLogs_Arr_Rel_Insert_Input>;
  amountReceived?: InputMaybe<Scalars['numeric']>;
  amountReceivedDate?: InputMaybe<Scalars['timestamp']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  conversations?: InputMaybe<Conversations_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  depositStatus?: InputMaybe<DepositStatuses_Obj_Rel_Insert_Input>;
  depositType?: InputMaybe<DepositTypes_Obj_Rel_Insert_Input>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  invoiceDate?: InputMaybe<Scalars['timestamptz']>;
  invoiceUrl?: InputMaybe<Scalars['String']>;
  ledgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  parentBrandId?: InputMaybe<Scalars['uuid']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  productName?: InputMaybe<Scalars['String']>;
  productPrice?: InputMaybe<Scalars['numeric']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  referenceId?: InputMaybe<Scalars['String']>;
  refundedAmount?: InputMaybe<Scalars['numeric']>;
  refundedDate?: InputMaybe<Scalars['timestamp']>;
  remarks?: InputMaybe<Scalars['String']>;
  rollingReserves?: InputMaybe<RollingReserves_Arr_Rel_Insert_Input>;
  signedInvoiceUrl?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<DepositStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  tasks?: InputMaybe<Tasks_Arr_Rel_Insert_Input>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<DepositTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Deposits_Max_Fields = {
  __typename?: 'deposits_max_fields';
  amountReceived?: Maybe<Scalars['numeric']>;
  amountReceivedDate?: Maybe<Scalars['timestamp']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  cancelledDate?: Maybe<Scalars['timestamp']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  fromCustomerId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  invoiceDate?: Maybe<Scalars['timestamptz']>;
  invoiceUrl?: Maybe<Scalars['String']>;
  parentBrandId?: Maybe<Scalars['uuid']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  productName?: Maybe<Scalars['String']>;
  productPrice?: Maybe<Scalars['numeric']>;
  proofOfPaymentUrl?: Maybe<Scalars['String']>;
  referenceId?: Maybe<Scalars['String']>;
  refundedAmount?: Maybe<Scalars['numeric']>;
  refundedDate?: Maybe<Scalars['timestamp']>;
  remarks?: Maybe<Scalars['String']>;
  signedInvoiceUrl?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "deposits" */
export type Deposits_Max_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  amountReceivedDate?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  cancelledDate?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  invoiceDate?: InputMaybe<Order_By>;
  invoiceUrl?: InputMaybe<Order_By>;
  parentBrandId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  productName?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  proofOfPaymentUrl?: InputMaybe<Order_By>;
  referenceId?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
  refundedDate?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  signedInvoiceUrl?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Deposits_Min_Fields = {
  __typename?: 'deposits_min_fields';
  amountReceived?: Maybe<Scalars['numeric']>;
  amountReceivedDate?: Maybe<Scalars['timestamp']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  cancelledDate?: Maybe<Scalars['timestamp']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  fromCustomerId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  invoiceDate?: Maybe<Scalars['timestamptz']>;
  invoiceUrl?: Maybe<Scalars['String']>;
  parentBrandId?: Maybe<Scalars['uuid']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  productName?: Maybe<Scalars['String']>;
  productPrice?: Maybe<Scalars['numeric']>;
  proofOfPaymentUrl?: Maybe<Scalars['String']>;
  referenceId?: Maybe<Scalars['String']>;
  refundedAmount?: Maybe<Scalars['numeric']>;
  refundedDate?: Maybe<Scalars['timestamp']>;
  remarks?: Maybe<Scalars['String']>;
  signedInvoiceUrl?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "deposits" */
export type Deposits_Min_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  amountReceivedDate?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  cancelledDate?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  invoiceDate?: InputMaybe<Order_By>;
  invoiceUrl?: InputMaybe<Order_By>;
  parentBrandId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  productName?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  proofOfPaymentUrl?: InputMaybe<Order_By>;
  referenceId?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
  refundedDate?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  signedInvoiceUrl?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "deposits" */
export type Deposits_Mutation_Response = {
  __typename?: 'deposits_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Deposits>;
};

/** input type for inserting object relation for remote table "deposits" */
export type Deposits_Obj_Rel_Insert_Input = {
  data: Deposits_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Deposits_On_Conflict>;
};

/** on_conflict condition type for table "deposits" */
export type Deposits_On_Conflict = {
  constraint: Deposits_Constraint;
  update_columns?: Array<Deposits_Update_Column>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};

/** Ordering options when selecting data from "deposits". */
export type Deposits_Order_By = {
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Order_By>;
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Order_By>;
  amountReceived?: InputMaybe<Order_By>;
  amountReceivedDate?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  cancelledDate?: InputMaybe<Order_By>;
  conversations_aggregate?: InputMaybe<Conversations_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  depositStatus?: InputMaybe<DepositStatuses_Order_By>;
  depositType?: InputMaybe<DepositTypes_Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  invoiceDate?: InputMaybe<Order_By>;
  invoiceUrl?: InputMaybe<Order_By>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  parentBrandId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  productName?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  proofOfPaymentUrl?: InputMaybe<Order_By>;
  referenceId?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
  refundedDate?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  rollingReserves_aggregate?: InputMaybe<RollingReserves_Aggregate_Order_By>;
  signedInvoiceUrl?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  tasks_aggregate?: InputMaybe<Tasks_Aggregate_Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: deposits */
export type Deposits_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Deposits_Prepend_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "deposits" */
export enum Deposits_Select_Column {
  /** column name */
  AmountReceived = 'amountReceived',
  /** column name */
  AmountReceivedDate = 'amountReceivedDate',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  CancelledDate = 'cancelledDate',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  Currency = 'currency',
  /** column name */
  FromCustomerId = 'fromCustomerId',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  InvoiceDate = 'invoiceDate',
  /** column name */
  InvoiceUrl = 'invoiceUrl',
  /** column name */
  ParentBrandId = 'parentBrandId',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  ProductName = 'productName',
  /** column name */
  ProductPrice = 'productPrice',
  /** column name */
  ProofOfPaymentUrl = 'proofOfPaymentUrl',
  /** column name */
  ReferenceId = 'referenceId',
  /** column name */
  RefundedAmount = 'refundedAmount',
  /** column name */
  RefundedDate = 'refundedDate',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  SignedInvoiceUrl = 'signedInvoiceUrl',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  ToAccountId = 'toAccountId',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

/** input type for updating data in table "deposits" */
export type Deposits_Set_Input = {
  amountReceived?: InputMaybe<Scalars['numeric']>;
  amountReceivedDate?: InputMaybe<Scalars['timestamp']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  invoiceDate?: InputMaybe<Scalars['timestamptz']>;
  invoiceUrl?: InputMaybe<Scalars['String']>;
  parentBrandId?: InputMaybe<Scalars['uuid']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  productName?: InputMaybe<Scalars['String']>;
  productPrice?: InputMaybe<Scalars['numeric']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  referenceId?: InputMaybe<Scalars['String']>;
  refundedAmount?: InputMaybe<Scalars['numeric']>;
  refundedDate?: InputMaybe<Scalars['timestamp']>;
  remarks?: InputMaybe<Scalars['String']>;
  signedInvoiceUrl?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<DepositStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<DepositTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Deposits_Stddev_Fields = {
  __typename?: 'deposits_stddev_fields';
  amountReceived?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  productPrice?: Maybe<Scalars['Float']>;
  refundedAmount?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "deposits" */
export type Deposits_Stddev_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Deposits_Stddev_Pop_Fields = {
  __typename?: 'deposits_stddev_pop_fields';
  amountReceived?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  productPrice?: Maybe<Scalars['Float']>;
  refundedAmount?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "deposits" */
export type Deposits_Stddev_Pop_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Deposits_Stddev_Samp_Fields = {
  __typename?: 'deposits_stddev_samp_fields';
  amountReceived?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  productPrice?: Maybe<Scalars['Float']>;
  refundedAmount?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "deposits" */
export type Deposits_Stddev_Samp_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "deposits" */
export type Deposits_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Deposits_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Deposits_Stream_Cursor_Value_Input = {
  amountReceived?: InputMaybe<Scalars['numeric']>;
  amountReceivedDate?: InputMaybe<Scalars['timestamp']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  invoiceDate?: InputMaybe<Scalars['timestamptz']>;
  invoiceUrl?: InputMaybe<Scalars['String']>;
  parentBrandId?: InputMaybe<Scalars['uuid']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  productName?: InputMaybe<Scalars['String']>;
  productPrice?: InputMaybe<Scalars['numeric']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  referenceId?: InputMaybe<Scalars['String']>;
  refundedAmount?: InputMaybe<Scalars['numeric']>;
  refundedDate?: InputMaybe<Scalars['timestamp']>;
  remarks?: InputMaybe<Scalars['String']>;
  signedInvoiceUrl?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<DepositStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<DepositTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Deposits_Sum_Fields = {
  __typename?: 'deposits_sum_fields';
  amountReceived?: Maybe<Scalars['numeric']>;
  internalId?: Maybe<Scalars['bigint']>;
  productPrice?: Maybe<Scalars['numeric']>;
  refundedAmount?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "deposits" */
export type Deposits_Sum_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
};

/** update columns of table "deposits" */
export enum Deposits_Update_Column {
  /** column name */
  AmountReceived = 'amountReceived',
  /** column name */
  AmountReceivedDate = 'amountReceivedDate',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  CancelledDate = 'cancelledDate',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  Currency = 'currency',
  /** column name */
  FromCustomerId = 'fromCustomerId',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  InvoiceDate = 'invoiceDate',
  /** column name */
  InvoiceUrl = 'invoiceUrl',
  /** column name */
  ParentBrandId = 'parentBrandId',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  ProductName = 'productName',
  /** column name */
  ProductPrice = 'productPrice',
  /** column name */
  ProofOfPaymentUrl = 'proofOfPaymentUrl',
  /** column name */
  ReferenceId = 'referenceId',
  /** column name */
  RefundedAmount = 'refundedAmount',
  /** column name */
  RefundedDate = 'refundedDate',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  SignedInvoiceUrl = 'signedInvoiceUrl',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  ToAccountId = 'toAccountId',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

export type Deposits_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Deposits_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Deposits_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Deposits_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Deposits_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Deposits_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Deposits_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Deposits_Set_Input>;
  /** filter the rows which have to be updated */
  where: Deposits_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Deposits_Var_Pop_Fields = {
  __typename?: 'deposits_var_pop_fields';
  amountReceived?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  productPrice?: Maybe<Scalars['Float']>;
  refundedAmount?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "deposits" */
export type Deposits_Var_Pop_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Deposits_Var_Samp_Fields = {
  __typename?: 'deposits_var_samp_fields';
  amountReceived?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  productPrice?: Maybe<Scalars['Float']>;
  refundedAmount?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "deposits" */
export type Deposits_Var_Samp_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Deposits_Variance_Fields = {
  __typename?: 'deposits_variance_fields';
  amountReceived?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  productPrice?: Maybe<Scalars['Float']>;
  refundedAmount?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "deposits" */
export type Deposits_Variance_Order_By = {
  amountReceived?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  productPrice?: InputMaybe<Order_By>;
  refundedAmount?: InputMaybe<Order_By>;
};

/** columns and relationships of "featureTypes" */
export type FeatureTypes = {
  __typename?: 'featureTypes';
  /** An array relationship */
  activityLogs: Array<ActivityLogs>;
  /** An aggregate relationship */
  activityLogs_aggregate: ActivityLogs_Aggregate;
  description?: Maybe<Scalars['String']>;
  name: Scalars['String'];
};


/** columns and relationships of "featureTypes" */
export type FeatureTypesActivityLogsArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "featureTypes" */
export type FeatureTypesActivityLogs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};

/** aggregated selection of "featureTypes" */
export type FeatureTypes_Aggregate = {
  __typename?: 'featureTypes_aggregate';
  aggregate?: Maybe<FeatureTypes_Aggregate_Fields>;
  nodes: Array<FeatureTypes>;
};

/** aggregate fields of "featureTypes" */
export type FeatureTypes_Aggregate_Fields = {
  __typename?: 'featureTypes_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<FeatureTypes_Max_Fields>;
  min?: Maybe<FeatureTypes_Min_Fields>;
};


/** aggregate fields of "featureTypes" */
export type FeatureTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<FeatureTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "featureTypes". All fields are combined with a logical 'AND'. */
export type FeatureTypes_Bool_Exp = {
  _and?: InputMaybe<Array<FeatureTypes_Bool_Exp>>;
  _not?: InputMaybe<FeatureTypes_Bool_Exp>;
  _or?: InputMaybe<Array<FeatureTypes_Bool_Exp>>;
  activityLogs?: InputMaybe<ActivityLogs_Bool_Exp>;
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "featureTypes" */
export enum FeatureTypes_Constraint {
  /** unique or primary key constraint on columns "name" */
  FeatureTypesPkey = 'featureTypes_pkey'
}

export enum FeatureTypes_Enum {
  Deposit = 'DEPOSIT',
  Ledger = 'LEDGER',
  Task = 'TASK',
  Withdrawal = 'WITHDRAWAL'
}

/** Boolean expression to compare columns of type "featureTypes_enum". All fields are combined with logical 'AND'. */
export type FeatureTypes_Enum_Comparison_Exp = {
  _eq?: InputMaybe<FeatureTypes_Enum>;
  _in?: InputMaybe<Array<FeatureTypes_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<FeatureTypes_Enum>;
  _nin?: InputMaybe<Array<FeatureTypes_Enum>>;
};

/** input type for inserting data into table "featureTypes" */
export type FeatureTypes_Insert_Input = {
  activityLogs?: InputMaybe<ActivityLogs_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type FeatureTypes_Max_Fields = {
  __typename?: 'featureTypes_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type FeatureTypes_Min_Fields = {
  __typename?: 'featureTypes_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "featureTypes" */
export type FeatureTypes_Mutation_Response = {
  __typename?: 'featureTypes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<FeatureTypes>;
};

/** input type for inserting object relation for remote table "featureTypes" */
export type FeatureTypes_Obj_Rel_Insert_Input = {
  data: FeatureTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<FeatureTypes_On_Conflict>;
};

/** on_conflict condition type for table "featureTypes" */
export type FeatureTypes_On_Conflict = {
  constraint: FeatureTypes_Constraint;
  update_columns?: Array<FeatureTypes_Update_Column>;
  where?: InputMaybe<FeatureTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "featureTypes". */
export type FeatureTypes_Order_By = {
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: featureTypes */
export type FeatureTypes_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "featureTypes" */
export enum FeatureTypes_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "featureTypes" */
export type FeatureTypes_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "featureTypes" */
export type FeatureTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: FeatureTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type FeatureTypes_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "featureTypes" */
export enum FeatureTypes_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type FeatureTypes_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<FeatureTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: FeatureTypes_Bool_Exp;
};

export type GenerateReferenceId_Args = {
  business_id?: InputMaybe<Scalars['uuid']>;
  transaction_type?: InputMaybe<Scalars['String']>;
};

export type GenerateReferenceIds_Args = {
  business_id?: InputMaybe<Scalars['uuid']>;
  counts?: InputMaybe<Scalars['Int']>;
  transaction_type?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "graphData" */
export type GraphData = {
  __typename?: 'graphData';
  t?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['String']>;
  y?: Maybe<Scalars['numeric']>;
};

export type GraphData_Aggregate = {
  __typename?: 'graphData_aggregate';
  aggregate?: Maybe<GraphData_Aggregate_Fields>;
  nodes: Array<GraphData>;
};

/** aggregate fields of "graphData" */
export type GraphData_Aggregate_Fields = {
  __typename?: 'graphData_aggregate_fields';
  avg?: Maybe<GraphData_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<GraphData_Max_Fields>;
  min?: Maybe<GraphData_Min_Fields>;
  stddev?: Maybe<GraphData_Stddev_Fields>;
  stddev_pop?: Maybe<GraphData_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<GraphData_Stddev_Samp_Fields>;
  sum?: Maybe<GraphData_Sum_Fields>;
  var_pop?: Maybe<GraphData_Var_Pop_Fields>;
  var_samp?: Maybe<GraphData_Var_Samp_Fields>;
  variance?: Maybe<GraphData_Variance_Fields>;
};


/** aggregate fields of "graphData" */
export type GraphData_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<GraphData_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type GraphData_Avg_Fields = {
  __typename?: 'graphData_avg_fields';
  y?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "graphData". All fields are combined with a logical 'AND'. */
export type GraphData_Bool_Exp = {
  _and?: InputMaybe<Array<GraphData_Bool_Exp>>;
  _not?: InputMaybe<GraphData_Bool_Exp>;
  _or?: InputMaybe<Array<GraphData_Bool_Exp>>;
  t?: InputMaybe<String_Comparison_Exp>;
  x?: InputMaybe<String_Comparison_Exp>;
  y?: InputMaybe<Numeric_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "graphData" */
export type GraphData_Inc_Input = {
  y?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "graphData" */
export type GraphData_Insert_Input = {
  t?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['String']>;
  y?: InputMaybe<Scalars['numeric']>;
};

/** aggregate max on columns */
export type GraphData_Max_Fields = {
  __typename?: 'graphData_max_fields';
  t?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['String']>;
  y?: Maybe<Scalars['numeric']>;
};

/** aggregate min on columns */
export type GraphData_Min_Fields = {
  __typename?: 'graphData_min_fields';
  t?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['String']>;
  y?: Maybe<Scalars['numeric']>;
};

/** response of any mutation on the table "graphData" */
export type GraphData_Mutation_Response = {
  __typename?: 'graphData_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphData>;
};

/** Ordering options when selecting data from "graphData". */
export type GraphData_Order_By = {
  t?: InputMaybe<Order_By>;
  x?: InputMaybe<Order_By>;
  y?: InputMaybe<Order_By>;
};

/** select columns of table "graphData" */
export enum GraphData_Select_Column {
  /** column name */
  T = 't',
  /** column name */
  X = 'x',
  /** column name */
  Y = 'y'
}

/** input type for updating data in table "graphData" */
export type GraphData_Set_Input = {
  t?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['String']>;
  y?: InputMaybe<Scalars['numeric']>;
};

/** aggregate stddev on columns */
export type GraphData_Stddev_Fields = {
  __typename?: 'graphData_stddev_fields';
  y?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type GraphData_Stddev_Pop_Fields = {
  __typename?: 'graphData_stddev_pop_fields';
  y?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type GraphData_Stddev_Samp_Fields = {
  __typename?: 'graphData_stddev_samp_fields';
  y?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "graphData" */
export type GraphData_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphData_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphData_Stream_Cursor_Value_Input = {
  t?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['String']>;
  y?: InputMaybe<Scalars['numeric']>;
};

/** aggregate sum on columns */
export type GraphData_Sum_Fields = {
  __typename?: 'graphData_sum_fields';
  y?: Maybe<Scalars['numeric']>;
};

export type GraphData_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GraphData_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphData_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphData_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GraphData_Var_Pop_Fields = {
  __typename?: 'graphData_var_pop_fields';
  y?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type GraphData_Var_Samp_Fields = {
  __typename?: 'graphData_var_samp_fields';
  y?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type GraphData_Variance_Fields = {
  __typename?: 'graphData_variance_fields';
  y?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "internalTransfers" */
export type InternalTransfers = {
  __typename?: 'internalTransfers';
  amount: Scalars['numeric'];
  createdAt: Scalars['timestamptz'];
  fromAccount: Array<Account>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAmount?: Maybe<Scalars['numeric']>;
  fromCurrency?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  internalId: Scalars['bigint'];
  remarks?: Maybe<Scalars['String']>;
  toAccount: Array<Account>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAmount?: Maybe<Scalars['numeric']>;
  toCurrency?: Maybe<Scalars['String']>;
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "internalTransfers" */
export type InternalTransfersFromAccountArgs = {
  options?: InputMaybe<AccountOptions_Remote_Rel_InternalTransfersfromAccount>;
  where?: InputMaybe<AccountWhere_Remote_Rel_InternalTransfersfromAccount>;
};


/** columns and relationships of "internalTransfers" */
export type InternalTransfersToAccountArgs = {
  options?: InputMaybe<AccountOptions_Remote_Rel_InternalTransferstoAccount>;
  where?: InputMaybe<AccountWhere_Remote_Rel_InternalTransferstoAccount>;
};

/** aggregated selection of "internalTransfers" */
export type InternalTransfers_Aggregate = {
  __typename?: 'internalTransfers_aggregate';
  aggregate?: Maybe<InternalTransfers_Aggregate_Fields>;
  nodes: Array<InternalTransfers>;
};

/** aggregate fields of "internalTransfers" */
export type InternalTransfers_Aggregate_Fields = {
  __typename?: 'internalTransfers_aggregate_fields';
  avg?: Maybe<InternalTransfers_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<InternalTransfers_Max_Fields>;
  min?: Maybe<InternalTransfers_Min_Fields>;
  stddev?: Maybe<InternalTransfers_Stddev_Fields>;
  stddev_pop?: Maybe<InternalTransfers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<InternalTransfers_Stddev_Samp_Fields>;
  sum?: Maybe<InternalTransfers_Sum_Fields>;
  var_pop?: Maybe<InternalTransfers_Var_Pop_Fields>;
  var_samp?: Maybe<InternalTransfers_Var_Samp_Fields>;
  variance?: Maybe<InternalTransfers_Variance_Fields>;
};


/** aggregate fields of "internalTransfers" */
export type InternalTransfers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<InternalTransfers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type InternalTransfers_Avg_Fields = {
  __typename?: 'internalTransfers_avg_fields';
  amount?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "internalTransfers". All fields are combined with a logical 'AND'. */
export type InternalTransfers_Bool_Exp = {
  _and?: InputMaybe<Array<InternalTransfers_Bool_Exp>>;
  _not?: InputMaybe<InternalTransfers_Bool_Exp>;
  _or?: InputMaybe<Array<InternalTransfers_Bool_Exp>>;
  amount?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  fromAccountId?: InputMaybe<Uuid_Comparison_Exp>;
  fromAmount?: InputMaybe<Numeric_Comparison_Exp>;
  fromCurrency?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  internalId?: InputMaybe<Bigint_Comparison_Exp>;
  remarks?: InputMaybe<String_Comparison_Exp>;
  toAccountId?: InputMaybe<Uuid_Comparison_Exp>;
  toAmount?: InputMaybe<Numeric_Comparison_Exp>;
  toCurrency?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "internalTransfers" */
export enum InternalTransfers_Constraint {
  /** unique or primary key constraint on columns "id" */
  InternalTransfersPkey = 'internalTransfers_pkey'
}

/** input type for incrementing numeric columns in table "internalTransfers" */
export type InternalTransfers_Inc_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  fromAmount?: InputMaybe<Scalars['numeric']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  toAmount?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "internalTransfers" */
export type InternalTransfers_Insert_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAmount?: InputMaybe<Scalars['numeric']>;
  fromCurrency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  remarks?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAmount?: InputMaybe<Scalars['numeric']>;
  toCurrency?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type InternalTransfers_Max_Fields = {
  __typename?: 'internalTransfers_max_fields';
  amount?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAmount?: Maybe<Scalars['numeric']>;
  fromCurrency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  remarks?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAmount?: Maybe<Scalars['numeric']>;
  toCurrency?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type InternalTransfers_Min_Fields = {
  __typename?: 'internalTransfers_min_fields';
  amount?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAmount?: Maybe<Scalars['numeric']>;
  fromCurrency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  remarks?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAmount?: Maybe<Scalars['numeric']>;
  toCurrency?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "internalTransfers" */
export type InternalTransfers_Mutation_Response = {
  __typename?: 'internalTransfers_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<InternalTransfers>;
};

/** on_conflict condition type for table "internalTransfers" */
export type InternalTransfers_On_Conflict = {
  constraint: InternalTransfers_Constraint;
  update_columns?: Array<InternalTransfers_Update_Column>;
  where?: InputMaybe<InternalTransfers_Bool_Exp>;
};

/** Ordering options when selecting data from "internalTransfers". */
export type InternalTransfers_Order_By = {
  amount?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  fromAmount?: InputMaybe<Order_By>;
  fromCurrency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  toAmount?: InputMaybe<Order_By>;
  toCurrency?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: internalTransfers */
export type InternalTransfers_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "internalTransfers" */
export enum InternalTransfers_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  FromAccountId = 'fromAccountId',
  /** column name */
  FromAmount = 'fromAmount',
  /** column name */
  FromCurrency = 'fromCurrency',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ToAccountId = 'toAccountId',
  /** column name */
  ToAmount = 'toAmount',
  /** column name */
  ToCurrency = 'toCurrency',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "internalTransfers" */
export type InternalTransfers_Set_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAmount?: InputMaybe<Scalars['numeric']>;
  fromCurrency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  remarks?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAmount?: InputMaybe<Scalars['numeric']>;
  toCurrency?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type InternalTransfers_Stddev_Fields = {
  __typename?: 'internalTransfers_stddev_fields';
  amount?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type InternalTransfers_Stddev_Pop_Fields = {
  __typename?: 'internalTransfers_stddev_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type InternalTransfers_Stddev_Samp_Fields = {
  __typename?: 'internalTransfers_stddev_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "internalTransfers" */
export type InternalTransfers_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: InternalTransfers_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type InternalTransfers_Stream_Cursor_Value_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAmount?: InputMaybe<Scalars['numeric']>;
  fromCurrency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  remarks?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAmount?: InputMaybe<Scalars['numeric']>;
  toCurrency?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type InternalTransfers_Sum_Fields = {
  __typename?: 'internalTransfers_sum_fields';
  amount?: Maybe<Scalars['numeric']>;
  fromAmount?: Maybe<Scalars['numeric']>;
  internalId?: Maybe<Scalars['bigint']>;
  toAmount?: Maybe<Scalars['numeric']>;
};

/** update columns of table "internalTransfers" */
export enum InternalTransfers_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  FromAccountId = 'fromAccountId',
  /** column name */
  FromAmount = 'fromAmount',
  /** column name */
  FromCurrency = 'fromCurrency',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ToAccountId = 'toAccountId',
  /** column name */
  ToAmount = 'toAmount',
  /** column name */
  ToCurrency = 'toCurrency',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type InternalTransfers_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<InternalTransfers_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<InternalTransfers_Set_Input>;
  /** filter the rows which have to be updated */
  where: InternalTransfers_Bool_Exp;
};

/** aggregate var_pop on columns */
export type InternalTransfers_Var_Pop_Fields = {
  __typename?: 'internalTransfers_var_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type InternalTransfers_Var_Samp_Fields = {
  __typename?: 'internalTransfers_var_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type InternalTransfers_Variance_Fields = {
  __typename?: 'internalTransfers_variance_fields';
  amount?: Maybe<Scalars['Float']>;
  fromAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
  toAmount?: Maybe<Scalars['Float']>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']>;
  _eq?: InputMaybe<Scalars['jsonb']>;
  _gt?: InputMaybe<Scalars['jsonb']>;
  _gte?: InputMaybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['jsonb']>;
  _lte?: InputMaybe<Scalars['jsonb']>;
  _neq?: InputMaybe<Scalars['jsonb']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "ledgerTypes" */
export type LedgerTypes = {
  __typename?: 'ledgerTypes';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  description?: Maybe<Scalars['String']>;
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  name: Scalars['String'];
};


/** columns and relationships of "ledgerTypes" */
export type LedgerTypesAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "ledgerTypes" */
export type LedgerTypesAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "ledgerTypes" */
export type LedgerTypesLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "ledgerTypes" */
export type LedgerTypesLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};

/** aggregated selection of "ledgerTypes" */
export type LedgerTypes_Aggregate = {
  __typename?: 'ledgerTypes_aggregate';
  aggregate?: Maybe<LedgerTypes_Aggregate_Fields>;
  nodes: Array<LedgerTypes>;
};

/** aggregate fields of "ledgerTypes" */
export type LedgerTypes_Aggregate_Fields = {
  __typename?: 'ledgerTypes_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<LedgerTypes_Max_Fields>;
  min?: Maybe<LedgerTypes_Min_Fields>;
};


/** aggregate fields of "ledgerTypes" */
export type LedgerTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<LedgerTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "ledgerTypes". All fields are combined with a logical 'AND'. */
export type LedgerTypes_Bool_Exp = {
  _and?: InputMaybe<Array<LedgerTypes_Bool_Exp>>;
  _not?: InputMaybe<LedgerTypes_Bool_Exp>;
  _or?: InputMaybe<Array<LedgerTypes_Bool_Exp>>;
  accountLedgers?: InputMaybe<AccountLedgers_Bool_Exp>;
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  ledgers?: InputMaybe<Ledgers_Bool_Exp>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ledgerTypes" */
export enum LedgerTypes_Constraint {
  /** unique or primary key constraint on columns "name" */
  LedgerTypePkey = 'ledgerType_pkey'
}

export enum LedgerTypes_Enum {
  Credit = 'CREDIT',
  Debit = 'DEBIT'
}

/** Boolean expression to compare columns of type "ledgerTypes_enum". All fields are combined with logical 'AND'. */
export type LedgerTypes_Enum_Comparison_Exp = {
  _eq?: InputMaybe<LedgerTypes_Enum>;
  _in?: InputMaybe<Array<LedgerTypes_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<LedgerTypes_Enum>;
  _nin?: InputMaybe<Array<LedgerTypes_Enum>>;
};

/** input type for inserting data into table "ledgerTypes" */
export type LedgerTypes_Insert_Input = {
  accountLedgers?: InputMaybe<AccountLedgers_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  ledgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type LedgerTypes_Max_Fields = {
  __typename?: 'ledgerTypes_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type LedgerTypes_Min_Fields = {
  __typename?: 'ledgerTypes_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "ledgerTypes" */
export type LedgerTypes_Mutation_Response = {
  __typename?: 'ledgerTypes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<LedgerTypes>;
};

/** input type for inserting object relation for remote table "ledgerTypes" */
export type LedgerTypes_Obj_Rel_Insert_Input = {
  data: LedgerTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<LedgerTypes_On_Conflict>;
};

/** on_conflict condition type for table "ledgerTypes" */
export type LedgerTypes_On_Conflict = {
  constraint: LedgerTypes_Constraint;
  update_columns?: Array<LedgerTypes_Update_Column>;
  where?: InputMaybe<LedgerTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "ledgerTypes". */
export type LedgerTypes_Order_By = {
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ledgerTypes */
export type LedgerTypes_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "ledgerTypes" */
export enum LedgerTypes_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "ledgerTypes" */
export type LedgerTypes_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "ledgerTypes" */
export type LedgerTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: LedgerTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type LedgerTypes_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "ledgerTypes" */
export enum LedgerTypes_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type LedgerTypes_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<LedgerTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: LedgerTypes_Bool_Exp;
};

/** columns and relationships of "ledgers" */
export type Ledgers = {
  __typename?: 'ledgers';
  /** An array relationship */
  activityLogs: Array<ActivityLogs>;
  /** An aggregate relationship */
  activityLogs_aggregate: ActivityLogs_Aggregate;
  /** An object relationship */
  adjustment?: Maybe<Adjustments>;
  adjustmentId?: Maybe<Scalars['uuid']>;
  amount: Scalars['numeric'];
  balance?: Maybe<Scalars['Int']>;
  /** An array relationship */
  childLedgers: Array<Ledgers>;
  /** An aggregate relationship */
  childLedgers_aggregate: Ledgers_Aggregate;
  createdAt: Scalars['timestamptz'];
  creditAmount?: Maybe<Scalars['Int']>;
  currency?: Maybe<Scalars['String']>;
  /** An object relationship */
  currencyExchange?: Maybe<CurrencyExchange>;
  currencyExchangeId?: Maybe<Scalars['uuid']>;
  debitAmount?: Maybe<Scalars['Int']>;
  /** An object relationship */
  deposit?: Maybe<Deposits>;
  depositId?: Maybe<Scalars['uuid']>;
  depositType?: Maybe<DepositTypes_Enum>;
  /** An object relationship */
  depositTypeByDeposittype?: Maybe<DepositTypes>;
  description?: Maybe<Scalars['String']>;
  finalBalance?: Maybe<Scalars['Int']>;
  finalCreditAmount?: Maybe<Scalars['Int']>;
  finalDebitAmount?: Maybe<Scalars['Int']>;
  fromAccountCurrency?: Maybe<Scalars['String']>;
  fromAccountIBAN?: Maybe<Scalars['String']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAccountNickname?: Maybe<Scalars['String']>;
  fromBankAddress?: Maybe<Scalars['String']>;
  fromBankName?: Maybe<Scalars['String']>;
  fromBankNickname?: Maybe<Scalars['String']>;
  fromBankSwiftCode?: Maybe<Scalars['String']>;
  fromBeneficiaryAddress?: Maybe<Scalars['String']>;
  fromBeneficiaryName?: Maybe<Scalars['String']>;
  fromBusinessWallet: Array<BusinessWallet>;
  fromBusinessWalletCurrency?: Maybe<Scalars['String']>;
  fromBusinessWalletId?: Maybe<Scalars['uuid']>;
  fromCustomerCountry?: Maybe<Scalars['String']>;
  fromCustomerFirstName?: Maybe<Scalars['String']>;
  fromCustomerId?: Maybe<Scalars['uuid']>;
  fromCustomerLastName?: Maybe<Scalars['String']>;
  fromCustomerUsername?: Maybe<Scalars['String']>;
  fromLine1?: Maybe<Scalars['String']>;
  fromLine2?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  internalId: Scalars['bigint'];
  ledgerType: LedgerTypes_Enum;
  /** An object relationship */
  ledgerTypeByLedgertype: LedgerTypes;
  parentBusiness: Array<Business>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  parentLedger?: Maybe<Ledgers>;
  parentLedgerId?: Maybe<Scalars['uuid']>;
  remarks?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['jsonb']>;
  toAccountCurrency?: Maybe<Scalars['String']>;
  toAccountIBAN?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAccountNickname?: Maybe<Scalars['String']>;
  toBankAddress?: Maybe<Scalars['String']>;
  toBankName?: Maybe<Scalars['String']>;
  toBankNickname?: Maybe<Scalars['String']>;
  toBankSwiftCode?: Maybe<Scalars['String']>;
  toBeneficiaryAddress?: Maybe<Scalars['String']>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  toBeneficiaryName?: Maybe<Scalars['String']>;
  toBusinessWallet: Array<BusinessWallet>;
  toBusinessWalletCurrency?: Maybe<Scalars['String']>;
  toBusinessWalletId?: Maybe<Scalars['uuid']>;
  toLine1?: Maybe<Scalars['String']>;
  toLine2?: Maybe<Scalars['String']>;
  transactionSubType?: Maybe<Scalars['String']>;
  transactionType: TransactionTypes_Enum;
  /** An object relationship */
  transactionTypeByTransactiontype: TransactionTypes;
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  withdrawal?: Maybe<Withdrawals>;
  withdrawalId?: Maybe<Scalars['uuid']>;
  withdrawalType?: Maybe<WithdrawalTypes_Enum>;
  /** An object relationship */
  withdrawalTypeByWithdrawaltype?: Maybe<WithdrawalTypes>;
};


/** columns and relationships of "ledgers" */
export type LedgersActivityLogsArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "ledgers" */
export type LedgersActivityLogs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "ledgers" */
export type LedgersChildLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "ledgers" */
export type LedgersChildLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "ledgers" */
export type LedgersFromBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_LedgersfromBusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_LedgersfromBusinessWallet>;
};


/** columns and relationships of "ledgers" */
export type LedgersParentBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_LedgersparentBusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_LedgersparentBusiness>;
};


/** columns and relationships of "ledgers" */
export type LedgersTagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "ledgers" */
export type LedgersToBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_LedgerstoBusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_LedgerstoBusinessWallet>;
};

/** aggregated selection of "ledgers" */
export type Ledgers_Aggregate = {
  __typename?: 'ledgers_aggregate';
  aggregate?: Maybe<Ledgers_Aggregate_Fields>;
  nodes: Array<Ledgers>;
};

export type Ledgers_Aggregate_Bool_Exp = {
  count?: InputMaybe<Ledgers_Aggregate_Bool_Exp_Count>;
};

export type Ledgers_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Ledgers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Ledgers_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ledgers" */
export type Ledgers_Aggregate_Fields = {
  __typename?: 'ledgers_aggregate_fields';
  avg?: Maybe<Ledgers_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Ledgers_Max_Fields>;
  min?: Maybe<Ledgers_Min_Fields>;
  stddev?: Maybe<Ledgers_Stddev_Fields>;
  stddev_pop?: Maybe<Ledgers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ledgers_Stddev_Samp_Fields>;
  sum?: Maybe<Ledgers_Sum_Fields>;
  var_pop?: Maybe<Ledgers_Var_Pop_Fields>;
  var_samp?: Maybe<Ledgers_Var_Samp_Fields>;
  variance?: Maybe<Ledgers_Variance_Fields>;
};


/** aggregate fields of "ledgers" */
export type Ledgers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ledgers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ledgers" */
export type Ledgers_Aggregate_Order_By = {
  avg?: InputMaybe<Ledgers_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ledgers_Max_Order_By>;
  min?: InputMaybe<Ledgers_Min_Order_By>;
  stddev?: InputMaybe<Ledgers_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ledgers_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ledgers_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ledgers_Sum_Order_By>;
  var_pop?: InputMaybe<Ledgers_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ledgers_Var_Samp_Order_By>;
  variance?: InputMaybe<Ledgers_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Ledgers_Append_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "ledgers" */
export type Ledgers_Arr_Rel_Insert_Input = {
  data: Array<Ledgers_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Ledgers_On_Conflict>;
};

/** aggregate avg on columns */
export type Ledgers_Avg_Fields = {
  __typename?: 'ledgers_avg_fields';
  amount?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  finalBalance?: Maybe<Scalars['Float']>;
  finalCreditAmount?: Maybe<Scalars['Float']>;
  finalDebitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ledgers" */
export type Ledgers_Avg_Order_By = {
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ledgers". All fields are combined with a logical 'AND'. */
export type Ledgers_Bool_Exp = {
  _and?: InputMaybe<Array<Ledgers_Bool_Exp>>;
  _not?: InputMaybe<Ledgers_Bool_Exp>;
  _or?: InputMaybe<Array<Ledgers_Bool_Exp>>;
  activityLogs?: InputMaybe<ActivityLogs_Bool_Exp>;
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Bool_Exp>;
  adjustment?: InputMaybe<Adjustments_Bool_Exp>;
  adjustmentId?: InputMaybe<Uuid_Comparison_Exp>;
  amount?: InputMaybe<Numeric_Comparison_Exp>;
  balance?: InputMaybe<Int_Comparison_Exp>;
  childLedgers?: InputMaybe<Ledgers_Bool_Exp>;
  childLedgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  creditAmount?: InputMaybe<Int_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  currencyExchange?: InputMaybe<CurrencyExchange_Bool_Exp>;
  currencyExchangeId?: InputMaybe<Uuid_Comparison_Exp>;
  debitAmount?: InputMaybe<Int_Comparison_Exp>;
  deposit?: InputMaybe<Deposits_Bool_Exp>;
  depositId?: InputMaybe<Uuid_Comparison_Exp>;
  depositType?: InputMaybe<DepositTypes_Enum_Comparison_Exp>;
  depositTypeByDeposittype?: InputMaybe<DepositTypes_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  finalBalance?: InputMaybe<Int_Comparison_Exp>;
  finalCreditAmount?: InputMaybe<Int_Comparison_Exp>;
  finalDebitAmount?: InputMaybe<Int_Comparison_Exp>;
  fromAccountCurrency?: InputMaybe<String_Comparison_Exp>;
  fromAccountIBAN?: InputMaybe<String_Comparison_Exp>;
  fromAccountId?: InputMaybe<Uuid_Comparison_Exp>;
  fromAccountNickname?: InputMaybe<String_Comparison_Exp>;
  fromBankAddress?: InputMaybe<String_Comparison_Exp>;
  fromBankName?: InputMaybe<String_Comparison_Exp>;
  fromBankNickname?: InputMaybe<String_Comparison_Exp>;
  fromBankSwiftCode?: InputMaybe<String_Comparison_Exp>;
  fromBeneficiaryAddress?: InputMaybe<String_Comparison_Exp>;
  fromBeneficiaryName?: InputMaybe<String_Comparison_Exp>;
  fromBusinessWalletCurrency?: InputMaybe<String_Comparison_Exp>;
  fromBusinessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  fromCustomerCountry?: InputMaybe<String_Comparison_Exp>;
  fromCustomerFirstName?: InputMaybe<String_Comparison_Exp>;
  fromCustomerId?: InputMaybe<Uuid_Comparison_Exp>;
  fromCustomerLastName?: InputMaybe<String_Comparison_Exp>;
  fromCustomerUsername?: InputMaybe<String_Comparison_Exp>;
  fromLine1?: InputMaybe<String_Comparison_Exp>;
  fromLine2?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  internalId?: InputMaybe<Bigint_Comparison_Exp>;
  ledgerType?: InputMaybe<LedgerTypes_Enum_Comparison_Exp>;
  ledgerTypeByLedgertype?: InputMaybe<LedgerTypes_Bool_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  parentLedger?: InputMaybe<Ledgers_Bool_Exp>;
  parentLedgerId?: InputMaybe<Uuid_Comparison_Exp>;
  remarks?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  toAccountCurrency?: InputMaybe<String_Comparison_Exp>;
  toAccountIBAN?: InputMaybe<String_Comparison_Exp>;
  toAccountId?: InputMaybe<Uuid_Comparison_Exp>;
  toAccountNickname?: InputMaybe<String_Comparison_Exp>;
  toBankAddress?: InputMaybe<String_Comparison_Exp>;
  toBankName?: InputMaybe<String_Comparison_Exp>;
  toBankNickname?: InputMaybe<String_Comparison_Exp>;
  toBankSwiftCode?: InputMaybe<String_Comparison_Exp>;
  toBeneficiaryAddress?: InputMaybe<String_Comparison_Exp>;
  toBeneficiaryId?: InputMaybe<Uuid_Comparison_Exp>;
  toBeneficiaryName?: InputMaybe<String_Comparison_Exp>;
  toBusinessWalletCurrency?: InputMaybe<String_Comparison_Exp>;
  toBusinessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  toLine1?: InputMaybe<String_Comparison_Exp>;
  toLine2?: InputMaybe<String_Comparison_Exp>;
  transactionSubType?: InputMaybe<String_Comparison_Exp>;
  transactionType?: InputMaybe<TransactionTypes_Enum_Comparison_Exp>;
  transactionTypeByTransactiontype?: InputMaybe<TransactionTypes_Bool_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  withdrawal?: InputMaybe<Withdrawals_Bool_Exp>;
  withdrawalId?: InputMaybe<Uuid_Comparison_Exp>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Enum_Comparison_Exp>;
  withdrawalTypeByWithdrawaltype?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};

/** unique or primary key constraints on table "ledgers" */
export enum Ledgers_Constraint {
  /** unique or primary key constraint on columns "id" */
  LedgersPkey = 'ledgers_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Ledgers_Delete_At_Path_Input = {
  tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Ledgers_Delete_Elem_Input = {
  tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Ledgers_Delete_Key_Input = {
  tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "ledgers" */
export type Ledgers_Inc_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  balance?: InputMaybe<Scalars['Int']>;
  creditAmount?: InputMaybe<Scalars['Int']>;
  debitAmount?: InputMaybe<Scalars['Int']>;
  finalBalance?: InputMaybe<Scalars['Int']>;
  finalCreditAmount?: InputMaybe<Scalars['Int']>;
  finalDebitAmount?: InputMaybe<Scalars['Int']>;
  internalId?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "ledgers" */
export type Ledgers_Insert_Input = {
  activityLogs?: InputMaybe<ActivityLogs_Arr_Rel_Insert_Input>;
  adjustment?: InputMaybe<Adjustments_Obj_Rel_Insert_Input>;
  adjustmentId?: InputMaybe<Scalars['uuid']>;
  amount?: InputMaybe<Scalars['numeric']>;
  balance?: InputMaybe<Scalars['Int']>;
  childLedgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  creditAmount?: InputMaybe<Scalars['Int']>;
  currency?: InputMaybe<Scalars['String']>;
  currencyExchange?: InputMaybe<CurrencyExchange_Obj_Rel_Insert_Input>;
  currencyExchangeId?: InputMaybe<Scalars['uuid']>;
  debitAmount?: InputMaybe<Scalars['Int']>;
  deposit?: InputMaybe<Deposits_Obj_Rel_Insert_Input>;
  depositId?: InputMaybe<Scalars['uuid']>;
  depositType?: InputMaybe<DepositTypes_Enum>;
  depositTypeByDeposittype?: InputMaybe<DepositTypes_Obj_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  finalBalance?: InputMaybe<Scalars['Int']>;
  finalCreditAmount?: InputMaybe<Scalars['Int']>;
  finalDebitAmount?: InputMaybe<Scalars['Int']>;
  fromAccountCurrency?: InputMaybe<Scalars['String']>;
  fromAccountIBAN?: InputMaybe<Scalars['String']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAccountNickname?: InputMaybe<Scalars['String']>;
  fromBankAddress?: InputMaybe<Scalars['String']>;
  fromBankName?: InputMaybe<Scalars['String']>;
  fromBankNickname?: InputMaybe<Scalars['String']>;
  fromBankSwiftCode?: InputMaybe<Scalars['String']>;
  fromBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  fromBeneficiaryName?: InputMaybe<Scalars['String']>;
  fromBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCustomerCountry?: InputMaybe<Scalars['String']>;
  fromCustomerFirstName?: InputMaybe<Scalars['String']>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  fromCustomerLastName?: InputMaybe<Scalars['String']>;
  fromCustomerUsername?: InputMaybe<Scalars['String']>;
  fromLine1?: InputMaybe<Scalars['String']>;
  fromLine2?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  ledgerType?: InputMaybe<LedgerTypes_Enum>;
  ledgerTypeByLedgertype?: InputMaybe<LedgerTypes_Obj_Rel_Insert_Input>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  parentLedger?: InputMaybe<Ledgers_Obj_Rel_Insert_Input>;
  parentLedgerId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAccountCurrency?: InputMaybe<Scalars['String']>;
  toAccountIBAN?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAccountNickname?: InputMaybe<Scalars['String']>;
  toBankAddress?: InputMaybe<Scalars['String']>;
  toBankName?: InputMaybe<Scalars['String']>;
  toBankNickname?: InputMaybe<Scalars['String']>;
  toBankSwiftCode?: InputMaybe<Scalars['String']>;
  toBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  toBeneficiaryName?: InputMaybe<Scalars['String']>;
  toBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  toLine1?: InputMaybe<Scalars['String']>;
  toLine2?: InputMaybe<Scalars['String']>;
  transactionSubType?: InputMaybe<Scalars['String']>;
  transactionType?: InputMaybe<TransactionTypes_Enum>;
  transactionTypeByTransactiontype?: InputMaybe<TransactionTypes_Obj_Rel_Insert_Input>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawal?: InputMaybe<Withdrawals_Obj_Rel_Insert_Input>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Enum>;
  withdrawalTypeByWithdrawaltype?: InputMaybe<WithdrawalTypes_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Ledgers_Max_Fields = {
  __typename?: 'ledgers_max_fields';
  adjustmentId?: Maybe<Scalars['uuid']>;
  amount?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  creditAmount?: Maybe<Scalars['Int']>;
  currency?: Maybe<Scalars['String']>;
  currencyExchangeId?: Maybe<Scalars['uuid']>;
  debitAmount?: Maybe<Scalars['Int']>;
  depositId?: Maybe<Scalars['uuid']>;
  description?: Maybe<Scalars['String']>;
  finalBalance?: Maybe<Scalars['Int']>;
  finalCreditAmount?: Maybe<Scalars['Int']>;
  finalDebitAmount?: Maybe<Scalars['Int']>;
  fromAccountCurrency?: Maybe<Scalars['String']>;
  fromAccountIBAN?: Maybe<Scalars['String']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAccountNickname?: Maybe<Scalars['String']>;
  fromBankAddress?: Maybe<Scalars['String']>;
  fromBankName?: Maybe<Scalars['String']>;
  fromBankNickname?: Maybe<Scalars['String']>;
  fromBankSwiftCode?: Maybe<Scalars['String']>;
  fromBeneficiaryAddress?: Maybe<Scalars['String']>;
  fromBeneficiaryName?: Maybe<Scalars['String']>;
  fromBusinessWalletCurrency?: Maybe<Scalars['String']>;
  fromBusinessWalletId?: Maybe<Scalars['uuid']>;
  fromCustomerCountry?: Maybe<Scalars['String']>;
  fromCustomerFirstName?: Maybe<Scalars['String']>;
  fromCustomerId?: Maybe<Scalars['uuid']>;
  fromCustomerLastName?: Maybe<Scalars['String']>;
  fromCustomerUsername?: Maybe<Scalars['String']>;
  fromLine1?: Maybe<Scalars['String']>;
  fromLine2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  parentLedgerId?: Maybe<Scalars['uuid']>;
  remarks?: Maybe<Scalars['String']>;
  toAccountCurrency?: Maybe<Scalars['String']>;
  toAccountIBAN?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAccountNickname?: Maybe<Scalars['String']>;
  toBankAddress?: Maybe<Scalars['String']>;
  toBankName?: Maybe<Scalars['String']>;
  toBankNickname?: Maybe<Scalars['String']>;
  toBankSwiftCode?: Maybe<Scalars['String']>;
  toBeneficiaryAddress?: Maybe<Scalars['String']>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  toBeneficiaryName?: Maybe<Scalars['String']>;
  toBusinessWalletCurrency?: Maybe<Scalars['String']>;
  toBusinessWalletId?: Maybe<Scalars['uuid']>;
  toLine1?: Maybe<Scalars['String']>;
  toLine2?: Maybe<Scalars['String']>;
  transactionSubType?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "ledgers" */
export type Ledgers_Max_Order_By = {
  adjustmentId?: InputMaybe<Order_By>;
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  currencyExchangeId?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  fromAccountCurrency?: InputMaybe<Order_By>;
  fromAccountIBAN?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  fromAccountNickname?: InputMaybe<Order_By>;
  fromBankAddress?: InputMaybe<Order_By>;
  fromBankName?: InputMaybe<Order_By>;
  fromBankNickname?: InputMaybe<Order_By>;
  fromBankSwiftCode?: InputMaybe<Order_By>;
  fromBeneficiaryAddress?: InputMaybe<Order_By>;
  fromBeneficiaryName?: InputMaybe<Order_By>;
  fromBusinessWalletCurrency?: InputMaybe<Order_By>;
  fromBusinessWalletId?: InputMaybe<Order_By>;
  fromCustomerCountry?: InputMaybe<Order_By>;
  fromCustomerFirstName?: InputMaybe<Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  fromCustomerLastName?: InputMaybe<Order_By>;
  fromCustomerUsername?: InputMaybe<Order_By>;
  fromLine1?: InputMaybe<Order_By>;
  fromLine2?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  parentLedgerId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  toAccountCurrency?: InputMaybe<Order_By>;
  toAccountIBAN?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  toAccountNickname?: InputMaybe<Order_By>;
  toBankAddress?: InputMaybe<Order_By>;
  toBankName?: InputMaybe<Order_By>;
  toBankNickname?: InputMaybe<Order_By>;
  toBankSwiftCode?: InputMaybe<Order_By>;
  toBeneficiaryAddress?: InputMaybe<Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  toBeneficiaryName?: InputMaybe<Order_By>;
  toBusinessWalletCurrency?: InputMaybe<Order_By>;
  toBusinessWalletId?: InputMaybe<Order_By>;
  toLine1?: InputMaybe<Order_By>;
  toLine2?: InputMaybe<Order_By>;
  transactionSubType?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ledgers_Min_Fields = {
  __typename?: 'ledgers_min_fields';
  adjustmentId?: Maybe<Scalars['uuid']>;
  amount?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  creditAmount?: Maybe<Scalars['Int']>;
  currency?: Maybe<Scalars['String']>;
  currencyExchangeId?: Maybe<Scalars['uuid']>;
  debitAmount?: Maybe<Scalars['Int']>;
  depositId?: Maybe<Scalars['uuid']>;
  description?: Maybe<Scalars['String']>;
  finalBalance?: Maybe<Scalars['Int']>;
  finalCreditAmount?: Maybe<Scalars['Int']>;
  finalDebitAmount?: Maybe<Scalars['Int']>;
  fromAccountCurrency?: Maybe<Scalars['String']>;
  fromAccountIBAN?: Maybe<Scalars['String']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  fromAccountNickname?: Maybe<Scalars['String']>;
  fromBankAddress?: Maybe<Scalars['String']>;
  fromBankName?: Maybe<Scalars['String']>;
  fromBankNickname?: Maybe<Scalars['String']>;
  fromBankSwiftCode?: Maybe<Scalars['String']>;
  fromBeneficiaryAddress?: Maybe<Scalars['String']>;
  fromBeneficiaryName?: Maybe<Scalars['String']>;
  fromBusinessWalletCurrency?: Maybe<Scalars['String']>;
  fromBusinessWalletId?: Maybe<Scalars['uuid']>;
  fromCustomerCountry?: Maybe<Scalars['String']>;
  fromCustomerFirstName?: Maybe<Scalars['String']>;
  fromCustomerId?: Maybe<Scalars['uuid']>;
  fromCustomerLastName?: Maybe<Scalars['String']>;
  fromCustomerUsername?: Maybe<Scalars['String']>;
  fromLine1?: Maybe<Scalars['String']>;
  fromLine2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  parentLedgerId?: Maybe<Scalars['uuid']>;
  remarks?: Maybe<Scalars['String']>;
  toAccountCurrency?: Maybe<Scalars['String']>;
  toAccountIBAN?: Maybe<Scalars['String']>;
  toAccountId?: Maybe<Scalars['uuid']>;
  toAccountNickname?: Maybe<Scalars['String']>;
  toBankAddress?: Maybe<Scalars['String']>;
  toBankName?: Maybe<Scalars['String']>;
  toBankNickname?: Maybe<Scalars['String']>;
  toBankSwiftCode?: Maybe<Scalars['String']>;
  toBeneficiaryAddress?: Maybe<Scalars['String']>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  toBeneficiaryName?: Maybe<Scalars['String']>;
  toBusinessWalletCurrency?: Maybe<Scalars['String']>;
  toBusinessWalletId?: Maybe<Scalars['uuid']>;
  toLine1?: Maybe<Scalars['String']>;
  toLine2?: Maybe<Scalars['String']>;
  transactionSubType?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "ledgers" */
export type Ledgers_Min_Order_By = {
  adjustmentId?: InputMaybe<Order_By>;
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  currencyExchangeId?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  fromAccountCurrency?: InputMaybe<Order_By>;
  fromAccountIBAN?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  fromAccountNickname?: InputMaybe<Order_By>;
  fromBankAddress?: InputMaybe<Order_By>;
  fromBankName?: InputMaybe<Order_By>;
  fromBankNickname?: InputMaybe<Order_By>;
  fromBankSwiftCode?: InputMaybe<Order_By>;
  fromBeneficiaryAddress?: InputMaybe<Order_By>;
  fromBeneficiaryName?: InputMaybe<Order_By>;
  fromBusinessWalletCurrency?: InputMaybe<Order_By>;
  fromBusinessWalletId?: InputMaybe<Order_By>;
  fromCustomerCountry?: InputMaybe<Order_By>;
  fromCustomerFirstName?: InputMaybe<Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  fromCustomerLastName?: InputMaybe<Order_By>;
  fromCustomerUsername?: InputMaybe<Order_By>;
  fromLine1?: InputMaybe<Order_By>;
  fromLine2?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  parentLedgerId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  toAccountCurrency?: InputMaybe<Order_By>;
  toAccountIBAN?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  toAccountNickname?: InputMaybe<Order_By>;
  toBankAddress?: InputMaybe<Order_By>;
  toBankName?: InputMaybe<Order_By>;
  toBankNickname?: InputMaybe<Order_By>;
  toBankSwiftCode?: InputMaybe<Order_By>;
  toBeneficiaryAddress?: InputMaybe<Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  toBeneficiaryName?: InputMaybe<Order_By>;
  toBusinessWalletCurrency?: InputMaybe<Order_By>;
  toBusinessWalletId?: InputMaybe<Order_By>;
  toLine1?: InputMaybe<Order_By>;
  toLine2?: InputMaybe<Order_By>;
  transactionSubType?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ledgers" */
export type Ledgers_Mutation_Response = {
  __typename?: 'ledgers_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Ledgers>;
};

/** input type for inserting object relation for remote table "ledgers" */
export type Ledgers_Obj_Rel_Insert_Input = {
  data: Ledgers_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Ledgers_On_Conflict>;
};

/** on_conflict condition type for table "ledgers" */
export type Ledgers_On_Conflict = {
  constraint: Ledgers_Constraint;
  update_columns?: Array<Ledgers_Update_Column>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};

/** Ordering options when selecting data from "ledgers". */
export type Ledgers_Order_By = {
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Order_By>;
  adjustment?: InputMaybe<Adjustments_Order_By>;
  adjustmentId?: InputMaybe<Order_By>;
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  childLedgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  currencyExchange?: InputMaybe<CurrencyExchange_Order_By>;
  currencyExchangeId?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  deposit?: InputMaybe<Deposits_Order_By>;
  depositId?: InputMaybe<Order_By>;
  depositType?: InputMaybe<Order_By>;
  depositTypeByDeposittype?: InputMaybe<DepositTypes_Order_By>;
  description?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  fromAccountCurrency?: InputMaybe<Order_By>;
  fromAccountIBAN?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  fromAccountNickname?: InputMaybe<Order_By>;
  fromBankAddress?: InputMaybe<Order_By>;
  fromBankName?: InputMaybe<Order_By>;
  fromBankNickname?: InputMaybe<Order_By>;
  fromBankSwiftCode?: InputMaybe<Order_By>;
  fromBeneficiaryAddress?: InputMaybe<Order_By>;
  fromBeneficiaryName?: InputMaybe<Order_By>;
  fromBusinessWalletCurrency?: InputMaybe<Order_By>;
  fromBusinessWalletId?: InputMaybe<Order_By>;
  fromCustomerCountry?: InputMaybe<Order_By>;
  fromCustomerFirstName?: InputMaybe<Order_By>;
  fromCustomerId?: InputMaybe<Order_By>;
  fromCustomerLastName?: InputMaybe<Order_By>;
  fromCustomerUsername?: InputMaybe<Order_By>;
  fromLine1?: InputMaybe<Order_By>;
  fromLine2?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  ledgerType?: InputMaybe<Order_By>;
  ledgerTypeByLedgertype?: InputMaybe<LedgerTypes_Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  parentLedger?: InputMaybe<Ledgers_Order_By>;
  parentLedgerId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  toAccountCurrency?: InputMaybe<Order_By>;
  toAccountIBAN?: InputMaybe<Order_By>;
  toAccountId?: InputMaybe<Order_By>;
  toAccountNickname?: InputMaybe<Order_By>;
  toBankAddress?: InputMaybe<Order_By>;
  toBankName?: InputMaybe<Order_By>;
  toBankNickname?: InputMaybe<Order_By>;
  toBankSwiftCode?: InputMaybe<Order_By>;
  toBeneficiaryAddress?: InputMaybe<Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  toBeneficiaryName?: InputMaybe<Order_By>;
  toBusinessWalletCurrency?: InputMaybe<Order_By>;
  toBusinessWalletId?: InputMaybe<Order_By>;
  toLine1?: InputMaybe<Order_By>;
  toLine2?: InputMaybe<Order_By>;
  transactionSubType?: InputMaybe<Order_By>;
  transactionType?: InputMaybe<Order_By>;
  transactionTypeByTransactiontype?: InputMaybe<TransactionTypes_Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  withdrawal?: InputMaybe<Withdrawals_Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
  withdrawalType?: InputMaybe<Order_By>;
  withdrawalTypeByWithdrawaltype?: InputMaybe<WithdrawalTypes_Order_By>;
};

/** primary key columns input for table: ledgers */
export type Ledgers_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Ledgers_Prepend_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "ledgers" */
export enum Ledgers_Select_Column {
  /** column name */
  AdjustmentId = 'adjustmentId',
  /** column name */
  Amount = 'amount',
  /** column name */
  Balance = 'balance',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreditAmount = 'creditAmount',
  /** column name */
  Currency = 'currency',
  /** column name */
  CurrencyExchangeId = 'currencyExchangeId',
  /** column name */
  DebitAmount = 'debitAmount',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  DepositType = 'depositType',
  /** column name */
  Description = 'description',
  /** column name */
  FinalBalance = 'finalBalance',
  /** column name */
  FinalCreditAmount = 'finalCreditAmount',
  /** column name */
  FinalDebitAmount = 'finalDebitAmount',
  /** column name */
  FromAccountCurrency = 'fromAccountCurrency',
  /** column name */
  FromAccountIban = 'fromAccountIBAN',
  /** column name */
  FromAccountId = 'fromAccountId',
  /** column name */
  FromAccountNickname = 'fromAccountNickname',
  /** column name */
  FromBankAddress = 'fromBankAddress',
  /** column name */
  FromBankName = 'fromBankName',
  /** column name */
  FromBankNickname = 'fromBankNickname',
  /** column name */
  FromBankSwiftCode = 'fromBankSwiftCode',
  /** column name */
  FromBeneficiaryAddress = 'fromBeneficiaryAddress',
  /** column name */
  FromBeneficiaryName = 'fromBeneficiaryName',
  /** column name */
  FromBusinessWalletCurrency = 'fromBusinessWalletCurrency',
  /** column name */
  FromBusinessWalletId = 'fromBusinessWalletId',
  /** column name */
  FromCustomerCountry = 'fromCustomerCountry',
  /** column name */
  FromCustomerFirstName = 'fromCustomerFirstName',
  /** column name */
  FromCustomerId = 'fromCustomerId',
  /** column name */
  FromCustomerLastName = 'fromCustomerLastName',
  /** column name */
  FromCustomerUsername = 'fromCustomerUsername',
  /** column name */
  FromLine1 = 'fromLine1',
  /** column name */
  FromLine2 = 'fromLine2',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  LedgerType = 'ledgerType',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  ParentLedgerId = 'parentLedgerId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  Tags = 'tags',
  /** column name */
  ToAccountCurrency = 'toAccountCurrency',
  /** column name */
  ToAccountIban = 'toAccountIBAN',
  /** column name */
  ToAccountId = 'toAccountId',
  /** column name */
  ToAccountNickname = 'toAccountNickname',
  /** column name */
  ToBankAddress = 'toBankAddress',
  /** column name */
  ToBankName = 'toBankName',
  /** column name */
  ToBankNickname = 'toBankNickname',
  /** column name */
  ToBankSwiftCode = 'toBankSwiftCode',
  /** column name */
  ToBeneficiaryAddress = 'toBeneficiaryAddress',
  /** column name */
  ToBeneficiaryId = 'toBeneficiaryId',
  /** column name */
  ToBeneficiaryName = 'toBeneficiaryName',
  /** column name */
  ToBusinessWalletCurrency = 'toBusinessWalletCurrency',
  /** column name */
  ToBusinessWalletId = 'toBusinessWalletId',
  /** column name */
  ToLine1 = 'toLine1',
  /** column name */
  ToLine2 = 'toLine2',
  /** column name */
  TransactionSubType = 'transactionSubType',
  /** column name */
  TransactionType = 'transactionType',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  WithdrawalId = 'withdrawalId',
  /** column name */
  WithdrawalType = 'withdrawalType'
}

/** input type for updating data in table "ledgers" */
export type Ledgers_Set_Input = {
  adjustmentId?: InputMaybe<Scalars['uuid']>;
  amount?: InputMaybe<Scalars['numeric']>;
  balance?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  creditAmount?: InputMaybe<Scalars['Int']>;
  currency?: InputMaybe<Scalars['String']>;
  currencyExchangeId?: InputMaybe<Scalars['uuid']>;
  debitAmount?: InputMaybe<Scalars['Int']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  depositType?: InputMaybe<DepositTypes_Enum>;
  description?: InputMaybe<Scalars['String']>;
  finalBalance?: InputMaybe<Scalars['Int']>;
  finalCreditAmount?: InputMaybe<Scalars['Int']>;
  finalDebitAmount?: InputMaybe<Scalars['Int']>;
  fromAccountCurrency?: InputMaybe<Scalars['String']>;
  fromAccountIBAN?: InputMaybe<Scalars['String']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAccountNickname?: InputMaybe<Scalars['String']>;
  fromBankAddress?: InputMaybe<Scalars['String']>;
  fromBankName?: InputMaybe<Scalars['String']>;
  fromBankNickname?: InputMaybe<Scalars['String']>;
  fromBankSwiftCode?: InputMaybe<Scalars['String']>;
  fromBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  fromBeneficiaryName?: InputMaybe<Scalars['String']>;
  fromBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCustomerCountry?: InputMaybe<Scalars['String']>;
  fromCustomerFirstName?: InputMaybe<Scalars['String']>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  fromCustomerLastName?: InputMaybe<Scalars['String']>;
  fromCustomerUsername?: InputMaybe<Scalars['String']>;
  fromLine1?: InputMaybe<Scalars['String']>;
  fromLine2?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  ledgerType?: InputMaybe<LedgerTypes_Enum>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  parentLedgerId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAccountCurrency?: InputMaybe<Scalars['String']>;
  toAccountIBAN?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAccountNickname?: InputMaybe<Scalars['String']>;
  toBankAddress?: InputMaybe<Scalars['String']>;
  toBankName?: InputMaybe<Scalars['String']>;
  toBankNickname?: InputMaybe<Scalars['String']>;
  toBankSwiftCode?: InputMaybe<Scalars['String']>;
  toBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  toBeneficiaryName?: InputMaybe<Scalars['String']>;
  toBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  toLine1?: InputMaybe<Scalars['String']>;
  toLine2?: InputMaybe<Scalars['String']>;
  transactionSubType?: InputMaybe<Scalars['String']>;
  transactionType?: InputMaybe<TransactionTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Enum>;
};

/** aggregate stddev on columns */
export type Ledgers_Stddev_Fields = {
  __typename?: 'ledgers_stddev_fields';
  amount?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  finalBalance?: Maybe<Scalars['Float']>;
  finalCreditAmount?: Maybe<Scalars['Float']>;
  finalDebitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ledgers" */
export type Ledgers_Stddev_Order_By = {
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ledgers_Stddev_Pop_Fields = {
  __typename?: 'ledgers_stddev_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  finalBalance?: Maybe<Scalars['Float']>;
  finalCreditAmount?: Maybe<Scalars['Float']>;
  finalDebitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ledgers" */
export type Ledgers_Stddev_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ledgers_Stddev_Samp_Fields = {
  __typename?: 'ledgers_stddev_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  finalBalance?: Maybe<Scalars['Float']>;
  finalCreditAmount?: Maybe<Scalars['Float']>;
  finalDebitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ledgers" */
export type Ledgers_Stddev_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ledgers" */
export type Ledgers_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ledgers_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ledgers_Stream_Cursor_Value_Input = {
  adjustmentId?: InputMaybe<Scalars['uuid']>;
  amount?: InputMaybe<Scalars['numeric']>;
  balance?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  creditAmount?: InputMaybe<Scalars['Int']>;
  currency?: InputMaybe<Scalars['String']>;
  currencyExchangeId?: InputMaybe<Scalars['uuid']>;
  debitAmount?: InputMaybe<Scalars['Int']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  depositType?: InputMaybe<DepositTypes_Enum>;
  description?: InputMaybe<Scalars['String']>;
  finalBalance?: InputMaybe<Scalars['Int']>;
  finalCreditAmount?: InputMaybe<Scalars['Int']>;
  finalDebitAmount?: InputMaybe<Scalars['Int']>;
  fromAccountCurrency?: InputMaybe<Scalars['String']>;
  fromAccountIBAN?: InputMaybe<Scalars['String']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  fromAccountNickname?: InputMaybe<Scalars['String']>;
  fromBankAddress?: InputMaybe<Scalars['String']>;
  fromBankName?: InputMaybe<Scalars['String']>;
  fromBankNickname?: InputMaybe<Scalars['String']>;
  fromBankSwiftCode?: InputMaybe<Scalars['String']>;
  fromBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  fromBeneficiaryName?: InputMaybe<Scalars['String']>;
  fromBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  fromBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  fromCustomerCountry?: InputMaybe<Scalars['String']>;
  fromCustomerFirstName?: InputMaybe<Scalars['String']>;
  fromCustomerId?: InputMaybe<Scalars['uuid']>;
  fromCustomerLastName?: InputMaybe<Scalars['String']>;
  fromCustomerUsername?: InputMaybe<Scalars['String']>;
  fromLine1?: InputMaybe<Scalars['String']>;
  fromLine2?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  ledgerType?: InputMaybe<LedgerTypes_Enum>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  parentLedgerId?: InputMaybe<Scalars['uuid']>;
  remarks?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAccountCurrency?: InputMaybe<Scalars['String']>;
  toAccountIBAN?: InputMaybe<Scalars['String']>;
  toAccountId?: InputMaybe<Scalars['uuid']>;
  toAccountNickname?: InputMaybe<Scalars['String']>;
  toBankAddress?: InputMaybe<Scalars['String']>;
  toBankName?: InputMaybe<Scalars['String']>;
  toBankNickname?: InputMaybe<Scalars['String']>;
  toBankSwiftCode?: InputMaybe<Scalars['String']>;
  toBeneficiaryAddress?: InputMaybe<Scalars['String']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  toBeneficiaryName?: InputMaybe<Scalars['String']>;
  toBusinessWalletCurrency?: InputMaybe<Scalars['String']>;
  toBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  toLine1?: InputMaybe<Scalars['String']>;
  toLine2?: InputMaybe<Scalars['String']>;
  transactionSubType?: InputMaybe<Scalars['String']>;
  transactionType?: InputMaybe<TransactionTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Enum>;
};

/** aggregate sum on columns */
export type Ledgers_Sum_Fields = {
  __typename?: 'ledgers_sum_fields';
  amount?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['Int']>;
  creditAmount?: Maybe<Scalars['Int']>;
  debitAmount?: Maybe<Scalars['Int']>;
  finalBalance?: Maybe<Scalars['Int']>;
  finalCreditAmount?: Maybe<Scalars['Int']>;
  finalDebitAmount?: Maybe<Scalars['Int']>;
  internalId?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "ledgers" */
export type Ledgers_Sum_Order_By = {
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** update columns of table "ledgers" */
export enum Ledgers_Update_Column {
  /** column name */
  AdjustmentId = 'adjustmentId',
  /** column name */
  Amount = 'amount',
  /** column name */
  Balance = 'balance',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreditAmount = 'creditAmount',
  /** column name */
  Currency = 'currency',
  /** column name */
  CurrencyExchangeId = 'currencyExchangeId',
  /** column name */
  DebitAmount = 'debitAmount',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  DepositType = 'depositType',
  /** column name */
  Description = 'description',
  /** column name */
  FinalBalance = 'finalBalance',
  /** column name */
  FinalCreditAmount = 'finalCreditAmount',
  /** column name */
  FinalDebitAmount = 'finalDebitAmount',
  /** column name */
  FromAccountCurrency = 'fromAccountCurrency',
  /** column name */
  FromAccountIban = 'fromAccountIBAN',
  /** column name */
  FromAccountId = 'fromAccountId',
  /** column name */
  FromAccountNickname = 'fromAccountNickname',
  /** column name */
  FromBankAddress = 'fromBankAddress',
  /** column name */
  FromBankName = 'fromBankName',
  /** column name */
  FromBankNickname = 'fromBankNickname',
  /** column name */
  FromBankSwiftCode = 'fromBankSwiftCode',
  /** column name */
  FromBeneficiaryAddress = 'fromBeneficiaryAddress',
  /** column name */
  FromBeneficiaryName = 'fromBeneficiaryName',
  /** column name */
  FromBusinessWalletCurrency = 'fromBusinessWalletCurrency',
  /** column name */
  FromBusinessWalletId = 'fromBusinessWalletId',
  /** column name */
  FromCustomerCountry = 'fromCustomerCountry',
  /** column name */
  FromCustomerFirstName = 'fromCustomerFirstName',
  /** column name */
  FromCustomerId = 'fromCustomerId',
  /** column name */
  FromCustomerLastName = 'fromCustomerLastName',
  /** column name */
  FromCustomerUsername = 'fromCustomerUsername',
  /** column name */
  FromLine1 = 'fromLine1',
  /** column name */
  FromLine2 = 'fromLine2',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  LedgerType = 'ledgerType',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  ParentLedgerId = 'parentLedgerId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  Tags = 'tags',
  /** column name */
  ToAccountCurrency = 'toAccountCurrency',
  /** column name */
  ToAccountIban = 'toAccountIBAN',
  /** column name */
  ToAccountId = 'toAccountId',
  /** column name */
  ToAccountNickname = 'toAccountNickname',
  /** column name */
  ToBankAddress = 'toBankAddress',
  /** column name */
  ToBankName = 'toBankName',
  /** column name */
  ToBankNickname = 'toBankNickname',
  /** column name */
  ToBankSwiftCode = 'toBankSwiftCode',
  /** column name */
  ToBeneficiaryAddress = 'toBeneficiaryAddress',
  /** column name */
  ToBeneficiaryId = 'toBeneficiaryId',
  /** column name */
  ToBeneficiaryName = 'toBeneficiaryName',
  /** column name */
  ToBusinessWalletCurrency = 'toBusinessWalletCurrency',
  /** column name */
  ToBusinessWalletId = 'toBusinessWalletId',
  /** column name */
  ToLine1 = 'toLine1',
  /** column name */
  ToLine2 = 'toLine2',
  /** column name */
  TransactionSubType = 'transactionSubType',
  /** column name */
  TransactionType = 'transactionType',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  WithdrawalId = 'withdrawalId',
  /** column name */
  WithdrawalType = 'withdrawalType'
}

export type Ledgers_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Ledgers_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Ledgers_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Ledgers_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Ledgers_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ledgers_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Ledgers_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ledgers_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ledgers_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ledgers_Var_Pop_Fields = {
  __typename?: 'ledgers_var_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  finalBalance?: Maybe<Scalars['Float']>;
  finalCreditAmount?: Maybe<Scalars['Float']>;
  finalDebitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ledgers" */
export type Ledgers_Var_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ledgers_Var_Samp_Fields = {
  __typename?: 'ledgers_var_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  finalBalance?: Maybe<Scalars['Float']>;
  finalCreditAmount?: Maybe<Scalars['Float']>;
  finalDebitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ledgers" */
export type Ledgers_Var_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ledgers_Variance_Fields = {
  __typename?: 'ledgers_variance_fields';
  amount?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  creditAmount?: Maybe<Scalars['Float']>;
  debitAmount?: Maybe<Scalars['Float']>;
  finalBalance?: Maybe<Scalars['Float']>;
  finalCreditAmount?: Maybe<Scalars['Float']>;
  finalDebitAmount?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ledgers" */
export type Ledgers_Variance_Order_By = {
  amount?: InputMaybe<Order_By>;
  balance?: InputMaybe<Order_By>;
  creditAmount?: InputMaybe<Order_By>;
  debitAmount?: InputMaybe<Order_By>;
  finalBalance?: InputMaybe<Order_By>;
  finalCreditAmount?: InputMaybe<Order_By>;
  finalDebitAmount?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** columns and relationships of "messageTypes" */
export type MessageTypes = {
  __typename?: 'messageTypes';
  id: Scalars['String'];
  /** An array relationship */
  messages: Array<Messages>;
  /** An aggregate relationship */
  messages_aggregate: Messages_Aggregate;
};


/** columns and relationships of "messageTypes" */
export type MessageTypesMessagesArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


/** columns and relationships of "messageTypes" */
export type MessageTypesMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};

/** aggregated selection of "messageTypes" */
export type MessageTypes_Aggregate = {
  __typename?: 'messageTypes_aggregate';
  aggregate?: Maybe<MessageTypes_Aggregate_Fields>;
  nodes: Array<MessageTypes>;
};

/** aggregate fields of "messageTypes" */
export type MessageTypes_Aggregate_Fields = {
  __typename?: 'messageTypes_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<MessageTypes_Max_Fields>;
  min?: Maybe<MessageTypes_Min_Fields>;
};


/** aggregate fields of "messageTypes" */
export type MessageTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<MessageTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "messageTypes". All fields are combined with a logical 'AND'. */
export type MessageTypes_Bool_Exp = {
  _and?: InputMaybe<Array<MessageTypes_Bool_Exp>>;
  _not?: InputMaybe<MessageTypes_Bool_Exp>;
  _or?: InputMaybe<Array<MessageTypes_Bool_Exp>>;
  id?: InputMaybe<String_Comparison_Exp>;
  messages?: InputMaybe<Messages_Bool_Exp>;
  messages_aggregate?: InputMaybe<Messages_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "messageTypes" */
export enum MessageTypes_Constraint {
  /** unique or primary key constraint on columns "id" */
  MessageTypesPkey = 'messageTypes_pkey'
}

export enum MessageTypes_Enum {
  Document = 'DOCUMENT',
  Image = 'IMAGE',
  Text = 'TEXT'
}

/** Boolean expression to compare columns of type "messageTypes_enum". All fields are combined with logical 'AND'. */
export type MessageTypes_Enum_Comparison_Exp = {
  _eq?: InputMaybe<MessageTypes_Enum>;
  _in?: InputMaybe<Array<MessageTypes_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<MessageTypes_Enum>;
  _nin?: InputMaybe<Array<MessageTypes_Enum>>;
};

/** input type for inserting data into table "messageTypes" */
export type MessageTypes_Insert_Input = {
  id?: InputMaybe<Scalars['String']>;
  messages?: InputMaybe<Messages_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type MessageTypes_Max_Fields = {
  __typename?: 'messageTypes_max_fields';
  id?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type MessageTypes_Min_Fields = {
  __typename?: 'messageTypes_min_fields';
  id?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "messageTypes" */
export type MessageTypes_Mutation_Response = {
  __typename?: 'messageTypes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<MessageTypes>;
};

/** input type for inserting object relation for remote table "messageTypes" */
export type MessageTypes_Obj_Rel_Insert_Input = {
  data: MessageTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<MessageTypes_On_Conflict>;
};

/** on_conflict condition type for table "messageTypes" */
export type MessageTypes_On_Conflict = {
  constraint: MessageTypes_Constraint;
  update_columns?: Array<MessageTypes_Update_Column>;
  where?: InputMaybe<MessageTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "messageTypes". */
export type MessageTypes_Order_By = {
  id?: InputMaybe<Order_By>;
  messages_aggregate?: InputMaybe<Messages_Aggregate_Order_By>;
};

/** primary key columns input for table: messageTypes */
export type MessageTypes_Pk_Columns_Input = {
  id: Scalars['String'];
};

/** select columns of table "messageTypes" */
export enum MessageTypes_Select_Column {
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "messageTypes" */
export type MessageTypes_Set_Input = {
  id?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "messageTypes" */
export type MessageTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: MessageTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type MessageTypes_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "messageTypes" */
export enum MessageTypes_Update_Column {
  /** column name */
  Id = 'id'
}

export type MessageTypes_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<MessageTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: MessageTypes_Bool_Exp;
};

/** columns and relationships of "messages" */
export type Messages = {
  __typename?: 'messages';
  adminId?: Maybe<Scalars['uuid']>;
  content: Scalars['String'];
  /** An object relationship */
  conversation: Conversations;
  conversationId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  merchant: Array<Merchant>;
  merchantId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  message?: Maybe<Messages>;
  /** An object relationship */
  messageType: MessageTypes;
  /** An array relationship */
  messages: Array<Messages>;
  /** An aggregate relationship */
  messages_aggregate: Messages_Aggregate;
  parentMessageId?: Maybe<Scalars['uuid']>;
  type: MessageTypes_Enum;
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "messages" */
export type MessagesMerchantArgs = {
  options?: InputMaybe<MerchantOptions>;
  where?: InputMaybe<MerchantWhere_Remote_Rel_Messagesmerchant>;
};


/** columns and relationships of "messages" */
export type MessagesMessagesArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


/** columns and relationships of "messages" */
export type MessagesMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};

/** aggregated selection of "messages" */
export type Messages_Aggregate = {
  __typename?: 'messages_aggregate';
  aggregate?: Maybe<Messages_Aggregate_Fields>;
  nodes: Array<Messages>;
};

export type Messages_Aggregate_Bool_Exp = {
  count?: InputMaybe<Messages_Aggregate_Bool_Exp_Count>;
};

export type Messages_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Messages_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Messages_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "messages" */
export type Messages_Aggregate_Fields = {
  __typename?: 'messages_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Messages_Max_Fields>;
  min?: Maybe<Messages_Min_Fields>;
};


/** aggregate fields of "messages" */
export type Messages_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Messages_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "messages" */
export type Messages_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Messages_Max_Order_By>;
  min?: InputMaybe<Messages_Min_Order_By>;
};

/** input type for inserting array relation for remote table "messages" */
export type Messages_Arr_Rel_Insert_Input = {
  data: Array<Messages_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Messages_On_Conflict>;
};

/** Boolean expression to filter rows from the table "messages". All fields are combined with a logical 'AND'. */
export type Messages_Bool_Exp = {
  _and?: InputMaybe<Array<Messages_Bool_Exp>>;
  _not?: InputMaybe<Messages_Bool_Exp>;
  _or?: InputMaybe<Array<Messages_Bool_Exp>>;
  adminId?: InputMaybe<Uuid_Comparison_Exp>;
  content?: InputMaybe<String_Comparison_Exp>;
  conversation?: InputMaybe<Conversations_Bool_Exp>;
  conversationId?: InputMaybe<Uuid_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  merchantId?: InputMaybe<Uuid_Comparison_Exp>;
  message?: InputMaybe<Messages_Bool_Exp>;
  messageType?: InputMaybe<MessageTypes_Bool_Exp>;
  messages?: InputMaybe<Messages_Bool_Exp>;
  messages_aggregate?: InputMaybe<Messages_Aggregate_Bool_Exp>;
  parentMessageId?: InputMaybe<Uuid_Comparison_Exp>;
  type?: InputMaybe<MessageTypes_Enum_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "messages" */
export enum Messages_Constraint {
  /** unique or primary key constraint on columns "id" */
  MessagesPkey = 'messages_pkey'
}

/** input type for inserting data into table "messages" */
export type Messages_Insert_Input = {
  adminId?: InputMaybe<Scalars['uuid']>;
  content?: InputMaybe<Scalars['String']>;
  conversation?: InputMaybe<Conversations_Obj_Rel_Insert_Input>;
  conversationId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  merchantId?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Messages_Obj_Rel_Insert_Input>;
  messageType?: InputMaybe<MessageTypes_Obj_Rel_Insert_Input>;
  messages?: InputMaybe<Messages_Arr_Rel_Insert_Input>;
  parentMessageId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<MessageTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Messages_Max_Fields = {
  __typename?: 'messages_max_fields';
  adminId?: Maybe<Scalars['uuid']>;
  content?: Maybe<Scalars['String']>;
  conversationId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  merchantId?: Maybe<Scalars['uuid']>;
  parentMessageId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "messages" */
export type Messages_Max_Order_By = {
  adminId?: InputMaybe<Order_By>;
  content?: InputMaybe<Order_By>;
  conversationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  merchantId?: InputMaybe<Order_By>;
  parentMessageId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Messages_Min_Fields = {
  __typename?: 'messages_min_fields';
  adminId?: Maybe<Scalars['uuid']>;
  content?: Maybe<Scalars['String']>;
  conversationId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  merchantId?: Maybe<Scalars['uuid']>;
  parentMessageId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "messages" */
export type Messages_Min_Order_By = {
  adminId?: InputMaybe<Order_By>;
  content?: InputMaybe<Order_By>;
  conversationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  merchantId?: InputMaybe<Order_By>;
  parentMessageId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "messages" */
export type Messages_Mutation_Response = {
  __typename?: 'messages_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Messages>;
};

/** input type for inserting object relation for remote table "messages" */
export type Messages_Obj_Rel_Insert_Input = {
  data: Messages_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Messages_On_Conflict>;
};

/** on_conflict condition type for table "messages" */
export type Messages_On_Conflict = {
  constraint: Messages_Constraint;
  update_columns?: Array<Messages_Update_Column>;
  where?: InputMaybe<Messages_Bool_Exp>;
};

/** Ordering options when selecting data from "messages". */
export type Messages_Order_By = {
  adminId?: InputMaybe<Order_By>;
  content?: InputMaybe<Order_By>;
  conversation?: InputMaybe<Conversations_Order_By>;
  conversationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  merchantId?: InputMaybe<Order_By>;
  message?: InputMaybe<Messages_Order_By>;
  messageType?: InputMaybe<MessageTypes_Order_By>;
  messages_aggregate?: InputMaybe<Messages_Aggregate_Order_By>;
  parentMessageId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: messages */
export type Messages_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "messages" */
export enum Messages_Select_Column {
  /** column name */
  AdminId = 'adminId',
  /** column name */
  Content = 'content',
  /** column name */
  ConversationId = 'conversationId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  MerchantId = 'merchantId',
  /** column name */
  ParentMessageId = 'parentMessageId',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "messages" */
export type Messages_Set_Input = {
  adminId?: InputMaybe<Scalars['uuid']>;
  content?: InputMaybe<Scalars['String']>;
  conversationId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  merchantId?: InputMaybe<Scalars['uuid']>;
  parentMessageId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<MessageTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** Streaming cursor of the table "messages" */
export type Messages_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Messages_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Messages_Stream_Cursor_Value_Input = {
  adminId?: InputMaybe<Scalars['uuid']>;
  content?: InputMaybe<Scalars['String']>;
  conversationId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  merchantId?: InputMaybe<Scalars['uuid']>;
  parentMessageId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<MessageTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "messages" */
export enum Messages_Update_Column {
  /** column name */
  AdminId = 'adminId',
  /** column name */
  Content = 'content',
  /** column name */
  ConversationId = 'conversationId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  MerchantId = 'merchantId',
  /** column name */
  ParentMessageId = 'parentMessageId',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type Messages_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Messages_Set_Input>;
  /** filter the rows which have to be updated */
  where: Messages_Bool_Exp;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  addAdjustment?: Maybe<BasicResponse>;
  addBusiness?: Maybe<AddBusinessOutput>;
  addBusinessWallet?: Maybe<BasicResponse>;
  createAccounts: CreateAccountsMutationResponse;
  createAlternateMethodSolutions: CreateAlternateMethodSolutionsMutationResponse;
  createApiKey?: Maybe<CreateApiKeyResponse>;
  createBankWireSolutions: CreateBankWireSolutionsMutationResponse;
  createBanks: CreateBanksMutationResponse;
  createBaseCurrencyConversionRates: CreateBaseCurrencyConversionRatesMutationResponse;
  createBeneficiaries: CreateBeneficiariesMutationResponse;
  createBrands: CreateBrandsMutationResponse;
  createBusinessCurrencyConversionFees: CreateBusinessCurrencyConversionFeesMutationResponse;
  createBusinessCurrencyConversionMarkups: CreateBusinessCurrencyConversionMarkupsMutationResponse;
  createBusinessDocuments: CreateBusinessDocumentsMutationResponse;
  createBusinessOwners: CreateBusinessOwnersMutationResponse;
  createBusinessSolutions: CreateBusinessSolutionsMutationResponse;
  createBusinessTypes: CreateBusinessTypesMutationResponse;
  createBusinessWalletBaseCommissions: CreateBusinessWalletBaseCommissionsMutationResponse;
  createBusinessWalletJoiningFees: CreateBusinessWalletJoiningFeesMutationResponse;
  createBusinessWalletMaintenanceFees: CreateBusinessWalletMaintenanceFeesMutationResponse;
  createBusinessWalletOverDraftLimits: CreateBusinessWalletOverDraftLimitsMutationResponse;
  createBusinessWalletPayoutFees: CreateBusinessWalletPayoutFeesMutationResponse;
  createBusinessWalletRollingReserveFees: CreateBusinessWalletRollingReserveFeesMutationResponse;
  createBusinessWalletSettlementFees: CreateBusinessWalletSettlementFeesMutationResponse;
  createBusinessWalletTierCommissions: CreateBusinessWalletTierCommissionsMutationResponse;
  createBusinessWallets: CreateBusinessWalletsMutationResponse;
  createBusinesses: CreateBusinessesMutationResponse;
  createCountries: CreateCountriesMutationResponse;
  createCreatedByUsers: CreateCreatedByUsersMutationResponse;
  createCreditCartdProcessingSolutions: CreateCreditCartdProcessingSolutionsMutationResponse;
  createCryptoCurrencySolutions: CreateCryptoCurrencySolutionsMutationResponse;
  createCurrencies: CreateCurrenciesMutationResponse;
  createCurrencyExchange: BasicResponse;
  createCustomers: CreateCustomersMutationResponse;
  createDefaultBaseCommissions: CreateDefaultBaseCommissionsMutationResponse;
  createDefaultCurrencyConversionFees: CreateDefaultCurrencyConversionFeesMutationResponse;
  createDefaultCurrencyConversionMarkups: CreateDefaultCurrencyConversionMarkupsMutationResponse;
  createDefaultJoiningFees: CreateDefaultJoiningFeesMutationResponse;
  createDefaultMaintenanceFees: CreateDefaultMaintenanceFeesMutationResponse;
  createDefaultOverDraftLimits: CreateDefaultOverDraftLimitsMutationResponse;
  createDefaultPayoutFees: CreateDefaultPayoutFeesMutationResponse;
  createDefaultRollingReserveFees: CreateDefaultRollingReserveFeesMutationResponse;
  createDefaultSettlementFees: CreateDefaultSettlementFeesMutationResponse;
  createDefaultTierCommissions: CreateDefaultTierCommissionsMutationResponse;
  createDeposits?: Maybe<CreateDepositOutput>;
  createFeaturePermissions: CreateFeaturePermissionsMutationResponse;
  createGraphDataNeo4JS: CreateGraphDataNeo4JsMutationResponse;
  createIntermediaryAccounts: CreateIntermediaryAccountsMutationResponse;
  createMarketRegions: CreateMarketRegionsMutationResponse;
  createMerchants: CreateMerchantsMutationResponse;
  createOrganisationTypes: CreateOrganisationTypesMutationResponse;
  createPersonalDocuments: CreatePersonalDocumentsMutationResponse;
  createSubAdmins: CreateSubAdminsMutationResponse;
  createSuperAdmins: CreateSuperAdminsMutationResponse;
  createTeam?: Maybe<BasicResponse>;
  createTeamCommonPermisions: CreateTeamCommonPermisionsMutationResponse;
  createTeamMembers: CreateTeamMembersMutationResponse;
  createTeams: CreateTeamsMutationResponse;
  createUser?: Maybe<BasicResponse>;
  createWithdrawals?: Maybe<CreateWithdrawalOutput>;
  deleteAccounts: DeleteInfo;
  deleteAlternateMethodSolutions: DeleteInfo;
  deleteBankWireSolutions: DeleteInfo;
  deleteBanks: DeleteInfo;
  deleteBaseCurrencyConversionRates: DeleteInfo;
  deleteBeneficiaries: DeleteInfo;
  deleteBrands: DeleteInfo;
  deleteBusinessCurrencyConversionFees: DeleteInfo;
  deleteBusinessCurrencyConversionMarkups: DeleteInfo;
  deleteBusinessDocuments: DeleteInfo;
  deleteBusinessOwners: DeleteInfo;
  deleteBusinessSolutions: DeleteInfo;
  deleteBusinessTypes: DeleteInfo;
  deleteBusinessWalletBaseCommissions: DeleteInfo;
  deleteBusinessWalletJoiningFees: DeleteInfo;
  deleteBusinessWalletMaintenanceFees: DeleteInfo;
  deleteBusinessWalletOverDraftLimits: DeleteInfo;
  deleteBusinessWalletPayoutFees: DeleteInfo;
  deleteBusinessWalletRollingReserveFees: DeleteInfo;
  deleteBusinessWalletSettlementFees: DeleteInfo;
  deleteBusinessWalletTierCommissions: DeleteInfo;
  deleteBusinessWallets: DeleteInfo;
  deleteBusinesses: DeleteInfo;
  deleteCountries: DeleteInfo;
  deleteCreatedByUsers: DeleteInfo;
  deleteCreditCartdProcessingSolutions: DeleteInfo;
  deleteCryptoCurrencySolutions: DeleteInfo;
  deleteCurrencies: DeleteInfo;
  deleteCustomers: DeleteInfo;
  deleteDefaultBaseCommissions: DeleteInfo;
  deleteDefaultCurrencyConversionFees: DeleteInfo;
  deleteDefaultCurrencyConversionMarkups: DeleteInfo;
  deleteDefaultJoiningFees: DeleteInfo;
  deleteDefaultMaintenanceFees: DeleteInfo;
  deleteDefaultOverDraftLimits: DeleteInfo;
  deleteDefaultPayoutFees: DeleteInfo;
  deleteDefaultRollingReserveFees: DeleteInfo;
  deleteDefaultSettlementFees: DeleteInfo;
  deleteDefaultTierCommissions: DeleteInfo;
  deleteFeaturePermissions: DeleteInfo;
  deleteGraphDataNeo4JS: DeleteInfo;
  deleteIntermediaryAccounts: DeleteInfo;
  deleteMarketRegions: DeleteInfo;
  deleteMerchants: DeleteInfo;
  deleteOrganisationTypes: DeleteInfo;
  deletePersonalDocuments: DeleteInfo;
  deleteSubAdmins: DeleteInfo;
  deleteSuperAdmins: DeleteInfo;
  deleteTeamCommonPermisions: DeleteInfo;
  deleteTeamMembers: DeleteInfo;
  deleteTeams: DeleteInfo;
  /** delete data from the table: "accountLedgers" */
  delete_accountLedgers?: Maybe<AccountLedgers_Mutation_Response>;
  /** delete single row from the table: "accountLedgers" */
  delete_accountLedgers_by_pk?: Maybe<AccountLedgers>;
  /** delete data from the table: "activityLogs" */
  delete_activityLogs?: Maybe<ActivityLogs_Mutation_Response>;
  /** delete single row from the table: "activityLogs" */
  delete_activityLogs_by_pk?: Maybe<ActivityLogs>;
  /** delete data from the table: "adjustmentTypes" */
  delete_adjustmentTypes?: Maybe<AdjustmentTypes_Mutation_Response>;
  /** delete single row from the table: "adjustmentTypes" */
  delete_adjustmentTypes_by_pk?: Maybe<AdjustmentTypes>;
  /** delete data from the table: "adjustments" */
  delete_adjustments?: Maybe<Adjustments_Mutation_Response>;
  /** delete single row from the table: "adjustments" */
  delete_adjustments_by_pk?: Maybe<Adjustments>;
  /** delete data from the table: "apiTemplates" */
  delete_apiTemplates?: Maybe<ApiTemplates_Mutation_Response>;
  /** delete single row from the table: "apiTemplates" */
  delete_apiTemplates_by_pk?: Maybe<ApiTemplates>;
  /** delete data from the table: "conversationCategories" */
  delete_conversationCategories?: Maybe<ConversationCategories_Mutation_Response>;
  /** delete single row from the table: "conversationCategories" */
  delete_conversationCategories_by_pk?: Maybe<ConversationCategories>;
  /** delete data from the table: "conversationStatus" */
  delete_conversationStatus?: Maybe<ConversationStatus_Mutation_Response>;
  /** delete single row from the table: "conversationStatus" */
  delete_conversationStatus_by_pk?: Maybe<ConversationStatus>;
  /** delete data from the table: "conversations" */
  delete_conversations?: Maybe<Conversations_Mutation_Response>;
  /** delete single row from the table: "conversations" */
  delete_conversations_by_pk?: Maybe<Conversations>;
  /** delete data from the table: "currencyExchange" */
  delete_currencyExchange?: Maybe<CurrencyExchange_Mutation_Response>;
  /** delete single row from the table: "currencyExchange" */
  delete_currencyExchange_by_pk?: Maybe<CurrencyExchange>;
  /** delete data from the table: "dailyCommissionVolume" */
  delete_dailyCommissionVolume?: Maybe<DailyCommissionVolume_Mutation_Response>;
  /** delete single row from the table: "dailyCommissionVolume" */
  delete_dailyCommissionVolume_by_pk?: Maybe<DailyCommissionVolume>;
  /** delete data from the table: "dailyDepositVolume" */
  delete_dailyDepositVolume?: Maybe<DailyDepositVolume_Mutation_Response>;
  /** delete single row from the table: "dailyDepositVolume" */
  delete_dailyDepositVolume_by_pk?: Maybe<DailyDepositVolume>;
  /** delete data from the table: "dailyWithdrawalVolume" */
  delete_dailyWithdrawalVolume?: Maybe<DailyWithdrawalVolume_Mutation_Response>;
  /** delete single row from the table: "dailyWithdrawalVolume" */
  delete_dailyWithdrawalVolume_by_pk?: Maybe<DailyWithdrawalVolume>;
  /** delete data from the table: "depositStatuses" */
  delete_depositStatuses?: Maybe<DepositStatuses_Mutation_Response>;
  /** delete single row from the table: "depositStatuses" */
  delete_depositStatuses_by_pk?: Maybe<DepositStatuses>;
  /** delete data from the table: "depositTypes" */
  delete_depositTypes?: Maybe<DepositTypes_Mutation_Response>;
  /** delete single row from the table: "depositTypes" */
  delete_depositTypes_by_pk?: Maybe<DepositTypes>;
  /** delete data from the table: "deposits" */
  delete_deposits?: Maybe<Deposits_Mutation_Response>;
  /** delete single row from the table: "deposits" */
  delete_deposits_by_pk?: Maybe<Deposits>;
  /** delete data from the table: "featureTypes" */
  delete_featureTypes?: Maybe<FeatureTypes_Mutation_Response>;
  /** delete single row from the table: "featureTypes" */
  delete_featureTypes_by_pk?: Maybe<FeatureTypes>;
  /** delete data from the table: "graphData" */
  delete_graphData?: Maybe<GraphData_Mutation_Response>;
  /** delete data from the table: "internalTransfers" */
  delete_internalTransfers?: Maybe<InternalTransfers_Mutation_Response>;
  /** delete single row from the table: "internalTransfers" */
  delete_internalTransfers_by_pk?: Maybe<InternalTransfers>;
  /** delete data from the table: "ledgerTypes" */
  delete_ledgerTypes?: Maybe<LedgerTypes_Mutation_Response>;
  /** delete single row from the table: "ledgerTypes" */
  delete_ledgerTypes_by_pk?: Maybe<LedgerTypes>;
  /** delete data from the table: "ledgers" */
  delete_ledgers?: Maybe<Ledgers_Mutation_Response>;
  /** delete single row from the table: "ledgers" */
  delete_ledgers_by_pk?: Maybe<Ledgers>;
  /** delete data from the table: "messageTypes" */
  delete_messageTypes?: Maybe<MessageTypes_Mutation_Response>;
  /** delete single row from the table: "messageTypes" */
  delete_messageTypes_by_pk?: Maybe<MessageTypes>;
  /** delete data from the table: "messages" */
  delete_messages?: Maybe<Messages_Mutation_Response>;
  /** delete single row from the table: "messages" */
  delete_messages_by_pk?: Maybe<Messages>;
  /** delete data from the table: "rollingReserveStatuses" */
  delete_rollingReserveStatuses?: Maybe<RollingReserveStatuses_Mutation_Response>;
  /** delete single row from the table: "rollingReserveStatuses" */
  delete_rollingReserveStatuses_by_pk?: Maybe<RollingReserveStatuses>;
  /** delete data from the table: "rollingReserves" */
  delete_rollingReserves?: Maybe<RollingReserves_Mutation_Response>;
  /** delete single row from the table: "rollingReserves" */
  delete_rollingReserves_by_pk?: Maybe<RollingReserves>;
  /** delete data from the table: "tags" */
  delete_tags?: Maybe<Tags_Mutation_Response>;
  /** delete single row from the table: "tags" */
  delete_tags_by_pk?: Maybe<Tags>;
  /** delete data from the table: "taskPriorities" */
  delete_taskPriorities?: Maybe<TaskPriorities_Mutation_Response>;
  /** delete single row from the table: "taskPriorities" */
  delete_taskPriorities_by_pk?: Maybe<TaskPriorities>;
  /** delete data from the table: "taskStatusTypes" */
  delete_taskStatusTypes?: Maybe<TaskStatusTypes_Mutation_Response>;
  /** delete single row from the table: "taskStatusTypes" */
  delete_taskStatusTypes_by_pk?: Maybe<TaskStatusTypes>;
  /** delete data from the table: "tasks" */
  delete_tasks?: Maybe<Tasks_Mutation_Response>;
  /** delete single row from the table: "tasks" */
  delete_tasks_by_pk?: Maybe<Tasks>;
  /** delete data from the table: "textResult" */
  delete_textResult?: Maybe<TextResult_Mutation_Response>;
  /** delete data from the table: "transactionTypes" */
  delete_transactionTypes?: Maybe<TransactionTypes_Mutation_Response>;
  /** delete single row from the table: "transactionTypes" */
  delete_transactionTypes_by_pk?: Maybe<TransactionTypes>;
  /** delete data from the table: "withdrawalStatuses" */
  delete_withdrawalStatuses?: Maybe<WithdrawalStatuses_Mutation_Response>;
  /** delete single row from the table: "withdrawalStatuses" */
  delete_withdrawalStatuses_by_pk?: Maybe<WithdrawalStatuses>;
  /** delete data from the table: "withdrawalTypes" */
  delete_withdrawalTypes?: Maybe<WithdrawalTypes_Mutation_Response>;
  /** delete single row from the table: "withdrawalTypes" */
  delete_withdrawalTypes_by_pk?: Maybe<WithdrawalTypes>;
  /** delete data from the table: "withdrawals" */
  delete_withdrawals?: Maybe<Withdrawals_Mutation_Response>;
  /** delete single row from the table: "withdrawals" */
  delete_withdrawals_by_pk?: Maybe<Withdrawals>;
  /** insert data into the table: "accountLedgers" */
  insert_accountLedgers?: Maybe<AccountLedgers_Mutation_Response>;
  /** insert a single row into the table: "accountLedgers" */
  insert_accountLedgers_one?: Maybe<AccountLedgers>;
  /** insert data into the table: "activityLogs" */
  insert_activityLogs?: Maybe<ActivityLogs_Mutation_Response>;
  /** insert a single row into the table: "activityLogs" */
  insert_activityLogs_one?: Maybe<ActivityLogs>;
  /** insert data into the table: "adjustmentTypes" */
  insert_adjustmentTypes?: Maybe<AdjustmentTypes_Mutation_Response>;
  /** insert a single row into the table: "adjustmentTypes" */
  insert_adjustmentTypes_one?: Maybe<AdjustmentTypes>;
  /** insert data into the table: "adjustments" */
  insert_adjustments?: Maybe<Adjustments_Mutation_Response>;
  /** insert a single row into the table: "adjustments" */
  insert_adjustments_one?: Maybe<Adjustments>;
  /** insert data into the table: "apiTemplates" */
  insert_apiTemplates?: Maybe<ApiTemplates_Mutation_Response>;
  /** insert a single row into the table: "apiTemplates" */
  insert_apiTemplates_one?: Maybe<ApiTemplates>;
  /** insert data into the table: "conversationCategories" */
  insert_conversationCategories?: Maybe<ConversationCategories_Mutation_Response>;
  /** insert a single row into the table: "conversationCategories" */
  insert_conversationCategories_one?: Maybe<ConversationCategories>;
  /** insert data into the table: "conversationStatus" */
  insert_conversationStatus?: Maybe<ConversationStatus_Mutation_Response>;
  /** insert a single row into the table: "conversationStatus" */
  insert_conversationStatus_one?: Maybe<ConversationStatus>;
  /** insert data into the table: "conversations" */
  insert_conversations?: Maybe<Conversations_Mutation_Response>;
  /** insert a single row into the table: "conversations" */
  insert_conversations_one?: Maybe<Conversations>;
  /** insert data into the table: "currencyExchange" */
  insert_currencyExchange?: Maybe<CurrencyExchange_Mutation_Response>;
  /** insert a single row into the table: "currencyExchange" */
  insert_currencyExchange_one?: Maybe<CurrencyExchange>;
  /** insert data into the table: "dailyCommissionVolume" */
  insert_dailyCommissionVolume?: Maybe<DailyCommissionVolume_Mutation_Response>;
  /** insert a single row into the table: "dailyCommissionVolume" */
  insert_dailyCommissionVolume_one?: Maybe<DailyCommissionVolume>;
  /** insert data into the table: "dailyDepositVolume" */
  insert_dailyDepositVolume?: Maybe<DailyDepositVolume_Mutation_Response>;
  /** insert a single row into the table: "dailyDepositVolume" */
  insert_dailyDepositVolume_one?: Maybe<DailyDepositVolume>;
  /** insert data into the table: "dailyWithdrawalVolume" */
  insert_dailyWithdrawalVolume?: Maybe<DailyWithdrawalVolume_Mutation_Response>;
  /** insert a single row into the table: "dailyWithdrawalVolume" */
  insert_dailyWithdrawalVolume_one?: Maybe<DailyWithdrawalVolume>;
  /** insert data into the table: "depositStatuses" */
  insert_depositStatuses?: Maybe<DepositStatuses_Mutation_Response>;
  /** insert a single row into the table: "depositStatuses" */
  insert_depositStatuses_one?: Maybe<DepositStatuses>;
  /** insert data into the table: "depositTypes" */
  insert_depositTypes?: Maybe<DepositTypes_Mutation_Response>;
  /** insert a single row into the table: "depositTypes" */
  insert_depositTypes_one?: Maybe<DepositTypes>;
  /** insert data into the table: "deposits" */
  insert_deposits?: Maybe<Deposits_Mutation_Response>;
  /** insert a single row into the table: "deposits" */
  insert_deposits_one?: Maybe<Deposits>;
  /** insert data into the table: "featureTypes" */
  insert_featureTypes?: Maybe<FeatureTypes_Mutation_Response>;
  /** insert a single row into the table: "featureTypes" */
  insert_featureTypes_one?: Maybe<FeatureTypes>;
  /** insert data into the table: "graphData" */
  insert_graphData?: Maybe<GraphData_Mutation_Response>;
  /** insert a single row into the table: "graphData" */
  insert_graphData_one?: Maybe<GraphData>;
  /** insert data into the table: "internalTransfers" */
  insert_internalTransfers?: Maybe<InternalTransfers_Mutation_Response>;
  /** insert a single row into the table: "internalTransfers" */
  insert_internalTransfers_one?: Maybe<InternalTransfers>;
  /** insert data into the table: "ledgerTypes" */
  insert_ledgerTypes?: Maybe<LedgerTypes_Mutation_Response>;
  /** insert a single row into the table: "ledgerTypes" */
  insert_ledgerTypes_one?: Maybe<LedgerTypes>;
  /** insert data into the table: "ledgers" */
  insert_ledgers?: Maybe<Ledgers_Mutation_Response>;
  /** insert a single row into the table: "ledgers" */
  insert_ledgers_one?: Maybe<Ledgers>;
  /** insert data into the table: "messageTypes" */
  insert_messageTypes?: Maybe<MessageTypes_Mutation_Response>;
  /** insert a single row into the table: "messageTypes" */
  insert_messageTypes_one?: Maybe<MessageTypes>;
  /** insert data into the table: "messages" */
  insert_messages?: Maybe<Messages_Mutation_Response>;
  /** insert a single row into the table: "messages" */
  insert_messages_one?: Maybe<Messages>;
  /** insert data into the table: "rollingReserveStatuses" */
  insert_rollingReserveStatuses?: Maybe<RollingReserveStatuses_Mutation_Response>;
  /** insert a single row into the table: "rollingReserveStatuses" */
  insert_rollingReserveStatuses_one?: Maybe<RollingReserveStatuses>;
  /** insert data into the table: "rollingReserves" */
  insert_rollingReserves?: Maybe<RollingReserves_Mutation_Response>;
  /** insert a single row into the table: "rollingReserves" */
  insert_rollingReserves_one?: Maybe<RollingReserves>;
  /** insert data into the table: "tags" */
  insert_tags?: Maybe<Tags_Mutation_Response>;
  /** insert a single row into the table: "tags" */
  insert_tags_one?: Maybe<Tags>;
  /** insert data into the table: "taskPriorities" */
  insert_taskPriorities?: Maybe<TaskPriorities_Mutation_Response>;
  /** insert a single row into the table: "taskPriorities" */
  insert_taskPriorities_one?: Maybe<TaskPriorities>;
  /** insert data into the table: "taskStatusTypes" */
  insert_taskStatusTypes?: Maybe<TaskStatusTypes_Mutation_Response>;
  /** insert a single row into the table: "taskStatusTypes" */
  insert_taskStatusTypes_one?: Maybe<TaskStatusTypes>;
  /** insert data into the table: "tasks" */
  insert_tasks?: Maybe<Tasks_Mutation_Response>;
  /** insert a single row into the table: "tasks" */
  insert_tasks_one?: Maybe<Tasks>;
  /** insert data into the table: "textResult" */
  insert_textResult?: Maybe<TextResult_Mutation_Response>;
  /** insert a single row into the table: "textResult" */
  insert_textResult_one?: Maybe<TextResult>;
  /** insert data into the table: "transactionTypes" */
  insert_transactionTypes?: Maybe<TransactionTypes_Mutation_Response>;
  /** insert a single row into the table: "transactionTypes" */
  insert_transactionTypes_one?: Maybe<TransactionTypes>;
  /** insert data into the table: "withdrawalStatuses" */
  insert_withdrawalStatuses?: Maybe<WithdrawalStatuses_Mutation_Response>;
  /** insert a single row into the table: "withdrawalStatuses" */
  insert_withdrawalStatuses_one?: Maybe<WithdrawalStatuses>;
  /** insert data into the table: "withdrawalTypes" */
  insert_withdrawalTypes?: Maybe<WithdrawalTypes_Mutation_Response>;
  /** insert a single row into the table: "withdrawalTypes" */
  insert_withdrawalTypes_one?: Maybe<WithdrawalTypes>;
  /** insert data into the table: "withdrawals" */
  insert_withdrawals?: Maybe<Withdrawals_Mutation_Response>;
  /** insert a single row into the table: "withdrawals" */
  insert_withdrawals_one?: Maybe<Withdrawals>;
  releaseRollingReserve: BasicResponse;
  revokeApiKey?: Maybe<RevokeApiKeyResponse>;
  signupMerchant?: Maybe<SignupMerchantOutput>;
  updateAccounts: UpdateAccountsMutationResponse;
  updateAlternateMethodSolutions: UpdateAlternateMethodSolutionsMutationResponse;
  updateBankWireSolutions: UpdateBankWireSolutionsMutationResponse;
  updateBanks: UpdateBanksMutationResponse;
  updateBaseCurrencyConversionRates: UpdateBaseCurrencyConversionRatesMutationResponse;
  updateBeneficiaries: UpdateBeneficiariesMutationResponse;
  updateBrands: UpdateBrandsMutationResponse;
  updateBusinessCurrencyConversionFees: UpdateBusinessCurrencyConversionFeesMutationResponse;
  updateBusinessCurrencyConversionMarkups: UpdateBusinessCurrencyConversionMarkupsMutationResponse;
  updateBusinessDocuments: UpdateBusinessDocumentsMutationResponse;
  updateBusinessOwners: UpdateBusinessOwnersMutationResponse;
  updateBusinessSolutions: UpdateBusinessSolutionsMutationResponse;
  updateBusinessStatus?: Maybe<BasicResponse>;
  updateBusinessTypes: UpdateBusinessTypesMutationResponse;
  updateBusinessWalletBaseCommissions: UpdateBusinessWalletBaseCommissionsMutationResponse;
  updateBusinessWalletJoiningFees: UpdateBusinessWalletJoiningFeesMutationResponse;
  updateBusinessWalletMaintenanceFees: UpdateBusinessWalletMaintenanceFeesMutationResponse;
  updateBusinessWalletOverDraftLimits: UpdateBusinessWalletOverDraftLimitsMutationResponse;
  updateBusinessWalletPayoutFees: UpdateBusinessWalletPayoutFeesMutationResponse;
  updateBusinessWalletRollingReserveFees: UpdateBusinessWalletRollingReserveFeesMutationResponse;
  updateBusinessWalletSettlementFees: UpdateBusinessWalletSettlementFeesMutationResponse;
  updateBusinessWalletTierCommissions: UpdateBusinessWalletTierCommissionsMutationResponse;
  updateBusinessWallets: UpdateBusinessWalletsMutationResponse;
  updateBusinesses: UpdateBusinessesMutationResponse;
  updateCountries: UpdateCountriesMutationResponse;
  updateCreatedByUsers: UpdateCreatedByUsersMutationResponse;
  updateCreditCartdProcessingSolutions: UpdateCreditCartdProcessingSolutionsMutationResponse;
  updateCryptoCurrencySolutions: UpdateCryptoCurrencySolutionsMutationResponse;
  updateCurrencies: UpdateCurrenciesMutationResponse;
  updateCustomers: UpdateCustomersMutationResponse;
  updateDefaultBaseCommissions: UpdateDefaultBaseCommissionsMutationResponse;
  updateDefaultCurrencyConversionFees: UpdateDefaultCurrencyConversionFeesMutationResponse;
  updateDefaultCurrencyConversionMarkups: UpdateDefaultCurrencyConversionMarkupsMutationResponse;
  updateDefaultJoiningFees: UpdateDefaultJoiningFeesMutationResponse;
  updateDefaultMaintenanceFees: UpdateDefaultMaintenanceFeesMutationResponse;
  updateDefaultOverDraftLimits: UpdateDefaultOverDraftLimitsMutationResponse;
  updateDefaultPayoutFees: UpdateDefaultPayoutFeesMutationResponse;
  updateDefaultRollingReserveFees: UpdateDefaultRollingReserveFeesMutationResponse;
  updateDefaultSettlementFees: UpdateDefaultSettlementFeesMutationResponse;
  updateDefaultTierCommissions: UpdateDefaultTierCommissionsMutationResponse;
  updateDepositStatus?: Maybe<UpdateDepositStatusResponse>;
  updateFeaturePermissions: UpdateFeaturePermissionsMutationResponse;
  updateGraphDataNeo4JS: UpdateGraphDataNeo4JsMutationResponse;
  updateIntermediaryAccounts: UpdateIntermediaryAccountsMutationResponse;
  updateMarketRegions: UpdateMarketRegionsMutationResponse;
  updateMerchants: UpdateMerchantsMutationResponse;
  updateOrganisationTypes: UpdateOrganisationTypesMutationResponse;
  updatePersonalDocuments: UpdatePersonalDocumentsMutationResponse;
  updateRRSettlementStatus?: Maybe<UpdateRrSettlementStatusResponse>;
  updateSubAdmins: UpdateSubAdminsMutationResponse;
  updateSuperAdmins: UpdateSuperAdminsMutationResponse;
  updateTeamCommonPermisions: UpdateTeamCommonPermisionsMutationResponse;
  updateTeamMembers: UpdateTeamMembersMutationResponse;
  updateTeams: UpdateTeamsMutationResponse;
  updateWithdrawalStatus?: Maybe<UpdateWithdrawalStatusResponse>;
  /** update data of the table: "accountLedgers" */
  update_accountLedgers?: Maybe<AccountLedgers_Mutation_Response>;
  /** update single row of the table: "accountLedgers" */
  update_accountLedgers_by_pk?: Maybe<AccountLedgers>;
  /** update multiples rows of table: "accountLedgers" */
  update_accountLedgers_many?: Maybe<Array<Maybe<AccountLedgers_Mutation_Response>>>;
  /** update data of the table: "activityLogs" */
  update_activityLogs?: Maybe<ActivityLogs_Mutation_Response>;
  /** update single row of the table: "activityLogs" */
  update_activityLogs_by_pk?: Maybe<ActivityLogs>;
  /** update multiples rows of table: "activityLogs" */
  update_activityLogs_many?: Maybe<Array<Maybe<ActivityLogs_Mutation_Response>>>;
  /** update data of the table: "adjustmentTypes" */
  update_adjustmentTypes?: Maybe<AdjustmentTypes_Mutation_Response>;
  /** update single row of the table: "adjustmentTypes" */
  update_adjustmentTypes_by_pk?: Maybe<AdjustmentTypes>;
  /** update multiples rows of table: "adjustmentTypes" */
  update_adjustmentTypes_many?: Maybe<Array<Maybe<AdjustmentTypes_Mutation_Response>>>;
  /** update data of the table: "adjustments" */
  update_adjustments?: Maybe<Adjustments_Mutation_Response>;
  /** update single row of the table: "adjustments" */
  update_adjustments_by_pk?: Maybe<Adjustments>;
  /** update multiples rows of table: "adjustments" */
  update_adjustments_many?: Maybe<Array<Maybe<Adjustments_Mutation_Response>>>;
  /** update data of the table: "apiTemplates" */
  update_apiTemplates?: Maybe<ApiTemplates_Mutation_Response>;
  /** update single row of the table: "apiTemplates" */
  update_apiTemplates_by_pk?: Maybe<ApiTemplates>;
  /** update multiples rows of table: "apiTemplates" */
  update_apiTemplates_many?: Maybe<Array<Maybe<ApiTemplates_Mutation_Response>>>;
  /** update data of the table: "conversationCategories" */
  update_conversationCategories?: Maybe<ConversationCategories_Mutation_Response>;
  /** update single row of the table: "conversationCategories" */
  update_conversationCategories_by_pk?: Maybe<ConversationCategories>;
  /** update multiples rows of table: "conversationCategories" */
  update_conversationCategories_many?: Maybe<Array<Maybe<ConversationCategories_Mutation_Response>>>;
  /** update data of the table: "conversationStatus" */
  update_conversationStatus?: Maybe<ConversationStatus_Mutation_Response>;
  /** update single row of the table: "conversationStatus" */
  update_conversationStatus_by_pk?: Maybe<ConversationStatus>;
  /** update multiples rows of table: "conversationStatus" */
  update_conversationStatus_many?: Maybe<Array<Maybe<ConversationStatus_Mutation_Response>>>;
  /** update data of the table: "conversations" */
  update_conversations?: Maybe<Conversations_Mutation_Response>;
  /** update single row of the table: "conversations" */
  update_conversations_by_pk?: Maybe<Conversations>;
  /** update multiples rows of table: "conversations" */
  update_conversations_many?: Maybe<Array<Maybe<Conversations_Mutation_Response>>>;
  /** update data of the table: "currencyExchange" */
  update_currencyExchange?: Maybe<CurrencyExchange_Mutation_Response>;
  /** update single row of the table: "currencyExchange" */
  update_currencyExchange_by_pk?: Maybe<CurrencyExchange>;
  /** update multiples rows of table: "currencyExchange" */
  update_currencyExchange_many?: Maybe<Array<Maybe<CurrencyExchange_Mutation_Response>>>;
  /** update data of the table: "dailyCommissionVolume" */
  update_dailyCommissionVolume?: Maybe<DailyCommissionVolume_Mutation_Response>;
  /** update single row of the table: "dailyCommissionVolume" */
  update_dailyCommissionVolume_by_pk?: Maybe<DailyCommissionVolume>;
  /** update multiples rows of table: "dailyCommissionVolume" */
  update_dailyCommissionVolume_many?: Maybe<Array<Maybe<DailyCommissionVolume_Mutation_Response>>>;
  /** update data of the table: "dailyDepositVolume" */
  update_dailyDepositVolume?: Maybe<DailyDepositVolume_Mutation_Response>;
  /** update single row of the table: "dailyDepositVolume" */
  update_dailyDepositVolume_by_pk?: Maybe<DailyDepositVolume>;
  /** update multiples rows of table: "dailyDepositVolume" */
  update_dailyDepositVolume_many?: Maybe<Array<Maybe<DailyDepositVolume_Mutation_Response>>>;
  /** update data of the table: "dailyWithdrawalVolume" */
  update_dailyWithdrawalVolume?: Maybe<DailyWithdrawalVolume_Mutation_Response>;
  /** update single row of the table: "dailyWithdrawalVolume" */
  update_dailyWithdrawalVolume_by_pk?: Maybe<DailyWithdrawalVolume>;
  /** update multiples rows of table: "dailyWithdrawalVolume" */
  update_dailyWithdrawalVolume_many?: Maybe<Array<Maybe<DailyWithdrawalVolume_Mutation_Response>>>;
  /** update data of the table: "depositStatuses" */
  update_depositStatuses?: Maybe<DepositStatuses_Mutation_Response>;
  /** update single row of the table: "depositStatuses" */
  update_depositStatuses_by_pk?: Maybe<DepositStatuses>;
  /** update multiples rows of table: "depositStatuses" */
  update_depositStatuses_many?: Maybe<Array<Maybe<DepositStatuses_Mutation_Response>>>;
  /** update data of the table: "depositTypes" */
  update_depositTypes?: Maybe<DepositTypes_Mutation_Response>;
  /** update single row of the table: "depositTypes" */
  update_depositTypes_by_pk?: Maybe<DepositTypes>;
  /** update multiples rows of table: "depositTypes" */
  update_depositTypes_many?: Maybe<Array<Maybe<DepositTypes_Mutation_Response>>>;
  /** update data of the table: "deposits" */
  update_deposits?: Maybe<Deposits_Mutation_Response>;
  /** update single row of the table: "deposits" */
  update_deposits_by_pk?: Maybe<Deposits>;
  /** update multiples rows of table: "deposits" */
  update_deposits_many?: Maybe<Array<Maybe<Deposits_Mutation_Response>>>;
  /** update data of the table: "featureTypes" */
  update_featureTypes?: Maybe<FeatureTypes_Mutation_Response>;
  /** update single row of the table: "featureTypes" */
  update_featureTypes_by_pk?: Maybe<FeatureTypes>;
  /** update multiples rows of table: "featureTypes" */
  update_featureTypes_many?: Maybe<Array<Maybe<FeatureTypes_Mutation_Response>>>;
  /** update data of the table: "graphData" */
  update_graphData?: Maybe<GraphData_Mutation_Response>;
  /** update multiples rows of table: "graphData" */
  update_graphData_many?: Maybe<Array<Maybe<GraphData_Mutation_Response>>>;
  /** update data of the table: "internalTransfers" */
  update_internalTransfers?: Maybe<InternalTransfers_Mutation_Response>;
  /** update single row of the table: "internalTransfers" */
  update_internalTransfers_by_pk?: Maybe<InternalTransfers>;
  /** update multiples rows of table: "internalTransfers" */
  update_internalTransfers_many?: Maybe<Array<Maybe<InternalTransfers_Mutation_Response>>>;
  /** update data of the table: "ledgerTypes" */
  update_ledgerTypes?: Maybe<LedgerTypes_Mutation_Response>;
  /** update single row of the table: "ledgerTypes" */
  update_ledgerTypes_by_pk?: Maybe<LedgerTypes>;
  /** update multiples rows of table: "ledgerTypes" */
  update_ledgerTypes_many?: Maybe<Array<Maybe<LedgerTypes_Mutation_Response>>>;
  /** update data of the table: "ledgers" */
  update_ledgers?: Maybe<Ledgers_Mutation_Response>;
  /** update single row of the table: "ledgers" */
  update_ledgers_by_pk?: Maybe<Ledgers>;
  /** update multiples rows of table: "ledgers" */
  update_ledgers_many?: Maybe<Array<Maybe<Ledgers_Mutation_Response>>>;
  /** update data of the table: "messageTypes" */
  update_messageTypes?: Maybe<MessageTypes_Mutation_Response>;
  /** update single row of the table: "messageTypes" */
  update_messageTypes_by_pk?: Maybe<MessageTypes>;
  /** update multiples rows of table: "messageTypes" */
  update_messageTypes_many?: Maybe<Array<Maybe<MessageTypes_Mutation_Response>>>;
  /** update data of the table: "messages" */
  update_messages?: Maybe<Messages_Mutation_Response>;
  /** update single row of the table: "messages" */
  update_messages_by_pk?: Maybe<Messages>;
  /** update multiples rows of table: "messages" */
  update_messages_many?: Maybe<Array<Maybe<Messages_Mutation_Response>>>;
  /** update data of the table: "rollingReserveStatuses" */
  update_rollingReserveStatuses?: Maybe<RollingReserveStatuses_Mutation_Response>;
  /** update single row of the table: "rollingReserveStatuses" */
  update_rollingReserveStatuses_by_pk?: Maybe<RollingReserveStatuses>;
  /** update multiples rows of table: "rollingReserveStatuses" */
  update_rollingReserveStatuses_many?: Maybe<Array<Maybe<RollingReserveStatuses_Mutation_Response>>>;
  /** update data of the table: "rollingReserves" */
  update_rollingReserves?: Maybe<RollingReserves_Mutation_Response>;
  /** update single row of the table: "rollingReserves" */
  update_rollingReserves_by_pk?: Maybe<RollingReserves>;
  /** update multiples rows of table: "rollingReserves" */
  update_rollingReserves_many?: Maybe<Array<Maybe<RollingReserves_Mutation_Response>>>;
  /** update data of the table: "tags" */
  update_tags?: Maybe<Tags_Mutation_Response>;
  /** update single row of the table: "tags" */
  update_tags_by_pk?: Maybe<Tags>;
  /** update multiples rows of table: "tags" */
  update_tags_many?: Maybe<Array<Maybe<Tags_Mutation_Response>>>;
  /** update data of the table: "taskPriorities" */
  update_taskPriorities?: Maybe<TaskPriorities_Mutation_Response>;
  /** update single row of the table: "taskPriorities" */
  update_taskPriorities_by_pk?: Maybe<TaskPriorities>;
  /** update multiples rows of table: "taskPriorities" */
  update_taskPriorities_many?: Maybe<Array<Maybe<TaskPriorities_Mutation_Response>>>;
  /** update data of the table: "taskStatusTypes" */
  update_taskStatusTypes?: Maybe<TaskStatusTypes_Mutation_Response>;
  /** update single row of the table: "taskStatusTypes" */
  update_taskStatusTypes_by_pk?: Maybe<TaskStatusTypes>;
  /** update multiples rows of table: "taskStatusTypes" */
  update_taskStatusTypes_many?: Maybe<Array<Maybe<TaskStatusTypes_Mutation_Response>>>;
  /** update data of the table: "tasks" */
  update_tasks?: Maybe<Tasks_Mutation_Response>;
  /** update single row of the table: "tasks" */
  update_tasks_by_pk?: Maybe<Tasks>;
  /** update multiples rows of table: "tasks" */
  update_tasks_many?: Maybe<Array<Maybe<Tasks_Mutation_Response>>>;
  /** update data of the table: "textResult" */
  update_textResult?: Maybe<TextResult_Mutation_Response>;
  /** update multiples rows of table: "textResult" */
  update_textResult_many?: Maybe<Array<Maybe<TextResult_Mutation_Response>>>;
  /** update data of the table: "transactionTypes" */
  update_transactionTypes?: Maybe<TransactionTypes_Mutation_Response>;
  /** update single row of the table: "transactionTypes" */
  update_transactionTypes_by_pk?: Maybe<TransactionTypes>;
  /** update multiples rows of table: "transactionTypes" */
  update_transactionTypes_many?: Maybe<Array<Maybe<TransactionTypes_Mutation_Response>>>;
  /** update data of the table: "withdrawalStatuses" */
  update_withdrawalStatuses?: Maybe<WithdrawalStatuses_Mutation_Response>;
  /** update single row of the table: "withdrawalStatuses" */
  update_withdrawalStatuses_by_pk?: Maybe<WithdrawalStatuses>;
  /** update multiples rows of table: "withdrawalStatuses" */
  update_withdrawalStatuses_many?: Maybe<Array<Maybe<WithdrawalStatuses_Mutation_Response>>>;
  /** update data of the table: "withdrawalTypes" */
  update_withdrawalTypes?: Maybe<WithdrawalTypes_Mutation_Response>;
  /** update single row of the table: "withdrawalTypes" */
  update_withdrawalTypes_by_pk?: Maybe<WithdrawalTypes>;
  /** update multiples rows of table: "withdrawalTypes" */
  update_withdrawalTypes_many?: Maybe<Array<Maybe<WithdrawalTypes_Mutation_Response>>>;
  /** update data of the table: "withdrawals" */
  update_withdrawals?: Maybe<Withdrawals_Mutation_Response>;
  /** update single row of the table: "withdrawals" */
  update_withdrawals_by_pk?: Maybe<Withdrawals>;
  /** update multiples rows of table: "withdrawals" */
  update_withdrawals_many?: Maybe<Array<Maybe<Withdrawals_Mutation_Response>>>;
};


/** mutation root */
export type Mutation_RootAddAdjustmentArgs = {
  data?: InputMaybe<AddAdjustmentInput>;
};


/** mutation root */
export type Mutation_RootAddBusinessArgs = {
  accountList?: InputMaybe<Array<Scalars['uuid']>>;
  businessDetail: BusinessDetail;
  merchantId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootAddBusinessWalletArgs = {
  data: AddBusinessWalletInput;
};


/** mutation root */
export type Mutation_RootCreateAccountsArgs = {
  input: Array<AccountCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateAlternateMethodSolutionsArgs = {
  input: Array<AlternateMethodSolutionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateApiKeyArgs = {
  merchantId: Scalars['String'];
};


/** mutation root */
export type Mutation_RootCreateBankWireSolutionsArgs = {
  input: Array<BankWireSolutionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBanksArgs = {
  input: Array<BankCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBaseCurrencyConversionRatesArgs = {
  input: Array<BaseCurrencyConversionRateCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBeneficiariesArgs = {
  input: Array<BeneficiaryCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBrandsArgs = {
  input: Array<BrandCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessCurrencyConversionFeesArgs = {
  input: Array<BusinessCurrencyConversionFeesCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessCurrencyConversionMarkupsArgs = {
  input: Array<BusinessCurrencyConversionMarkupCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessDocumentsArgs = {
  input: Array<BusinessDocumentCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessOwnersArgs = {
  input: Array<BusinessOwnerCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessSolutionsArgs = {
  input: Array<BusinessSolutionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessTypesArgs = {
  input: Array<BusinessTypeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletBaseCommissionsArgs = {
  input: Array<BusinessWalletBaseCommissionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletJoiningFeesArgs = {
  input: Array<BusinessWalletJoiningFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletMaintenanceFeesArgs = {
  input: Array<BusinessWalletMaintenanceFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletOverDraftLimitsArgs = {
  input: Array<BusinessWalletOverDraftLimitCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletPayoutFeesArgs = {
  input: Array<BusinessWalletPayoutFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletRollingReserveFeesArgs = {
  input: Array<BusinessWalletRollingReserveFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletSettlementFeesArgs = {
  input: Array<BusinessWalletSettlementFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletTierCommissionsArgs = {
  input: Array<BusinessWalletTierCommissionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessWalletsArgs = {
  input: Array<BusinessWalletCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateBusinessesArgs = {
  input: Array<BusinessCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateCountriesArgs = {
  input: Array<CountryCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateCreatedByUsersArgs = {
  input: Array<CreatedByUserCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateCreditCartdProcessingSolutionsArgs = {
  input: Array<CreditCartdProcessingSolutionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateCryptoCurrencySolutionsArgs = {
  input: Array<CryptoCurrencySolutionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateCurrenciesArgs = {
  input: Array<CurrencyCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateCurrencyExchangeArgs = {
  data: CurrencyExchangeInsert;
};


/** mutation root */
export type Mutation_RootCreateCustomersArgs = {
  input: Array<CustomerCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultBaseCommissionsArgs = {
  input: Array<DefaultBaseCommissionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultCurrencyConversionFeesArgs = {
  input: Array<DefaultCurrencyConversionFeesCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultCurrencyConversionMarkupsArgs = {
  input: Array<DefaultCurrencyConversionMarkupCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultJoiningFeesArgs = {
  input: Array<DefaultJoiningFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultMaintenanceFeesArgs = {
  input: Array<DefaultMaintenanceFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultOverDraftLimitsArgs = {
  input: Array<DefaultOverDraftLimitCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultPayoutFeesArgs = {
  input: Array<DefaultPayoutFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultRollingReserveFeesArgs = {
  input: Array<DefaultRollingReserveFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultSettlementFeesArgs = {
  input: Array<DefaultSettlementFeeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDefaultTierCommissionsArgs = {
  input: Array<DefaultTierCommissionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateDepositsArgs = {
  data: Array<CreateDepositInput>;
};


/** mutation root */
export type Mutation_RootCreateFeaturePermissionsArgs = {
  input: Array<FeaturePermissionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateGraphDataNeo4JsArgs = {
  input: Array<GraphDataNeo4jCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateIntermediaryAccountsArgs = {
  input: Array<IntermediaryAccountCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateMarketRegionsArgs = {
  input: Array<MarketRegionsCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateMerchantsArgs = {
  input: Array<MerchantCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateOrganisationTypesArgs = {
  input: Array<OrganisationTypeCreateInput>;
};


/** mutation root */
export type Mutation_RootCreatePersonalDocumentsArgs = {
  input: Array<PersonalDocumentCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateSubAdminsArgs = {
  input: Array<SubAdminCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateSuperAdminsArgs = {
  input: Array<SuperAdminCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateTeamArgs = {
  accessibleBrandIds: Array<Scalars['uuid']>;
  name: Scalars['String'];
  parentBusinessId: Scalars['uuid'];
  permissions: Array<BrandPermission>;
};


/** mutation root */
export type Mutation_RootCreateTeamCommonPermisionsArgs = {
  input: Array<TeamCommonPermisionCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateTeamMembersArgs = {
  input: Array<TeamMemberCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateTeamsArgs = {
  input: Array<TeamCreateInput>;
};


/** mutation root */
export type Mutation_RootCreateUserArgs = {
  email: Scalars['String'];
  isInternalUser?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  password: Scalars['String'];
  permissions: Array<BrandPermission>;
  teams: Array<Scalars['uuid']>;
};


/** mutation root */
export type Mutation_RootCreateWithdrawalsArgs = {
  data: Array<CreateWithdrawalInput>;
};


/** mutation root */
export type Mutation_RootDeleteAccountsArgs = {
  delete?: InputMaybe<AccountDeleteInput>;
  where?: InputMaybe<AccountWhere>;
};


/** mutation root */
export type Mutation_RootDeleteAlternateMethodSolutionsArgs = {
  delete?: InputMaybe<AlternateMethodSolutionDeleteInput>;
  where?: InputMaybe<AlternateMethodSolutionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBankWireSolutionsArgs = {
  delete?: InputMaybe<BankWireSolutionDeleteInput>;
  where?: InputMaybe<BankWireSolutionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBanksArgs = {
  delete?: InputMaybe<BankDeleteInput>;
  where?: InputMaybe<BankWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBaseCurrencyConversionRatesArgs = {
  delete?: InputMaybe<BaseCurrencyConversionRateDeleteInput>;
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBeneficiariesArgs = {
  delete?: InputMaybe<BeneficiaryDeleteInput>;
  where?: InputMaybe<BeneficiaryWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBrandsArgs = {
  delete?: InputMaybe<BrandDeleteInput>;
  where?: InputMaybe<BrandWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessCurrencyConversionFeesArgs = {
  delete?: InputMaybe<BusinessCurrencyConversionFeesDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessCurrencyConversionMarkupsArgs = {
  delete?: InputMaybe<BusinessCurrencyConversionMarkupDeleteInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessDocumentsArgs = {
  delete?: InputMaybe<BusinessDocumentDeleteInput>;
  where?: InputMaybe<BusinessDocumentWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessOwnersArgs = {
  delete?: InputMaybe<BusinessOwnerDeleteInput>;
  where?: InputMaybe<BusinessOwnerWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessSolutionsArgs = {
  delete?: InputMaybe<BusinessSolutionDeleteInput>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessTypesArgs = {
  delete?: InputMaybe<BusinessTypeDeleteInput>;
  where?: InputMaybe<BusinessTypeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletBaseCommissionsArgs = {
  delete?: InputMaybe<BusinessWalletBaseCommissionDeleteInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletJoiningFeesArgs = {
  delete?: InputMaybe<BusinessWalletJoiningFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletMaintenanceFeesArgs = {
  delete?: InputMaybe<BusinessWalletMaintenanceFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletOverDraftLimitsArgs = {
  delete?: InputMaybe<BusinessWalletOverDraftLimitDeleteInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletPayoutFeesArgs = {
  delete?: InputMaybe<BusinessWalletPayoutFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletRollingReserveFeesArgs = {
  delete?: InputMaybe<BusinessWalletRollingReserveFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletSettlementFeesArgs = {
  delete?: InputMaybe<BusinessWalletSettlementFeeDeleteInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletTierCommissionsArgs = {
  delete?: InputMaybe<BusinessWalletTierCommissionDeleteInput>;
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessWalletsArgs = {
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  where?: InputMaybe<BusinessWalletWhere>;
};


/** mutation root */
export type Mutation_RootDeleteBusinessesArgs = {
  delete?: InputMaybe<BusinessDeleteInput>;
  where?: InputMaybe<BusinessWhere>;
};


/** mutation root */
export type Mutation_RootDeleteCountriesArgs = {
  delete?: InputMaybe<CountryDeleteInput>;
  where?: InputMaybe<CountryWhere>;
};


/** mutation root */
export type Mutation_RootDeleteCreatedByUsersArgs = {
  where?: InputMaybe<CreatedByUserWhere>;
};


/** mutation root */
export type Mutation_RootDeleteCreditCartdProcessingSolutionsArgs = {
  delete?: InputMaybe<CreditCartdProcessingSolutionDeleteInput>;
  where?: InputMaybe<CreditCartdProcessingSolutionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteCryptoCurrencySolutionsArgs = {
  delete?: InputMaybe<CryptoCurrencySolutionDeleteInput>;
  where?: InputMaybe<CryptoCurrencySolutionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteCurrenciesArgs = {
  where?: InputMaybe<CurrencyWhere>;
};


/** mutation root */
export type Mutation_RootDeleteCustomersArgs = {
  delete?: InputMaybe<CustomerDeleteInput>;
  where?: InputMaybe<CustomerWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultBaseCommissionsArgs = {
  delete?: InputMaybe<DefaultBaseCommissionDeleteInput>;
  where?: InputMaybe<DefaultBaseCommissionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultCurrencyConversionFeesArgs = {
  delete?: InputMaybe<DefaultCurrencyConversionFeesDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultCurrencyConversionMarkupsArgs = {
  delete?: InputMaybe<DefaultCurrencyConversionMarkupDeleteInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultJoiningFeesArgs = {
  delete?: InputMaybe<DefaultJoiningFeeDeleteInput>;
  where?: InputMaybe<DefaultJoiningFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultMaintenanceFeesArgs = {
  delete?: InputMaybe<DefaultMaintenanceFeeDeleteInput>;
  where?: InputMaybe<DefaultMaintenanceFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultOverDraftLimitsArgs = {
  delete?: InputMaybe<DefaultOverDraftLimitDeleteInput>;
  where?: InputMaybe<DefaultOverDraftLimitWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultPayoutFeesArgs = {
  delete?: InputMaybe<DefaultPayoutFeeDeleteInput>;
  where?: InputMaybe<DefaultPayoutFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultRollingReserveFeesArgs = {
  delete?: InputMaybe<DefaultRollingReserveFeeDeleteInput>;
  where?: InputMaybe<DefaultRollingReserveFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultSettlementFeesArgs = {
  delete?: InputMaybe<DefaultSettlementFeeDeleteInput>;
  where?: InputMaybe<DefaultSettlementFeeWhere>;
};


/** mutation root */
export type Mutation_RootDeleteDefaultTierCommissionsArgs = {
  delete?: InputMaybe<DefaultTierCommissionDeleteInput>;
  where?: InputMaybe<DefaultTierCommissionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteFeaturePermissionsArgs = {
  delete?: InputMaybe<FeaturePermissionDeleteInput>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteGraphDataNeo4JsArgs = {
  where?: InputMaybe<GraphDataNeo4jWhere>;
};


/** mutation root */
export type Mutation_RootDeleteIntermediaryAccountsArgs = {
  delete?: InputMaybe<IntermediaryAccountDeleteInput>;
  where?: InputMaybe<IntermediaryAccountWhere>;
};


/** mutation root */
export type Mutation_RootDeleteMarketRegionsArgs = {
  where?: InputMaybe<MarketRegionsWhere>;
};


/** mutation root */
export type Mutation_RootDeleteMerchantsArgs = {
  delete?: InputMaybe<MerchantDeleteInput>;
  where?: InputMaybe<MerchantWhere>;
};


/** mutation root */
export type Mutation_RootDeleteOrganisationTypesArgs = {
  where?: InputMaybe<OrganisationTypeWhere>;
};


/** mutation root */
export type Mutation_RootDeletePersonalDocumentsArgs = {
  delete?: InputMaybe<PersonalDocumentDeleteInput>;
  where?: InputMaybe<PersonalDocumentWhere>;
};


/** mutation root */
export type Mutation_RootDeleteSubAdminsArgs = {
  delete?: InputMaybe<SubAdminDeleteInput>;
  where?: InputMaybe<SubAdminWhere>;
};


/** mutation root */
export type Mutation_RootDeleteSuperAdminsArgs = {
  delete?: InputMaybe<SuperAdminDeleteInput>;
  where?: InputMaybe<SuperAdminWhere>;
};


/** mutation root */
export type Mutation_RootDeleteTeamCommonPermisionsArgs = {
  where?: InputMaybe<TeamCommonPermisionWhere>;
};


/** mutation root */
export type Mutation_RootDeleteTeamMembersArgs = {
  delete?: InputMaybe<TeamMemberDeleteInput>;
  where?: InputMaybe<TeamMemberWhere>;
};


/** mutation root */
export type Mutation_RootDeleteTeamsArgs = {
  delete?: InputMaybe<TeamDeleteInput>;
  where?: InputMaybe<TeamWhere>;
};


/** mutation root */
export type Mutation_RootDelete_AccountLedgersArgs = {
  where: AccountLedgers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_AccountLedgers_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ActivityLogsArgs = {
  where: ActivityLogs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ActivityLogs_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_AdjustmentTypesArgs = {
  where: AdjustmentTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_AdjustmentTypes_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_AdjustmentsArgs = {
  where: Adjustments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Adjustments_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ApiTemplatesArgs = {
  where: ApiTemplates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ApiTemplates_By_PkArgs = {
  id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ConversationCategoriesArgs = {
  where: ConversationCategories_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ConversationCategories_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_ConversationStatusArgs = {
  where: ConversationStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ConversationStatus_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ConversationsArgs = {
  where: Conversations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Conversations_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_CurrencyExchangeArgs = {
  where: CurrencyExchange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_CurrencyExchange_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_DailyCommissionVolumeArgs = {
  where: DailyCommissionVolume_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DailyCommissionVolume_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_DailyDepositVolumeArgs = {
  where: DailyDepositVolume_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DailyDepositVolume_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_DailyWithdrawalVolumeArgs = {
  where: DailyWithdrawalVolume_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DailyWithdrawalVolume_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_DepositStatusesArgs = {
  where: DepositStatuses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DepositStatuses_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_DepositTypesArgs = {
  where: DepositTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DepositTypes_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_DepositsArgs = {
  where: Deposits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Deposits_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_FeatureTypesArgs = {
  where: FeatureTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_FeatureTypes_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_GraphDataArgs = {
  where: GraphData_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_InternalTransfersArgs = {
  where: InternalTransfers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_InternalTransfers_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_LedgerTypesArgs = {
  where: LedgerTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_LedgerTypes_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_LedgersArgs = {
  where: Ledgers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ledgers_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_MessageTypesArgs = {
  where: MessageTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_MessageTypes_By_PkArgs = {
  id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_MessagesArgs = {
  where: Messages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Messages_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_RollingReserveStatusesArgs = {
  where: RollingReserveStatuses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RollingReserveStatuses_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_RollingReservesArgs = {
  where: RollingReserves_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RollingReserves_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_TagsArgs = {
  where: Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tags_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TaskPrioritiesArgs = {
  where: TaskPriorities_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_TaskPriorities_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TaskStatusTypesArgs = {
  where: TaskStatusTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_TaskStatusTypes_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TasksArgs = {
  where: Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tasks_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_TextResultArgs = {
  where: TextResult_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_TransactionTypesArgs = {
  where: TransactionTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_TransactionTypes_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_WithdrawalStatusesArgs = {
  where: WithdrawalStatuses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_WithdrawalStatuses_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_WithdrawalTypesArgs = {
  where: WithdrawalTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_WithdrawalTypes_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_WithdrawalsArgs = {
  where: Withdrawals_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Withdrawals_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootInsert_AccountLedgersArgs = {
  objects: Array<AccountLedgers_Insert_Input>;
  on_conflict?: InputMaybe<AccountLedgers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AccountLedgers_OneArgs = {
  object: AccountLedgers_Insert_Input;
  on_conflict?: InputMaybe<AccountLedgers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ActivityLogsArgs = {
  objects: Array<ActivityLogs_Insert_Input>;
  on_conflict?: InputMaybe<ActivityLogs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ActivityLogs_OneArgs = {
  object: ActivityLogs_Insert_Input;
  on_conflict?: InputMaybe<ActivityLogs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AdjustmentTypesArgs = {
  objects: Array<AdjustmentTypes_Insert_Input>;
  on_conflict?: InputMaybe<AdjustmentTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AdjustmentTypes_OneArgs = {
  object: AdjustmentTypes_Insert_Input;
  on_conflict?: InputMaybe<AdjustmentTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AdjustmentsArgs = {
  objects: Array<Adjustments_Insert_Input>;
  on_conflict?: InputMaybe<Adjustments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Adjustments_OneArgs = {
  object: Adjustments_Insert_Input;
  on_conflict?: InputMaybe<Adjustments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ApiTemplatesArgs = {
  objects: Array<ApiTemplates_Insert_Input>;
  on_conflict?: InputMaybe<ApiTemplates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ApiTemplates_OneArgs = {
  object: ApiTemplates_Insert_Input;
  on_conflict?: InputMaybe<ApiTemplates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConversationCategoriesArgs = {
  objects: Array<ConversationCategories_Insert_Input>;
  on_conflict?: InputMaybe<ConversationCategories_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConversationCategories_OneArgs = {
  object: ConversationCategories_Insert_Input;
  on_conflict?: InputMaybe<ConversationCategories_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConversationStatusArgs = {
  objects: Array<ConversationStatus_Insert_Input>;
  on_conflict?: InputMaybe<ConversationStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConversationStatus_OneArgs = {
  object: ConversationStatus_Insert_Input;
  on_conflict?: InputMaybe<ConversationStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConversationsArgs = {
  objects: Array<Conversations_Insert_Input>;
  on_conflict?: InputMaybe<Conversations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Conversations_OneArgs = {
  object: Conversations_Insert_Input;
  on_conflict?: InputMaybe<Conversations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CurrencyExchangeArgs = {
  objects: Array<CurrencyExchange_Insert_Input>;
  on_conflict?: InputMaybe<CurrencyExchange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CurrencyExchange_OneArgs = {
  object: CurrencyExchange_Insert_Input;
  on_conflict?: InputMaybe<CurrencyExchange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DailyCommissionVolumeArgs = {
  objects: Array<DailyCommissionVolume_Insert_Input>;
  on_conflict?: InputMaybe<DailyCommissionVolume_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DailyCommissionVolume_OneArgs = {
  object: DailyCommissionVolume_Insert_Input;
  on_conflict?: InputMaybe<DailyCommissionVolume_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DailyDepositVolumeArgs = {
  objects: Array<DailyDepositVolume_Insert_Input>;
  on_conflict?: InputMaybe<DailyDepositVolume_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DailyDepositVolume_OneArgs = {
  object: DailyDepositVolume_Insert_Input;
  on_conflict?: InputMaybe<DailyDepositVolume_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DailyWithdrawalVolumeArgs = {
  objects: Array<DailyWithdrawalVolume_Insert_Input>;
  on_conflict?: InputMaybe<DailyWithdrawalVolume_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DailyWithdrawalVolume_OneArgs = {
  object: DailyWithdrawalVolume_Insert_Input;
  on_conflict?: InputMaybe<DailyWithdrawalVolume_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DepositStatusesArgs = {
  objects: Array<DepositStatuses_Insert_Input>;
  on_conflict?: InputMaybe<DepositStatuses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DepositStatuses_OneArgs = {
  object: DepositStatuses_Insert_Input;
  on_conflict?: InputMaybe<DepositStatuses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DepositTypesArgs = {
  objects: Array<DepositTypes_Insert_Input>;
  on_conflict?: InputMaybe<DepositTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DepositTypes_OneArgs = {
  object: DepositTypes_Insert_Input;
  on_conflict?: InputMaybe<DepositTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DepositsArgs = {
  objects: Array<Deposits_Insert_Input>;
  on_conflict?: InputMaybe<Deposits_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Deposits_OneArgs = {
  object: Deposits_Insert_Input;
  on_conflict?: InputMaybe<Deposits_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FeatureTypesArgs = {
  objects: Array<FeatureTypes_Insert_Input>;
  on_conflict?: InputMaybe<FeatureTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FeatureTypes_OneArgs = {
  object: FeatureTypes_Insert_Input;
  on_conflict?: InputMaybe<FeatureTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GraphDataArgs = {
  objects: Array<GraphData_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_GraphData_OneArgs = {
  object: GraphData_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_InternalTransfersArgs = {
  objects: Array<InternalTransfers_Insert_Input>;
  on_conflict?: InputMaybe<InternalTransfers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_InternalTransfers_OneArgs = {
  object: InternalTransfers_Insert_Input;
  on_conflict?: InputMaybe<InternalTransfers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LedgerTypesArgs = {
  objects: Array<LedgerTypes_Insert_Input>;
  on_conflict?: InputMaybe<LedgerTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LedgerTypes_OneArgs = {
  object: LedgerTypes_Insert_Input;
  on_conflict?: InputMaybe<LedgerTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LedgersArgs = {
  objects: Array<Ledgers_Insert_Input>;
  on_conflict?: InputMaybe<Ledgers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ledgers_OneArgs = {
  object: Ledgers_Insert_Input;
  on_conflict?: InputMaybe<Ledgers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_MessageTypesArgs = {
  objects: Array<MessageTypes_Insert_Input>;
  on_conflict?: InputMaybe<MessageTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_MessageTypes_OneArgs = {
  object: MessageTypes_Insert_Input;
  on_conflict?: InputMaybe<MessageTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_MessagesArgs = {
  objects: Array<Messages_Insert_Input>;
  on_conflict?: InputMaybe<Messages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Messages_OneArgs = {
  object: Messages_Insert_Input;
  on_conflict?: InputMaybe<Messages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RollingReserveStatusesArgs = {
  objects: Array<RollingReserveStatuses_Insert_Input>;
  on_conflict?: InputMaybe<RollingReserveStatuses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RollingReserveStatuses_OneArgs = {
  object: RollingReserveStatuses_Insert_Input;
  on_conflict?: InputMaybe<RollingReserveStatuses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RollingReservesArgs = {
  objects: Array<RollingReserves_Insert_Input>;
  on_conflict?: InputMaybe<RollingReserves_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RollingReserves_OneArgs = {
  object: RollingReserves_Insert_Input;
  on_conflict?: InputMaybe<RollingReserves_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TagsArgs = {
  objects: Array<Tags_Insert_Input>;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tags_OneArgs = {
  object: Tags_Insert_Input;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TaskPrioritiesArgs = {
  objects: Array<TaskPriorities_Insert_Input>;
  on_conflict?: InputMaybe<TaskPriorities_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TaskPriorities_OneArgs = {
  object: TaskPriorities_Insert_Input;
  on_conflict?: InputMaybe<TaskPriorities_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TaskStatusTypesArgs = {
  objects: Array<TaskStatusTypes_Insert_Input>;
  on_conflict?: InputMaybe<TaskStatusTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TaskStatusTypes_OneArgs = {
  object: TaskStatusTypes_Insert_Input;
  on_conflict?: InputMaybe<TaskStatusTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TasksArgs = {
  objects: Array<Tasks_Insert_Input>;
  on_conflict?: InputMaybe<Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tasks_OneArgs = {
  object: Tasks_Insert_Input;
  on_conflict?: InputMaybe<Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TextResultArgs = {
  objects: Array<TextResult_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_TextResult_OneArgs = {
  object: TextResult_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_TransactionTypesArgs = {
  objects: Array<TransactionTypes_Insert_Input>;
  on_conflict?: InputMaybe<TransactionTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TransactionTypes_OneArgs = {
  object: TransactionTypes_Insert_Input;
  on_conflict?: InputMaybe<TransactionTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WithdrawalStatusesArgs = {
  objects: Array<WithdrawalStatuses_Insert_Input>;
  on_conflict?: InputMaybe<WithdrawalStatuses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WithdrawalStatuses_OneArgs = {
  object: WithdrawalStatuses_Insert_Input;
  on_conflict?: InputMaybe<WithdrawalStatuses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WithdrawalTypesArgs = {
  objects: Array<WithdrawalTypes_Insert_Input>;
  on_conflict?: InputMaybe<WithdrawalTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WithdrawalTypes_OneArgs = {
  object: WithdrawalTypes_Insert_Input;
  on_conflict?: InputMaybe<WithdrawalTypes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WithdrawalsArgs = {
  objects: Array<Withdrawals_Insert_Input>;
  on_conflict?: InputMaybe<Withdrawals_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Withdrawals_OneArgs = {
  object: Withdrawals_Insert_Input;
  on_conflict?: InputMaybe<Withdrawals_On_Conflict>;
};


/** mutation root */
export type Mutation_RootReleaseRollingReserveArgs = {
  data: Array<ReleaseRollingReserveInput>;
};


/** mutation root */
export type Mutation_RootRevokeApiKeyArgs = {
  merchantId: Scalars['String'];
};


/** mutation root */
export type Mutation_RootSignupMerchantArgs = {
  accountList?: InputMaybe<Array<Scalars['uuid']>>;
  businessDetail: BusinessDetail;
  merchantDetail: MerchantDetail;
};


/** mutation root */
export type Mutation_RootUpdateAccountsArgs = {
  connect?: InputMaybe<AccountConnectInput>;
  connectOrCreate?: InputMaybe<AccountConnectOrCreateInput>;
  create?: InputMaybe<AccountRelationInput>;
  delete?: InputMaybe<AccountDeleteInput>;
  disconnect?: InputMaybe<AccountDisconnectInput>;
  update?: InputMaybe<AccountUpdateInput>;
  where?: InputMaybe<AccountWhere>;
};


/** mutation root */
export type Mutation_RootUpdateAlternateMethodSolutionsArgs = {
  connect?: InputMaybe<AlternateMethodSolutionConnectInput>;
  connectOrCreate?: InputMaybe<AlternateMethodSolutionConnectOrCreateInput>;
  create?: InputMaybe<AlternateMethodSolutionRelationInput>;
  delete?: InputMaybe<AlternateMethodSolutionDeleteInput>;
  disconnect?: InputMaybe<AlternateMethodSolutionDisconnectInput>;
  update?: InputMaybe<AlternateMethodSolutionUpdateInput>;
  where?: InputMaybe<AlternateMethodSolutionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBankWireSolutionsArgs = {
  connect?: InputMaybe<BankWireSolutionConnectInput>;
  connectOrCreate?: InputMaybe<BankWireSolutionConnectOrCreateInput>;
  create?: InputMaybe<BankWireSolutionRelationInput>;
  delete?: InputMaybe<BankWireSolutionDeleteInput>;
  disconnect?: InputMaybe<BankWireSolutionDisconnectInput>;
  update?: InputMaybe<BankWireSolutionUpdateInput>;
  where?: InputMaybe<BankWireSolutionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBanksArgs = {
  connect?: InputMaybe<BankConnectInput>;
  connectOrCreate?: InputMaybe<BankConnectOrCreateInput>;
  create?: InputMaybe<BankRelationInput>;
  delete?: InputMaybe<BankDeleteInput>;
  disconnect?: InputMaybe<BankDisconnectInput>;
  update?: InputMaybe<BankUpdateInput>;
  where?: InputMaybe<BankWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBaseCurrencyConversionRatesArgs = {
  connect?: InputMaybe<BaseCurrencyConversionRateConnectInput>;
  connectOrCreate?: InputMaybe<BaseCurrencyConversionRateConnectOrCreateInput>;
  create?: InputMaybe<BaseCurrencyConversionRateRelationInput>;
  delete?: InputMaybe<BaseCurrencyConversionRateDeleteInput>;
  disconnect?: InputMaybe<BaseCurrencyConversionRateDisconnectInput>;
  update?: InputMaybe<BaseCurrencyConversionRateUpdateInput>;
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBeneficiariesArgs = {
  connect?: InputMaybe<BeneficiaryConnectInput>;
  connectOrCreate?: InputMaybe<BeneficiaryConnectOrCreateInput>;
  create?: InputMaybe<BeneficiaryRelationInput>;
  delete?: InputMaybe<BeneficiaryDeleteInput>;
  disconnect?: InputMaybe<BeneficiaryDisconnectInput>;
  update?: InputMaybe<BeneficiaryUpdateInput>;
  where?: InputMaybe<BeneficiaryWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBrandsArgs = {
  connect?: InputMaybe<BrandConnectInput>;
  connectOrCreate?: InputMaybe<BrandConnectOrCreateInput>;
  create?: InputMaybe<BrandRelationInput>;
  delete?: InputMaybe<BrandDeleteInput>;
  disconnect?: InputMaybe<BrandDisconnectInput>;
  update?: InputMaybe<BrandUpdateInput>;
  where?: InputMaybe<BrandWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessCurrencyConversionFeesArgs = {
  connect?: InputMaybe<BusinessCurrencyConversionFeesConnectInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionFeesConnectOrCreateInput>;
  create?: InputMaybe<BusinessCurrencyConversionFeesRelationInput>;
  delete?: InputMaybe<BusinessCurrencyConversionFeesDeleteInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionFeesDisconnectInput>;
  update?: InputMaybe<BusinessCurrencyConversionFeesUpdateInput>;
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessCurrencyConversionMarkupsArgs = {
  connect?: InputMaybe<BusinessCurrencyConversionMarkupConnectInput>;
  connectOrCreate?: InputMaybe<BusinessCurrencyConversionMarkupConnectOrCreateInput>;
  create?: InputMaybe<BusinessCurrencyConversionMarkupRelationInput>;
  delete?: InputMaybe<BusinessCurrencyConversionMarkupDeleteInput>;
  disconnect?: InputMaybe<BusinessCurrencyConversionMarkupDisconnectInput>;
  update?: InputMaybe<BusinessCurrencyConversionMarkupUpdateInput>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessDocumentsArgs = {
  connect?: InputMaybe<BusinessDocumentConnectInput>;
  connectOrCreate?: InputMaybe<BusinessDocumentConnectOrCreateInput>;
  create?: InputMaybe<BusinessDocumentRelationInput>;
  delete?: InputMaybe<BusinessDocumentDeleteInput>;
  disconnect?: InputMaybe<BusinessDocumentDisconnectInput>;
  update?: InputMaybe<BusinessDocumentUpdateInput>;
  where?: InputMaybe<BusinessDocumentWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessOwnersArgs = {
  connect?: InputMaybe<BusinessOwnerConnectInput>;
  connectOrCreate?: InputMaybe<BusinessOwnerConnectOrCreateInput>;
  create?: InputMaybe<BusinessOwnerRelationInput>;
  delete?: InputMaybe<BusinessOwnerDeleteInput>;
  disconnect?: InputMaybe<BusinessOwnerDisconnectInput>;
  update?: InputMaybe<BusinessOwnerUpdateInput>;
  where?: InputMaybe<BusinessOwnerWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessSolutionsArgs = {
  connect?: InputMaybe<BusinessSolutionConnectInput>;
  connectOrCreate?: InputMaybe<BusinessSolutionConnectOrCreateInput>;
  create?: InputMaybe<BusinessSolutionRelationInput>;
  delete?: InputMaybe<BusinessSolutionDeleteInput>;
  disconnect?: InputMaybe<BusinessSolutionDisconnectInput>;
  update?: InputMaybe<BusinessSolutionUpdateInput>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessStatusArgs = {
  data: UpdateBusinessStatusInput;
};


/** mutation root */
export type Mutation_RootUpdateBusinessTypesArgs = {
  connect?: InputMaybe<BusinessTypeConnectInput>;
  connectOrCreate?: InputMaybe<BusinessTypeConnectOrCreateInput>;
  create?: InputMaybe<BusinessTypeRelationInput>;
  delete?: InputMaybe<BusinessTypeDeleteInput>;
  disconnect?: InputMaybe<BusinessTypeDisconnectInput>;
  update?: InputMaybe<BusinessTypeUpdateInput>;
  where?: InputMaybe<BusinessTypeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletBaseCommissionsArgs = {
  connect?: InputMaybe<BusinessWalletBaseCommissionConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletBaseCommissionConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletBaseCommissionRelationInput>;
  delete?: InputMaybe<BusinessWalletBaseCommissionDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletBaseCommissionDisconnectInput>;
  update?: InputMaybe<BusinessWalletBaseCommissionUpdateInput>;
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletJoiningFeesArgs = {
  connect?: InputMaybe<BusinessWalletJoiningFeeConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletJoiningFeeConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletJoiningFeeRelationInput>;
  delete?: InputMaybe<BusinessWalletJoiningFeeDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletJoiningFeeDisconnectInput>;
  update?: InputMaybe<BusinessWalletJoiningFeeUpdateInput>;
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletMaintenanceFeesArgs = {
  connect?: InputMaybe<BusinessWalletMaintenanceFeeConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletMaintenanceFeeConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletMaintenanceFeeRelationInput>;
  delete?: InputMaybe<BusinessWalletMaintenanceFeeDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletMaintenanceFeeDisconnectInput>;
  update?: InputMaybe<BusinessWalletMaintenanceFeeUpdateInput>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletOverDraftLimitsArgs = {
  connect?: InputMaybe<BusinessWalletOverDraftLimitConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletOverDraftLimitConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletOverDraftLimitRelationInput>;
  delete?: InputMaybe<BusinessWalletOverDraftLimitDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletOverDraftLimitDisconnectInput>;
  update?: InputMaybe<BusinessWalletOverDraftLimitUpdateInput>;
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletPayoutFeesArgs = {
  connect?: InputMaybe<BusinessWalletPayoutFeeConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletPayoutFeeConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletPayoutFeeRelationInput>;
  delete?: InputMaybe<BusinessWalletPayoutFeeDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletPayoutFeeDisconnectInput>;
  update?: InputMaybe<BusinessWalletPayoutFeeUpdateInput>;
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletRollingReserveFeesArgs = {
  connect?: InputMaybe<BusinessWalletRollingReserveFeeConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletRollingReserveFeeConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletRollingReserveFeeRelationInput>;
  delete?: InputMaybe<BusinessWalletRollingReserveFeeDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletRollingReserveFeeDisconnectInput>;
  update?: InputMaybe<BusinessWalletRollingReserveFeeUpdateInput>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletSettlementFeesArgs = {
  connect?: InputMaybe<BusinessWalletSettlementFeeConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletSettlementFeeConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletSettlementFeeRelationInput>;
  delete?: InputMaybe<BusinessWalletSettlementFeeDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletSettlementFeeDisconnectInput>;
  update?: InputMaybe<BusinessWalletSettlementFeeUpdateInput>;
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletTierCommissionsArgs = {
  connect?: InputMaybe<BusinessWalletTierCommissionConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletTierCommissionConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletTierCommissionRelationInput>;
  delete?: InputMaybe<BusinessWalletTierCommissionDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletTierCommissionDisconnectInput>;
  update?: InputMaybe<BusinessWalletTierCommissionUpdateInput>;
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessWalletsArgs = {
  connect?: InputMaybe<BusinessWalletConnectInput>;
  connectOrCreate?: InputMaybe<BusinessWalletConnectOrCreateInput>;
  create?: InputMaybe<BusinessWalletRelationInput>;
  delete?: InputMaybe<BusinessWalletDeleteInput>;
  disconnect?: InputMaybe<BusinessWalletDisconnectInput>;
  update?: InputMaybe<BusinessWalletUpdateInput>;
  where?: InputMaybe<BusinessWalletWhere>;
};


/** mutation root */
export type Mutation_RootUpdateBusinessesArgs = {
  connect?: InputMaybe<BusinessConnectInput>;
  connectOrCreate?: InputMaybe<BusinessConnectOrCreateInput>;
  create?: InputMaybe<BusinessRelationInput>;
  delete?: InputMaybe<BusinessDeleteInput>;
  disconnect?: InputMaybe<BusinessDisconnectInput>;
  update?: InputMaybe<BusinessUpdateInput>;
  where?: InputMaybe<BusinessWhere>;
};


/** mutation root */
export type Mutation_RootUpdateCountriesArgs = {
  connect?: InputMaybe<CountryConnectInput>;
  connectOrCreate?: InputMaybe<CountryConnectOrCreateInput>;
  create?: InputMaybe<CountryRelationInput>;
  delete?: InputMaybe<CountryDeleteInput>;
  disconnect?: InputMaybe<CountryDisconnectInput>;
  update?: InputMaybe<CountryUpdateInput>;
  where?: InputMaybe<CountryWhere>;
};


/** mutation root */
export type Mutation_RootUpdateCreatedByUsersArgs = {
  update?: InputMaybe<CreatedByUserUpdateInput>;
  where?: InputMaybe<CreatedByUserWhere>;
};


/** mutation root */
export type Mutation_RootUpdateCreditCartdProcessingSolutionsArgs = {
  connect?: InputMaybe<CreditCartdProcessingSolutionConnectInput>;
  connectOrCreate?: InputMaybe<CreditCartdProcessingSolutionConnectOrCreateInput>;
  create?: InputMaybe<CreditCartdProcessingSolutionRelationInput>;
  delete?: InputMaybe<CreditCartdProcessingSolutionDeleteInput>;
  disconnect?: InputMaybe<CreditCartdProcessingSolutionDisconnectInput>;
  update?: InputMaybe<CreditCartdProcessingSolutionUpdateInput>;
  where?: InputMaybe<CreditCartdProcessingSolutionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateCryptoCurrencySolutionsArgs = {
  connect?: InputMaybe<CryptoCurrencySolutionConnectInput>;
  connectOrCreate?: InputMaybe<CryptoCurrencySolutionConnectOrCreateInput>;
  create?: InputMaybe<CryptoCurrencySolutionRelationInput>;
  delete?: InputMaybe<CryptoCurrencySolutionDeleteInput>;
  disconnect?: InputMaybe<CryptoCurrencySolutionDisconnectInput>;
  update?: InputMaybe<CryptoCurrencySolutionUpdateInput>;
  where?: InputMaybe<CryptoCurrencySolutionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateCurrenciesArgs = {
  update?: InputMaybe<CurrencyUpdateInput>;
  where?: InputMaybe<CurrencyWhere>;
};


/** mutation root */
export type Mutation_RootUpdateCustomersArgs = {
  connect?: InputMaybe<CustomerConnectInput>;
  connectOrCreate?: InputMaybe<CustomerConnectOrCreateInput>;
  create?: InputMaybe<CustomerRelationInput>;
  delete?: InputMaybe<CustomerDeleteInput>;
  disconnect?: InputMaybe<CustomerDisconnectInput>;
  update?: InputMaybe<CustomerUpdateInput>;
  where?: InputMaybe<CustomerWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultBaseCommissionsArgs = {
  connect?: InputMaybe<DefaultBaseCommissionConnectInput>;
  connectOrCreate?: InputMaybe<DefaultBaseCommissionConnectOrCreateInput>;
  create?: InputMaybe<DefaultBaseCommissionRelationInput>;
  delete?: InputMaybe<DefaultBaseCommissionDeleteInput>;
  disconnect?: InputMaybe<DefaultBaseCommissionDisconnectInput>;
  update?: InputMaybe<DefaultBaseCommissionUpdateInput>;
  where?: InputMaybe<DefaultBaseCommissionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultCurrencyConversionFeesArgs = {
  connect?: InputMaybe<DefaultCurrencyConversionFeesConnectInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionFeesConnectOrCreateInput>;
  create?: InputMaybe<DefaultCurrencyConversionFeesRelationInput>;
  delete?: InputMaybe<DefaultCurrencyConversionFeesDeleteInput>;
  disconnect?: InputMaybe<DefaultCurrencyConversionFeesDisconnectInput>;
  update?: InputMaybe<DefaultCurrencyConversionFeesUpdateInput>;
  where?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultCurrencyConversionMarkupsArgs = {
  connect?: InputMaybe<DefaultCurrencyConversionMarkupConnectInput>;
  connectOrCreate?: InputMaybe<DefaultCurrencyConversionMarkupConnectOrCreateInput>;
  create?: InputMaybe<DefaultCurrencyConversionMarkupRelationInput>;
  delete?: InputMaybe<DefaultCurrencyConversionMarkupDeleteInput>;
  disconnect?: InputMaybe<DefaultCurrencyConversionMarkupDisconnectInput>;
  update?: InputMaybe<DefaultCurrencyConversionMarkupUpdateInput>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultJoiningFeesArgs = {
  connect?: InputMaybe<DefaultJoiningFeeConnectInput>;
  connectOrCreate?: InputMaybe<DefaultJoiningFeeConnectOrCreateInput>;
  create?: InputMaybe<DefaultJoiningFeeRelationInput>;
  delete?: InputMaybe<DefaultJoiningFeeDeleteInput>;
  disconnect?: InputMaybe<DefaultJoiningFeeDisconnectInput>;
  update?: InputMaybe<DefaultJoiningFeeUpdateInput>;
  where?: InputMaybe<DefaultJoiningFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultMaintenanceFeesArgs = {
  connect?: InputMaybe<DefaultMaintenanceFeeConnectInput>;
  connectOrCreate?: InputMaybe<DefaultMaintenanceFeeConnectOrCreateInput>;
  create?: InputMaybe<DefaultMaintenanceFeeRelationInput>;
  delete?: InputMaybe<DefaultMaintenanceFeeDeleteInput>;
  disconnect?: InputMaybe<DefaultMaintenanceFeeDisconnectInput>;
  update?: InputMaybe<DefaultMaintenanceFeeUpdateInput>;
  where?: InputMaybe<DefaultMaintenanceFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultOverDraftLimitsArgs = {
  connect?: InputMaybe<DefaultOverDraftLimitConnectInput>;
  connectOrCreate?: InputMaybe<DefaultOverDraftLimitConnectOrCreateInput>;
  create?: InputMaybe<DefaultOverDraftLimitRelationInput>;
  delete?: InputMaybe<DefaultOverDraftLimitDeleteInput>;
  disconnect?: InputMaybe<DefaultOverDraftLimitDisconnectInput>;
  update?: InputMaybe<DefaultOverDraftLimitUpdateInput>;
  where?: InputMaybe<DefaultOverDraftLimitWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultPayoutFeesArgs = {
  connect?: InputMaybe<DefaultPayoutFeeConnectInput>;
  connectOrCreate?: InputMaybe<DefaultPayoutFeeConnectOrCreateInput>;
  create?: InputMaybe<DefaultPayoutFeeRelationInput>;
  delete?: InputMaybe<DefaultPayoutFeeDeleteInput>;
  disconnect?: InputMaybe<DefaultPayoutFeeDisconnectInput>;
  update?: InputMaybe<DefaultPayoutFeeUpdateInput>;
  where?: InputMaybe<DefaultPayoutFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultRollingReserveFeesArgs = {
  connect?: InputMaybe<DefaultRollingReserveFeeConnectInput>;
  connectOrCreate?: InputMaybe<DefaultRollingReserveFeeConnectOrCreateInput>;
  create?: InputMaybe<DefaultRollingReserveFeeRelationInput>;
  delete?: InputMaybe<DefaultRollingReserveFeeDeleteInput>;
  disconnect?: InputMaybe<DefaultRollingReserveFeeDisconnectInput>;
  update?: InputMaybe<DefaultRollingReserveFeeUpdateInput>;
  where?: InputMaybe<DefaultRollingReserveFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultSettlementFeesArgs = {
  connect?: InputMaybe<DefaultSettlementFeeConnectInput>;
  connectOrCreate?: InputMaybe<DefaultSettlementFeeConnectOrCreateInput>;
  create?: InputMaybe<DefaultSettlementFeeRelationInput>;
  delete?: InputMaybe<DefaultSettlementFeeDeleteInput>;
  disconnect?: InputMaybe<DefaultSettlementFeeDisconnectInput>;
  update?: InputMaybe<DefaultSettlementFeeUpdateInput>;
  where?: InputMaybe<DefaultSettlementFeeWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDefaultTierCommissionsArgs = {
  connect?: InputMaybe<DefaultTierCommissionConnectInput>;
  connectOrCreate?: InputMaybe<DefaultTierCommissionConnectOrCreateInput>;
  create?: InputMaybe<DefaultTierCommissionRelationInput>;
  delete?: InputMaybe<DefaultTierCommissionDeleteInput>;
  disconnect?: InputMaybe<DefaultTierCommissionDisconnectInput>;
  update?: InputMaybe<DefaultTierCommissionUpdateInput>;
  where?: InputMaybe<DefaultTierCommissionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateDepositStatusArgs = {
  data: UpdateDepostStatusInput;
};


/** mutation root */
export type Mutation_RootUpdateFeaturePermissionsArgs = {
  connect?: InputMaybe<FeaturePermissionConnectInput>;
  connectOrCreate?: InputMaybe<FeaturePermissionConnectOrCreateInput>;
  create?: InputMaybe<FeaturePermissionRelationInput>;
  delete?: InputMaybe<FeaturePermissionDeleteInput>;
  disconnect?: InputMaybe<FeaturePermissionDisconnectInput>;
  update?: InputMaybe<FeaturePermissionUpdateInput>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateGraphDataNeo4JsArgs = {
  update?: InputMaybe<GraphDataNeo4jUpdateInput>;
  where?: InputMaybe<GraphDataNeo4jWhere>;
};


/** mutation root */
export type Mutation_RootUpdateIntermediaryAccountsArgs = {
  connect?: InputMaybe<IntermediaryAccountConnectInput>;
  connectOrCreate?: InputMaybe<IntermediaryAccountConnectOrCreateInput>;
  create?: InputMaybe<IntermediaryAccountRelationInput>;
  delete?: InputMaybe<IntermediaryAccountDeleteInput>;
  disconnect?: InputMaybe<IntermediaryAccountDisconnectInput>;
  update?: InputMaybe<IntermediaryAccountUpdateInput>;
  where?: InputMaybe<IntermediaryAccountWhere>;
};


/** mutation root */
export type Mutation_RootUpdateMarketRegionsArgs = {
  update?: InputMaybe<MarketRegionsUpdateInput>;
  where?: InputMaybe<MarketRegionsWhere>;
};


/** mutation root */
export type Mutation_RootUpdateMerchantsArgs = {
  connect?: InputMaybe<MerchantConnectInput>;
  connectOrCreate?: InputMaybe<MerchantConnectOrCreateInput>;
  create?: InputMaybe<MerchantRelationInput>;
  delete?: InputMaybe<MerchantDeleteInput>;
  disconnect?: InputMaybe<MerchantDisconnectInput>;
  update?: InputMaybe<MerchantUpdateInput>;
  where?: InputMaybe<MerchantWhere>;
};


/** mutation root */
export type Mutation_RootUpdateOrganisationTypesArgs = {
  update?: InputMaybe<OrganisationTypeUpdateInput>;
  where?: InputMaybe<OrganisationTypeWhere>;
};


/** mutation root */
export type Mutation_RootUpdatePersonalDocumentsArgs = {
  connect?: InputMaybe<PersonalDocumentConnectInput>;
  connectOrCreate?: InputMaybe<PersonalDocumentConnectOrCreateInput>;
  create?: InputMaybe<PersonalDocumentRelationInput>;
  delete?: InputMaybe<PersonalDocumentDeleteInput>;
  disconnect?: InputMaybe<PersonalDocumentDisconnectInput>;
  update?: InputMaybe<PersonalDocumentUpdateInput>;
  where?: InputMaybe<PersonalDocumentWhere>;
};


/** mutation root */
export type Mutation_RootUpdateRrSettlementStatusArgs = {
  data: UpdateRrSettlementStatusInput;
};


/** mutation root */
export type Mutation_RootUpdateSubAdminsArgs = {
  connect?: InputMaybe<SubAdminConnectInput>;
  connectOrCreate?: InputMaybe<SubAdminConnectOrCreateInput>;
  create?: InputMaybe<SubAdminRelationInput>;
  delete?: InputMaybe<SubAdminDeleteInput>;
  disconnect?: InputMaybe<SubAdminDisconnectInput>;
  update?: InputMaybe<SubAdminUpdateInput>;
  where?: InputMaybe<SubAdminWhere>;
};


/** mutation root */
export type Mutation_RootUpdateSuperAdminsArgs = {
  connect?: InputMaybe<SuperAdminConnectInput>;
  connectOrCreate?: InputMaybe<SuperAdminConnectOrCreateInput>;
  create?: InputMaybe<SuperAdminRelationInput>;
  delete?: InputMaybe<SuperAdminDeleteInput>;
  disconnect?: InputMaybe<SuperAdminDisconnectInput>;
  update?: InputMaybe<SuperAdminUpdateInput>;
  where?: InputMaybe<SuperAdminWhere>;
};


/** mutation root */
export type Mutation_RootUpdateTeamCommonPermisionsArgs = {
  update?: InputMaybe<TeamCommonPermisionUpdateInput>;
  where?: InputMaybe<TeamCommonPermisionWhere>;
};


/** mutation root */
export type Mutation_RootUpdateTeamMembersArgs = {
  connect?: InputMaybe<TeamMemberConnectInput>;
  connectOrCreate?: InputMaybe<TeamMemberConnectOrCreateInput>;
  create?: InputMaybe<TeamMemberRelationInput>;
  delete?: InputMaybe<TeamMemberDeleteInput>;
  disconnect?: InputMaybe<TeamMemberDisconnectInput>;
  update?: InputMaybe<TeamMemberUpdateInput>;
  where?: InputMaybe<TeamMemberWhere>;
};


/** mutation root */
export type Mutation_RootUpdateTeamsArgs = {
  connect?: InputMaybe<TeamConnectInput>;
  connectOrCreate?: InputMaybe<TeamConnectOrCreateInput>;
  create?: InputMaybe<TeamRelationInput>;
  delete?: InputMaybe<TeamDeleteInput>;
  disconnect?: InputMaybe<TeamDisconnectInput>;
  update?: InputMaybe<TeamUpdateInput>;
  where?: InputMaybe<TeamWhere>;
};


/** mutation root */
export type Mutation_RootUpdateWithdrawalStatusArgs = {
  data: UpdateWithdrawalStatusInput;
};


/** mutation root */
export type Mutation_RootUpdate_AccountLedgersArgs = {
  _inc?: InputMaybe<AccountLedgers_Inc_Input>;
  _set?: InputMaybe<AccountLedgers_Set_Input>;
  where: AccountLedgers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_AccountLedgers_By_PkArgs = {
  _inc?: InputMaybe<AccountLedgers_Inc_Input>;
  _set?: InputMaybe<AccountLedgers_Set_Input>;
  pk_columns: AccountLedgers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_AccountLedgers_ManyArgs = {
  updates: Array<AccountLedgers_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ActivityLogsArgs = {
  _set?: InputMaybe<ActivityLogs_Set_Input>;
  where: ActivityLogs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ActivityLogs_By_PkArgs = {
  _set?: InputMaybe<ActivityLogs_Set_Input>;
  pk_columns: ActivityLogs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ActivityLogs_ManyArgs = {
  updates: Array<ActivityLogs_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_AdjustmentTypesArgs = {
  _set?: InputMaybe<AdjustmentTypes_Set_Input>;
  where: AdjustmentTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_AdjustmentTypes_By_PkArgs = {
  _set?: InputMaybe<AdjustmentTypes_Set_Input>;
  pk_columns: AdjustmentTypes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_AdjustmentTypes_ManyArgs = {
  updates: Array<AdjustmentTypes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_AdjustmentsArgs = {
  _append?: InputMaybe<Adjustments_Append_Input>;
  _delete_at_path?: InputMaybe<Adjustments_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Adjustments_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Adjustments_Delete_Key_Input>;
  _inc?: InputMaybe<Adjustments_Inc_Input>;
  _prepend?: InputMaybe<Adjustments_Prepend_Input>;
  _set?: InputMaybe<Adjustments_Set_Input>;
  where: Adjustments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Adjustments_By_PkArgs = {
  _append?: InputMaybe<Adjustments_Append_Input>;
  _delete_at_path?: InputMaybe<Adjustments_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Adjustments_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Adjustments_Delete_Key_Input>;
  _inc?: InputMaybe<Adjustments_Inc_Input>;
  _prepend?: InputMaybe<Adjustments_Prepend_Input>;
  _set?: InputMaybe<Adjustments_Set_Input>;
  pk_columns: Adjustments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Adjustments_ManyArgs = {
  updates: Array<Adjustments_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ApiTemplatesArgs = {
  _append?: InputMaybe<ApiTemplates_Append_Input>;
  _delete_at_path?: InputMaybe<ApiTemplates_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ApiTemplates_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ApiTemplates_Delete_Key_Input>;
  _prepend?: InputMaybe<ApiTemplates_Prepend_Input>;
  _set?: InputMaybe<ApiTemplates_Set_Input>;
  where: ApiTemplates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ApiTemplates_By_PkArgs = {
  _append?: InputMaybe<ApiTemplates_Append_Input>;
  _delete_at_path?: InputMaybe<ApiTemplates_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ApiTemplates_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ApiTemplates_Delete_Key_Input>;
  _prepend?: InputMaybe<ApiTemplates_Prepend_Input>;
  _set?: InputMaybe<ApiTemplates_Set_Input>;
  pk_columns: ApiTemplates_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ApiTemplates_ManyArgs = {
  updates: Array<ApiTemplates_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ConversationCategoriesArgs = {
  _inc?: InputMaybe<ConversationCategories_Inc_Input>;
  _set?: InputMaybe<ConversationCategories_Set_Input>;
  where: ConversationCategories_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ConversationCategories_By_PkArgs = {
  _inc?: InputMaybe<ConversationCategories_Inc_Input>;
  _set?: InputMaybe<ConversationCategories_Set_Input>;
  pk_columns: ConversationCategories_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ConversationCategories_ManyArgs = {
  updates: Array<ConversationCategories_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ConversationStatusArgs = {
  _set?: InputMaybe<ConversationStatus_Set_Input>;
  where: ConversationStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ConversationStatus_By_PkArgs = {
  _set?: InputMaybe<ConversationStatus_Set_Input>;
  pk_columns: ConversationStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ConversationStatus_ManyArgs = {
  updates: Array<ConversationStatus_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ConversationsArgs = {
  _append?: InputMaybe<Conversations_Append_Input>;
  _delete_at_path?: InputMaybe<Conversations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Conversations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Conversations_Delete_Key_Input>;
  _inc?: InputMaybe<Conversations_Inc_Input>;
  _prepend?: InputMaybe<Conversations_Prepend_Input>;
  _set?: InputMaybe<Conversations_Set_Input>;
  where: Conversations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Conversations_By_PkArgs = {
  _append?: InputMaybe<Conversations_Append_Input>;
  _delete_at_path?: InputMaybe<Conversations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Conversations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Conversations_Delete_Key_Input>;
  _inc?: InputMaybe<Conversations_Inc_Input>;
  _prepend?: InputMaybe<Conversations_Prepend_Input>;
  _set?: InputMaybe<Conversations_Set_Input>;
  pk_columns: Conversations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Conversations_ManyArgs = {
  updates: Array<Conversations_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_CurrencyExchangeArgs = {
  _append?: InputMaybe<CurrencyExchange_Append_Input>;
  _delete_at_path?: InputMaybe<CurrencyExchange_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<CurrencyExchange_Delete_Elem_Input>;
  _delete_key?: InputMaybe<CurrencyExchange_Delete_Key_Input>;
  _inc?: InputMaybe<CurrencyExchange_Inc_Input>;
  _prepend?: InputMaybe<CurrencyExchange_Prepend_Input>;
  _set?: InputMaybe<CurrencyExchange_Set_Input>;
  where: CurrencyExchange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_CurrencyExchange_By_PkArgs = {
  _append?: InputMaybe<CurrencyExchange_Append_Input>;
  _delete_at_path?: InputMaybe<CurrencyExchange_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<CurrencyExchange_Delete_Elem_Input>;
  _delete_key?: InputMaybe<CurrencyExchange_Delete_Key_Input>;
  _inc?: InputMaybe<CurrencyExchange_Inc_Input>;
  _prepend?: InputMaybe<CurrencyExchange_Prepend_Input>;
  _set?: InputMaybe<CurrencyExchange_Set_Input>;
  pk_columns: CurrencyExchange_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CurrencyExchange_ManyArgs = {
  updates: Array<CurrencyExchange_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DailyCommissionVolumeArgs = {
  _inc?: InputMaybe<DailyCommissionVolume_Inc_Input>;
  _set?: InputMaybe<DailyCommissionVolume_Set_Input>;
  where: DailyCommissionVolume_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DailyCommissionVolume_By_PkArgs = {
  _inc?: InputMaybe<DailyCommissionVolume_Inc_Input>;
  _set?: InputMaybe<DailyCommissionVolume_Set_Input>;
  pk_columns: DailyCommissionVolume_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DailyCommissionVolume_ManyArgs = {
  updates: Array<DailyCommissionVolume_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DailyDepositVolumeArgs = {
  _inc?: InputMaybe<DailyDepositVolume_Inc_Input>;
  _set?: InputMaybe<DailyDepositVolume_Set_Input>;
  where: DailyDepositVolume_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DailyDepositVolume_By_PkArgs = {
  _inc?: InputMaybe<DailyDepositVolume_Inc_Input>;
  _set?: InputMaybe<DailyDepositVolume_Set_Input>;
  pk_columns: DailyDepositVolume_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DailyDepositVolume_ManyArgs = {
  updates: Array<DailyDepositVolume_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DailyWithdrawalVolumeArgs = {
  _inc?: InputMaybe<DailyWithdrawalVolume_Inc_Input>;
  _set?: InputMaybe<DailyWithdrawalVolume_Set_Input>;
  where: DailyWithdrawalVolume_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DailyWithdrawalVolume_By_PkArgs = {
  _inc?: InputMaybe<DailyWithdrawalVolume_Inc_Input>;
  _set?: InputMaybe<DailyWithdrawalVolume_Set_Input>;
  pk_columns: DailyWithdrawalVolume_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DailyWithdrawalVolume_ManyArgs = {
  updates: Array<DailyWithdrawalVolume_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DepositStatusesArgs = {
  _set?: InputMaybe<DepositStatuses_Set_Input>;
  where: DepositStatuses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DepositStatuses_By_PkArgs = {
  _set?: InputMaybe<DepositStatuses_Set_Input>;
  pk_columns: DepositStatuses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DepositStatuses_ManyArgs = {
  updates: Array<DepositStatuses_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DepositTypesArgs = {
  _set?: InputMaybe<DepositTypes_Set_Input>;
  where: DepositTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DepositTypes_By_PkArgs = {
  _set?: InputMaybe<DepositTypes_Set_Input>;
  pk_columns: DepositTypes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DepositTypes_ManyArgs = {
  updates: Array<DepositTypes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DepositsArgs = {
  _append?: InputMaybe<Deposits_Append_Input>;
  _delete_at_path?: InputMaybe<Deposits_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Deposits_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Deposits_Delete_Key_Input>;
  _inc?: InputMaybe<Deposits_Inc_Input>;
  _prepend?: InputMaybe<Deposits_Prepend_Input>;
  _set?: InputMaybe<Deposits_Set_Input>;
  where: Deposits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Deposits_By_PkArgs = {
  _append?: InputMaybe<Deposits_Append_Input>;
  _delete_at_path?: InputMaybe<Deposits_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Deposits_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Deposits_Delete_Key_Input>;
  _inc?: InputMaybe<Deposits_Inc_Input>;
  _prepend?: InputMaybe<Deposits_Prepend_Input>;
  _set?: InputMaybe<Deposits_Set_Input>;
  pk_columns: Deposits_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Deposits_ManyArgs = {
  updates: Array<Deposits_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_FeatureTypesArgs = {
  _set?: InputMaybe<FeatureTypes_Set_Input>;
  where: FeatureTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_FeatureTypes_By_PkArgs = {
  _set?: InputMaybe<FeatureTypes_Set_Input>;
  pk_columns: FeatureTypes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_FeatureTypes_ManyArgs = {
  updates: Array<FeatureTypes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_GraphDataArgs = {
  _inc?: InputMaybe<GraphData_Inc_Input>;
  _set?: InputMaybe<GraphData_Set_Input>;
  where: GraphData_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_GraphData_ManyArgs = {
  updates: Array<GraphData_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_InternalTransfersArgs = {
  _inc?: InputMaybe<InternalTransfers_Inc_Input>;
  _set?: InputMaybe<InternalTransfers_Set_Input>;
  where: InternalTransfers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_InternalTransfers_By_PkArgs = {
  _inc?: InputMaybe<InternalTransfers_Inc_Input>;
  _set?: InputMaybe<InternalTransfers_Set_Input>;
  pk_columns: InternalTransfers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_InternalTransfers_ManyArgs = {
  updates: Array<InternalTransfers_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_LedgerTypesArgs = {
  _set?: InputMaybe<LedgerTypes_Set_Input>;
  where: LedgerTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_LedgerTypes_By_PkArgs = {
  _set?: InputMaybe<LedgerTypes_Set_Input>;
  pk_columns: LedgerTypes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LedgerTypes_ManyArgs = {
  updates: Array<LedgerTypes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_LedgersArgs = {
  _append?: InputMaybe<Ledgers_Append_Input>;
  _delete_at_path?: InputMaybe<Ledgers_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Ledgers_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Ledgers_Delete_Key_Input>;
  _inc?: InputMaybe<Ledgers_Inc_Input>;
  _prepend?: InputMaybe<Ledgers_Prepend_Input>;
  _set?: InputMaybe<Ledgers_Set_Input>;
  where: Ledgers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ledgers_By_PkArgs = {
  _append?: InputMaybe<Ledgers_Append_Input>;
  _delete_at_path?: InputMaybe<Ledgers_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Ledgers_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Ledgers_Delete_Key_Input>;
  _inc?: InputMaybe<Ledgers_Inc_Input>;
  _prepend?: InputMaybe<Ledgers_Prepend_Input>;
  _set?: InputMaybe<Ledgers_Set_Input>;
  pk_columns: Ledgers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ledgers_ManyArgs = {
  updates: Array<Ledgers_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_MessageTypesArgs = {
  _set?: InputMaybe<MessageTypes_Set_Input>;
  where: MessageTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_MessageTypes_By_PkArgs = {
  _set?: InputMaybe<MessageTypes_Set_Input>;
  pk_columns: MessageTypes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_MessageTypes_ManyArgs = {
  updates: Array<MessageTypes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_MessagesArgs = {
  _set?: InputMaybe<Messages_Set_Input>;
  where: Messages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Messages_By_PkArgs = {
  _set?: InputMaybe<Messages_Set_Input>;
  pk_columns: Messages_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Messages_ManyArgs = {
  updates: Array<Messages_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_RollingReserveStatusesArgs = {
  _set?: InputMaybe<RollingReserveStatuses_Set_Input>;
  where: RollingReserveStatuses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RollingReserveStatuses_By_PkArgs = {
  _set?: InputMaybe<RollingReserveStatuses_Set_Input>;
  pk_columns: RollingReserveStatuses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RollingReserveStatuses_ManyArgs = {
  updates: Array<RollingReserveStatuses_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_RollingReservesArgs = {
  _append?: InputMaybe<RollingReserves_Append_Input>;
  _delete_at_path?: InputMaybe<RollingReserves_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<RollingReserves_Delete_Elem_Input>;
  _delete_key?: InputMaybe<RollingReserves_Delete_Key_Input>;
  _inc?: InputMaybe<RollingReserves_Inc_Input>;
  _prepend?: InputMaybe<RollingReserves_Prepend_Input>;
  _set?: InputMaybe<RollingReserves_Set_Input>;
  where: RollingReserves_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RollingReserves_By_PkArgs = {
  _append?: InputMaybe<RollingReserves_Append_Input>;
  _delete_at_path?: InputMaybe<RollingReserves_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<RollingReserves_Delete_Elem_Input>;
  _delete_key?: InputMaybe<RollingReserves_Delete_Key_Input>;
  _inc?: InputMaybe<RollingReserves_Inc_Input>;
  _prepend?: InputMaybe<RollingReserves_Prepend_Input>;
  _set?: InputMaybe<RollingReserves_Set_Input>;
  pk_columns: RollingReserves_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RollingReserves_ManyArgs = {
  updates: Array<RollingReserves_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TagsArgs = {
  _set?: InputMaybe<Tags_Set_Input>;
  where: Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tags_By_PkArgs = {
  _set?: InputMaybe<Tags_Set_Input>;
  pk_columns: Tags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Tags_ManyArgs = {
  updates: Array<Tags_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TaskPrioritiesArgs = {
  _set?: InputMaybe<TaskPriorities_Set_Input>;
  where: TaskPriorities_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_TaskPriorities_By_PkArgs = {
  _set?: InputMaybe<TaskPriorities_Set_Input>;
  pk_columns: TaskPriorities_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TaskPriorities_ManyArgs = {
  updates: Array<TaskPriorities_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TaskStatusTypesArgs = {
  _set?: InputMaybe<TaskStatusTypes_Set_Input>;
  where: TaskStatusTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_TaskStatusTypes_By_PkArgs = {
  _set?: InputMaybe<TaskStatusTypes_Set_Input>;
  pk_columns: TaskStatusTypes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TaskStatusTypes_ManyArgs = {
  updates: Array<TaskStatusTypes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TasksArgs = {
  _append?: InputMaybe<Tasks_Append_Input>;
  _delete_at_path?: InputMaybe<Tasks_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Tasks_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Tasks_Delete_Key_Input>;
  _inc?: InputMaybe<Tasks_Inc_Input>;
  _prepend?: InputMaybe<Tasks_Prepend_Input>;
  _set?: InputMaybe<Tasks_Set_Input>;
  where: Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tasks_By_PkArgs = {
  _append?: InputMaybe<Tasks_Append_Input>;
  _delete_at_path?: InputMaybe<Tasks_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Tasks_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Tasks_Delete_Key_Input>;
  _inc?: InputMaybe<Tasks_Inc_Input>;
  _prepend?: InputMaybe<Tasks_Prepend_Input>;
  _set?: InputMaybe<Tasks_Set_Input>;
  pk_columns: Tasks_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Tasks_ManyArgs = {
  updates: Array<Tasks_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TextResultArgs = {
  _set?: InputMaybe<TextResult_Set_Input>;
  where: TextResult_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_TextResult_ManyArgs = {
  updates: Array<TextResult_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TransactionTypesArgs = {
  _set?: InputMaybe<TransactionTypes_Set_Input>;
  where: TransactionTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_TransactionTypes_By_PkArgs = {
  _set?: InputMaybe<TransactionTypes_Set_Input>;
  pk_columns: TransactionTypes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TransactionTypes_ManyArgs = {
  updates: Array<TransactionTypes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_WithdrawalStatusesArgs = {
  _set?: InputMaybe<WithdrawalStatuses_Set_Input>;
  where: WithdrawalStatuses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_WithdrawalStatuses_By_PkArgs = {
  _set?: InputMaybe<WithdrawalStatuses_Set_Input>;
  pk_columns: WithdrawalStatuses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_WithdrawalStatuses_ManyArgs = {
  updates: Array<WithdrawalStatuses_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_WithdrawalTypesArgs = {
  _set?: InputMaybe<WithdrawalTypes_Set_Input>;
  where: WithdrawalTypes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_WithdrawalTypes_By_PkArgs = {
  _set?: InputMaybe<WithdrawalTypes_Set_Input>;
  pk_columns: WithdrawalTypes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_WithdrawalTypes_ManyArgs = {
  updates: Array<WithdrawalTypes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_WithdrawalsArgs = {
  _append?: InputMaybe<Withdrawals_Append_Input>;
  _delete_at_path?: InputMaybe<Withdrawals_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Withdrawals_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Withdrawals_Delete_Key_Input>;
  _inc?: InputMaybe<Withdrawals_Inc_Input>;
  _prepend?: InputMaybe<Withdrawals_Prepend_Input>;
  _set?: InputMaybe<Withdrawals_Set_Input>;
  where: Withdrawals_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Withdrawals_By_PkArgs = {
  _append?: InputMaybe<Withdrawals_Append_Input>;
  _delete_at_path?: InputMaybe<Withdrawals_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Withdrawals_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Withdrawals_Delete_Key_Input>;
  _inc?: InputMaybe<Withdrawals_Inc_Input>;
  _prepend?: InputMaybe<Withdrawals_Prepend_Input>;
  _set?: InputMaybe<Withdrawals_Set_Input>;
  pk_columns: Withdrawals_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Withdrawals_ManyArgs = {
  updates: Array<Withdrawals_Updates>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']>;
  _gt?: InputMaybe<Scalars['numeric']>;
  _gte?: InputMaybe<Scalars['numeric']>;
  _in?: InputMaybe<Array<Scalars['numeric']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['numeric']>;
  _lte?: InputMaybe<Scalars['numeric']>;
  _neq?: InputMaybe<Scalars['numeric']>;
  _nin?: InputMaybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

export type Query_Root = {
  __typename?: 'query_root';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  /** fetch data from the table: "accountLedgers" using primary key columns */
  accountLedgers_by_pk?: Maybe<AccountLedgers>;
  accounts: Array<Account>;
  accountsAggregate: AccountAggregateSelection;
  accountsConnection: AccountsConnection;
  /** An array relationship */
  activityLogs: Array<ActivityLogs>;
  /** An aggregate relationship */
  activityLogs_aggregate: ActivityLogs_Aggregate;
  /** fetch data from the table: "activityLogs" using primary key columns */
  activityLogs_by_pk?: Maybe<ActivityLogs>;
  /** fetch data from the table: "adjustmentTypes" */
  adjustmentTypes: Array<AdjustmentTypes>;
  /** fetch aggregated fields from the table: "adjustmentTypes" */
  adjustmentTypes_aggregate: AdjustmentTypes_Aggregate;
  /** fetch data from the table: "adjustmentTypes" using primary key columns */
  adjustmentTypes_by_pk?: Maybe<AdjustmentTypes>;
  /** An array relationship */
  adjustments: Array<Adjustments>;
  /** An aggregate relationship */
  adjustments_aggregate: Adjustments_Aggregate;
  /** fetch data from the table: "adjustments" using primary key columns */
  adjustments_by_pk?: Maybe<Adjustments>;
  alternateMethodSolutions: Array<AlternateMethodSolution>;
  alternateMethodSolutionsAggregate: AlternateMethodSolutionAggregateSelection;
  alternateMethodSolutionsConnection: AlternateMethodSolutionsConnection;
  /** fetch data from the table: "apiTemplates" */
  apiTemplates: Array<ApiTemplates>;
  /** fetch aggregated fields from the table: "apiTemplates" */
  apiTemplates_aggregate: ApiTemplates_Aggregate;
  /** fetch data from the table: "apiTemplates" using primary key columns */
  apiTemplates_by_pk?: Maybe<ApiTemplates>;
  bankWireSolutions: Array<BankWireSolution>;
  bankWireSolutionsAggregate: BankWireSolutionAggregateSelection;
  bankWireSolutionsConnection: BankWireSolutionsConnection;
  banks: Array<Bank>;
  banksAggregate: BankAggregateSelection;
  banksConnection: BanksConnection;
  baseCurrencyConversionRates: Array<BaseCurrencyConversionRate>;
  baseCurrencyConversionRatesAggregate: BaseCurrencyConversionRateAggregateSelection;
  baseCurrencyConversionRatesConnection: BaseCurrencyConversionRatesConnection;
  beneficiaries: Array<Beneficiary>;
  beneficiariesAggregate: BeneficiaryAggregateSelection;
  beneficiariesConnection: BeneficiariesConnection;
  brands: Array<Brand>;
  brandsAggregate: BrandAggregateSelection;
  brandsConnection: BrandsConnection;
  businessCurrencyConversionFees: Array<BusinessCurrencyConversionFees>;
  businessCurrencyConversionFeesAggregate: BusinessCurrencyConversionFeesAggregateSelection;
  businessCurrencyConversionFeesConnection: BusinessCurrencyConversionFeesConnection;
  businessCurrencyConversionMarkups: Array<BusinessCurrencyConversionMarkup>;
  businessCurrencyConversionMarkupsAggregate: BusinessCurrencyConversionMarkupAggregateSelection;
  businessCurrencyConversionMarkupsConnection: BusinessCurrencyConversionMarkupsConnection;
  businessDocuments: Array<BusinessDocument>;
  businessDocumentsAggregate: BusinessDocumentAggregateSelection;
  businessDocumentsConnection: BusinessDocumentsConnection;
  businessOwners: Array<BusinessOwner>;
  businessOwnersAggregate: BusinessOwnerAggregateSelection;
  businessOwnersConnection: BusinessOwnersConnection;
  businessSolutions: Array<BusinessSolution>;
  businessSolutionsAggregate: BusinessSolutionAggregateSelection;
  businessSolutionsConnection: BusinessSolutionsConnection;
  businessTypes: Array<BusinessType>;
  businessTypesAggregate: BusinessTypeAggregateSelection;
  businessTypesConnection: BusinessTypesConnection;
  businessWalletBaseCommissions: Array<BusinessWalletBaseCommission>;
  businessWalletBaseCommissionsAggregate: BusinessWalletBaseCommissionAggregateSelection;
  businessWalletBaseCommissionsConnection: BusinessWalletBaseCommissionsConnection;
  businessWalletJoiningFees: Array<BusinessWalletJoiningFee>;
  businessWalletJoiningFeesAggregate: BusinessWalletJoiningFeeAggregateSelection;
  businessWalletJoiningFeesConnection: BusinessWalletJoiningFeesConnection;
  businessWalletMaintenanceFees: Array<BusinessWalletMaintenanceFee>;
  businessWalletMaintenanceFeesAggregate: BusinessWalletMaintenanceFeeAggregateSelection;
  businessWalletMaintenanceFeesConnection: BusinessWalletMaintenanceFeesConnection;
  businessWalletOverDraftLimits: Array<BusinessWalletOverDraftLimit>;
  businessWalletOverDraftLimitsAggregate: BusinessWalletOverDraftLimitAggregateSelection;
  businessWalletOverDraftLimitsConnection: BusinessWalletOverDraftLimitsConnection;
  businessWalletPayoutFees: Array<BusinessWalletPayoutFee>;
  businessWalletPayoutFeesAggregate: BusinessWalletPayoutFeeAggregateSelection;
  businessWalletPayoutFeesConnection: BusinessWalletPayoutFeesConnection;
  businessWalletRollingReserveFees: Array<BusinessWalletRollingReserveFee>;
  businessWalletRollingReserveFeesAggregate: BusinessWalletRollingReserveFeeAggregateSelection;
  businessWalletRollingReserveFeesConnection: BusinessWalletRollingReserveFeesConnection;
  businessWalletSettlementFees: Array<BusinessWalletSettlementFee>;
  businessWalletSettlementFeesAggregate: BusinessWalletSettlementFeeAggregateSelection;
  businessWalletSettlementFeesConnection: BusinessWalletSettlementFeesConnection;
  businessWalletTierCommissions: Array<BusinessWalletTierCommission>;
  businessWalletTierCommissionsAggregate: BusinessWalletTierCommissionAggregateSelection;
  businessWalletTierCommissionsConnection: BusinessWalletTierCommissionsConnection;
  businessWallets: Array<BusinessWallet>;
  businessWalletsAggregate: BusinessWalletAggregateSelection;
  businessWalletsConnection: BusinessWalletsConnection;
  businesses: Array<Business>;
  businessesAggregate: BusinessAggregateSelection;
  businessesConnection: BusinessesConnection;
  /** execute function "commissionVolumeGraph" which returns "graphData" */
  commissionVolumeGraph: Array<GraphData>;
  /** execute function "commissionVolumeGraph" and query aggregates on result of table type "graphData" */
  commissionVolumeGraph_aggregate: GraphData_Aggregate;
  /** fetch data from the table: "conversationCategories" */
  conversationCategories: Array<ConversationCategories>;
  /** fetch aggregated fields from the table: "conversationCategories" */
  conversationCategories_aggregate: ConversationCategories_Aggregate;
  /** fetch data from the table: "conversationCategories" using primary key columns */
  conversationCategories_by_pk?: Maybe<ConversationCategories>;
  /** fetch data from the table: "conversationStatus" */
  conversationStatus: Array<ConversationStatus>;
  /** fetch aggregated fields from the table: "conversationStatus" */
  conversationStatus_aggregate: ConversationStatus_Aggregate;
  /** fetch data from the table: "conversationStatus" using primary key columns */
  conversationStatus_by_pk?: Maybe<ConversationStatus>;
  /** An array relationship */
  conversations: Array<Conversations>;
  /** An aggregate relationship */
  conversations_aggregate: Conversations_Aggregate;
  /** fetch data from the table: "conversations" using primary key columns */
  conversations_by_pk?: Maybe<Conversations>;
  countries: Array<Country>;
  countriesAggregate: CountryAggregateSelection;
  countriesConnection: CountriesConnection;
  createdByUsers: Array<CreatedByUser>;
  createdByUsersAggregate: CreatedByUserAggregateSelection;
  createdByUsersConnection: CreatedByUsersConnection;
  creditCartdProcessingSolutions: Array<CreditCartdProcessingSolution>;
  creditCartdProcessingSolutionsAggregate: CreditCartdProcessingSolutionAggregateSelection;
  creditCartdProcessingSolutionsConnection: CreditCartdProcessingSolutionsConnection;
  cryptoCurrencySolutions: Array<CryptoCurrencySolution>;
  cryptoCurrencySolutionsAggregate: CryptoCurrencySolutionAggregateSelection;
  cryptoCurrencySolutionsConnection: CryptoCurrencySolutionsConnection;
  currencies: Array<Currency>;
  currenciesAggregate: CurrencyAggregateSelection;
  currenciesConnection: CurrenciesConnection;
  currencyBalanceGraph?: Maybe<Array<Maybe<GraphDataNeo4j>>>;
  /** fetch data from the table: "currencyExchange" */
  currencyExchange: Array<CurrencyExchange>;
  /** fetch aggregated fields from the table: "currencyExchange" */
  currencyExchange_aggregate: CurrencyExchange_Aggregate;
  /** fetch data from the table: "currencyExchange" using primary key columns */
  currencyExchange_by_pk?: Maybe<CurrencyExchange>;
  customers: Array<Customer>;
  customersAggregate: CustomerAggregateSelection;
  customersConnection: CustomersConnection;
  /** fetch data from the table: "dailyCommissionVolume" */
  dailyCommissionVolume: Array<DailyCommissionVolume>;
  /** fetch aggregated fields from the table: "dailyCommissionVolume" */
  dailyCommissionVolume_aggregate: DailyCommissionVolume_Aggregate;
  /** fetch data from the table: "dailyCommissionVolume" using primary key columns */
  dailyCommissionVolume_by_pk?: Maybe<DailyCommissionVolume>;
  /** fetch data from the table: "dailyDepositVolume" */
  dailyDepositVolume: Array<DailyDepositVolume>;
  /** fetch aggregated fields from the table: "dailyDepositVolume" */
  dailyDepositVolume_aggregate: DailyDepositVolume_Aggregate;
  /** fetch data from the table: "dailyDepositVolume" using primary key columns */
  dailyDepositVolume_by_pk?: Maybe<DailyDepositVolume>;
  /** fetch data from the table: "dailyWithdrawalVolume" */
  dailyWithdrawalVolume: Array<DailyWithdrawalVolume>;
  /** fetch aggregated fields from the table: "dailyWithdrawalVolume" */
  dailyWithdrawalVolume_aggregate: DailyWithdrawalVolume_Aggregate;
  /** fetch data from the table: "dailyWithdrawalVolume" using primary key columns */
  dailyWithdrawalVolume_by_pk?: Maybe<DailyWithdrawalVolume>;
  defaultBaseCommissions: Array<DefaultBaseCommission>;
  defaultBaseCommissionsAggregate: DefaultBaseCommissionAggregateSelection;
  defaultBaseCommissionsConnection: DefaultBaseCommissionsConnection;
  defaultCurrencyConversionFees: Array<DefaultCurrencyConversionFees>;
  defaultCurrencyConversionFeesAggregate: DefaultCurrencyConversionFeesAggregateSelection;
  defaultCurrencyConversionFeesConnection: DefaultCurrencyConversionFeesConnection;
  defaultCurrencyConversionMarkups: Array<DefaultCurrencyConversionMarkup>;
  defaultCurrencyConversionMarkupsAggregate: DefaultCurrencyConversionMarkupAggregateSelection;
  defaultCurrencyConversionMarkupsConnection: DefaultCurrencyConversionMarkupsConnection;
  defaultJoiningFees: Array<DefaultJoiningFee>;
  defaultJoiningFeesAggregate: DefaultJoiningFeeAggregateSelection;
  defaultJoiningFeesConnection: DefaultJoiningFeesConnection;
  defaultMaintenanceFees: Array<DefaultMaintenanceFee>;
  defaultMaintenanceFeesAggregate: DefaultMaintenanceFeeAggregateSelection;
  defaultMaintenanceFeesConnection: DefaultMaintenanceFeesConnection;
  defaultOverDraftLimits: Array<DefaultOverDraftLimit>;
  defaultOverDraftLimitsAggregate: DefaultOverDraftLimitAggregateSelection;
  defaultOverDraftLimitsConnection: DefaultOverDraftLimitsConnection;
  defaultPayoutFees: Array<DefaultPayoutFee>;
  defaultPayoutFeesAggregate: DefaultPayoutFeeAggregateSelection;
  defaultPayoutFeesConnection: DefaultPayoutFeesConnection;
  defaultRollingReserveFees: Array<DefaultRollingReserveFee>;
  defaultRollingReserveFeesAggregate: DefaultRollingReserveFeeAggregateSelection;
  defaultRollingReserveFeesConnection: DefaultRollingReserveFeesConnection;
  defaultSettlementFees: Array<DefaultSettlementFee>;
  defaultSettlementFeesAggregate: DefaultSettlementFeeAggregateSelection;
  defaultSettlementFeesConnection: DefaultSettlementFeesConnection;
  defaultTierCommissions: Array<DefaultTierCommission>;
  defaultTierCommissionsAggregate: DefaultTierCommissionAggregateSelection;
  defaultTierCommissionsConnection: DefaultTierCommissionsConnection;
  /** fetch data from the table: "depositStatuses" */
  depositStatuses: Array<DepositStatuses>;
  /** fetch aggregated fields from the table: "depositStatuses" */
  depositStatuses_aggregate: DepositStatuses_Aggregate;
  /** fetch data from the table: "depositStatuses" using primary key columns */
  depositStatuses_by_pk?: Maybe<DepositStatuses>;
  /** fetch data from the table: "depositTypes" */
  depositTypes: Array<DepositTypes>;
  /** fetch aggregated fields from the table: "depositTypes" */
  depositTypes_aggregate: DepositTypes_Aggregate;
  /** fetch data from the table: "depositTypes" using primary key columns */
  depositTypes_by_pk?: Maybe<DepositTypes>;
  /** execute function "depositVolumeGraph" which returns "graphData" */
  depositVolumeGraph: Array<GraphData>;
  /** execute function "depositVolumeGraphWithCurrency" which returns "graphData" */
  depositVolumeGraphWithCurrency: Array<GraphData>;
  /** execute function "depositVolumeGraphWithCurrency" and query aggregates on result of table type "graphData" */
  depositVolumeGraphWithCurrency_aggregate: GraphData_Aggregate;
  /** execute function "depositVolumeGraph" and query aggregates on result of table type "graphData" */
  depositVolumeGraph_aggregate: GraphData_Aggregate;
  /** An array relationship */
  deposits: Array<Deposits>;
  /** An aggregate relationship */
  deposits_aggregate: Deposits_Aggregate;
  /** fetch data from the table: "deposits" using primary key columns */
  deposits_by_pk?: Maybe<Deposits>;
  featurePermissions: Array<FeaturePermission>;
  featurePermissionsAggregate: FeaturePermissionAggregateSelection;
  featurePermissionsConnection: FeaturePermissionsConnection;
  /** fetch data from the table: "featureTypes" */
  featureTypes: Array<FeatureTypes>;
  /** fetch aggregated fields from the table: "featureTypes" */
  featureTypes_aggregate: FeatureTypes_Aggregate;
  /** fetch data from the table: "featureTypes" using primary key columns */
  featureTypes_by_pk?: Maybe<FeatureTypes>;
  /** execute function "generateReferenceId" which returns "textResult" */
  generateReferenceId: Array<TextResult>;
  /** execute function "generateReferenceId" and query aggregates on result of table type "textResult" */
  generateReferenceId_aggregate: TextResult_Aggregate;
  /** execute function "generateReferenceIds" which returns "textResult" */
  generateReferenceIds: Array<TextResult>;
  /** execute function "generateReferenceIds" and query aggregates on result of table type "textResult" */
  generateReferenceIds_aggregate: TextResult_Aggregate;
  getCustomerUniqueUsername?: Maybe<Scalars['String']>;
  getDepositInvoice?: Maybe<GetDepositInvoiceOutput>;
  getWithdrawalPRF?: Maybe<GetWithdrawalPrfOutput>;
  /** fetch data from the table: "graphData" */
  graphData: Array<GraphData>;
  graphDataNeo4JS: Array<GraphDataNeo4j>;
  graphDataNeo4JSAggregate: GraphDataNeo4jAggregateSelection;
  graphDataNeo4JSConnection: GraphDataNeo4JsConnection;
  /** fetch aggregated fields from the table: "graphData" */
  graphData_aggregate: GraphData_Aggregate;
  intermediaryAccounts: Array<IntermediaryAccount>;
  intermediaryAccountsAggregate: IntermediaryAccountAggregateSelection;
  intermediaryAccountsConnection: IntermediaryAccountsConnection;
  /** fetch data from the table: "internalTransfers" */
  internalTransfers: Array<InternalTransfers>;
  /** fetch aggregated fields from the table: "internalTransfers" */
  internalTransfers_aggregate: InternalTransfers_Aggregate;
  /** fetch data from the table: "internalTransfers" using primary key columns */
  internalTransfers_by_pk?: Maybe<InternalTransfers>;
  /** fetch data from the table: "ledgerTypes" */
  ledgerTypes: Array<LedgerTypes>;
  /** fetch aggregated fields from the table: "ledgerTypes" */
  ledgerTypes_aggregate: LedgerTypes_Aggregate;
  /** fetch data from the table: "ledgerTypes" using primary key columns */
  ledgerTypes_by_pk?: Maybe<LedgerTypes>;
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  /** fetch data from the table: "ledgers" using primary key columns */
  ledgers_by_pk?: Maybe<Ledgers>;
  login?: Maybe<LoginOutput>;
  marketRegions: Array<MarketRegions>;
  marketRegionsAggregate: MarketRegionsAggregateSelection;
  marketRegionsConnection: MarketRegionsConnection;
  merchants: Array<Merchant>;
  merchantsAggregate: MerchantAggregateSelection;
  merchantsConnection: MerchantsConnection;
  /** fetch data from the table: "messageTypes" */
  messageTypes: Array<MessageTypes>;
  /** fetch aggregated fields from the table: "messageTypes" */
  messageTypes_aggregate: MessageTypes_Aggregate;
  /** fetch data from the table: "messageTypes" using primary key columns */
  messageTypes_by_pk?: Maybe<MessageTypes>;
  /** An array relationship */
  messages: Array<Messages>;
  /** An aggregate relationship */
  messages_aggregate: Messages_Aggregate;
  /** fetch data from the table: "messages" using primary key columns */
  messages_by_pk?: Maybe<Messages>;
  organisationTypes: Array<OrganisationType>;
  organisationTypesAggregate: OrganisationTypeAggregateSelection;
  organisationTypesConnection: OrganisationTypesConnection;
  personalDocuments: Array<PersonalDocument>;
  personalDocumentsAggregate: PersonalDocumentAggregateSelection;
  personalDocumentsConnection: PersonalDocumentsConnection;
  /** fetch data from the table: "rollingReserveStatuses" */
  rollingReserveStatuses: Array<RollingReserveStatuses>;
  /** fetch aggregated fields from the table: "rollingReserveStatuses" */
  rollingReserveStatuses_aggregate: RollingReserveStatuses_Aggregate;
  /** fetch data from the table: "rollingReserveStatuses" using primary key columns */
  rollingReserveStatuses_by_pk?: Maybe<RollingReserveStatuses>;
  /** An array relationship */
  rollingReserves: Array<RollingReserves>;
  /** An aggregate relationship */
  rollingReserves_aggregate: RollingReserves_Aggregate;
  /** fetch data from the table: "rollingReserves" using primary key columns */
  rollingReserves_by_pk?: Maybe<RollingReserves>;
  subAdmins: Array<SubAdmin>;
  subAdminsAggregate: SubAdminAggregateSelection;
  subAdminsConnection: SubAdminsConnection;
  superAdmins: Array<SuperAdmin>;
  superAdminsAggregate: SuperAdminAggregateSelection;
  superAdminsConnection: SuperAdminsConnection;
  /** fetch data from the table: "tags" */
  tags: Array<Tags>;
  /** fetch aggregated fields from the table: "tags" */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table: "taskPriorities" */
  taskPriorities: Array<TaskPriorities>;
  /** fetch aggregated fields from the table: "taskPriorities" */
  taskPriorities_aggregate: TaskPriorities_Aggregate;
  /** fetch data from the table: "taskPriorities" using primary key columns */
  taskPriorities_by_pk?: Maybe<TaskPriorities>;
  /** fetch data from the table: "taskStatusTypes" */
  taskStatusTypes: Array<TaskStatusTypes>;
  /** fetch aggregated fields from the table: "taskStatusTypes" */
  taskStatusTypes_aggregate: TaskStatusTypes_Aggregate;
  /** fetch data from the table: "taskStatusTypes" using primary key columns */
  taskStatusTypes_by_pk?: Maybe<TaskStatusTypes>;
  /** An array relationship */
  tasks: Array<Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Tasks_Aggregate;
  /** fetch data from the table: "tasks" using primary key columns */
  tasks_by_pk?: Maybe<Tasks>;
  teamCommonPermisions: Array<TeamCommonPermision>;
  teamCommonPermisionsAggregate: TeamCommonPermisionAggregateSelection;
  teamCommonPermisionsConnection: TeamCommonPermisionsConnection;
  teamMembers: Array<TeamMember>;
  teamMembersAggregate: TeamMemberAggregateSelection;
  teamMembersConnection: TeamMembersConnection;
  teams: Array<Team>;
  teamsAggregate: TeamAggregateSelection;
  teamsConnection: TeamsConnection;
  /** fetch data from the table: "textResult" */
  textResult: Array<TextResult>;
  /** fetch aggregated fields from the table: "textResult" */
  textResult_aggregate: TextResult_Aggregate;
  /** fetch data from the table: "transactionTypes" */
  transactionTypes: Array<TransactionTypes>;
  /** fetch aggregated fields from the table: "transactionTypes" */
  transactionTypes_aggregate: TransactionTypes_Aggregate;
  /** fetch data from the table: "transactionTypes" using primary key columns */
  transactionTypes_by_pk?: Maybe<TransactionTypes>;
  users?: Maybe<Array<Maybe<CreatedByUser>>>;
  /** fetch data from the table: "withdrawalStatuses" */
  withdrawalStatuses: Array<WithdrawalStatuses>;
  /** fetch aggregated fields from the table: "withdrawalStatuses" */
  withdrawalStatuses_aggregate: WithdrawalStatuses_Aggregate;
  /** fetch data from the table: "withdrawalStatuses" using primary key columns */
  withdrawalStatuses_by_pk?: Maybe<WithdrawalStatuses>;
  /** fetch data from the table: "withdrawalTypes" */
  withdrawalTypes: Array<WithdrawalTypes>;
  /** fetch aggregated fields from the table: "withdrawalTypes" */
  withdrawalTypes_aggregate: WithdrawalTypes_Aggregate;
  /** fetch data from the table: "withdrawalTypes" using primary key columns */
  withdrawalTypes_by_pk?: Maybe<WithdrawalTypes>;
  /** execute function "withdrawalVolumeGraph" which returns "graphData" */
  withdrawalVolumeGraph: Array<GraphData>;
  /** execute function "withdrawalVolumeGraphWithCurrency" which returns "graphData" */
  withdrawalVolumeGraphWithCurrency: Array<GraphData>;
  /** execute function "withdrawalVolumeGraphWithCurrency" and query aggregates on result of table type "graphData" */
  withdrawalVolumeGraphWithCurrency_aggregate: GraphData_Aggregate;
  /** execute function "withdrawalVolumeGraph" and query aggregates on result of table type "graphData" */
  withdrawalVolumeGraph_aggregate: GraphData_Aggregate;
  /** An array relationship */
  withdrawals: Array<Withdrawals>;
  /** An aggregate relationship */
  withdrawals_aggregate: Withdrawals_Aggregate;
  /** fetch data from the table: "withdrawals" using primary key columns */
  withdrawals_by_pk?: Maybe<Withdrawals>;
};


export type Query_RootAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


export type Query_RootAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


export type Query_RootAccountLedgers_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootAccountsArgs = {
  options?: InputMaybe<AccountOptions>;
  where?: InputMaybe<AccountWhere>;
};


export type Query_RootAccountsAggregateArgs = {
  where?: InputMaybe<AccountWhere>;
};


export type Query_RootAccountsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<AccountSort>>>;
  where?: InputMaybe<AccountWhere>;
};


export type Query_RootActivityLogsArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


export type Query_RootActivityLogs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


export type Query_RootActivityLogs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootAdjustmentTypesArgs = {
  distinct_on?: InputMaybe<Array<AdjustmentTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AdjustmentTypes_Order_By>>;
  where?: InputMaybe<AdjustmentTypes_Bool_Exp>;
};


export type Query_RootAdjustmentTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AdjustmentTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AdjustmentTypes_Order_By>>;
  where?: InputMaybe<AdjustmentTypes_Bool_Exp>;
};


export type Query_RootAdjustmentTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootAdjustmentsArgs = {
  distinct_on?: InputMaybe<Array<Adjustments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Adjustments_Order_By>>;
  where?: InputMaybe<Adjustments_Bool_Exp>;
};


export type Query_RootAdjustments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Adjustments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Adjustments_Order_By>>;
  where?: InputMaybe<Adjustments_Bool_Exp>;
};


export type Query_RootAdjustments_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootAlternateMethodSolutionsArgs = {
  options?: InputMaybe<AlternateMethodSolutionOptions>;
  where?: InputMaybe<AlternateMethodSolutionWhere>;
};


export type Query_RootAlternateMethodSolutionsAggregateArgs = {
  where?: InputMaybe<AlternateMethodSolutionWhere>;
};


export type Query_RootAlternateMethodSolutionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<AlternateMethodSolutionSort>>>;
  where?: InputMaybe<AlternateMethodSolutionWhere>;
};


export type Query_RootApiTemplatesArgs = {
  distinct_on?: InputMaybe<Array<ApiTemplates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ApiTemplates_Order_By>>;
  where?: InputMaybe<ApiTemplates_Bool_Exp>;
};


export type Query_RootApiTemplates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ApiTemplates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ApiTemplates_Order_By>>;
  where?: InputMaybe<ApiTemplates_Bool_Exp>;
};


export type Query_RootApiTemplates_By_PkArgs = {
  id: Scalars['String'];
};


export type Query_RootBankWireSolutionsArgs = {
  options?: InputMaybe<BankWireSolutionOptions>;
  where?: InputMaybe<BankWireSolutionWhere>;
};


export type Query_RootBankWireSolutionsAggregateArgs = {
  where?: InputMaybe<BankWireSolutionWhere>;
};


export type Query_RootBankWireSolutionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BankWireSolutionSort>>>;
  where?: InputMaybe<BankWireSolutionWhere>;
};


export type Query_RootBanksArgs = {
  options?: InputMaybe<BankOptions>;
  where?: InputMaybe<BankWhere>;
};


export type Query_RootBanksAggregateArgs = {
  where?: InputMaybe<BankWhere>;
};


export type Query_RootBanksConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BankSort>>>;
  where?: InputMaybe<BankWhere>;
};


export type Query_RootBaseCurrencyConversionRatesArgs = {
  options?: InputMaybe<BaseCurrencyConversionRateOptions>;
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


export type Query_RootBaseCurrencyConversionRatesAggregateArgs = {
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


export type Query_RootBaseCurrencyConversionRatesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BaseCurrencyConversionRateSort>>>;
  where?: InputMaybe<BaseCurrencyConversionRateWhere>;
};


export type Query_RootBeneficiariesArgs = {
  options?: InputMaybe<BeneficiaryOptions>;
  where?: InputMaybe<BeneficiaryWhere>;
};


export type Query_RootBeneficiariesAggregateArgs = {
  where?: InputMaybe<BeneficiaryWhere>;
};


export type Query_RootBeneficiariesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BeneficiarySort>>>;
  where?: InputMaybe<BeneficiaryWhere>;
};


export type Query_RootBrandsArgs = {
  options?: InputMaybe<BrandOptions>;
  where?: InputMaybe<BrandWhere>;
};


export type Query_RootBrandsAggregateArgs = {
  where?: InputMaybe<BrandWhere>;
};


export type Query_RootBrandsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BrandSort>>>;
  where?: InputMaybe<BrandWhere>;
};


export type Query_RootBusinessCurrencyConversionFeesArgs = {
  options?: InputMaybe<BusinessCurrencyConversionFeesOptions>;
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


export type Query_RootBusinessCurrencyConversionFeesAggregateArgs = {
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


export type Query_RootBusinessCurrencyConversionFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessCurrencyConversionFeesSort>>>;
  where?: InputMaybe<BusinessCurrencyConversionFeesWhere>;
};


export type Query_RootBusinessCurrencyConversionMarkupsArgs = {
  options?: InputMaybe<BusinessCurrencyConversionMarkupOptions>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type Query_RootBusinessCurrencyConversionMarkupsAggregateArgs = {
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type Query_RootBusinessCurrencyConversionMarkupsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessCurrencyConversionMarkupSort>>>;
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
};


export type Query_RootBusinessDocumentsArgs = {
  options?: InputMaybe<BusinessDocumentOptions>;
  where?: InputMaybe<BusinessDocumentWhere>;
};


export type Query_RootBusinessDocumentsAggregateArgs = {
  where?: InputMaybe<BusinessDocumentWhere>;
};


export type Query_RootBusinessDocumentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessDocumentSort>>>;
  where?: InputMaybe<BusinessDocumentWhere>;
};


export type Query_RootBusinessOwnersArgs = {
  options?: InputMaybe<BusinessOwnerOptions>;
  where?: InputMaybe<BusinessOwnerWhere>;
};


export type Query_RootBusinessOwnersAggregateArgs = {
  where?: InputMaybe<BusinessOwnerWhere>;
};


export type Query_RootBusinessOwnersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessOwnerSort>>>;
  where?: InputMaybe<BusinessOwnerWhere>;
};


export type Query_RootBusinessSolutionsArgs = {
  options?: InputMaybe<BusinessSolutionOptions>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type Query_RootBusinessSolutionsAggregateArgs = {
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type Query_RootBusinessSolutionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessSolutionSort>>>;
  where?: InputMaybe<BusinessSolutionWhere>;
};


export type Query_RootBusinessTypesArgs = {
  options?: InputMaybe<BusinessTypeOptions>;
  where?: InputMaybe<BusinessTypeWhere>;
};


export type Query_RootBusinessTypesAggregateArgs = {
  where?: InputMaybe<BusinessTypeWhere>;
};


export type Query_RootBusinessTypesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessTypeSort>>>;
  where?: InputMaybe<BusinessTypeWhere>;
};


export type Query_RootBusinessWalletBaseCommissionsArgs = {
  options?: InputMaybe<BusinessWalletBaseCommissionOptions>;
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


export type Query_RootBusinessWalletBaseCommissionsAggregateArgs = {
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


export type Query_RootBusinessWalletBaseCommissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletBaseCommissionSort>>>;
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
};


export type Query_RootBusinessWalletJoiningFeesArgs = {
  options?: InputMaybe<BusinessWalletJoiningFeeOptions>;
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


export type Query_RootBusinessWalletJoiningFeesAggregateArgs = {
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


export type Query_RootBusinessWalletJoiningFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletJoiningFeeSort>>>;
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
};


export type Query_RootBusinessWalletMaintenanceFeesArgs = {
  options?: InputMaybe<BusinessWalletMaintenanceFeeOptions>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


export type Query_RootBusinessWalletMaintenanceFeesAggregateArgs = {
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


export type Query_RootBusinessWalletMaintenanceFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletMaintenanceFeeSort>>>;
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
};


export type Query_RootBusinessWalletOverDraftLimitsArgs = {
  options?: InputMaybe<BusinessWalletOverDraftLimitOptions>;
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


export type Query_RootBusinessWalletOverDraftLimitsAggregateArgs = {
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


export type Query_RootBusinessWalletOverDraftLimitsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletOverDraftLimitSort>>>;
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
};


export type Query_RootBusinessWalletPayoutFeesArgs = {
  options?: InputMaybe<BusinessWalletPayoutFeeOptions>;
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


export type Query_RootBusinessWalletPayoutFeesAggregateArgs = {
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


export type Query_RootBusinessWalletPayoutFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletPayoutFeeSort>>>;
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
};


export type Query_RootBusinessWalletRollingReserveFeesArgs = {
  options?: InputMaybe<BusinessWalletRollingReserveFeeOptions>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


export type Query_RootBusinessWalletRollingReserveFeesAggregateArgs = {
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


export type Query_RootBusinessWalletRollingReserveFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletRollingReserveFeeSort>>>;
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
};


export type Query_RootBusinessWalletSettlementFeesArgs = {
  options?: InputMaybe<BusinessWalletSettlementFeeOptions>;
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


export type Query_RootBusinessWalletSettlementFeesAggregateArgs = {
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


export type Query_RootBusinessWalletSettlementFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletSettlementFeeSort>>>;
  where?: InputMaybe<BusinessWalletSettlementFeeWhere>;
};


export type Query_RootBusinessWalletTierCommissionsArgs = {
  options?: InputMaybe<BusinessWalletTierCommissionOptions>;
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


export type Query_RootBusinessWalletTierCommissionsAggregateArgs = {
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


export type Query_RootBusinessWalletTierCommissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletTierCommissionSort>>>;
  where?: InputMaybe<BusinessWalletTierCommissionWhere>;
};


export type Query_RootBusinessWalletsArgs = {
  options?: InputMaybe<BusinessWalletOptions>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type Query_RootBusinessWalletsAggregateArgs = {
  where?: InputMaybe<BusinessWalletWhere>;
};


export type Query_RootBusinessWalletsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessWalletSort>>>;
  where?: InputMaybe<BusinessWalletWhere>;
};


export type Query_RootBusinessesArgs = {
  options?: InputMaybe<BusinessOptions>;
  where?: InputMaybe<BusinessWhere>;
};


export type Query_RootBusinessesAggregateArgs = {
  where?: InputMaybe<BusinessWhere>;
};


export type Query_RootBusinessesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<BusinessSort>>>;
  where?: InputMaybe<BusinessWhere>;
};


export type Query_RootCommissionVolumeGraphArgs = {
  args: CommissionVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootCommissionVolumeGraph_AggregateArgs = {
  args: CommissionVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootConversationCategoriesArgs = {
  distinct_on?: InputMaybe<Array<ConversationCategories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ConversationCategories_Order_By>>;
  where?: InputMaybe<ConversationCategories_Bool_Exp>;
};


export type Query_RootConversationCategories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ConversationCategories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ConversationCategories_Order_By>>;
  where?: InputMaybe<ConversationCategories_Bool_Exp>;
};


export type Query_RootConversationCategories_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootConversationStatusArgs = {
  distinct_on?: InputMaybe<Array<ConversationStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ConversationStatus_Order_By>>;
  where?: InputMaybe<ConversationStatus_Bool_Exp>;
};


export type Query_RootConversationStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ConversationStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ConversationStatus_Order_By>>;
  where?: InputMaybe<ConversationStatus_Bool_Exp>;
};


export type Query_RootConversationStatus_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootConversationsArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


export type Query_RootConversations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


export type Query_RootConversations_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCountriesArgs = {
  options?: InputMaybe<CountryOptions>;
  where?: InputMaybe<CountryWhere>;
};


export type Query_RootCountriesAggregateArgs = {
  where?: InputMaybe<CountryWhere>;
};


export type Query_RootCountriesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<CountrySort>>>;
  where?: InputMaybe<CountryWhere>;
};


export type Query_RootCreatedByUsersArgs = {
  options?: InputMaybe<CreatedByUserOptions>;
  where?: InputMaybe<CreatedByUserWhere>;
};


export type Query_RootCreatedByUsersAggregateArgs = {
  where?: InputMaybe<CreatedByUserWhere>;
};


export type Query_RootCreatedByUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<CreatedByUserSort>>>;
  where?: InputMaybe<CreatedByUserWhere>;
};


export type Query_RootCreditCartdProcessingSolutionsArgs = {
  options?: InputMaybe<CreditCartdProcessingSolutionOptions>;
  where?: InputMaybe<CreditCartdProcessingSolutionWhere>;
};


export type Query_RootCreditCartdProcessingSolutionsAggregateArgs = {
  where?: InputMaybe<CreditCartdProcessingSolutionWhere>;
};


export type Query_RootCreditCartdProcessingSolutionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<CreditCartdProcessingSolutionSort>>>;
  where?: InputMaybe<CreditCartdProcessingSolutionWhere>;
};


export type Query_RootCryptoCurrencySolutionsArgs = {
  options?: InputMaybe<CryptoCurrencySolutionOptions>;
  where?: InputMaybe<CryptoCurrencySolutionWhere>;
};


export type Query_RootCryptoCurrencySolutionsAggregateArgs = {
  where?: InputMaybe<CryptoCurrencySolutionWhere>;
};


export type Query_RootCryptoCurrencySolutionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<CryptoCurrencySolutionSort>>>;
  where?: InputMaybe<CryptoCurrencySolutionWhere>;
};


export type Query_RootCurrenciesArgs = {
  options?: InputMaybe<CurrencyOptions>;
  where?: InputMaybe<CurrencyWhere>;
};


export type Query_RootCurrenciesAggregateArgs = {
  where?: InputMaybe<CurrencyWhere>;
};


export type Query_RootCurrenciesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<CurrencySort>>>;
  where?: InputMaybe<CurrencyWhere>;
};


export type Query_RootCurrencyBalanceGraphArgs = {
  currency: Array<InputMaybe<Scalars['String']>>;
};


export type Query_RootCurrencyExchangeArgs = {
  distinct_on?: InputMaybe<Array<CurrencyExchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<CurrencyExchange_Order_By>>;
  where?: InputMaybe<CurrencyExchange_Bool_Exp>;
};


export type Query_RootCurrencyExchange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CurrencyExchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<CurrencyExchange_Order_By>>;
  where?: InputMaybe<CurrencyExchange_Bool_Exp>;
};


export type Query_RootCurrencyExchange_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCustomersArgs = {
  options?: InputMaybe<CustomerOptions>;
  where?: InputMaybe<CustomerWhere>;
};


export type Query_RootCustomersAggregateArgs = {
  where?: InputMaybe<CustomerWhere>;
};


export type Query_RootCustomersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<CustomerSort>>>;
  where?: InputMaybe<CustomerWhere>;
};


export type Query_RootDailyCommissionVolumeArgs = {
  distinct_on?: InputMaybe<Array<DailyCommissionVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyCommissionVolume_Order_By>>;
  where?: InputMaybe<DailyCommissionVolume_Bool_Exp>;
};


export type Query_RootDailyCommissionVolume_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DailyCommissionVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyCommissionVolume_Order_By>>;
  where?: InputMaybe<DailyCommissionVolume_Bool_Exp>;
};


export type Query_RootDailyCommissionVolume_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootDailyDepositVolumeArgs = {
  distinct_on?: InputMaybe<Array<DailyDepositVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyDepositVolume_Order_By>>;
  where?: InputMaybe<DailyDepositVolume_Bool_Exp>;
};


export type Query_RootDailyDepositVolume_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DailyDepositVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyDepositVolume_Order_By>>;
  where?: InputMaybe<DailyDepositVolume_Bool_Exp>;
};


export type Query_RootDailyDepositVolume_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootDailyWithdrawalVolumeArgs = {
  distinct_on?: InputMaybe<Array<DailyWithdrawalVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyWithdrawalVolume_Order_By>>;
  where?: InputMaybe<DailyWithdrawalVolume_Bool_Exp>;
};


export type Query_RootDailyWithdrawalVolume_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DailyWithdrawalVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyWithdrawalVolume_Order_By>>;
  where?: InputMaybe<DailyWithdrawalVolume_Bool_Exp>;
};


export type Query_RootDailyWithdrawalVolume_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootDefaultBaseCommissionsArgs = {
  options?: InputMaybe<DefaultBaseCommissionOptions>;
  where?: InputMaybe<DefaultBaseCommissionWhere>;
};


export type Query_RootDefaultBaseCommissionsAggregateArgs = {
  where?: InputMaybe<DefaultBaseCommissionWhere>;
};


export type Query_RootDefaultBaseCommissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultBaseCommissionSort>>>;
  where?: InputMaybe<DefaultBaseCommissionWhere>;
};


export type Query_RootDefaultCurrencyConversionFeesArgs = {
  options?: InputMaybe<DefaultCurrencyConversionFeesOptions>;
  where?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
};


export type Query_RootDefaultCurrencyConversionFeesAggregateArgs = {
  where?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
};


export type Query_RootDefaultCurrencyConversionFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultCurrencyConversionFeesSort>>>;
  where?: InputMaybe<DefaultCurrencyConversionFeesWhere>;
};


export type Query_RootDefaultCurrencyConversionMarkupsArgs = {
  options?: InputMaybe<DefaultCurrencyConversionMarkupOptions>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


export type Query_RootDefaultCurrencyConversionMarkupsAggregateArgs = {
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


export type Query_RootDefaultCurrencyConversionMarkupsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultCurrencyConversionMarkupSort>>>;
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
};


export type Query_RootDefaultJoiningFeesArgs = {
  options?: InputMaybe<DefaultJoiningFeeOptions>;
  where?: InputMaybe<DefaultJoiningFeeWhere>;
};


export type Query_RootDefaultJoiningFeesAggregateArgs = {
  where?: InputMaybe<DefaultJoiningFeeWhere>;
};


export type Query_RootDefaultJoiningFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultJoiningFeeSort>>>;
  where?: InputMaybe<DefaultJoiningFeeWhere>;
};


export type Query_RootDefaultMaintenanceFeesArgs = {
  options?: InputMaybe<DefaultMaintenanceFeeOptions>;
  where?: InputMaybe<DefaultMaintenanceFeeWhere>;
};


export type Query_RootDefaultMaintenanceFeesAggregateArgs = {
  where?: InputMaybe<DefaultMaintenanceFeeWhere>;
};


export type Query_RootDefaultMaintenanceFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultMaintenanceFeeSort>>>;
  where?: InputMaybe<DefaultMaintenanceFeeWhere>;
};


export type Query_RootDefaultOverDraftLimitsArgs = {
  options?: InputMaybe<DefaultOverDraftLimitOptions>;
  where?: InputMaybe<DefaultOverDraftLimitWhere>;
};


export type Query_RootDefaultOverDraftLimitsAggregateArgs = {
  where?: InputMaybe<DefaultOverDraftLimitWhere>;
};


export type Query_RootDefaultOverDraftLimitsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultOverDraftLimitSort>>>;
  where?: InputMaybe<DefaultOverDraftLimitWhere>;
};


export type Query_RootDefaultPayoutFeesArgs = {
  options?: InputMaybe<DefaultPayoutFeeOptions>;
  where?: InputMaybe<DefaultPayoutFeeWhere>;
};


export type Query_RootDefaultPayoutFeesAggregateArgs = {
  where?: InputMaybe<DefaultPayoutFeeWhere>;
};


export type Query_RootDefaultPayoutFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultPayoutFeeSort>>>;
  where?: InputMaybe<DefaultPayoutFeeWhere>;
};


export type Query_RootDefaultRollingReserveFeesArgs = {
  options?: InputMaybe<DefaultRollingReserveFeeOptions>;
  where?: InputMaybe<DefaultRollingReserveFeeWhere>;
};


export type Query_RootDefaultRollingReserveFeesAggregateArgs = {
  where?: InputMaybe<DefaultRollingReserveFeeWhere>;
};


export type Query_RootDefaultRollingReserveFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultRollingReserveFeeSort>>>;
  where?: InputMaybe<DefaultRollingReserveFeeWhere>;
};


export type Query_RootDefaultSettlementFeesArgs = {
  options?: InputMaybe<DefaultSettlementFeeOptions>;
  where?: InputMaybe<DefaultSettlementFeeWhere>;
};


export type Query_RootDefaultSettlementFeesAggregateArgs = {
  where?: InputMaybe<DefaultSettlementFeeWhere>;
};


export type Query_RootDefaultSettlementFeesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultSettlementFeeSort>>>;
  where?: InputMaybe<DefaultSettlementFeeWhere>;
};


export type Query_RootDefaultTierCommissionsArgs = {
  options?: InputMaybe<DefaultTierCommissionOptions>;
  where?: InputMaybe<DefaultTierCommissionWhere>;
};


export type Query_RootDefaultTierCommissionsAggregateArgs = {
  where?: InputMaybe<DefaultTierCommissionWhere>;
};


export type Query_RootDefaultTierCommissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<DefaultTierCommissionSort>>>;
  where?: InputMaybe<DefaultTierCommissionWhere>;
};


export type Query_RootDepositStatusesArgs = {
  distinct_on?: InputMaybe<Array<DepositStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DepositStatuses_Order_By>>;
  where?: InputMaybe<DepositStatuses_Bool_Exp>;
};


export type Query_RootDepositStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DepositStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DepositStatuses_Order_By>>;
  where?: InputMaybe<DepositStatuses_Bool_Exp>;
};


export type Query_RootDepositStatuses_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootDepositTypesArgs = {
  distinct_on?: InputMaybe<Array<DepositTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DepositTypes_Order_By>>;
  where?: InputMaybe<DepositTypes_Bool_Exp>;
};


export type Query_RootDepositTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DepositTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DepositTypes_Order_By>>;
  where?: InputMaybe<DepositTypes_Bool_Exp>;
};


export type Query_RootDepositTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootDepositVolumeGraphArgs = {
  args: DepositVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootDepositVolumeGraphWithCurrencyArgs = {
  args: DepositVolumeGraphWithCurrency_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootDepositVolumeGraphWithCurrency_AggregateArgs = {
  args: DepositVolumeGraphWithCurrency_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootDepositVolumeGraph_AggregateArgs = {
  args: DepositVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootDepositsArgs = {
  distinct_on?: InputMaybe<Array<Deposits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Deposits_Order_By>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};


export type Query_RootDeposits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Deposits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Deposits_Order_By>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};


export type Query_RootDeposits_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootFeaturePermissionsArgs = {
  options?: InputMaybe<FeaturePermissionOptions>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type Query_RootFeaturePermissionsAggregateArgs = {
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type Query_RootFeaturePermissionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<FeaturePermissionSort>>>;
  where?: InputMaybe<FeaturePermissionWhere>;
};


export type Query_RootFeatureTypesArgs = {
  distinct_on?: InputMaybe<Array<FeatureTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<FeatureTypes_Order_By>>;
  where?: InputMaybe<FeatureTypes_Bool_Exp>;
};


export type Query_RootFeatureTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FeatureTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<FeatureTypes_Order_By>>;
  where?: InputMaybe<FeatureTypes_Bool_Exp>;
};


export type Query_RootFeatureTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootGenerateReferenceIdArgs = {
  args: GenerateReferenceId_Args;
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Query_RootGenerateReferenceId_AggregateArgs = {
  args: GenerateReferenceId_Args;
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Query_RootGenerateReferenceIdsArgs = {
  args: GenerateReferenceIds_Args;
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Query_RootGenerateReferenceIds_AggregateArgs = {
  args: GenerateReferenceIds_Args;
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Query_RootGetCustomerUniqueUsernameArgs = {
  firstName: Scalars['String'];
  lastName?: InputMaybe<Scalars['String']>;
  parentBrandId?: InputMaybe<Scalars['ID']>;
  parentBusinessId?: InputMaybe<Scalars['ID']>;
};


export type Query_RootGetDepositInvoiceArgs = {
  depositId: Scalars['uuid'];
};


export type Query_RootGetWithdrawalPrfArgs = {
  withdrawalId: Scalars['uuid'];
};


export type Query_RootGraphDataArgs = {
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootGraphDataNeo4JsArgs = {
  options?: InputMaybe<GraphDataNeo4jOptions>;
  where?: InputMaybe<GraphDataNeo4jWhere>;
};


export type Query_RootGraphDataNeo4JsAggregateArgs = {
  where?: InputMaybe<GraphDataNeo4jWhere>;
};


export type Query_RootGraphDataNeo4JsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<GraphDataNeo4jSort>>>;
  where?: InputMaybe<GraphDataNeo4jWhere>;
};


export type Query_RootGraphData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootIntermediaryAccountsArgs = {
  options?: InputMaybe<IntermediaryAccountOptions>;
  where?: InputMaybe<IntermediaryAccountWhere>;
};


export type Query_RootIntermediaryAccountsAggregateArgs = {
  where?: InputMaybe<IntermediaryAccountWhere>;
};


export type Query_RootIntermediaryAccountsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<IntermediaryAccountSort>>>;
  where?: InputMaybe<IntermediaryAccountWhere>;
};


export type Query_RootInternalTransfersArgs = {
  distinct_on?: InputMaybe<Array<InternalTransfers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<InternalTransfers_Order_By>>;
  where?: InputMaybe<InternalTransfers_Bool_Exp>;
};


export type Query_RootInternalTransfers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<InternalTransfers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<InternalTransfers_Order_By>>;
  where?: InputMaybe<InternalTransfers_Bool_Exp>;
};


export type Query_RootInternalTransfers_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLedgerTypesArgs = {
  distinct_on?: InputMaybe<Array<LedgerTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<LedgerTypes_Order_By>>;
  where?: InputMaybe<LedgerTypes_Bool_Exp>;
};


export type Query_RootLedgerTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LedgerTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<LedgerTypes_Order_By>>;
  where?: InputMaybe<LedgerTypes_Bool_Exp>;
};


export type Query_RootLedgerTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


export type Query_RootLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


export type Query_RootLedgers_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLoginArgs = {
  token: Scalars['String'];
};


export type Query_RootMarketRegionsArgs = {
  options?: InputMaybe<MarketRegionsOptions>;
  where?: InputMaybe<MarketRegionsWhere>;
};


export type Query_RootMarketRegionsAggregateArgs = {
  where?: InputMaybe<MarketRegionsWhere>;
};


export type Query_RootMarketRegionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<MarketRegionsSort>>>;
  where?: InputMaybe<MarketRegionsWhere>;
};


export type Query_RootMerchantsArgs = {
  options?: InputMaybe<MerchantOptions>;
  where?: InputMaybe<MerchantWhere>;
};


export type Query_RootMerchantsAggregateArgs = {
  where?: InputMaybe<MerchantWhere>;
};


export type Query_RootMerchantsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<MerchantSort>>>;
  where?: InputMaybe<MerchantWhere>;
};


export type Query_RootMessageTypesArgs = {
  distinct_on?: InputMaybe<Array<MessageTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<MessageTypes_Order_By>>;
  where?: InputMaybe<MessageTypes_Bool_Exp>;
};


export type Query_RootMessageTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<MessageTypes_Order_By>>;
  where?: InputMaybe<MessageTypes_Bool_Exp>;
};


export type Query_RootMessageTypes_By_PkArgs = {
  id: Scalars['String'];
};


export type Query_RootMessagesArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


export type Query_RootMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


export type Query_RootMessages_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootOrganisationTypesArgs = {
  options?: InputMaybe<OrganisationTypeOptions>;
  where?: InputMaybe<OrganisationTypeWhere>;
};


export type Query_RootOrganisationTypesAggregateArgs = {
  where?: InputMaybe<OrganisationTypeWhere>;
};


export type Query_RootOrganisationTypesConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<OrganisationTypeSort>>>;
  where?: InputMaybe<OrganisationTypeWhere>;
};


export type Query_RootPersonalDocumentsArgs = {
  options?: InputMaybe<PersonalDocumentOptions>;
  where?: InputMaybe<PersonalDocumentWhere>;
};


export type Query_RootPersonalDocumentsAggregateArgs = {
  where?: InputMaybe<PersonalDocumentWhere>;
};


export type Query_RootPersonalDocumentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<PersonalDocumentSort>>>;
  where?: InputMaybe<PersonalDocumentWhere>;
};


export type Query_RootRollingReserveStatusesArgs = {
  distinct_on?: InputMaybe<Array<RollingReserveStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserveStatuses_Order_By>>;
  where?: InputMaybe<RollingReserveStatuses_Bool_Exp>;
};


export type Query_RootRollingReserveStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<RollingReserveStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserveStatuses_Order_By>>;
  where?: InputMaybe<RollingReserveStatuses_Bool_Exp>;
};


export type Query_RootRollingReserveStatuses_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootRollingReservesArgs = {
  distinct_on?: InputMaybe<Array<RollingReserves_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserves_Order_By>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};


export type Query_RootRollingReserves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<RollingReserves_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserves_Order_By>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};


export type Query_RootRollingReserves_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootSubAdminsArgs = {
  options?: InputMaybe<SubAdminOptions>;
  where?: InputMaybe<SubAdminWhere>;
};


export type Query_RootSubAdminsAggregateArgs = {
  where?: InputMaybe<SubAdminWhere>;
};


export type Query_RootSubAdminsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<SubAdminSort>>>;
  where?: InputMaybe<SubAdminWhere>;
};


export type Query_RootSuperAdminsArgs = {
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type Query_RootSuperAdminsAggregateArgs = {
  where?: InputMaybe<SuperAdminWhere>;
};


export type Query_RootSuperAdminsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<SuperAdminSort>>>;
  where?: InputMaybe<SuperAdminWhere>;
};


export type Query_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Query_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Query_RootTags_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootTaskPrioritiesArgs = {
  distinct_on?: InputMaybe<Array<TaskPriorities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TaskPriorities_Order_By>>;
  where?: InputMaybe<TaskPriorities_Bool_Exp>;
};


export type Query_RootTaskPriorities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TaskPriorities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TaskPriorities_Order_By>>;
  where?: InputMaybe<TaskPriorities_Bool_Exp>;
};


export type Query_RootTaskPriorities_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootTaskStatusTypesArgs = {
  distinct_on?: InputMaybe<Array<TaskStatusTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TaskStatusTypes_Order_By>>;
  where?: InputMaybe<TaskStatusTypes_Bool_Exp>;
};


export type Query_RootTaskStatusTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TaskStatusTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TaskStatusTypes_Order_By>>;
  where?: InputMaybe<TaskStatusTypes_Bool_Exp>;
};


export type Query_RootTaskStatusTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootTasksArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


export type Query_RootTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


export type Query_RootTasks_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootTeamCommonPermisionsArgs = {
  options?: InputMaybe<TeamCommonPermisionOptions>;
  where?: InputMaybe<TeamCommonPermisionWhere>;
};


export type Query_RootTeamCommonPermisionsAggregateArgs = {
  where?: InputMaybe<TeamCommonPermisionWhere>;
};


export type Query_RootTeamCommonPermisionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<TeamCommonPermisionSort>>>;
  where?: InputMaybe<TeamCommonPermisionWhere>;
};


export type Query_RootTeamMembersArgs = {
  options?: InputMaybe<TeamMemberOptions>;
  where?: InputMaybe<TeamMemberWhere>;
};


export type Query_RootTeamMembersAggregateArgs = {
  where?: InputMaybe<TeamMemberWhere>;
};


export type Query_RootTeamMembersConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<TeamMemberSort>>>;
  where?: InputMaybe<TeamMemberWhere>;
};


export type Query_RootTeamsArgs = {
  options?: InputMaybe<TeamOptions>;
  where?: InputMaybe<TeamWhere>;
};


export type Query_RootTeamsAggregateArgs = {
  where?: InputMaybe<TeamWhere>;
};


export type Query_RootTeamsConnectionArgs = {
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<Array<InputMaybe<TeamSort>>>;
  where?: InputMaybe<TeamWhere>;
};


export type Query_RootTextResultArgs = {
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Query_RootTextResult_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Query_RootTransactionTypesArgs = {
  distinct_on?: InputMaybe<Array<TransactionTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TransactionTypes_Order_By>>;
  where?: InputMaybe<TransactionTypes_Bool_Exp>;
};


export type Query_RootTransactionTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TransactionTypes_Order_By>>;
  where?: InputMaybe<TransactionTypes_Bool_Exp>;
};


export type Query_RootTransactionTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootUsersArgs = {
  id: Scalars['ID'];
};


export type Query_RootWithdrawalStatusesArgs = {
  distinct_on?: InputMaybe<Array<WithdrawalStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<WithdrawalStatuses_Order_By>>;
  where?: InputMaybe<WithdrawalStatuses_Bool_Exp>;
};


export type Query_RootWithdrawalStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<WithdrawalStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<WithdrawalStatuses_Order_By>>;
  where?: InputMaybe<WithdrawalStatuses_Bool_Exp>;
};


export type Query_RootWithdrawalStatuses_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootWithdrawalTypesArgs = {
  distinct_on?: InputMaybe<Array<WithdrawalTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<WithdrawalTypes_Order_By>>;
  where?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};


export type Query_RootWithdrawalTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<WithdrawalTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<WithdrawalTypes_Order_By>>;
  where?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};


export type Query_RootWithdrawalTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Query_RootWithdrawalVolumeGraphArgs = {
  args: WithdrawalVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootWithdrawalVolumeGraphWithCurrencyArgs = {
  args: WithdrawalVolumeGraphWithCurrency_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootWithdrawalVolumeGraphWithCurrency_AggregateArgs = {
  args: WithdrawalVolumeGraphWithCurrency_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootWithdrawalVolumeGraph_AggregateArgs = {
  args: WithdrawalVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Query_RootWithdrawalsArgs = {
  distinct_on?: InputMaybe<Array<Withdrawals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Withdrawals_Order_By>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};


export type Query_RootWithdrawals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Withdrawals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Withdrawals_Order_By>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};


export type Query_RootWithdrawals_By_PkArgs = {
  id: Scalars['uuid'];
};

/** columns and relationships of "rollingReserveStatuses" */
export type RollingReserveStatuses = {
  __typename?: 'rollingReserveStatuses';
  description?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  /** An array relationship */
  rollingReserves: Array<RollingReserves>;
  /** An aggregate relationship */
  rollingReserves_aggregate: RollingReserves_Aggregate;
};


/** columns and relationships of "rollingReserveStatuses" */
export type RollingReserveStatusesRollingReservesArgs = {
  distinct_on?: InputMaybe<Array<RollingReserves_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserves_Order_By>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};


/** columns and relationships of "rollingReserveStatuses" */
export type RollingReserveStatusesRollingReserves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<RollingReserves_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserves_Order_By>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};

/** aggregated selection of "rollingReserveStatuses" */
export type RollingReserveStatuses_Aggregate = {
  __typename?: 'rollingReserveStatuses_aggregate';
  aggregate?: Maybe<RollingReserveStatuses_Aggregate_Fields>;
  nodes: Array<RollingReserveStatuses>;
};

/** aggregate fields of "rollingReserveStatuses" */
export type RollingReserveStatuses_Aggregate_Fields = {
  __typename?: 'rollingReserveStatuses_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<RollingReserveStatuses_Max_Fields>;
  min?: Maybe<RollingReserveStatuses_Min_Fields>;
};


/** aggregate fields of "rollingReserveStatuses" */
export type RollingReserveStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<RollingReserveStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "rollingReserveStatuses". All fields are combined with a logical 'AND'. */
export type RollingReserveStatuses_Bool_Exp = {
  _and?: InputMaybe<Array<RollingReserveStatuses_Bool_Exp>>;
  _not?: InputMaybe<RollingReserveStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<RollingReserveStatuses_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  rollingReserves?: InputMaybe<RollingReserves_Bool_Exp>;
  rollingReserves_aggregate?: InputMaybe<RollingReserves_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "rollingReserveStatuses" */
export enum RollingReserveStatuses_Constraint {
  /** unique or primary key constraint on columns "name" */
  RollingReserveStatusPkey = 'rollingReserveStatus_pkey'
}

export enum RollingReserveStatuses_Enum {
  Released = 'RELEASED',
  Unreleased = 'UNRELEASED'
}

/** Boolean expression to compare columns of type "rollingReserveStatuses_enum". All fields are combined with logical 'AND'. */
export type RollingReserveStatuses_Enum_Comparison_Exp = {
  _eq?: InputMaybe<RollingReserveStatuses_Enum>;
  _in?: InputMaybe<Array<RollingReserveStatuses_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<RollingReserveStatuses_Enum>;
  _nin?: InputMaybe<Array<RollingReserveStatuses_Enum>>;
};

/** input type for inserting data into table "rollingReserveStatuses" */
export type RollingReserveStatuses_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  rollingReserves?: InputMaybe<RollingReserves_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type RollingReserveStatuses_Max_Fields = {
  __typename?: 'rollingReserveStatuses_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type RollingReserveStatuses_Min_Fields = {
  __typename?: 'rollingReserveStatuses_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "rollingReserveStatuses" */
export type RollingReserveStatuses_Mutation_Response = {
  __typename?: 'rollingReserveStatuses_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<RollingReserveStatuses>;
};

/** input type for inserting object relation for remote table "rollingReserveStatuses" */
export type RollingReserveStatuses_Obj_Rel_Insert_Input = {
  data: RollingReserveStatuses_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<RollingReserveStatuses_On_Conflict>;
};

/** on_conflict condition type for table "rollingReserveStatuses" */
export type RollingReserveStatuses_On_Conflict = {
  constraint: RollingReserveStatuses_Constraint;
  update_columns?: Array<RollingReserveStatuses_Update_Column>;
  where?: InputMaybe<RollingReserveStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "rollingReserveStatuses". */
export type RollingReserveStatuses_Order_By = {
  description?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  rollingReserves_aggregate?: InputMaybe<RollingReserves_Aggregate_Order_By>;
};

/** primary key columns input for table: rollingReserveStatuses */
export type RollingReserveStatuses_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "rollingReserveStatuses" */
export enum RollingReserveStatuses_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "rollingReserveStatuses" */
export type RollingReserveStatuses_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "rollingReserveStatuses" */
export type RollingReserveStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: RollingReserveStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type RollingReserveStatuses_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "rollingReserveStatuses" */
export enum RollingReserveStatuses_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type RollingReserveStatuses_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<RollingReserveStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: RollingReserveStatuses_Bool_Exp;
};

/** columns and relationships of "rollingReserves" */
export type RollingReserves = {
  __typename?: 'rollingReserves';
  amount: Scalars['numeric'];
  createdAt: Scalars['timestamptz'];
  currency?: Maybe<Scalars['String']>;
  daysUntilRelease: Scalars['Int'];
  /** An object relationship */
  deposit: Deposits;
  depositId: Scalars['uuid'];
  id: Scalars['uuid'];
  initialReleaseDays: Scalars['Int'];
  releaseDate: Scalars['timestamptz'];
  releaseToBusinessWallet: Array<BusinessWallet>;
  releaseToBusinessWalletId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  rollingReserveStatus: RollingReserveStatuses;
  status: RollingReserveStatuses_Enum;
  tags?: Maybe<Scalars['jsonb']>;
  updatedAt: Scalars['timestamp'];
  updatedByUserId?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "rollingReserves" */
export type RollingReservesReleaseToBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_RollingReservesreleaseToBusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_RollingReservesreleaseToBusinessWallet>;
};


/** columns and relationships of "rollingReserves" */
export type RollingReservesTagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "rollingReserves" */
export type RollingReserves_Aggregate = {
  __typename?: 'rollingReserves_aggregate';
  aggregate?: Maybe<RollingReserves_Aggregate_Fields>;
  nodes: Array<RollingReserves>;
};

export type RollingReserves_Aggregate_Bool_Exp = {
  count?: InputMaybe<RollingReserves_Aggregate_Bool_Exp_Count>;
};

export type RollingReserves_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<RollingReserves_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<RollingReserves_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rollingReserves" */
export type RollingReserves_Aggregate_Fields = {
  __typename?: 'rollingReserves_aggregate_fields';
  avg?: Maybe<RollingReserves_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<RollingReserves_Max_Fields>;
  min?: Maybe<RollingReserves_Min_Fields>;
  stddev?: Maybe<RollingReserves_Stddev_Fields>;
  stddev_pop?: Maybe<RollingReserves_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<RollingReserves_Stddev_Samp_Fields>;
  sum?: Maybe<RollingReserves_Sum_Fields>;
  var_pop?: Maybe<RollingReserves_Var_Pop_Fields>;
  var_samp?: Maybe<RollingReserves_Var_Samp_Fields>;
  variance?: Maybe<RollingReserves_Variance_Fields>;
};


/** aggregate fields of "rollingReserves" */
export type RollingReserves_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<RollingReserves_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "rollingReserves" */
export type RollingReserves_Aggregate_Order_By = {
  avg?: InputMaybe<RollingReserves_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<RollingReserves_Max_Order_By>;
  min?: InputMaybe<RollingReserves_Min_Order_By>;
  stddev?: InputMaybe<RollingReserves_Stddev_Order_By>;
  stddev_pop?: InputMaybe<RollingReserves_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<RollingReserves_Stddev_Samp_Order_By>;
  sum?: InputMaybe<RollingReserves_Sum_Order_By>;
  var_pop?: InputMaybe<RollingReserves_Var_Pop_Order_By>;
  var_samp?: InputMaybe<RollingReserves_Var_Samp_Order_By>;
  variance?: InputMaybe<RollingReserves_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type RollingReserves_Append_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "rollingReserves" */
export type RollingReserves_Arr_Rel_Insert_Input = {
  data: Array<RollingReserves_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<RollingReserves_On_Conflict>;
};

/** aggregate avg on columns */
export type RollingReserves_Avg_Fields = {
  __typename?: 'rollingReserves_avg_fields';
  amount?: Maybe<Scalars['Float']>;
  daysUntilRelease?: Maybe<Scalars['Float']>;
  initialReleaseDays?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "rollingReserves" */
export type RollingReserves_Avg_Order_By = {
  amount?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rollingReserves". All fields are combined with a logical 'AND'. */
export type RollingReserves_Bool_Exp = {
  _and?: InputMaybe<Array<RollingReserves_Bool_Exp>>;
  _not?: InputMaybe<RollingReserves_Bool_Exp>;
  _or?: InputMaybe<Array<RollingReserves_Bool_Exp>>;
  amount?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  daysUntilRelease?: InputMaybe<Int_Comparison_Exp>;
  deposit?: InputMaybe<Deposits_Bool_Exp>;
  depositId?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  initialReleaseDays?: InputMaybe<Int_Comparison_Exp>;
  releaseDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  releaseToBusinessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  rollingReserveStatus?: InputMaybe<RollingReserveStatuses_Bool_Exp>;
  status?: InputMaybe<RollingReserveStatuses_Enum_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamp_Comparison_Exp>;
  updatedByUserId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "rollingReserves" */
export enum RollingReserves_Constraint {
  /** unique or primary key constraint on columns "id" */
  RollingReservesPkey = 'rollingReserves_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type RollingReserves_Delete_At_Path_Input = {
  tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type RollingReserves_Delete_Elem_Input = {
  tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type RollingReserves_Delete_Key_Input = {
  tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "rollingReserves" */
export type RollingReserves_Inc_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  daysUntilRelease?: InputMaybe<Scalars['Int']>;
  initialReleaseDays?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "rollingReserves" */
export type RollingReserves_Insert_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  daysUntilRelease?: InputMaybe<Scalars['Int']>;
  deposit?: InputMaybe<Deposits_Obj_Rel_Insert_Input>;
  depositId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  initialReleaseDays?: InputMaybe<Scalars['Int']>;
  releaseDate?: InputMaybe<Scalars['timestamptz']>;
  releaseToBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  rollingReserveStatus?: InputMaybe<RollingReserveStatuses_Obj_Rel_Insert_Input>;
  status?: InputMaybe<RollingReserveStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamp']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type RollingReserves_Max_Fields = {
  __typename?: 'rollingReserves_max_fields';
  amount?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  daysUntilRelease?: Maybe<Scalars['Int']>;
  depositId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  initialReleaseDays?: Maybe<Scalars['Int']>;
  releaseDate?: Maybe<Scalars['timestamptz']>;
  releaseToBusinessWalletId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamp']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "rollingReserves" */
export type RollingReserves_Max_Order_By = {
  amount?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
  releaseDate?: InputMaybe<Order_By>;
  releaseToBusinessWalletId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type RollingReserves_Min_Fields = {
  __typename?: 'rollingReserves_min_fields';
  amount?: Maybe<Scalars['numeric']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  daysUntilRelease?: Maybe<Scalars['Int']>;
  depositId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  initialReleaseDays?: Maybe<Scalars['Int']>;
  releaseDate?: Maybe<Scalars['timestamptz']>;
  releaseToBusinessWalletId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamp']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "rollingReserves" */
export type RollingReserves_Min_Order_By = {
  amount?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
  releaseDate?: InputMaybe<Order_By>;
  releaseToBusinessWalletId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rollingReserves" */
export type RollingReserves_Mutation_Response = {
  __typename?: 'rollingReserves_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<RollingReserves>;
};

/** on_conflict condition type for table "rollingReserves" */
export type RollingReserves_On_Conflict = {
  constraint: RollingReserves_Constraint;
  update_columns?: Array<RollingReserves_Update_Column>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};

/** Ordering options when selecting data from "rollingReserves". */
export type RollingReserves_Order_By = {
  amount?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  deposit?: InputMaybe<Deposits_Order_By>;
  depositId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
  releaseDate?: InputMaybe<Order_By>;
  releaseToBusinessWalletId?: InputMaybe<Order_By>;
  rollingReserveStatus?: InputMaybe<RollingReserveStatuses_Order_By>;
  status?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rollingReserves */
export type RollingReserves_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type RollingReserves_Prepend_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "rollingReserves" */
export enum RollingReserves_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Currency = 'currency',
  /** column name */
  DaysUntilRelease = 'daysUntilRelease',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  Id = 'id',
  /** column name */
  InitialReleaseDays = 'initialReleaseDays',
  /** column name */
  ReleaseDate = 'releaseDate',
  /** column name */
  ReleaseToBusinessWalletId = 'releaseToBusinessWalletId',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

/** input type for updating data in table "rollingReserves" */
export type RollingReserves_Set_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  daysUntilRelease?: InputMaybe<Scalars['Int']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  initialReleaseDays?: InputMaybe<Scalars['Int']>;
  releaseDate?: InputMaybe<Scalars['timestamptz']>;
  releaseToBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  status?: InputMaybe<RollingReserveStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamp']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type RollingReserves_Stddev_Fields = {
  __typename?: 'rollingReserves_stddev_fields';
  amount?: Maybe<Scalars['Float']>;
  daysUntilRelease?: Maybe<Scalars['Float']>;
  initialReleaseDays?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "rollingReserves" */
export type RollingReserves_Stddev_Order_By = {
  amount?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type RollingReserves_Stddev_Pop_Fields = {
  __typename?: 'rollingReserves_stddev_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  daysUntilRelease?: Maybe<Scalars['Float']>;
  initialReleaseDays?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "rollingReserves" */
export type RollingReserves_Stddev_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type RollingReserves_Stddev_Samp_Fields = {
  __typename?: 'rollingReserves_stddev_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  daysUntilRelease?: Maybe<Scalars['Float']>;
  initialReleaseDays?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "rollingReserves" */
export type RollingReserves_Stddev_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "rollingReserves" */
export type RollingReserves_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: RollingReserves_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type RollingReserves_Stream_Cursor_Value_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  daysUntilRelease?: InputMaybe<Scalars['Int']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  initialReleaseDays?: InputMaybe<Scalars['Int']>;
  releaseDate?: InputMaybe<Scalars['timestamptz']>;
  releaseToBusinessWalletId?: InputMaybe<Scalars['uuid']>;
  status?: InputMaybe<RollingReserveStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamp']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type RollingReserves_Sum_Fields = {
  __typename?: 'rollingReserves_sum_fields';
  amount?: Maybe<Scalars['numeric']>;
  daysUntilRelease?: Maybe<Scalars['Int']>;
  initialReleaseDays?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "rollingReserves" */
export type RollingReserves_Sum_Order_By = {
  amount?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
};

/** update columns of table "rollingReserves" */
export enum RollingReserves_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Currency = 'currency',
  /** column name */
  DaysUntilRelease = 'daysUntilRelease',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  Id = 'id',
  /** column name */
  InitialReleaseDays = 'initialReleaseDays',
  /** column name */
  ReleaseDate = 'releaseDate',
  /** column name */
  ReleaseToBusinessWalletId = 'releaseToBusinessWalletId',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

export type RollingReserves_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<RollingReserves_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<RollingReserves_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<RollingReserves_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<RollingReserves_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<RollingReserves_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<RollingReserves_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<RollingReserves_Set_Input>;
  /** filter the rows which have to be updated */
  where: RollingReserves_Bool_Exp;
};

/** aggregate var_pop on columns */
export type RollingReserves_Var_Pop_Fields = {
  __typename?: 'rollingReserves_var_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  daysUntilRelease?: Maybe<Scalars['Float']>;
  initialReleaseDays?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "rollingReserves" */
export type RollingReserves_Var_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type RollingReserves_Var_Samp_Fields = {
  __typename?: 'rollingReserves_var_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  daysUntilRelease?: Maybe<Scalars['Float']>;
  initialReleaseDays?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "rollingReserves" */
export type RollingReserves_Var_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type RollingReserves_Variance_Fields = {
  __typename?: 'rollingReserves_variance_fields';
  amount?: Maybe<Scalars['Float']>;
  daysUntilRelease?: Maybe<Scalars['Float']>;
  initialReleaseDays?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "rollingReserves" */
export type RollingReserves_Variance_Order_By = {
  amount?: InputMaybe<Order_By>;
  daysUntilRelease?: InputMaybe<Order_By>;
  initialReleaseDays?: InputMaybe<Order_By>;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  /** fetch data from the table: "accountLedgers" using primary key columns */
  accountLedgers_by_pk?: Maybe<AccountLedgers>;
  /** fetch data from the table in a streaming manner: "accountLedgers" */
  accountLedgers_stream: Array<AccountLedgers>;
  /** An array relationship */
  activityLogs: Array<ActivityLogs>;
  /** An aggregate relationship */
  activityLogs_aggregate: ActivityLogs_Aggregate;
  /** fetch data from the table: "activityLogs" using primary key columns */
  activityLogs_by_pk?: Maybe<ActivityLogs>;
  /** fetch data from the table in a streaming manner: "activityLogs" */
  activityLogs_stream: Array<ActivityLogs>;
  /** fetch data from the table: "adjustmentTypes" */
  adjustmentTypes: Array<AdjustmentTypes>;
  /** fetch aggregated fields from the table: "adjustmentTypes" */
  adjustmentTypes_aggregate: AdjustmentTypes_Aggregate;
  /** fetch data from the table: "adjustmentTypes" using primary key columns */
  adjustmentTypes_by_pk?: Maybe<AdjustmentTypes>;
  /** fetch data from the table in a streaming manner: "adjustmentTypes" */
  adjustmentTypes_stream: Array<AdjustmentTypes>;
  /** An array relationship */
  adjustments: Array<Adjustments>;
  /** An aggregate relationship */
  adjustments_aggregate: Adjustments_Aggregate;
  /** fetch data from the table: "adjustments" using primary key columns */
  adjustments_by_pk?: Maybe<Adjustments>;
  /** fetch data from the table in a streaming manner: "adjustments" */
  adjustments_stream: Array<Adjustments>;
  /** fetch data from the table: "apiTemplates" */
  apiTemplates: Array<ApiTemplates>;
  /** fetch aggregated fields from the table: "apiTemplates" */
  apiTemplates_aggregate: ApiTemplates_Aggregate;
  /** fetch data from the table: "apiTemplates" using primary key columns */
  apiTemplates_by_pk?: Maybe<ApiTemplates>;
  /** fetch data from the table in a streaming manner: "apiTemplates" */
  apiTemplates_stream: Array<ApiTemplates>;
  /** execute function "commissionVolumeGraph" which returns "graphData" */
  commissionVolumeGraph: Array<GraphData>;
  /** execute function "commissionVolumeGraph" and query aggregates on result of table type "graphData" */
  commissionVolumeGraph_aggregate: GraphData_Aggregate;
  /** fetch data from the table: "conversationCategories" */
  conversationCategories: Array<ConversationCategories>;
  /** fetch aggregated fields from the table: "conversationCategories" */
  conversationCategories_aggregate: ConversationCategories_Aggregate;
  /** fetch data from the table: "conversationCategories" using primary key columns */
  conversationCategories_by_pk?: Maybe<ConversationCategories>;
  /** fetch data from the table in a streaming manner: "conversationCategories" */
  conversationCategories_stream: Array<ConversationCategories>;
  /** fetch data from the table: "conversationStatus" */
  conversationStatus: Array<ConversationStatus>;
  /** fetch aggregated fields from the table: "conversationStatus" */
  conversationStatus_aggregate: ConversationStatus_Aggregate;
  /** fetch data from the table: "conversationStatus" using primary key columns */
  conversationStatus_by_pk?: Maybe<ConversationStatus>;
  /** fetch data from the table in a streaming manner: "conversationStatus" */
  conversationStatus_stream: Array<ConversationStatus>;
  /** An array relationship */
  conversations: Array<Conversations>;
  /** An aggregate relationship */
  conversations_aggregate: Conversations_Aggregate;
  /** fetch data from the table: "conversations" using primary key columns */
  conversations_by_pk?: Maybe<Conversations>;
  /** fetch data from the table in a streaming manner: "conversations" */
  conversations_stream: Array<Conversations>;
  /** fetch data from the table: "currencyExchange" */
  currencyExchange: Array<CurrencyExchange>;
  /** fetch aggregated fields from the table: "currencyExchange" */
  currencyExchange_aggregate: CurrencyExchange_Aggregate;
  /** fetch data from the table: "currencyExchange" using primary key columns */
  currencyExchange_by_pk?: Maybe<CurrencyExchange>;
  /** fetch data from the table in a streaming manner: "currencyExchange" */
  currencyExchange_stream: Array<CurrencyExchange>;
  /** fetch data from the table: "dailyCommissionVolume" */
  dailyCommissionVolume: Array<DailyCommissionVolume>;
  /** fetch aggregated fields from the table: "dailyCommissionVolume" */
  dailyCommissionVolume_aggregate: DailyCommissionVolume_Aggregate;
  /** fetch data from the table: "dailyCommissionVolume" using primary key columns */
  dailyCommissionVolume_by_pk?: Maybe<DailyCommissionVolume>;
  /** fetch data from the table in a streaming manner: "dailyCommissionVolume" */
  dailyCommissionVolume_stream: Array<DailyCommissionVolume>;
  /** fetch data from the table: "dailyDepositVolume" */
  dailyDepositVolume: Array<DailyDepositVolume>;
  /** fetch aggregated fields from the table: "dailyDepositVolume" */
  dailyDepositVolume_aggregate: DailyDepositVolume_Aggregate;
  /** fetch data from the table: "dailyDepositVolume" using primary key columns */
  dailyDepositVolume_by_pk?: Maybe<DailyDepositVolume>;
  /** fetch data from the table in a streaming manner: "dailyDepositVolume" */
  dailyDepositVolume_stream: Array<DailyDepositVolume>;
  /** fetch data from the table: "dailyWithdrawalVolume" */
  dailyWithdrawalVolume: Array<DailyWithdrawalVolume>;
  /** fetch aggregated fields from the table: "dailyWithdrawalVolume" */
  dailyWithdrawalVolume_aggregate: DailyWithdrawalVolume_Aggregate;
  /** fetch data from the table: "dailyWithdrawalVolume" using primary key columns */
  dailyWithdrawalVolume_by_pk?: Maybe<DailyWithdrawalVolume>;
  /** fetch data from the table in a streaming manner: "dailyWithdrawalVolume" */
  dailyWithdrawalVolume_stream: Array<DailyWithdrawalVolume>;
  /** fetch data from the table: "depositStatuses" */
  depositStatuses: Array<DepositStatuses>;
  /** fetch aggregated fields from the table: "depositStatuses" */
  depositStatuses_aggregate: DepositStatuses_Aggregate;
  /** fetch data from the table: "depositStatuses" using primary key columns */
  depositStatuses_by_pk?: Maybe<DepositStatuses>;
  /** fetch data from the table in a streaming manner: "depositStatuses" */
  depositStatuses_stream: Array<DepositStatuses>;
  /** fetch data from the table: "depositTypes" */
  depositTypes: Array<DepositTypes>;
  /** fetch aggregated fields from the table: "depositTypes" */
  depositTypes_aggregate: DepositTypes_Aggregate;
  /** fetch data from the table: "depositTypes" using primary key columns */
  depositTypes_by_pk?: Maybe<DepositTypes>;
  /** fetch data from the table in a streaming manner: "depositTypes" */
  depositTypes_stream: Array<DepositTypes>;
  /** execute function "depositVolumeGraph" which returns "graphData" */
  depositVolumeGraph: Array<GraphData>;
  /** execute function "depositVolumeGraphWithCurrency" which returns "graphData" */
  depositVolumeGraphWithCurrency: Array<GraphData>;
  /** execute function "depositVolumeGraphWithCurrency" and query aggregates on result of table type "graphData" */
  depositVolumeGraphWithCurrency_aggregate: GraphData_Aggregate;
  /** execute function "depositVolumeGraph" and query aggregates on result of table type "graphData" */
  depositVolumeGraph_aggregate: GraphData_Aggregate;
  /** An array relationship */
  deposits: Array<Deposits>;
  /** An aggregate relationship */
  deposits_aggregate: Deposits_Aggregate;
  /** fetch data from the table: "deposits" using primary key columns */
  deposits_by_pk?: Maybe<Deposits>;
  /** fetch data from the table in a streaming manner: "deposits" */
  deposits_stream: Array<Deposits>;
  /** fetch data from the table: "featureTypes" */
  featureTypes: Array<FeatureTypes>;
  /** fetch aggregated fields from the table: "featureTypes" */
  featureTypes_aggregate: FeatureTypes_Aggregate;
  /** fetch data from the table: "featureTypes" using primary key columns */
  featureTypes_by_pk?: Maybe<FeatureTypes>;
  /** fetch data from the table in a streaming manner: "featureTypes" */
  featureTypes_stream: Array<FeatureTypes>;
  /** execute function "generateReferenceId" which returns "textResult" */
  generateReferenceId: Array<TextResult>;
  /** execute function "generateReferenceId" and query aggregates on result of table type "textResult" */
  generateReferenceId_aggregate: TextResult_Aggregate;
  /** execute function "generateReferenceIds" which returns "textResult" */
  generateReferenceIds: Array<TextResult>;
  /** execute function "generateReferenceIds" and query aggregates on result of table type "textResult" */
  generateReferenceIds_aggregate: TextResult_Aggregate;
  /** fetch data from the table: "graphData" */
  graphData: Array<GraphData>;
  /** fetch aggregated fields from the table: "graphData" */
  graphData_aggregate: GraphData_Aggregate;
  /** fetch data from the table in a streaming manner: "graphData" */
  graphData_stream: Array<GraphData>;
  /** fetch data from the table: "internalTransfers" */
  internalTransfers: Array<InternalTransfers>;
  /** fetch aggregated fields from the table: "internalTransfers" */
  internalTransfers_aggregate: InternalTransfers_Aggregate;
  /** fetch data from the table: "internalTransfers" using primary key columns */
  internalTransfers_by_pk?: Maybe<InternalTransfers>;
  /** fetch data from the table in a streaming manner: "internalTransfers" */
  internalTransfers_stream: Array<InternalTransfers>;
  /** fetch data from the table: "ledgerTypes" */
  ledgerTypes: Array<LedgerTypes>;
  /** fetch aggregated fields from the table: "ledgerTypes" */
  ledgerTypes_aggregate: LedgerTypes_Aggregate;
  /** fetch data from the table: "ledgerTypes" using primary key columns */
  ledgerTypes_by_pk?: Maybe<LedgerTypes>;
  /** fetch data from the table in a streaming manner: "ledgerTypes" */
  ledgerTypes_stream: Array<LedgerTypes>;
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  /** fetch data from the table: "ledgers" using primary key columns */
  ledgers_by_pk?: Maybe<Ledgers>;
  /** fetch data from the table in a streaming manner: "ledgers" */
  ledgers_stream: Array<Ledgers>;
  /** fetch data from the table: "messageTypes" */
  messageTypes: Array<MessageTypes>;
  /** fetch aggregated fields from the table: "messageTypes" */
  messageTypes_aggregate: MessageTypes_Aggregate;
  /** fetch data from the table: "messageTypes" using primary key columns */
  messageTypes_by_pk?: Maybe<MessageTypes>;
  /** fetch data from the table in a streaming manner: "messageTypes" */
  messageTypes_stream: Array<MessageTypes>;
  /** An array relationship */
  messages: Array<Messages>;
  /** An aggregate relationship */
  messages_aggregate: Messages_Aggregate;
  /** fetch data from the table: "messages" using primary key columns */
  messages_by_pk?: Maybe<Messages>;
  /** fetch data from the table in a streaming manner: "messages" */
  messages_stream: Array<Messages>;
  /** fetch data from the table: "rollingReserveStatuses" */
  rollingReserveStatuses: Array<RollingReserveStatuses>;
  /** fetch aggregated fields from the table: "rollingReserveStatuses" */
  rollingReserveStatuses_aggregate: RollingReserveStatuses_Aggregate;
  /** fetch data from the table: "rollingReserveStatuses" using primary key columns */
  rollingReserveStatuses_by_pk?: Maybe<RollingReserveStatuses>;
  /** fetch data from the table in a streaming manner: "rollingReserveStatuses" */
  rollingReserveStatuses_stream: Array<RollingReserveStatuses>;
  /** An array relationship */
  rollingReserves: Array<RollingReserves>;
  /** An aggregate relationship */
  rollingReserves_aggregate: RollingReserves_Aggregate;
  /** fetch data from the table: "rollingReserves" using primary key columns */
  rollingReserves_by_pk?: Maybe<RollingReserves>;
  /** fetch data from the table in a streaming manner: "rollingReserves" */
  rollingReserves_stream: Array<RollingReserves>;
  /** fetch data from the table: "tags" */
  tags: Array<Tags>;
  /** fetch aggregated fields from the table: "tags" */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table in a streaming manner: "tags" */
  tags_stream: Array<Tags>;
  /** fetch data from the table: "taskPriorities" */
  taskPriorities: Array<TaskPriorities>;
  /** fetch aggregated fields from the table: "taskPriorities" */
  taskPriorities_aggregate: TaskPriorities_Aggregate;
  /** fetch data from the table: "taskPriorities" using primary key columns */
  taskPriorities_by_pk?: Maybe<TaskPriorities>;
  /** fetch data from the table in a streaming manner: "taskPriorities" */
  taskPriorities_stream: Array<TaskPriorities>;
  /** fetch data from the table: "taskStatusTypes" */
  taskStatusTypes: Array<TaskStatusTypes>;
  /** fetch aggregated fields from the table: "taskStatusTypes" */
  taskStatusTypes_aggregate: TaskStatusTypes_Aggregate;
  /** fetch data from the table: "taskStatusTypes" using primary key columns */
  taskStatusTypes_by_pk?: Maybe<TaskStatusTypes>;
  /** fetch data from the table in a streaming manner: "taskStatusTypes" */
  taskStatusTypes_stream: Array<TaskStatusTypes>;
  /** An array relationship */
  tasks: Array<Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Tasks_Aggregate;
  /** fetch data from the table: "tasks" using primary key columns */
  tasks_by_pk?: Maybe<Tasks>;
  /** fetch data from the table in a streaming manner: "tasks" */
  tasks_stream: Array<Tasks>;
  /** fetch data from the table: "textResult" */
  textResult: Array<TextResult>;
  /** fetch aggregated fields from the table: "textResult" */
  textResult_aggregate: TextResult_Aggregate;
  /** fetch data from the table in a streaming manner: "textResult" */
  textResult_stream: Array<TextResult>;
  /** fetch data from the table: "transactionTypes" */
  transactionTypes: Array<TransactionTypes>;
  /** fetch aggregated fields from the table: "transactionTypes" */
  transactionTypes_aggregate: TransactionTypes_Aggregate;
  /** fetch data from the table: "transactionTypes" using primary key columns */
  transactionTypes_by_pk?: Maybe<TransactionTypes>;
  /** fetch data from the table in a streaming manner: "transactionTypes" */
  transactionTypes_stream: Array<TransactionTypes>;
  /** fetch data from the table: "withdrawalStatuses" */
  withdrawalStatuses: Array<WithdrawalStatuses>;
  /** fetch aggregated fields from the table: "withdrawalStatuses" */
  withdrawalStatuses_aggregate: WithdrawalStatuses_Aggregate;
  /** fetch data from the table: "withdrawalStatuses" using primary key columns */
  withdrawalStatuses_by_pk?: Maybe<WithdrawalStatuses>;
  /** fetch data from the table in a streaming manner: "withdrawalStatuses" */
  withdrawalStatuses_stream: Array<WithdrawalStatuses>;
  /** fetch data from the table: "withdrawalTypes" */
  withdrawalTypes: Array<WithdrawalTypes>;
  /** fetch aggregated fields from the table: "withdrawalTypes" */
  withdrawalTypes_aggregate: WithdrawalTypes_Aggregate;
  /** fetch data from the table: "withdrawalTypes" using primary key columns */
  withdrawalTypes_by_pk?: Maybe<WithdrawalTypes>;
  /** fetch data from the table in a streaming manner: "withdrawalTypes" */
  withdrawalTypes_stream: Array<WithdrawalTypes>;
  /** execute function "withdrawalVolumeGraph" which returns "graphData" */
  withdrawalVolumeGraph: Array<GraphData>;
  /** execute function "withdrawalVolumeGraphWithCurrency" which returns "graphData" */
  withdrawalVolumeGraphWithCurrency: Array<GraphData>;
  /** execute function "withdrawalVolumeGraphWithCurrency" and query aggregates on result of table type "graphData" */
  withdrawalVolumeGraphWithCurrency_aggregate: GraphData_Aggregate;
  /** execute function "withdrawalVolumeGraph" and query aggregates on result of table type "graphData" */
  withdrawalVolumeGraph_aggregate: GraphData_Aggregate;
  /** An array relationship */
  withdrawals: Array<Withdrawals>;
  /** An aggregate relationship */
  withdrawals_aggregate: Withdrawals_Aggregate;
  /** fetch data from the table: "withdrawals" using primary key columns */
  withdrawals_by_pk?: Maybe<Withdrawals>;
  /** fetch data from the table in a streaming manner: "withdrawals" */
  withdrawals_stream: Array<Withdrawals>;
};


export type Subscription_RootAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


export type Subscription_RootAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


export type Subscription_RootAccountLedgers_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootAccountLedgers_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<AccountLedgers_Stream_Cursor_Input>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


export type Subscription_RootActivityLogsArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


export type Subscription_RootActivityLogs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


export type Subscription_RootActivityLogs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootActivityLogs_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ActivityLogs_Stream_Cursor_Input>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


export type Subscription_RootAdjustmentTypesArgs = {
  distinct_on?: InputMaybe<Array<AdjustmentTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AdjustmentTypes_Order_By>>;
  where?: InputMaybe<AdjustmentTypes_Bool_Exp>;
};


export type Subscription_RootAdjustmentTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AdjustmentTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AdjustmentTypes_Order_By>>;
  where?: InputMaybe<AdjustmentTypes_Bool_Exp>;
};


export type Subscription_RootAdjustmentTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootAdjustmentTypes_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<AdjustmentTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<AdjustmentTypes_Bool_Exp>;
};


export type Subscription_RootAdjustmentsArgs = {
  distinct_on?: InputMaybe<Array<Adjustments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Adjustments_Order_By>>;
  where?: InputMaybe<Adjustments_Bool_Exp>;
};


export type Subscription_RootAdjustments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Adjustments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Adjustments_Order_By>>;
  where?: InputMaybe<Adjustments_Bool_Exp>;
};


export type Subscription_RootAdjustments_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootAdjustments_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Adjustments_Stream_Cursor_Input>>;
  where?: InputMaybe<Adjustments_Bool_Exp>;
};


export type Subscription_RootApiTemplatesArgs = {
  distinct_on?: InputMaybe<Array<ApiTemplates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ApiTemplates_Order_By>>;
  where?: InputMaybe<ApiTemplates_Bool_Exp>;
};


export type Subscription_RootApiTemplates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ApiTemplates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ApiTemplates_Order_By>>;
  where?: InputMaybe<ApiTemplates_Bool_Exp>;
};


export type Subscription_RootApiTemplates_By_PkArgs = {
  id: Scalars['String'];
};


export type Subscription_RootApiTemplates_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ApiTemplates_Stream_Cursor_Input>>;
  where?: InputMaybe<ApiTemplates_Bool_Exp>;
};


export type Subscription_RootCommissionVolumeGraphArgs = {
  args: CommissionVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootCommissionVolumeGraph_AggregateArgs = {
  args: CommissionVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootConversationCategoriesArgs = {
  distinct_on?: InputMaybe<Array<ConversationCategories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ConversationCategories_Order_By>>;
  where?: InputMaybe<ConversationCategories_Bool_Exp>;
};


export type Subscription_RootConversationCategories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ConversationCategories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ConversationCategories_Order_By>>;
  where?: InputMaybe<ConversationCategories_Bool_Exp>;
};


export type Subscription_RootConversationCategories_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootConversationCategories_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ConversationCategories_Stream_Cursor_Input>>;
  where?: InputMaybe<ConversationCategories_Bool_Exp>;
};


export type Subscription_RootConversationStatusArgs = {
  distinct_on?: InputMaybe<Array<ConversationStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ConversationStatus_Order_By>>;
  where?: InputMaybe<ConversationStatus_Bool_Exp>;
};


export type Subscription_RootConversationStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ConversationStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ConversationStatus_Order_By>>;
  where?: InputMaybe<ConversationStatus_Bool_Exp>;
};


export type Subscription_RootConversationStatus_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootConversationStatus_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<ConversationStatus_Stream_Cursor_Input>>;
  where?: InputMaybe<ConversationStatus_Bool_Exp>;
};


export type Subscription_RootConversationsArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


export type Subscription_RootConversations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


export type Subscription_RootConversations_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootConversations_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Conversations_Stream_Cursor_Input>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


export type Subscription_RootCurrencyExchangeArgs = {
  distinct_on?: InputMaybe<Array<CurrencyExchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<CurrencyExchange_Order_By>>;
  where?: InputMaybe<CurrencyExchange_Bool_Exp>;
};


export type Subscription_RootCurrencyExchange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CurrencyExchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<CurrencyExchange_Order_By>>;
  where?: InputMaybe<CurrencyExchange_Bool_Exp>;
};


export type Subscription_RootCurrencyExchange_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootCurrencyExchange_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<CurrencyExchange_Stream_Cursor_Input>>;
  where?: InputMaybe<CurrencyExchange_Bool_Exp>;
};


export type Subscription_RootDailyCommissionVolumeArgs = {
  distinct_on?: InputMaybe<Array<DailyCommissionVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyCommissionVolume_Order_By>>;
  where?: InputMaybe<DailyCommissionVolume_Bool_Exp>;
};


export type Subscription_RootDailyCommissionVolume_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DailyCommissionVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyCommissionVolume_Order_By>>;
  where?: InputMaybe<DailyCommissionVolume_Bool_Exp>;
};


export type Subscription_RootDailyCommissionVolume_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootDailyCommissionVolume_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<DailyCommissionVolume_Stream_Cursor_Input>>;
  where?: InputMaybe<DailyCommissionVolume_Bool_Exp>;
};


export type Subscription_RootDailyDepositVolumeArgs = {
  distinct_on?: InputMaybe<Array<DailyDepositVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyDepositVolume_Order_By>>;
  where?: InputMaybe<DailyDepositVolume_Bool_Exp>;
};


export type Subscription_RootDailyDepositVolume_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DailyDepositVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyDepositVolume_Order_By>>;
  where?: InputMaybe<DailyDepositVolume_Bool_Exp>;
};


export type Subscription_RootDailyDepositVolume_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootDailyDepositVolume_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<DailyDepositVolume_Stream_Cursor_Input>>;
  where?: InputMaybe<DailyDepositVolume_Bool_Exp>;
};


export type Subscription_RootDailyWithdrawalVolumeArgs = {
  distinct_on?: InputMaybe<Array<DailyWithdrawalVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyWithdrawalVolume_Order_By>>;
  where?: InputMaybe<DailyWithdrawalVolume_Bool_Exp>;
};


export type Subscription_RootDailyWithdrawalVolume_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DailyWithdrawalVolume_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DailyWithdrawalVolume_Order_By>>;
  where?: InputMaybe<DailyWithdrawalVolume_Bool_Exp>;
};


export type Subscription_RootDailyWithdrawalVolume_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootDailyWithdrawalVolume_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<DailyWithdrawalVolume_Stream_Cursor_Input>>;
  where?: InputMaybe<DailyWithdrawalVolume_Bool_Exp>;
};


export type Subscription_RootDepositStatusesArgs = {
  distinct_on?: InputMaybe<Array<DepositStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DepositStatuses_Order_By>>;
  where?: InputMaybe<DepositStatuses_Bool_Exp>;
};


export type Subscription_RootDepositStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DepositStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DepositStatuses_Order_By>>;
  where?: InputMaybe<DepositStatuses_Bool_Exp>;
};


export type Subscription_RootDepositStatuses_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootDepositStatuses_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<DepositStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<DepositStatuses_Bool_Exp>;
};


export type Subscription_RootDepositTypesArgs = {
  distinct_on?: InputMaybe<Array<DepositTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DepositTypes_Order_By>>;
  where?: InputMaybe<DepositTypes_Bool_Exp>;
};


export type Subscription_RootDepositTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DepositTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<DepositTypes_Order_By>>;
  where?: InputMaybe<DepositTypes_Bool_Exp>;
};


export type Subscription_RootDepositTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootDepositTypes_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<DepositTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<DepositTypes_Bool_Exp>;
};


export type Subscription_RootDepositVolumeGraphArgs = {
  args: DepositVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootDepositVolumeGraphWithCurrencyArgs = {
  args: DepositVolumeGraphWithCurrency_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootDepositVolumeGraphWithCurrency_AggregateArgs = {
  args: DepositVolumeGraphWithCurrency_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootDepositVolumeGraph_AggregateArgs = {
  args: DepositVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootDepositsArgs = {
  distinct_on?: InputMaybe<Array<Deposits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Deposits_Order_By>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};


export type Subscription_RootDeposits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Deposits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Deposits_Order_By>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};


export type Subscription_RootDeposits_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootDeposits_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Deposits_Stream_Cursor_Input>>;
  where?: InputMaybe<Deposits_Bool_Exp>;
};


export type Subscription_RootFeatureTypesArgs = {
  distinct_on?: InputMaybe<Array<FeatureTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<FeatureTypes_Order_By>>;
  where?: InputMaybe<FeatureTypes_Bool_Exp>;
};


export type Subscription_RootFeatureTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FeatureTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<FeatureTypes_Order_By>>;
  where?: InputMaybe<FeatureTypes_Bool_Exp>;
};


export type Subscription_RootFeatureTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootFeatureTypes_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<FeatureTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<FeatureTypes_Bool_Exp>;
};


export type Subscription_RootGenerateReferenceIdArgs = {
  args: GenerateReferenceId_Args;
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Subscription_RootGenerateReferenceId_AggregateArgs = {
  args: GenerateReferenceId_Args;
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Subscription_RootGenerateReferenceIdsArgs = {
  args: GenerateReferenceIds_Args;
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Subscription_RootGenerateReferenceIds_AggregateArgs = {
  args: GenerateReferenceIds_Args;
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Subscription_RootGraphDataArgs = {
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootGraphData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootGraphData_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphData_Stream_Cursor_Input>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootInternalTransfersArgs = {
  distinct_on?: InputMaybe<Array<InternalTransfers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<InternalTransfers_Order_By>>;
  where?: InputMaybe<InternalTransfers_Bool_Exp>;
};


export type Subscription_RootInternalTransfers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<InternalTransfers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<InternalTransfers_Order_By>>;
  where?: InputMaybe<InternalTransfers_Bool_Exp>;
};


export type Subscription_RootInternalTransfers_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootInternalTransfers_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<InternalTransfers_Stream_Cursor_Input>>;
  where?: InputMaybe<InternalTransfers_Bool_Exp>;
};


export type Subscription_RootLedgerTypesArgs = {
  distinct_on?: InputMaybe<Array<LedgerTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<LedgerTypes_Order_By>>;
  where?: InputMaybe<LedgerTypes_Bool_Exp>;
};


export type Subscription_RootLedgerTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LedgerTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<LedgerTypes_Order_By>>;
  where?: InputMaybe<LedgerTypes_Bool_Exp>;
};


export type Subscription_RootLedgerTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootLedgerTypes_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<LedgerTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<LedgerTypes_Bool_Exp>;
};


export type Subscription_RootLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


export type Subscription_RootLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


export type Subscription_RootLedgers_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootLedgers_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Ledgers_Stream_Cursor_Input>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


export type Subscription_RootMessageTypesArgs = {
  distinct_on?: InputMaybe<Array<MessageTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<MessageTypes_Order_By>>;
  where?: InputMaybe<MessageTypes_Bool_Exp>;
};


export type Subscription_RootMessageTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<MessageTypes_Order_By>>;
  where?: InputMaybe<MessageTypes_Bool_Exp>;
};


export type Subscription_RootMessageTypes_By_PkArgs = {
  id: Scalars['String'];
};


export type Subscription_RootMessageTypes_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<MessageTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<MessageTypes_Bool_Exp>;
};


export type Subscription_RootMessagesArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


export type Subscription_RootMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Messages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Messages_Order_By>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


export type Subscription_RootMessages_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootMessages_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Messages_Stream_Cursor_Input>>;
  where?: InputMaybe<Messages_Bool_Exp>;
};


export type Subscription_RootRollingReserveStatusesArgs = {
  distinct_on?: InputMaybe<Array<RollingReserveStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserveStatuses_Order_By>>;
  where?: InputMaybe<RollingReserveStatuses_Bool_Exp>;
};


export type Subscription_RootRollingReserveStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<RollingReserveStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserveStatuses_Order_By>>;
  where?: InputMaybe<RollingReserveStatuses_Bool_Exp>;
};


export type Subscription_RootRollingReserveStatuses_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootRollingReserveStatuses_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<RollingReserveStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<RollingReserveStatuses_Bool_Exp>;
};


export type Subscription_RootRollingReservesArgs = {
  distinct_on?: InputMaybe<Array<RollingReserves_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserves_Order_By>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};


export type Subscription_RootRollingReserves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<RollingReserves_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<RollingReserves_Order_By>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};


export type Subscription_RootRollingReserves_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootRollingReserves_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<RollingReserves_Stream_Cursor_Input>>;
  where?: InputMaybe<RollingReserves_Bool_Exp>;
};


export type Subscription_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Subscription_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Subscription_RootTags_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootTags_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Tags_Stream_Cursor_Input>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Subscription_RootTaskPrioritiesArgs = {
  distinct_on?: InputMaybe<Array<TaskPriorities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TaskPriorities_Order_By>>;
  where?: InputMaybe<TaskPriorities_Bool_Exp>;
};


export type Subscription_RootTaskPriorities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TaskPriorities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TaskPriorities_Order_By>>;
  where?: InputMaybe<TaskPriorities_Bool_Exp>;
};


export type Subscription_RootTaskPriorities_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootTaskPriorities_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<TaskPriorities_Stream_Cursor_Input>>;
  where?: InputMaybe<TaskPriorities_Bool_Exp>;
};


export type Subscription_RootTaskStatusTypesArgs = {
  distinct_on?: InputMaybe<Array<TaskStatusTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TaskStatusTypes_Order_By>>;
  where?: InputMaybe<TaskStatusTypes_Bool_Exp>;
};


export type Subscription_RootTaskStatusTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TaskStatusTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TaskStatusTypes_Order_By>>;
  where?: InputMaybe<TaskStatusTypes_Bool_Exp>;
};


export type Subscription_RootTaskStatusTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootTaskStatusTypes_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<TaskStatusTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<TaskStatusTypes_Bool_Exp>;
};


export type Subscription_RootTasksArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


export type Subscription_RootTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


export type Subscription_RootTasks_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootTasks_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Tasks_Stream_Cursor_Input>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


export type Subscription_RootTextResultArgs = {
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Subscription_RootTextResult_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TextResult_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TextResult_Order_By>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Subscription_RootTextResult_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<TextResult_Stream_Cursor_Input>>;
  where?: InputMaybe<TextResult_Bool_Exp>;
};


export type Subscription_RootTransactionTypesArgs = {
  distinct_on?: InputMaybe<Array<TransactionTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TransactionTypes_Order_By>>;
  where?: InputMaybe<TransactionTypes_Bool_Exp>;
};


export type Subscription_RootTransactionTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<TransactionTypes_Order_By>>;
  where?: InputMaybe<TransactionTypes_Bool_Exp>;
};


export type Subscription_RootTransactionTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootTransactionTypes_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<TransactionTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<TransactionTypes_Bool_Exp>;
};


export type Subscription_RootWithdrawalStatusesArgs = {
  distinct_on?: InputMaybe<Array<WithdrawalStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<WithdrawalStatuses_Order_By>>;
  where?: InputMaybe<WithdrawalStatuses_Bool_Exp>;
};


export type Subscription_RootWithdrawalStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<WithdrawalStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<WithdrawalStatuses_Order_By>>;
  where?: InputMaybe<WithdrawalStatuses_Bool_Exp>;
};


export type Subscription_RootWithdrawalStatuses_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootWithdrawalStatuses_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<WithdrawalStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<WithdrawalStatuses_Bool_Exp>;
};


export type Subscription_RootWithdrawalTypesArgs = {
  distinct_on?: InputMaybe<Array<WithdrawalTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<WithdrawalTypes_Order_By>>;
  where?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};


export type Subscription_RootWithdrawalTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<WithdrawalTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<WithdrawalTypes_Order_By>>;
  where?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};


export type Subscription_RootWithdrawalTypes_By_PkArgs = {
  name: Scalars['String'];
};


export type Subscription_RootWithdrawalTypes_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<WithdrawalTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};


export type Subscription_RootWithdrawalVolumeGraphArgs = {
  args: WithdrawalVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootWithdrawalVolumeGraphWithCurrencyArgs = {
  args: WithdrawalVolumeGraphWithCurrency_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootWithdrawalVolumeGraphWithCurrency_AggregateArgs = {
  args: WithdrawalVolumeGraphWithCurrency_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootWithdrawalVolumeGraph_AggregateArgs = {
  args: WithdrawalVolumeGraph_Args;
  distinct_on?: InputMaybe<Array<GraphData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<GraphData_Order_By>>;
  where?: InputMaybe<GraphData_Bool_Exp>;
};


export type Subscription_RootWithdrawalsArgs = {
  distinct_on?: InputMaybe<Array<Withdrawals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Withdrawals_Order_By>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};


export type Subscription_RootWithdrawals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Withdrawals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Withdrawals_Order_By>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};


export type Subscription_RootWithdrawals_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootWithdrawals_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Withdrawals_Stream_Cursor_Input>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};

/** columns and relationships of "tags" */
export type Tags = {
  __typename?: 'tags';
  name: Scalars['String'];
};

/** aggregated selection of "tags" */
export type Tags_Aggregate = {
  __typename?: 'tags_aggregate';
  aggregate?: Maybe<Tags_Aggregate_Fields>;
  nodes: Array<Tags>;
};

/** aggregate fields of "tags" */
export type Tags_Aggregate_Fields = {
  __typename?: 'tags_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Tags_Max_Fields>;
  min?: Maybe<Tags_Min_Fields>;
};


/** aggregate fields of "tags" */
export type Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'. */
export type Tags_Bool_Exp = {
  _and?: InputMaybe<Array<Tags_Bool_Exp>>;
  _not?: InputMaybe<Tags_Bool_Exp>;
  _or?: InputMaybe<Array<Tags_Bool_Exp>>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "tags" */
export enum Tags_Constraint {
  /** unique or primary key constraint on columns "name" */
  TagsPkey = 'tags_pkey'
}

/** input type for inserting data into table "tags" */
export type Tags_Insert_Input = {
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Tags_Max_Fields = {
  __typename?: 'tags_max_fields';
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Tags_Min_Fields = {
  __typename?: 'tags_min_fields';
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "tags" */
export type Tags_Mutation_Response = {
  __typename?: 'tags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Tags>;
};

/** on_conflict condition type for table "tags" */
export type Tags_On_Conflict = {
  constraint: Tags_Constraint;
  update_columns?: Array<Tags_Update_Column>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

/** Ordering options when selecting data from "tags". */
export type Tags_Order_By = {
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: tags */
export type Tags_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "tags" */
export enum Tags_Select_Column {
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "tags" */
export type Tags_Set_Input = {
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "tags" */
export type Tags_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tags_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tags_Stream_Cursor_Value_Input = {
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "tags" */
export enum Tags_Update_Column {
  /** column name */
  Name = 'name'
}

export type Tags_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Tags_Set_Input>;
  /** filter the rows which have to be updated */
  where: Tags_Bool_Exp;
};

/** columns and relationships of "taskPriorities" */
export type TaskPriorities = {
  __typename?: 'taskPriorities';
  description?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  /** An array relationship */
  tasks: Array<Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Tasks_Aggregate;
};


/** columns and relationships of "taskPriorities" */
export type TaskPrioritiesTasksArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


/** columns and relationships of "taskPriorities" */
export type TaskPrioritiesTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};

/** aggregated selection of "taskPriorities" */
export type TaskPriorities_Aggregate = {
  __typename?: 'taskPriorities_aggregate';
  aggregate?: Maybe<TaskPriorities_Aggregate_Fields>;
  nodes: Array<TaskPriorities>;
};

/** aggregate fields of "taskPriorities" */
export type TaskPriorities_Aggregate_Fields = {
  __typename?: 'taskPriorities_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<TaskPriorities_Max_Fields>;
  min?: Maybe<TaskPriorities_Min_Fields>;
};


/** aggregate fields of "taskPriorities" */
export type TaskPriorities_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<TaskPriorities_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "taskPriorities". All fields are combined with a logical 'AND'. */
export type TaskPriorities_Bool_Exp = {
  _and?: InputMaybe<Array<TaskPriorities_Bool_Exp>>;
  _not?: InputMaybe<TaskPriorities_Bool_Exp>;
  _or?: InputMaybe<Array<TaskPriorities_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  tasks?: InputMaybe<Tasks_Bool_Exp>;
  tasks_aggregate?: InputMaybe<Tasks_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "taskPriorities" */
export enum TaskPriorities_Constraint {
  /** unique or primary key constraint on columns "name" */
  TaskPrioritiesPkey = 'task_priorities_pkey'
}

export enum TaskPriorities_Enum {
  High = 'HIGH',
  Low = 'LOW',
  Medium = 'MEDIUM'
}

/** Boolean expression to compare columns of type "taskPriorities_enum". All fields are combined with logical 'AND'. */
export type TaskPriorities_Enum_Comparison_Exp = {
  _eq?: InputMaybe<TaskPriorities_Enum>;
  _in?: InputMaybe<Array<TaskPriorities_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<TaskPriorities_Enum>;
  _nin?: InputMaybe<Array<TaskPriorities_Enum>>;
};

/** input type for inserting data into table "taskPriorities" */
export type TaskPriorities_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tasks?: InputMaybe<Tasks_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type TaskPriorities_Max_Fields = {
  __typename?: 'taskPriorities_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type TaskPriorities_Min_Fields = {
  __typename?: 'taskPriorities_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "taskPriorities" */
export type TaskPriorities_Mutation_Response = {
  __typename?: 'taskPriorities_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<TaskPriorities>;
};

/** input type for inserting object relation for remote table "taskPriorities" */
export type TaskPriorities_Obj_Rel_Insert_Input = {
  data: TaskPriorities_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<TaskPriorities_On_Conflict>;
};

/** on_conflict condition type for table "taskPriorities" */
export type TaskPriorities_On_Conflict = {
  constraint: TaskPriorities_Constraint;
  update_columns?: Array<TaskPriorities_Update_Column>;
  where?: InputMaybe<TaskPriorities_Bool_Exp>;
};

/** Ordering options when selecting data from "taskPriorities". */
export type TaskPriorities_Order_By = {
  description?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  tasks_aggregate?: InputMaybe<Tasks_Aggregate_Order_By>;
};

/** primary key columns input for table: taskPriorities */
export type TaskPriorities_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "taskPriorities" */
export enum TaskPriorities_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "taskPriorities" */
export type TaskPriorities_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "taskPriorities" */
export type TaskPriorities_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: TaskPriorities_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type TaskPriorities_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "taskPriorities" */
export enum TaskPriorities_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type TaskPriorities_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TaskPriorities_Set_Input>;
  /** filter the rows which have to be updated */
  where: TaskPriorities_Bool_Exp;
};

/** columns and relationships of "taskStatusTypes" */
export type TaskStatusTypes = {
  __typename?: 'taskStatusTypes';
  description?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  /** An array relationship */
  tasks: Array<Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Tasks_Aggregate;
};


/** columns and relationships of "taskStatusTypes" */
export type TaskStatusTypesTasksArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


/** columns and relationships of "taskStatusTypes" */
export type TaskStatusTypesTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};

/** aggregated selection of "taskStatusTypes" */
export type TaskStatusTypes_Aggregate = {
  __typename?: 'taskStatusTypes_aggregate';
  aggregate?: Maybe<TaskStatusTypes_Aggregate_Fields>;
  nodes: Array<TaskStatusTypes>;
};

/** aggregate fields of "taskStatusTypes" */
export type TaskStatusTypes_Aggregate_Fields = {
  __typename?: 'taskStatusTypes_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<TaskStatusTypes_Max_Fields>;
  min?: Maybe<TaskStatusTypes_Min_Fields>;
};


/** aggregate fields of "taskStatusTypes" */
export type TaskStatusTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<TaskStatusTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "taskStatusTypes". All fields are combined with a logical 'AND'. */
export type TaskStatusTypes_Bool_Exp = {
  _and?: InputMaybe<Array<TaskStatusTypes_Bool_Exp>>;
  _not?: InputMaybe<TaskStatusTypes_Bool_Exp>;
  _or?: InputMaybe<Array<TaskStatusTypes_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  tasks?: InputMaybe<Tasks_Bool_Exp>;
  tasks_aggregate?: InputMaybe<Tasks_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "taskStatusTypes" */
export enum TaskStatusTypes_Constraint {
  /** unique or primary key constraint on columns "name" */
  TaskStatusTypePkey = 'task_status_type_pkey'
}

export enum TaskStatusTypes_Enum {
  Assigned = 'ASSIGNED',
  Completed = 'COMPLETED',
  Pending = 'PENDING'
}

/** Boolean expression to compare columns of type "taskStatusTypes_enum". All fields are combined with logical 'AND'. */
export type TaskStatusTypes_Enum_Comparison_Exp = {
  _eq?: InputMaybe<TaskStatusTypes_Enum>;
  _in?: InputMaybe<Array<TaskStatusTypes_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<TaskStatusTypes_Enum>;
  _nin?: InputMaybe<Array<TaskStatusTypes_Enum>>;
};

/** input type for inserting data into table "taskStatusTypes" */
export type TaskStatusTypes_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tasks?: InputMaybe<Tasks_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type TaskStatusTypes_Max_Fields = {
  __typename?: 'taskStatusTypes_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type TaskStatusTypes_Min_Fields = {
  __typename?: 'taskStatusTypes_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "taskStatusTypes" */
export type TaskStatusTypes_Mutation_Response = {
  __typename?: 'taskStatusTypes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<TaskStatusTypes>;
};

/** input type for inserting object relation for remote table "taskStatusTypes" */
export type TaskStatusTypes_Obj_Rel_Insert_Input = {
  data: TaskStatusTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<TaskStatusTypes_On_Conflict>;
};

/** on_conflict condition type for table "taskStatusTypes" */
export type TaskStatusTypes_On_Conflict = {
  constraint: TaskStatusTypes_Constraint;
  update_columns?: Array<TaskStatusTypes_Update_Column>;
  where?: InputMaybe<TaskStatusTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "taskStatusTypes". */
export type TaskStatusTypes_Order_By = {
  description?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  tasks_aggregate?: InputMaybe<Tasks_Aggregate_Order_By>;
};

/** primary key columns input for table: taskStatusTypes */
export type TaskStatusTypes_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "taskStatusTypes" */
export enum TaskStatusTypes_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "taskStatusTypes" */
export type TaskStatusTypes_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "taskStatusTypes" */
export type TaskStatusTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: TaskStatusTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type TaskStatusTypes_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "taskStatusTypes" */
export enum TaskStatusTypes_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type TaskStatusTypes_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TaskStatusTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: TaskStatusTypes_Bool_Exp;
};

/** columns and relationships of "tasks" */
export type Tasks = {
  __typename?: 'tasks';
  /** An array relationship */
  activityLogs: Array<ActivityLogs>;
  /** An aggregate relationship */
  activityLogs_aggregate: ActivityLogs_Aggregate;
  assignedToId: Scalars['uuid'];
  assignedToSubAdmin: Array<SubAdmin>;
  assignedToSuperAdmin: Array<SuperAdmin>;
  assignedToUser?: Maybe<Array<Maybe<CreatedByUser>>>;
  createdAt: Scalars['timestamptz'];
  createdByMerchant: Array<Merchant>;
  createdBySubAdmin: Array<SubAdmin>;
  createdBySuperAdmin: Array<SuperAdmin>;
  createdByUser?: Maybe<Array<Maybe<CreatedByUser>>>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  deposit?: Maybe<Deposits>;
  depositId?: Maybe<Scalars['uuid']>;
  description?: Maybe<Scalars['String']>;
  endDate: Scalars['timestamptz'];
  id: Scalars['uuid'];
  number: Scalars['Int'];
  priority: TaskPriorities_Enum;
  startDate: Scalars['timestamptz'];
  status: TaskStatusTypes_Enum;
  tags?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  taskPriority: TaskPriorities;
  /** An object relationship */
  taskStatusType: TaskStatusTypes;
  title: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  updatedByMerchant: Array<Merchant>;
  updatedBySubAdmin: Array<SubAdmin>;
  updatedBySuperAdmin: Array<SuperAdmin>;
  updatedByUser?: Maybe<Array<Maybe<CreatedByUser>>>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  withdrawal?: Maybe<Withdrawals>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "tasks" */
export type TasksActivityLogsArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "tasks" */
export type TasksActivityLogs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "tasks" */
export type TasksAssignedToSubAdminArgs = {
  options?: InputMaybe<SubAdminOptions>;
  where?: InputMaybe<SubAdminWhere_Remote_Rel_TasksassignedToSubAdmin>;
};


/** columns and relationships of "tasks" */
export type TasksAssignedToSuperAdminArgs = {
  options?: InputMaybe<SuperAdminOptions>;
  where?: InputMaybe<SuperAdminWhere_Remote_Rel_TasksassignedToSuperAdmin>;
};


/** columns and relationships of "tasks" */
export type TasksCreatedByMerchantArgs = {
  options?: InputMaybe<MerchantOptions_Remote_Rel_TaskscreatedByMerchant>;
  where?: InputMaybe<MerchantWhere_Remote_Rel_TaskscreatedByMerchant>;
};


/** columns and relationships of "tasks" */
export type TasksCreatedBySubAdminArgs = {
  options?: InputMaybe<SubAdminOptions_Remote_Rel_TaskscreatedBySubAdmin>;
  where?: InputMaybe<SubAdminWhere_Remote_Rel_TaskscreatedBySubAdmin>;
};


/** columns and relationships of "tasks" */
export type TasksCreatedBySuperAdminArgs = {
  options?: InputMaybe<SuperAdminOptions_Remote_Rel_TaskscreatedBySuperAdmin>;
  where?: InputMaybe<SuperAdminWhere_Remote_Rel_TaskscreatedBySuperAdmin>;
};


/** columns and relationships of "tasks" */
export type TasksTagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "tasks" */
export type TasksUpdatedByMerchantArgs = {
  options?: InputMaybe<MerchantOptions_Remote_Rel_TasksupdatedByMerchant>;
  where?: InputMaybe<MerchantWhere_Remote_Rel_TasksupdatedByMerchant>;
};


/** columns and relationships of "tasks" */
export type TasksUpdatedBySubAdminArgs = {
  options?: InputMaybe<SubAdminOptions_Remote_Rel_TasksupdatedBySubAdmin>;
  where?: InputMaybe<SubAdminWhere_Remote_Rel_TasksupdatedBySubAdmin>;
};


/** columns and relationships of "tasks" */
export type TasksUpdatedBySuperAdminArgs = {
  options?: InputMaybe<SuperAdminOptions_Remote_Rel_TasksupdatedBySuperAdmin>;
  where?: InputMaybe<SuperAdminWhere_Remote_Rel_TasksupdatedBySuperAdmin>;
};

/** aggregated selection of "tasks" */
export type Tasks_Aggregate = {
  __typename?: 'tasks_aggregate';
  aggregate?: Maybe<Tasks_Aggregate_Fields>;
  nodes: Array<Tasks>;
};

export type Tasks_Aggregate_Bool_Exp = {
  count?: InputMaybe<Tasks_Aggregate_Bool_Exp_Count>;
};

export type Tasks_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Tasks_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Tasks_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "tasks" */
export type Tasks_Aggregate_Fields = {
  __typename?: 'tasks_aggregate_fields';
  avg?: Maybe<Tasks_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Tasks_Max_Fields>;
  min?: Maybe<Tasks_Min_Fields>;
  stddev?: Maybe<Tasks_Stddev_Fields>;
  stddev_pop?: Maybe<Tasks_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tasks_Stddev_Samp_Fields>;
  sum?: Maybe<Tasks_Sum_Fields>;
  var_pop?: Maybe<Tasks_Var_Pop_Fields>;
  var_samp?: Maybe<Tasks_Var_Samp_Fields>;
  variance?: Maybe<Tasks_Variance_Fields>;
};


/** aggregate fields of "tasks" */
export type Tasks_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tasks_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tasks" */
export type Tasks_Aggregate_Order_By = {
  avg?: InputMaybe<Tasks_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Tasks_Max_Order_By>;
  min?: InputMaybe<Tasks_Min_Order_By>;
  stddev?: InputMaybe<Tasks_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Tasks_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Tasks_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Tasks_Sum_Order_By>;
  var_pop?: InputMaybe<Tasks_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Tasks_Var_Samp_Order_By>;
  variance?: InputMaybe<Tasks_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Tasks_Append_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tasks" */
export type Tasks_Arr_Rel_Insert_Input = {
  data: Array<Tasks_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Tasks_On_Conflict>;
};

/** aggregate avg on columns */
export type Tasks_Avg_Fields = {
  __typename?: 'tasks_avg_fields';
  number?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tasks" */
export type Tasks_Avg_Order_By = {
  number?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tasks". All fields are combined with a logical 'AND'. */
export type Tasks_Bool_Exp = {
  _and?: InputMaybe<Array<Tasks_Bool_Exp>>;
  _not?: InputMaybe<Tasks_Bool_Exp>;
  _or?: InputMaybe<Array<Tasks_Bool_Exp>>;
  activityLogs?: InputMaybe<ActivityLogs_Bool_Exp>;
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Bool_Exp>;
  assignedToId?: InputMaybe<Uuid_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  createdByUserId?: InputMaybe<Uuid_Comparison_Exp>;
  deposit?: InputMaybe<Deposits_Bool_Exp>;
  depositId?: InputMaybe<Uuid_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  endDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  number?: InputMaybe<Int_Comparison_Exp>;
  priority?: InputMaybe<TaskPriorities_Enum_Comparison_Exp>;
  startDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<TaskStatusTypes_Enum_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  taskPriority?: InputMaybe<TaskPriorities_Bool_Exp>;
  taskStatusType?: InputMaybe<TaskStatusTypes_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedByUserId?: InputMaybe<Uuid_Comparison_Exp>;
  withdrawal?: InputMaybe<Withdrawals_Bool_Exp>;
  withdrawalId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "tasks" */
export enum Tasks_Constraint {
  /** unique or primary key constraint on columns "id" */
  TaskPkey = 'task_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Tasks_Delete_At_Path_Input = {
  tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Tasks_Delete_Elem_Input = {
  tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Tasks_Delete_Key_Input = {
  tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tasks" */
export type Tasks_Inc_Input = {
  number?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "tasks" */
export type Tasks_Insert_Input = {
  activityLogs?: InputMaybe<ActivityLogs_Arr_Rel_Insert_Input>;
  assignedToId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  deposit?: InputMaybe<Deposits_Obj_Rel_Insert_Input>;
  depositId?: InputMaybe<Scalars['uuid']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  number?: InputMaybe<Scalars['Int']>;
  priority?: InputMaybe<TaskPriorities_Enum>;
  startDate?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<TaskStatusTypes_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  taskPriority?: InputMaybe<TaskPriorities_Obj_Rel_Insert_Input>;
  taskStatusType?: InputMaybe<TaskStatusTypes_Obj_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
  withdrawal?: InputMaybe<Withdrawals_Obj_Rel_Insert_Input>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Tasks_Max_Fields = {
  __typename?: 'tasks_max_fields';
  assignedToId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  depositId?: Maybe<Scalars['uuid']>;
  description?: Maybe<Scalars['String']>;
  endDate?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  number?: Maybe<Scalars['Int']>;
  startDate?: Maybe<Scalars['timestamptz']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "tasks" */
export type Tasks_Max_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Tasks_Min_Fields = {
  __typename?: 'tasks_min_fields';
  assignedToId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  depositId?: Maybe<Scalars['uuid']>;
  description?: Maybe<Scalars['String']>;
  endDate?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  number?: Maybe<Scalars['Int']>;
  startDate?: Maybe<Scalars['timestamptz']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
  withdrawalId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "tasks" */
export type Tasks_Min_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  depositId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "tasks" */
export type Tasks_Mutation_Response = {
  __typename?: 'tasks_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Tasks>;
};

/** input type for inserting object relation for remote table "tasks" */
export type Tasks_Obj_Rel_Insert_Input = {
  data: Tasks_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Tasks_On_Conflict>;
};

/** on_conflict condition type for table "tasks" */
export type Tasks_On_Conflict = {
  constraint: Tasks_Constraint;
  update_columns?: Array<Tasks_Update_Column>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};

/** Ordering options when selecting data from "tasks". */
export type Tasks_Order_By = {
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Order_By>;
  assignedToId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  deposit?: InputMaybe<Deposits_Order_By>;
  depositId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  taskPriority?: InputMaybe<TaskPriorities_Order_By>;
  taskStatusType?: InputMaybe<TaskStatusTypes_Order_By>;
  title?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
  withdrawal?: InputMaybe<Withdrawals_Order_By>;
  withdrawalId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: tasks */
export type Tasks_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Tasks_Prepend_Input = {
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "tasks" */
export enum Tasks_Select_Column {
  /** column name */
  AssignedToId = 'assignedToId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  Description = 'description',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  Id = 'id',
  /** column name */
  Number = 'number',
  /** column name */
  Priority = 'priority',
  /** column name */
  StartDate = 'startDate',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId',
  /** column name */
  WithdrawalId = 'withdrawalId'
}

/** input type for updating data in table "tasks" */
export type Tasks_Set_Input = {
  assignedToId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  number?: InputMaybe<Scalars['Int']>;
  priority?: InputMaybe<TaskPriorities_Enum>;
  startDate?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<TaskStatusTypes_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Tasks_Stddev_Fields = {
  __typename?: 'tasks_stddev_fields';
  number?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tasks" */
export type Tasks_Stddev_Order_By = {
  number?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Tasks_Stddev_Pop_Fields = {
  __typename?: 'tasks_stddev_pop_fields';
  number?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tasks" */
export type Tasks_Stddev_Pop_Order_By = {
  number?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Tasks_Stddev_Samp_Fields = {
  __typename?: 'tasks_stddev_samp_fields';
  number?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tasks" */
export type Tasks_Stddev_Samp_Order_By = {
  number?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "tasks" */
export type Tasks_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tasks_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tasks_Stream_Cursor_Value_Input = {
  assignedToId?: InputMaybe<Scalars['uuid']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  depositId?: InputMaybe<Scalars['uuid']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  number?: InputMaybe<Scalars['Int']>;
  priority?: InputMaybe<TaskPriorities_Enum>;
  startDate?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<TaskStatusTypes_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Tasks_Sum_Fields = {
  __typename?: 'tasks_sum_fields';
  number?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "tasks" */
export type Tasks_Sum_Order_By = {
  number?: InputMaybe<Order_By>;
};

/** update columns of table "tasks" */
export enum Tasks_Update_Column {
  /** column name */
  AssignedToId = 'assignedToId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  DepositId = 'depositId',
  /** column name */
  Description = 'description',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  Id = 'id',
  /** column name */
  Number = 'number',
  /** column name */
  Priority = 'priority',
  /** column name */
  StartDate = 'startDate',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId',
  /** column name */
  WithdrawalId = 'withdrawalId'
}

export type Tasks_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Tasks_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Tasks_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Tasks_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Tasks_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Tasks_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Tasks_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Tasks_Set_Input>;
  /** filter the rows which have to be updated */
  where: Tasks_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Tasks_Var_Pop_Fields = {
  __typename?: 'tasks_var_pop_fields';
  number?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tasks" */
export type Tasks_Var_Pop_Order_By = {
  number?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Tasks_Var_Samp_Fields = {
  __typename?: 'tasks_var_samp_fields';
  number?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tasks" */
export type Tasks_Var_Samp_Order_By = {
  number?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Tasks_Variance_Fields = {
  __typename?: 'tasks_variance_fields';
  number?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tasks" */
export type Tasks_Variance_Order_By = {
  number?: InputMaybe<Order_By>;
};

/** columns and relationships of "textResult" */
export type TextResult = {
  __typename?: 'textResult';
  result?: Maybe<Scalars['String']>;
};

export type TextResult_Aggregate = {
  __typename?: 'textResult_aggregate';
  aggregate?: Maybe<TextResult_Aggregate_Fields>;
  nodes: Array<TextResult>;
};

/** aggregate fields of "textResult" */
export type TextResult_Aggregate_Fields = {
  __typename?: 'textResult_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<TextResult_Max_Fields>;
  min?: Maybe<TextResult_Min_Fields>;
};


/** aggregate fields of "textResult" */
export type TextResult_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<TextResult_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "textResult". All fields are combined with a logical 'AND'. */
export type TextResult_Bool_Exp = {
  _and?: InputMaybe<Array<TextResult_Bool_Exp>>;
  _not?: InputMaybe<TextResult_Bool_Exp>;
  _or?: InputMaybe<Array<TextResult_Bool_Exp>>;
  result?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "textResult" */
export type TextResult_Insert_Input = {
  result?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type TextResult_Max_Fields = {
  __typename?: 'textResult_max_fields';
  result?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type TextResult_Min_Fields = {
  __typename?: 'textResult_min_fields';
  result?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "textResult" */
export type TextResult_Mutation_Response = {
  __typename?: 'textResult_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<TextResult>;
};

/** Ordering options when selecting data from "textResult". */
export type TextResult_Order_By = {
  result?: InputMaybe<Order_By>;
};

/** select columns of table "textResult" */
export enum TextResult_Select_Column {
  /** column name */
  Result = 'result'
}

/** input type for updating data in table "textResult" */
export type TextResult_Set_Input = {
  result?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "textResult" */
export type TextResult_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: TextResult_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type TextResult_Stream_Cursor_Value_Input = {
  result?: InputMaybe<Scalars['String']>;
};

export type TextResult_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TextResult_Set_Input>;
  /** filter the rows which have to be updated */
  where: TextResult_Bool_Exp;
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type Timestamp_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamp']>;
  _gt?: InputMaybe<Scalars['timestamp']>;
  _gte?: InputMaybe<Scalars['timestamp']>;
  _in?: InputMaybe<Array<Scalars['timestamp']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamp']>;
  _lte?: InputMaybe<Scalars['timestamp']>;
  _neq?: InputMaybe<Scalars['timestamp']>;
  _nin?: InputMaybe<Array<Scalars['timestamp']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']>;
  _gt?: InputMaybe<Scalars['timestamptz']>;
  _gte?: InputMaybe<Scalars['timestamptz']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamptz']>;
  _lte?: InputMaybe<Scalars['timestamptz']>;
  _neq?: InputMaybe<Scalars['timestamptz']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']>>;
};

/** columns and relationships of "transactionTypes" */
export type TransactionTypes = {
  __typename?: 'transactionTypes';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  description?: Maybe<Scalars['String']>;
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  name: Scalars['String'];
};


/** columns and relationships of "transactionTypes" */
export type TransactionTypesAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "transactionTypes" */
export type TransactionTypesAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "transactionTypes" */
export type TransactionTypesLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "transactionTypes" */
export type TransactionTypesLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};

/** aggregated selection of "transactionTypes" */
export type TransactionTypes_Aggregate = {
  __typename?: 'transactionTypes_aggregate';
  aggregate?: Maybe<TransactionTypes_Aggregate_Fields>;
  nodes: Array<TransactionTypes>;
};

/** aggregate fields of "transactionTypes" */
export type TransactionTypes_Aggregate_Fields = {
  __typename?: 'transactionTypes_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<TransactionTypes_Max_Fields>;
  min?: Maybe<TransactionTypes_Min_Fields>;
};


/** aggregate fields of "transactionTypes" */
export type TransactionTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<TransactionTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "transactionTypes". All fields are combined with a logical 'AND'. */
export type TransactionTypes_Bool_Exp = {
  _and?: InputMaybe<Array<TransactionTypes_Bool_Exp>>;
  _not?: InputMaybe<TransactionTypes_Bool_Exp>;
  _or?: InputMaybe<Array<TransactionTypes_Bool_Exp>>;
  accountLedgers?: InputMaybe<AccountLedgers_Bool_Exp>;
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  ledgers?: InputMaybe<Ledgers_Bool_Exp>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "transactionTypes" */
export enum TransactionTypes_Constraint {
  /** unique or primary key constraint on columns "name" */
  TransactionTypesPkey = 'transactionTypes_pkey'
}

export enum TransactionTypes_Enum {
  Adjustment = 'ADJUSTMENT',
  BankCharges = 'BANK_CHARGES',
  Commission = 'COMMISSION',
  CurrencyExchange = 'CURRENCY_EXCHANGE',
  Deposit = 'DEPOSIT',
  Fees = 'FEES',
  RollingReserve = 'ROLLING_RESERVE',
  TierCommission = 'TIER_COMMISSION',
  Withdrawal = 'WITHDRAWAL'
}

/** Boolean expression to compare columns of type "transactionTypes_enum". All fields are combined with logical 'AND'. */
export type TransactionTypes_Enum_Comparison_Exp = {
  _eq?: InputMaybe<TransactionTypes_Enum>;
  _in?: InputMaybe<Array<TransactionTypes_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<TransactionTypes_Enum>;
  _nin?: InputMaybe<Array<TransactionTypes_Enum>>;
};

/** input type for inserting data into table "transactionTypes" */
export type TransactionTypes_Insert_Input = {
  accountLedgers?: InputMaybe<AccountLedgers_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  ledgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type TransactionTypes_Max_Fields = {
  __typename?: 'transactionTypes_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type TransactionTypes_Min_Fields = {
  __typename?: 'transactionTypes_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "transactionTypes" */
export type TransactionTypes_Mutation_Response = {
  __typename?: 'transactionTypes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<TransactionTypes>;
};

/** input type for inserting object relation for remote table "transactionTypes" */
export type TransactionTypes_Obj_Rel_Insert_Input = {
  data: TransactionTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<TransactionTypes_On_Conflict>;
};

/** on_conflict condition type for table "transactionTypes" */
export type TransactionTypes_On_Conflict = {
  constraint: TransactionTypes_Constraint;
  update_columns?: Array<TransactionTypes_Update_Column>;
  where?: InputMaybe<TransactionTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "transactionTypes". */
export type TransactionTypes_Order_By = {
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: transactionTypes */
export type TransactionTypes_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "transactionTypes" */
export enum TransactionTypes_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "transactionTypes" */
export type TransactionTypes_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "transactionTypes" */
export type TransactionTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: TransactionTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type TransactionTypes_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "transactionTypes" */
export enum TransactionTypes_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type TransactionTypes_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TransactionTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: TransactionTypes_Bool_Exp;
};

/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['uuid']>;
  _gt?: InputMaybe<Scalars['uuid']>;
  _gte?: InputMaybe<Scalars['uuid']>;
  _in?: InputMaybe<Array<Scalars['uuid']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['uuid']>;
  _lte?: InputMaybe<Scalars['uuid']>;
  _neq?: InputMaybe<Scalars['uuid']>;
  _nin?: InputMaybe<Array<Scalars['uuid']>>;
};

/** columns and relationships of "withdrawalStatuses" */
export type WithdrawalStatuses = {
  __typename?: 'withdrawalStatuses';
  description?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  /** An array relationship */
  withdrawals: Array<Withdrawals>;
  /** An aggregate relationship */
  withdrawals_aggregate: Withdrawals_Aggregate;
};


/** columns and relationships of "withdrawalStatuses" */
export type WithdrawalStatusesWithdrawalsArgs = {
  distinct_on?: InputMaybe<Array<Withdrawals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Withdrawals_Order_By>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};


/** columns and relationships of "withdrawalStatuses" */
export type WithdrawalStatusesWithdrawals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Withdrawals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Withdrawals_Order_By>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};

/** aggregated selection of "withdrawalStatuses" */
export type WithdrawalStatuses_Aggregate = {
  __typename?: 'withdrawalStatuses_aggregate';
  aggregate?: Maybe<WithdrawalStatuses_Aggregate_Fields>;
  nodes: Array<WithdrawalStatuses>;
};

/** aggregate fields of "withdrawalStatuses" */
export type WithdrawalStatuses_Aggregate_Fields = {
  __typename?: 'withdrawalStatuses_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<WithdrawalStatuses_Max_Fields>;
  min?: Maybe<WithdrawalStatuses_Min_Fields>;
};


/** aggregate fields of "withdrawalStatuses" */
export type WithdrawalStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<WithdrawalStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "withdrawalStatuses". All fields are combined with a logical 'AND'. */
export type WithdrawalStatuses_Bool_Exp = {
  _and?: InputMaybe<Array<WithdrawalStatuses_Bool_Exp>>;
  _not?: InputMaybe<WithdrawalStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<WithdrawalStatuses_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  withdrawals?: InputMaybe<Withdrawals_Bool_Exp>;
  withdrawals_aggregate?: InputMaybe<Withdrawals_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "withdrawalStatuses" */
export enum WithdrawalStatuses_Constraint {
  /** unique or primary key constraint on columns "name" */
  WithdrawalStatusPkey = 'withdrawalStatus_pkey'
}

export enum WithdrawalStatuses_Enum {
  Cancelled = 'CANCELLED',
  New = 'NEW',
  Paid = 'PAID',
  Processing = 'PROCESSING',
  Returned = 'RETURNED'
}

/** Boolean expression to compare columns of type "withdrawalStatuses_enum". All fields are combined with logical 'AND'. */
export type WithdrawalStatuses_Enum_Comparison_Exp = {
  _eq?: InputMaybe<WithdrawalStatuses_Enum>;
  _in?: InputMaybe<Array<WithdrawalStatuses_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<WithdrawalStatuses_Enum>;
  _nin?: InputMaybe<Array<WithdrawalStatuses_Enum>>;
};

/** input type for inserting data into table "withdrawalStatuses" */
export type WithdrawalStatuses_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  withdrawals?: InputMaybe<Withdrawals_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type WithdrawalStatuses_Max_Fields = {
  __typename?: 'withdrawalStatuses_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type WithdrawalStatuses_Min_Fields = {
  __typename?: 'withdrawalStatuses_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "withdrawalStatuses" */
export type WithdrawalStatuses_Mutation_Response = {
  __typename?: 'withdrawalStatuses_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<WithdrawalStatuses>;
};

/** input type for inserting object relation for remote table "withdrawalStatuses" */
export type WithdrawalStatuses_Obj_Rel_Insert_Input = {
  data: WithdrawalStatuses_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<WithdrawalStatuses_On_Conflict>;
};

/** on_conflict condition type for table "withdrawalStatuses" */
export type WithdrawalStatuses_On_Conflict = {
  constraint: WithdrawalStatuses_Constraint;
  update_columns?: Array<WithdrawalStatuses_Update_Column>;
  where?: InputMaybe<WithdrawalStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "withdrawalStatuses". */
export type WithdrawalStatuses_Order_By = {
  description?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  withdrawals_aggregate?: InputMaybe<Withdrawals_Aggregate_Order_By>;
};

/** primary key columns input for table: withdrawalStatuses */
export type WithdrawalStatuses_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "withdrawalStatuses" */
export enum WithdrawalStatuses_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "withdrawalStatuses" */
export type WithdrawalStatuses_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "withdrawalStatuses" */
export type WithdrawalStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: WithdrawalStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type WithdrawalStatuses_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "withdrawalStatuses" */
export enum WithdrawalStatuses_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type WithdrawalStatuses_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<WithdrawalStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: WithdrawalStatuses_Bool_Exp;
};

/** columns and relationships of "withdrawalTypes" */
export type WithdrawalTypes = {
  __typename?: 'withdrawalTypes';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  description?: Maybe<Scalars['String']>;
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  name: Scalars['String'];
  /** An array relationship */
  withdrawals: Array<Withdrawals>;
  /** An aggregate relationship */
  withdrawals_aggregate: Withdrawals_Aggregate;
};


/** columns and relationships of "withdrawalTypes" */
export type WithdrawalTypesAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "withdrawalTypes" */
export type WithdrawalTypesAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "withdrawalTypes" */
export type WithdrawalTypesLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "withdrawalTypes" */
export type WithdrawalTypesLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "withdrawalTypes" */
export type WithdrawalTypesWithdrawalsArgs = {
  distinct_on?: InputMaybe<Array<Withdrawals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Withdrawals_Order_By>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};


/** columns and relationships of "withdrawalTypes" */
export type WithdrawalTypesWithdrawals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Withdrawals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Withdrawals_Order_By>>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};

/** aggregated selection of "withdrawalTypes" */
export type WithdrawalTypes_Aggregate = {
  __typename?: 'withdrawalTypes_aggregate';
  aggregate?: Maybe<WithdrawalTypes_Aggregate_Fields>;
  nodes: Array<WithdrawalTypes>;
};

/** aggregate fields of "withdrawalTypes" */
export type WithdrawalTypes_Aggregate_Fields = {
  __typename?: 'withdrawalTypes_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<WithdrawalTypes_Max_Fields>;
  min?: Maybe<WithdrawalTypes_Min_Fields>;
};


/** aggregate fields of "withdrawalTypes" */
export type WithdrawalTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<WithdrawalTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "withdrawalTypes". All fields are combined with a logical 'AND'. */
export type WithdrawalTypes_Bool_Exp = {
  _and?: InputMaybe<Array<WithdrawalTypes_Bool_Exp>>;
  _not?: InputMaybe<WithdrawalTypes_Bool_Exp>;
  _or?: InputMaybe<Array<WithdrawalTypes_Bool_Exp>>;
  accountLedgers?: InputMaybe<AccountLedgers_Bool_Exp>;
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  ledgers?: InputMaybe<Ledgers_Bool_Exp>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  withdrawals?: InputMaybe<Withdrawals_Bool_Exp>;
  withdrawals_aggregate?: InputMaybe<Withdrawals_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "withdrawalTypes" */
export enum WithdrawalTypes_Constraint {
  /** unique or primary key constraint on columns "name" */
  WithdrawalTypePkey = 'withdrawalType_pkey'
}

export enum WithdrawalTypes_Enum {
  Payout = 'PAYOUT',
  RrSettlement = 'RR_SETTLEMENT',
  Settlement = 'SETTLEMENT'
}

/** Boolean expression to compare columns of type "withdrawalTypes_enum". All fields are combined with logical 'AND'. */
export type WithdrawalTypes_Enum_Comparison_Exp = {
  _eq?: InputMaybe<WithdrawalTypes_Enum>;
  _in?: InputMaybe<Array<WithdrawalTypes_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<WithdrawalTypes_Enum>;
  _nin?: InputMaybe<Array<WithdrawalTypes_Enum>>;
};

/** input type for inserting data into table "withdrawalTypes" */
export type WithdrawalTypes_Insert_Input = {
  accountLedgers?: InputMaybe<AccountLedgers_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']>;
  ledgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
  withdrawals?: InputMaybe<Withdrawals_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type WithdrawalTypes_Max_Fields = {
  __typename?: 'withdrawalTypes_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type WithdrawalTypes_Min_Fields = {
  __typename?: 'withdrawalTypes_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "withdrawalTypes" */
export type WithdrawalTypes_Mutation_Response = {
  __typename?: 'withdrawalTypes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<WithdrawalTypes>;
};

/** input type for inserting object relation for remote table "withdrawalTypes" */
export type WithdrawalTypes_Obj_Rel_Insert_Input = {
  data: WithdrawalTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<WithdrawalTypes_On_Conflict>;
};

/** on_conflict condition type for table "withdrawalTypes" */
export type WithdrawalTypes_On_Conflict = {
  constraint: WithdrawalTypes_Constraint;
  update_columns?: Array<WithdrawalTypes_Update_Column>;
  where?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "withdrawalTypes". */
export type WithdrawalTypes_Order_By = {
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  withdrawals_aggregate?: InputMaybe<Withdrawals_Aggregate_Order_By>;
};

/** primary key columns input for table: withdrawalTypes */
export type WithdrawalTypes_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "withdrawalTypes" */
export enum WithdrawalTypes_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "withdrawalTypes" */
export type WithdrawalTypes_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "withdrawalTypes" */
export type WithdrawalTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: WithdrawalTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type WithdrawalTypes_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "withdrawalTypes" */
export enum WithdrawalTypes_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type WithdrawalTypes_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<WithdrawalTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: WithdrawalTypes_Bool_Exp;
};

export type WithdrawalVolumeGraphWithCurrency_Args = {
  aggregate_by?: InputMaybe<Scalars['String']>;
  currency_code?: InputMaybe<Scalars['String']>;
  fromdate?: InputMaybe<Scalars['timestamptz']>;
  tformat?: InputMaybe<Scalars['String']>;
  todate?: InputMaybe<Scalars['timestamptz']>;
  xformat?: InputMaybe<Scalars['String']>;
};

export type WithdrawalVolumeGraph_Args = {
  aggregate_by?: InputMaybe<Scalars['String']>;
  fromdate?: InputMaybe<Scalars['timestamptz']>;
  tformat?: InputMaybe<Scalars['String']>;
  todate?: InputMaybe<Scalars['timestamptz']>;
  xformat?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "withdrawals" */
export type Withdrawals = {
  __typename?: 'withdrawals';
  /** An array relationship */
  accountLedgers: Array<AccountLedgers>;
  /** An aggregate relationship */
  accountLedgers_aggregate: AccountLedgers_Aggregate;
  /** An array relationship */
  activityLogs: Array<ActivityLogs>;
  /** An aggregate relationship */
  activityLogs_aggregate: ActivityLogs_Aggregate;
  amount: Scalars['numeric'];
  amountReturned?: Maybe<Scalars['numeric']>;
  b2bInvoiceUrl?: Maybe<Scalars['String']>;
  bankCharges?: Maybe<Scalars['numeric']>;
  businessWallet: Array<BusinessWallet>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  cancelledDate?: Maybe<Scalars['timestamp']>;
  /** An array relationship */
  conversations: Array<Conversations>;
  /** An aggregate relationship */
  conversations_aggregate: Conversations_Aggregate;
  createdAt: Scalars['timestamptz'];
  createdByMerchant: Array<Merchant>;
  createdBySubAdmin: Array<SubAdmin>;
  createdBySuperAdmin: Array<SuperAdmin>;
  createdByUser?: Maybe<Array<Maybe<CreatedByUser>>>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  datePaid?: Maybe<Scalars['timestamptz']>;
  dateReturned?: Maybe<Scalars['timestamp']>;
  extraDocumentUrlList?: Maybe<Scalars['jsonb']>;
  fromAccount: Array<Account>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  id: Scalars['uuid'];
  internalId: Scalars['bigint'];
  internalNotes?: Maybe<Scalars['String']>;
  invoiceUrl?: Maybe<Scalars['String']>;
  /** An array relationship */
  ledgers: Array<Ledgers>;
  /** An aggregate relationship */
  ledgers_aggregate: Ledgers_Aggregate;
  parentBrandId?: Maybe<Scalars['uuid']>;
  parentBusiness: Array<Business>;
  parentBusinessId: Scalars['uuid'];
  payoutRequestFormUrl?: Maybe<Scalars['String']>;
  proofOfPaymentUrl?: Maybe<Scalars['String']>;
  referenceId?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  status: WithdrawalStatuses_Enum;
  tags?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  tasks: Array<Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Tasks_Aggregate;
  toBeneficiary: Array<Beneficiary>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  type: WithdrawalTypes_Enum;
  updatedAt: Scalars['timestamptz'];
  updatedByMerchant: Array<Merchant>;
  updatedBySubAdmin: Array<SubAdmin>;
  updatedBySuperAdmin: Array<SuperAdmin>;
  updatedByUser?: Maybe<Array<Maybe<CreatedByUser>>>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  withdrawalStatus: WithdrawalStatuses;
  /** An object relationship */
  withdrawalType: WithdrawalTypes;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsAccountLedgersArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsAccountLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AccountLedgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<AccountLedgers_Order_By>>;
  where?: InputMaybe<AccountLedgers_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsActivityLogsArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsActivityLogs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityLogs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<ActivityLogs_Order_By>>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsBusinessWalletArgs = {
  options?: InputMaybe<BusinessWalletOptions_Remote_Rel_WithdrawalsbusinessWallet>;
  where?: InputMaybe<BusinessWalletWhere_Remote_Rel_WithdrawalsbusinessWallet>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsConversationsArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsConversations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Conversations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversations_Order_By>>;
  where?: InputMaybe<Conversations_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsCreatedByMerchantArgs = {
  options?: InputMaybe<MerchantOptions_Remote_Rel_WithdrawalscreatedByMerchant>;
  where?: InputMaybe<MerchantWhere_Remote_Rel_WithdrawalscreatedByMerchant>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsCreatedBySubAdminArgs = {
  options?: InputMaybe<SubAdminOptions_Remote_Rel_WithdrawalscreatedBySubAdmin>;
  where?: InputMaybe<SubAdminWhere_Remote_Rel_WithdrawalscreatedBySubAdmin>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsCreatedBySuperAdminArgs = {
  options?: InputMaybe<SuperAdminOptions_Remote_Rel_WithdrawalscreatedBySuperAdmin>;
  where?: InputMaybe<SuperAdminWhere_Remote_Rel_WithdrawalscreatedBySuperAdmin>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsExtraDocumentUrlListArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsFromAccountArgs = {
  options?: InputMaybe<AccountOptions>;
  where?: InputMaybe<AccountWhere_Remote_Rel_WithdrawalsfromAccount>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsLedgersArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsLedgers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ledgers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By>>;
  where?: InputMaybe<Ledgers_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsParentBusinessArgs = {
  options?: InputMaybe<BusinessOptions_Remote_Rel_WithdrawalsparentBusiness>;
  where?: InputMaybe<BusinessWhere_Remote_Rel_WithdrawalsparentBusiness>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsTagsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsTasksArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tasks_Order_By>>;
  where?: InputMaybe<Tasks_Bool_Exp>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsToBeneficiaryArgs = {
  options?: InputMaybe<BeneficiaryOptions_Remote_Rel_WithdrawalstoBeneficiary>;
  where?: InputMaybe<BeneficiaryWhere_Remote_Rel_WithdrawalstoBeneficiary>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsUpdatedByMerchantArgs = {
  options?: InputMaybe<MerchantOptions_Remote_Rel_WithdrawalsupdatedByMerchant>;
  where?: InputMaybe<MerchantWhere_Remote_Rel_WithdrawalsupdatedByMerchant>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsUpdatedBySubAdminArgs = {
  options?: InputMaybe<SubAdminOptions_Remote_Rel_WithdrawalsupdatedBySubAdmin>;
  where?: InputMaybe<SubAdminWhere_Remote_Rel_WithdrawalsupdatedBySubAdmin>;
};


/** columns and relationships of "withdrawals" */
export type WithdrawalsUpdatedBySuperAdminArgs = {
  options?: InputMaybe<SuperAdminOptions_Remote_Rel_WithdrawalsupdatedBySuperAdmin>;
  where?: InputMaybe<SuperAdminWhere_Remote_Rel_WithdrawalsupdatedBySuperAdmin>;
};

/** aggregated selection of "withdrawals" */
export type Withdrawals_Aggregate = {
  __typename?: 'withdrawals_aggregate';
  aggregate?: Maybe<Withdrawals_Aggregate_Fields>;
  nodes: Array<Withdrawals>;
};

export type Withdrawals_Aggregate_Bool_Exp = {
  count?: InputMaybe<Withdrawals_Aggregate_Bool_Exp_Count>;
};

export type Withdrawals_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Withdrawals_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Withdrawals_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "withdrawals" */
export type Withdrawals_Aggregate_Fields = {
  __typename?: 'withdrawals_aggregate_fields';
  avg?: Maybe<Withdrawals_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Withdrawals_Max_Fields>;
  min?: Maybe<Withdrawals_Min_Fields>;
  stddev?: Maybe<Withdrawals_Stddev_Fields>;
  stddev_pop?: Maybe<Withdrawals_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Withdrawals_Stddev_Samp_Fields>;
  sum?: Maybe<Withdrawals_Sum_Fields>;
  var_pop?: Maybe<Withdrawals_Var_Pop_Fields>;
  var_samp?: Maybe<Withdrawals_Var_Samp_Fields>;
  variance?: Maybe<Withdrawals_Variance_Fields>;
};


/** aggregate fields of "withdrawals" */
export type Withdrawals_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Withdrawals_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "withdrawals" */
export type Withdrawals_Aggregate_Order_By = {
  avg?: InputMaybe<Withdrawals_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Withdrawals_Max_Order_By>;
  min?: InputMaybe<Withdrawals_Min_Order_By>;
  stddev?: InputMaybe<Withdrawals_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Withdrawals_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Withdrawals_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Withdrawals_Sum_Order_By>;
  var_pop?: InputMaybe<Withdrawals_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Withdrawals_Var_Samp_Order_By>;
  variance?: InputMaybe<Withdrawals_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Withdrawals_Append_Input = {
  extraDocumentUrlList?: InputMaybe<Scalars['jsonb']>;
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "withdrawals" */
export type Withdrawals_Arr_Rel_Insert_Input = {
  data: Array<Withdrawals_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Withdrawals_On_Conflict>;
};

/** aggregate avg on columns */
export type Withdrawals_Avg_Fields = {
  __typename?: 'withdrawals_avg_fields';
  amount?: Maybe<Scalars['Float']>;
  amountReturned?: Maybe<Scalars['Float']>;
  bankCharges?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "withdrawals" */
export type Withdrawals_Avg_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "withdrawals". All fields are combined with a logical 'AND'. */
export type Withdrawals_Bool_Exp = {
  _and?: InputMaybe<Array<Withdrawals_Bool_Exp>>;
  _not?: InputMaybe<Withdrawals_Bool_Exp>;
  _or?: InputMaybe<Array<Withdrawals_Bool_Exp>>;
  accountLedgers?: InputMaybe<AccountLedgers_Bool_Exp>;
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Bool_Exp>;
  activityLogs?: InputMaybe<ActivityLogs_Bool_Exp>;
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Bool_Exp>;
  amount?: InputMaybe<Numeric_Comparison_Exp>;
  amountReturned?: InputMaybe<Numeric_Comparison_Exp>;
  b2bInvoiceUrl?: InputMaybe<String_Comparison_Exp>;
  bankCharges?: InputMaybe<Numeric_Comparison_Exp>;
  businessWalletId?: InputMaybe<Uuid_Comparison_Exp>;
  cancelledDate?: InputMaybe<Timestamp_Comparison_Exp>;
  conversations?: InputMaybe<Conversations_Bool_Exp>;
  conversations_aggregate?: InputMaybe<Conversations_Aggregate_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  createdByUserId?: InputMaybe<Uuid_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  datePaid?: InputMaybe<Timestamptz_Comparison_Exp>;
  dateReturned?: InputMaybe<Timestamp_Comparison_Exp>;
  extraDocumentUrlList?: InputMaybe<Jsonb_Comparison_Exp>;
  fromAccountId?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  internalId?: InputMaybe<Bigint_Comparison_Exp>;
  internalNotes?: InputMaybe<String_Comparison_Exp>;
  invoiceUrl?: InputMaybe<String_Comparison_Exp>;
  ledgers?: InputMaybe<Ledgers_Bool_Exp>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Bool_Exp>;
  parentBrandId?: InputMaybe<Uuid_Comparison_Exp>;
  parentBusinessId?: InputMaybe<Uuid_Comparison_Exp>;
  payoutRequestFormUrl?: InputMaybe<String_Comparison_Exp>;
  proofOfPaymentUrl?: InputMaybe<String_Comparison_Exp>;
  referenceId?: InputMaybe<String_Comparison_Exp>;
  remarks?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<WithdrawalStatuses_Enum_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  tasks?: InputMaybe<Tasks_Bool_Exp>;
  tasks_aggregate?: InputMaybe<Tasks_Aggregate_Bool_Exp>;
  toBeneficiaryId?: InputMaybe<Uuid_Comparison_Exp>;
  type?: InputMaybe<WithdrawalTypes_Enum_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedByUserId?: InputMaybe<Uuid_Comparison_Exp>;
  withdrawalStatus?: InputMaybe<WithdrawalStatuses_Bool_Exp>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Bool_Exp>;
};

/** unique or primary key constraints on table "withdrawals" */
export enum Withdrawals_Constraint {
  /** unique or primary key constraint on columns "id" */
  WithdrawalPkey = 'withdrawal_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Withdrawals_Delete_At_Path_Input = {
  extraDocumentUrlList?: InputMaybe<Array<Scalars['String']>>;
  tags?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Withdrawals_Delete_Elem_Input = {
  extraDocumentUrlList?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Withdrawals_Delete_Key_Input = {
  extraDocumentUrlList?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "withdrawals" */
export type Withdrawals_Inc_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  amountReturned?: InputMaybe<Scalars['numeric']>;
  bankCharges?: InputMaybe<Scalars['numeric']>;
  internalId?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "withdrawals" */
export type Withdrawals_Insert_Input = {
  accountLedgers?: InputMaybe<AccountLedgers_Arr_Rel_Insert_Input>;
  activityLogs?: InputMaybe<ActivityLogs_Arr_Rel_Insert_Input>;
  amount?: InputMaybe<Scalars['numeric']>;
  amountReturned?: InputMaybe<Scalars['numeric']>;
  b2bInvoiceUrl?: InputMaybe<Scalars['String']>;
  bankCharges?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  conversations?: InputMaybe<Conversations_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  datePaid?: InputMaybe<Scalars['timestamptz']>;
  dateReturned?: InputMaybe<Scalars['timestamp']>;
  extraDocumentUrlList?: InputMaybe<Scalars['jsonb']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  internalNotes?: InputMaybe<Scalars['String']>;
  invoiceUrl?: InputMaybe<Scalars['String']>;
  ledgers?: InputMaybe<Ledgers_Arr_Rel_Insert_Input>;
  parentBrandId?: InputMaybe<Scalars['uuid']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payoutRequestFormUrl?: InputMaybe<Scalars['String']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  referenceId?: InputMaybe<Scalars['String']>;
  remarks?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<WithdrawalStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  tasks?: InputMaybe<Tasks_Arr_Rel_Insert_Input>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<WithdrawalTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
  withdrawalStatus?: InputMaybe<WithdrawalStatuses_Obj_Rel_Insert_Input>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Withdrawals_Max_Fields = {
  __typename?: 'withdrawals_max_fields';
  amount?: Maybe<Scalars['numeric']>;
  amountReturned?: Maybe<Scalars['numeric']>;
  b2bInvoiceUrl?: Maybe<Scalars['String']>;
  bankCharges?: Maybe<Scalars['numeric']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  cancelledDate?: Maybe<Scalars['timestamp']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  datePaid?: Maybe<Scalars['timestamptz']>;
  dateReturned?: Maybe<Scalars['timestamp']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  internalNotes?: Maybe<Scalars['String']>;
  invoiceUrl?: Maybe<Scalars['String']>;
  parentBrandId?: Maybe<Scalars['uuid']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  payoutRequestFormUrl?: Maybe<Scalars['String']>;
  proofOfPaymentUrl?: Maybe<Scalars['String']>;
  referenceId?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "withdrawals" */
export type Withdrawals_Max_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  b2bInvoiceUrl?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  cancelledDate?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  datePaid?: InputMaybe<Order_By>;
  dateReturned?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  internalNotes?: InputMaybe<Order_By>;
  invoiceUrl?: InputMaybe<Order_By>;
  parentBrandId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  payoutRequestFormUrl?: InputMaybe<Order_By>;
  proofOfPaymentUrl?: InputMaybe<Order_By>;
  referenceId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Withdrawals_Min_Fields = {
  __typename?: 'withdrawals_min_fields';
  amount?: Maybe<Scalars['numeric']>;
  amountReturned?: Maybe<Scalars['numeric']>;
  b2bInvoiceUrl?: Maybe<Scalars['String']>;
  bankCharges?: Maybe<Scalars['numeric']>;
  businessWalletId?: Maybe<Scalars['uuid']>;
  cancelledDate?: Maybe<Scalars['timestamp']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdByUserId?: Maybe<Scalars['uuid']>;
  currency?: Maybe<Scalars['String']>;
  datePaid?: Maybe<Scalars['timestamptz']>;
  dateReturned?: Maybe<Scalars['timestamp']>;
  fromAccountId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  internalId?: Maybe<Scalars['bigint']>;
  internalNotes?: Maybe<Scalars['String']>;
  invoiceUrl?: Maybe<Scalars['String']>;
  parentBrandId?: Maybe<Scalars['uuid']>;
  parentBusinessId?: Maybe<Scalars['uuid']>;
  payoutRequestFormUrl?: Maybe<Scalars['String']>;
  proofOfPaymentUrl?: Maybe<Scalars['String']>;
  referenceId?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  toBeneficiaryId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  updatedByUserId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "withdrawals" */
export type Withdrawals_Min_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  b2bInvoiceUrl?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  cancelledDate?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  datePaid?: InputMaybe<Order_By>;
  dateReturned?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  internalNotes?: InputMaybe<Order_By>;
  invoiceUrl?: InputMaybe<Order_By>;
  parentBrandId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  payoutRequestFormUrl?: InputMaybe<Order_By>;
  proofOfPaymentUrl?: InputMaybe<Order_By>;
  referenceId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "withdrawals" */
export type Withdrawals_Mutation_Response = {
  __typename?: 'withdrawals_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Withdrawals>;
};

/** input type for inserting object relation for remote table "withdrawals" */
export type Withdrawals_Obj_Rel_Insert_Input = {
  data: Withdrawals_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Withdrawals_On_Conflict>;
};

/** on_conflict condition type for table "withdrawals" */
export type Withdrawals_On_Conflict = {
  constraint: Withdrawals_Constraint;
  update_columns?: Array<Withdrawals_Update_Column>;
  where?: InputMaybe<Withdrawals_Bool_Exp>;
};

/** Ordering options when selecting data from "withdrawals". */
export type Withdrawals_Order_By = {
  accountLedgers_aggregate?: InputMaybe<AccountLedgers_Aggregate_Order_By>;
  activityLogs_aggregate?: InputMaybe<ActivityLogs_Aggregate_Order_By>;
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  b2bInvoiceUrl?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  businessWalletId?: InputMaybe<Order_By>;
  cancelledDate?: InputMaybe<Order_By>;
  conversations_aggregate?: InputMaybe<Conversations_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  createdByUserId?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  datePaid?: InputMaybe<Order_By>;
  dateReturned?: InputMaybe<Order_By>;
  extraDocumentUrlList?: InputMaybe<Order_By>;
  fromAccountId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
  internalNotes?: InputMaybe<Order_By>;
  invoiceUrl?: InputMaybe<Order_By>;
  ledgers_aggregate?: InputMaybe<Ledgers_Aggregate_Order_By>;
  parentBrandId?: InputMaybe<Order_By>;
  parentBusinessId?: InputMaybe<Order_By>;
  payoutRequestFormUrl?: InputMaybe<Order_By>;
  proofOfPaymentUrl?: InputMaybe<Order_By>;
  referenceId?: InputMaybe<Order_By>;
  remarks?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  tasks_aggregate?: InputMaybe<Tasks_Aggregate_Order_By>;
  toBeneficiaryId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  updatedByUserId?: InputMaybe<Order_By>;
  withdrawalStatus?: InputMaybe<WithdrawalStatuses_Order_By>;
  withdrawalType?: InputMaybe<WithdrawalTypes_Order_By>;
};

/** primary key columns input for table: withdrawals */
export type Withdrawals_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Withdrawals_Prepend_Input = {
  extraDocumentUrlList?: InputMaybe<Scalars['jsonb']>;
  tags?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "withdrawals" */
export enum Withdrawals_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  AmountReturned = 'amountReturned',
  /** column name */
  B2bInvoiceUrl = 'b2bInvoiceUrl',
  /** column name */
  BankCharges = 'bankCharges',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  CancelledDate = 'cancelledDate',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  Currency = 'currency',
  /** column name */
  DatePaid = 'datePaid',
  /** column name */
  DateReturned = 'dateReturned',
  /** column name */
  ExtraDocumentUrlList = 'extraDocumentUrlList',
  /** column name */
  FromAccountId = 'fromAccountId',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  InternalNotes = 'internalNotes',
  /** column name */
  InvoiceUrl = 'invoiceUrl',
  /** column name */
  ParentBrandId = 'parentBrandId',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  PayoutRequestFormUrl = 'payoutRequestFormUrl',
  /** column name */
  ProofOfPaymentUrl = 'proofOfPaymentUrl',
  /** column name */
  ReferenceId = 'referenceId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  ToBeneficiaryId = 'toBeneficiaryId',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

/** input type for updating data in table "withdrawals" */
export type Withdrawals_Set_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  amountReturned?: InputMaybe<Scalars['numeric']>;
  b2bInvoiceUrl?: InputMaybe<Scalars['String']>;
  bankCharges?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  datePaid?: InputMaybe<Scalars['timestamptz']>;
  dateReturned?: InputMaybe<Scalars['timestamp']>;
  extraDocumentUrlList?: InputMaybe<Scalars['jsonb']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  internalNotes?: InputMaybe<Scalars['String']>;
  invoiceUrl?: InputMaybe<Scalars['String']>;
  parentBrandId?: InputMaybe<Scalars['uuid']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payoutRequestFormUrl?: InputMaybe<Scalars['String']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  referenceId?: InputMaybe<Scalars['String']>;
  remarks?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<WithdrawalStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<WithdrawalTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Withdrawals_Stddev_Fields = {
  __typename?: 'withdrawals_stddev_fields';
  amount?: Maybe<Scalars['Float']>;
  amountReturned?: Maybe<Scalars['Float']>;
  bankCharges?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "withdrawals" */
export type Withdrawals_Stddev_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Withdrawals_Stddev_Pop_Fields = {
  __typename?: 'withdrawals_stddev_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  amountReturned?: Maybe<Scalars['Float']>;
  bankCharges?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "withdrawals" */
export type Withdrawals_Stddev_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Withdrawals_Stddev_Samp_Fields = {
  __typename?: 'withdrawals_stddev_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  amountReturned?: Maybe<Scalars['Float']>;
  bankCharges?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "withdrawals" */
export type Withdrawals_Stddev_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "withdrawals" */
export type Withdrawals_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Withdrawals_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Withdrawals_Stream_Cursor_Value_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  amountReturned?: InputMaybe<Scalars['numeric']>;
  b2bInvoiceUrl?: InputMaybe<Scalars['String']>;
  bankCharges?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  createdByUserId?: InputMaybe<Scalars['uuid']>;
  currency?: InputMaybe<Scalars['String']>;
  datePaid?: InputMaybe<Scalars['timestamptz']>;
  dateReturned?: InputMaybe<Scalars['timestamp']>;
  extraDocumentUrlList?: InputMaybe<Scalars['jsonb']>;
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  internalId?: InputMaybe<Scalars['bigint']>;
  internalNotes?: InputMaybe<Scalars['String']>;
  invoiceUrl?: InputMaybe<Scalars['String']>;
  parentBrandId?: InputMaybe<Scalars['uuid']>;
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  payoutRequestFormUrl?: InputMaybe<Scalars['String']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  referenceId?: InputMaybe<Scalars['String']>;
  remarks?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<WithdrawalStatuses_Enum>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<WithdrawalTypes_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  updatedByUserId?: InputMaybe<Scalars['uuid']>;
};

/** aggregate sum on columns */
export type Withdrawals_Sum_Fields = {
  __typename?: 'withdrawals_sum_fields';
  amount?: Maybe<Scalars['numeric']>;
  amountReturned?: Maybe<Scalars['numeric']>;
  bankCharges?: Maybe<Scalars['numeric']>;
  internalId?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "withdrawals" */
export type Withdrawals_Sum_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** update columns of table "withdrawals" */
export enum Withdrawals_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  AmountReturned = 'amountReturned',
  /** column name */
  B2bInvoiceUrl = 'b2bInvoiceUrl',
  /** column name */
  BankCharges = 'bankCharges',
  /** column name */
  BusinessWalletId = 'businessWalletId',
  /** column name */
  CancelledDate = 'cancelledDate',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedByUserId = 'createdByUserId',
  /** column name */
  Currency = 'currency',
  /** column name */
  DatePaid = 'datePaid',
  /** column name */
  DateReturned = 'dateReturned',
  /** column name */
  ExtraDocumentUrlList = 'extraDocumentUrlList',
  /** column name */
  FromAccountId = 'fromAccountId',
  /** column name */
  Id = 'id',
  /** column name */
  InternalId = 'internalId',
  /** column name */
  InternalNotes = 'internalNotes',
  /** column name */
  InvoiceUrl = 'invoiceUrl',
  /** column name */
  ParentBrandId = 'parentBrandId',
  /** column name */
  ParentBusinessId = 'parentBusinessId',
  /** column name */
  PayoutRequestFormUrl = 'payoutRequestFormUrl',
  /** column name */
  ProofOfPaymentUrl = 'proofOfPaymentUrl',
  /** column name */
  ReferenceId = 'referenceId',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  ToBeneficiaryId = 'toBeneficiaryId',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UpdatedByUserId = 'updatedByUserId'
}

export type Withdrawals_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Withdrawals_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Withdrawals_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Withdrawals_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Withdrawals_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Withdrawals_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Withdrawals_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Withdrawals_Set_Input>;
  /** filter the rows which have to be updated */
  where: Withdrawals_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Withdrawals_Var_Pop_Fields = {
  __typename?: 'withdrawals_var_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  amountReturned?: Maybe<Scalars['Float']>;
  bankCharges?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "withdrawals" */
export type Withdrawals_Var_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Withdrawals_Var_Samp_Fields = {
  __typename?: 'withdrawals_var_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  amountReturned?: Maybe<Scalars['Float']>;
  bankCharges?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "withdrawals" */
export type Withdrawals_Var_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Withdrawals_Variance_Fields = {
  __typename?: 'withdrawals_variance_fields';
  amount?: Maybe<Scalars['Float']>;
  amountReturned?: Maybe<Scalars['Float']>;
  bankCharges?: Maybe<Scalars['Float']>;
  internalId?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "withdrawals" */
export type Withdrawals_Variance_Order_By = {
  amount?: InputMaybe<Order_By>;
  amountReturned?: InputMaybe<Order_By>;
  bankCharges?: InputMaybe<Order_By>;
  internalId?: InputMaybe<Order_By>;
};

export type FetchBankAccountDetailsQueryVariables = Exact<{
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
  order_by?: InputMaybe<Array<AccountSort> | AccountSort>;
  where?: InputMaybe<AccountWhere>;
}>;


export type FetchBankAccountDetailsQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'Account', id: string, name: string, accountNumber: string, bankCharges: number, currency: string, nickname: string, bank: { __typename?: 'Bank', id: string, name: string, swiftCode: string } }>, accountsAggregate: { __typename?: 'AccountAggregateSelection', count: number } };

export type FetchBanksByNameQueryVariables = Exact<{
  name: Scalars['String'];
}>;


export type FetchBanksByNameQuery = { __typename?: 'query_root', banks: Array<{ __typename?: 'Bank', id: string, name: string, swiftCode: string, country: string }> };

export type FetchBanksSuggestionsQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchBanksSuggestionsQuery = { __typename?: 'query_root', banks: Array<{ __typename?: 'Bank', id: string, name: string, swiftCode: string, country: string }> };

export type CreateAccountsMutationVariables = Exact<{
  input: Array<AccountCreateInput> | AccountCreateInput;
}>;


export type CreateAccountsMutation = { __typename?: 'mutation_root', createAccounts: { __typename?: 'CreateAccountsMutationResponse', info: { __typename?: 'CreateInfo', nodesCreated: number, relationshipsCreated: number }, accounts: Array<{ __typename?: 'Account', id: string, accountNumber: string, nickname: string, currency: string }> } };

export type SuggestCountriesQueryVariables = Exact<{ [key: string]: never; }>;


export type SuggestCountriesQuery = { __typename?: 'query_root', countries: Array<{ __typename?: 'Country', name: string, code: string }> };

export type AllCountriesQueryVariables = Exact<{ [key: string]: never; }>;


export type AllCountriesQuery = { __typename?: 'query_root', countries: Array<{ __typename?: 'Country', code: string, name: string }> };

export type CurrenciesQueryVariables = Exact<{ [key: string]: never; }>;


export type CurrenciesQuery = { __typename?: 'query_root', currencies: Array<{ __typename?: 'Currency', code: string, name: string, symbol: string, flagUrl?: string | null }> };

export type CreateBanksMutationVariables = Exact<{
  address: Scalars['String'];
  country: Scalars['String'];
  name: Scalars['String'];
  swiftCode: Scalars['String'];
}>;


export type CreateBanksMutation = { __typename?: 'mutation_root', createBanks: { __typename?: 'CreateBanksMutationResponse', banks: Array<{ __typename?: 'Bank', id: string, name: string, swiftCode: string }>, info: { __typename?: 'CreateInfo', nodesCreated: number } } };

export type CreateIntermediaryAccountsMutationVariables = Exact<{
  intBankinput: Array<IntermediaryAccountCreateInput> | IntermediaryAccountCreateInput;
  accountInput: Array<AccountCreateInput> | AccountCreateInput;
}>;


export type CreateIntermediaryAccountsMutation = { __typename?: 'mutation_root', createIntermediaryAccounts: { __typename?: 'CreateIntermediaryAccountsMutationResponse', info: { __typename?: 'CreateInfo', nodesCreated: number }, intermediaryAccounts: Array<{ __typename?: 'IntermediaryAccount', id: string }> }, createAccounts: { __typename?: 'CreateAccountsMutationResponse', info: { __typename?: 'CreateInfo', nodesCreated: number }, accounts: Array<{ __typename?: 'Account', id: string }> } };

export type AddIntermediaryAccountMutationVariables = Exact<{
  input: Array<IntermediaryAccountCreateInput> | IntermediaryAccountCreateInput;
}>;


export type AddIntermediaryAccountMutation = { __typename?: 'mutation_root', createIntermediaryAccounts: { __typename?: 'CreateIntermediaryAccountsMutationResponse', info: { __typename?: 'CreateInfo', nodesCreated: number } } };

export type FEtchAccountDetailsQueryVariables = Exact<{
  accountId: Scalars['ID'];
}>;


export type FEtchAccountDetailsQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'Account', id: string, name: string, accountNumber: string, nickname: string, bankCharges: number, beneficiaryAddress?: string | null, currency: string, bank: { __typename?: 'Bank', id: string, name: string, swiftCode: string } }> };

export type FetchBankLedgerTransactionsQueryVariables = Exact<{
  where?: InputMaybe<Ledgers_Bool_Exp>;
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
  accountId?: InputMaybe<Scalars['ID']>;
  order_by?: InputMaybe<Array<Ledgers_Order_By> | Ledgers_Order_By>;
}>;


export type FetchBankLedgerTransactionsQuery = { __typename?: 'query_root', ledgers: Array<{ __typename?: 'ledgers', id: any, amount: any, ledgerType: LedgerTypes_Enum, fromLine1?: string | null, fromLine2?: string | null, toLine1?: string | null, toLine2?: string | null, currency?: string | null, transactionType: TransactionTypes_Enum, createdAt: any, childLedgers: Array<{ __typename?: 'ledgers', id: any, amount: any }> }>, ledgers_aggregate: { __typename?: 'ledgers_aggregate', aggregate?: { __typename?: 'ledgers_aggregate_fields', count: number } | null }, accounts: Array<{ __typename?: 'Account', currency: string, accountNumber: string, balance: number, bank: { __typename?: 'Bank', id: string, name: string, swiftCode: string } }> };

export type FetchBankDetailsQueryVariables = Exact<{
  bankId: Scalars['ID'];
}>;


export type FetchBankDetailsQuery = { __typename?: 'query_root', banks: Array<{ __typename?: 'Bank', id: string, name: string, swiftCode: string, address?: string | null, intermediaryAccounts: Array<{ __typename?: 'IntermediaryAccount', id: string, bankName: string, swiftCode: string, currency: string }>, accounts: Array<{ __typename?: 'Account', id: string, accountNumber: string, name: string, nickname: string, currency: string, balance: number, bank: { __typename?: 'Bank', swiftCode: string } }> }> };

export type EditAccountDetailsMutationVariables = Exact<{
  id: Scalars['ID'];
  update?: InputMaybe<AccountUpdateInput>;
}>;


export type EditAccountDetailsMutation = { __typename?: 'mutation_root', updateAccounts: { __typename?: 'UpdateAccountsMutationResponse', accounts: Array<{ __typename?: 'Account', id: string }> } };

export type EditBankDetailsMutationVariables = Exact<{
  id: Scalars['ID'];
  update?: InputMaybe<BankUpdateInput>;
}>;


export type EditBankDetailsMutation = { __typename?: 'mutation_root', updateBanks: { __typename?: 'UpdateBanksMutationResponse', banks: Array<{ __typename?: 'Bank', id: string }> } };

export type UpdateIntermediaryAccountMutationVariables = Exact<{
  id: Scalars['ID'];
  update?: InputMaybe<IntermediaryAccountUpdateInput>;
}>;


export type UpdateIntermediaryAccountMutation = { __typename?: 'mutation_root', updateIntermediaryAccounts: { __typename?: 'UpdateIntermediaryAccountsMutationResponse', intermediaryAccounts: Array<{ __typename?: 'IntermediaryAccount', id: string }> } };

export type GetAllLogsQueryVariables = Exact<{
  limit: Scalars['Int'];
  offset: Scalars['Int'];
  order_by?: InputMaybe<Array<ActivityLogs_Order_By> | ActivityLogs_Order_By>;
  where?: InputMaybe<ActivityLogs_Bool_Exp>;
}>;


export type GetAllLogsQuery = { __typename?: 'query_root', activityLogs: Array<{ __typename?: 'activityLogs', id: any, featureType?: FeatureTypes_Enum | null, message: string, taskId?: any | null, withdrawalId?: any | null, depositId?: any | null, createdAt: any, updatedAt: any, actionBySuperAdmin: Array<{ __typename?: 'SuperAdmin', id: string, name: string }>, actionBySubAdmin: Array<{ __typename?: 'SubAdmin', name: string, id: string }>, actionByMerchant: Array<{ __typename?: 'Merchant', id: string, firstName: string }>, deposit?: { __typename?: 'deposits', id: any } | null, ledger?: { __typename?: 'ledgers', id: any } | null, withdrawal?: { __typename?: 'withdrawals', id: any } | null, task?: { __typename?: 'tasks', id: any } | null }>, activityLogs_aggregate: { __typename?: 'activityLogs_aggregate', aggregate?: { __typename?: 'activityLogs_aggregate_fields', count: number } | null } };

export type FetchDashboardMerchantsQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchDashboardMerchantsQuery = { __typename?: 'query_root', merchants: Array<{ __typename?: 'Merchant', id: string, firstName: string, lastName?: string | null }> };

export type FetchDashboardDepositsQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchDashboardDepositsQuery = { __typename?: 'query_root', deposits: Array<{ __typename?: 'deposits', id: any, referenceId?: string | null, status: DepositStatuses_Enum, createdAt: any }> };

export type FetchDashboardTasksQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchDashboardTasksQuery = { __typename?: 'query_root', tasks: Array<{ __typename?: 'tasks', id: any, description?: string | null, status: TaskStatusTypes_Enum, endDate: any }>, assignedToMeTask: { __typename?: 'tasks_aggregate', aggregate?: { __typename?: 'tasks_aggregate_fields', count: number } | null }, assignedTask: { __typename?: 'tasks_aggregate', aggregate?: { __typename?: 'tasks_aggregate_fields', count: number } | null }, completedTask: { __typename?: 'tasks_aggregate', aggregate?: { __typename?: 'tasks_aggregate_fields', count: number } | null }, pendingTask: { __typename?: 'tasks_aggregate', aggregate?: { __typename?: 'tasks_aggregate_fields', count: number } | null } };

export type FetchAllConversationsSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type FetchAllConversationsSubscription = { __typename?: 'subscription_root', conversations: Array<{ __typename?: 'conversations', id: any, updatedAt: any, businessId: any, depositId?: any | null, withdrawalId?: any | null, messages: Array<{ __typename?: 'messages', content: string, type: MessageTypes_Enum }> }> };

export type FetchBusinessIdQueryVariables = Exact<{
  businessId: Scalars['ID'];
}>;


export type FetchBusinessIdQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', id: string } }> };

export type RollingReservesQueryVariables = Exact<{
  code?: InputMaybe<Scalars['String']>;
}>;


export type RollingReservesQuery = { __typename?: 'query_root', rollingReserves_aggregate: { __typename?: 'rollingReserves_aggregate', aggregate?: { __typename?: 'rollingReserves_aggregate_fields', sum?: { __typename?: 'rollingReserves_sum_fields', amount?: any | null } | null } | null } };

export type DepositVolumeQueryVariables = Exact<{
  aggregate_by?: InputMaybe<Scalars['String']>;
  fromdate?: InputMaybe<Scalars['timestamptz']>;
  todate?: InputMaybe<Scalars['timestamptz']>;
  tformat?: InputMaybe<Scalars['String']>;
  xformat?: InputMaybe<Scalars['String']>;
  fromDate?: InputMaybe<Scalars['date']>;
  toDate?: InputMaybe<Scalars['date']>;
  code?: InputMaybe<Scalars['String']>;
}>;


export type DepositVolumeQuery = { __typename?: 'query_root', depositVolumeGraphWithCurrency: Array<{ __typename?: 'graphData', x?: string | null, y?: any | null, t?: string | null }>, dailyDepositVolume_aggregate: { __typename?: 'dailyDepositVolume_aggregate', aggregate?: { __typename?: 'dailyDepositVolume_aggregate_fields', sum?: { __typename?: 'dailyDepositVolume_sum_fields', b2b?: any | null, c2b?: any | null } | null } | null } };

export type WithdrawalVolumeQueryVariables = Exact<{
  aggregate_by?: InputMaybe<Scalars['String']>;
  fromdate?: InputMaybe<Scalars['timestamptz']>;
  todate?: InputMaybe<Scalars['timestamptz']>;
  tformat?: InputMaybe<Scalars['String']>;
  xformat?: InputMaybe<Scalars['String']>;
  fromDate?: InputMaybe<Scalars['date']>;
  toDate?: InputMaybe<Scalars['date']>;
  code?: InputMaybe<Scalars['String']>;
}>;


export type WithdrawalVolumeQuery = { __typename?: 'query_root', withdrawalVolumeGraphWithCurrency: Array<{ __typename?: 'graphData', x?: string | null, y?: any | null, t?: string | null }>, dailyWithdrawalVolume_aggregate: { __typename?: 'dailyWithdrawalVolume_aggregate', aggregate?: { __typename?: 'dailyWithdrawalVolume_aggregate_fields', sum?: { __typename?: 'dailyWithdrawalVolume_sum_fields', payout?: any | null, settlement?: any | null } | null } | null } };

export type CommissionVolumeQueryVariables = Exact<{
  aggregate_by?: InputMaybe<Scalars['String']>;
  fromdate?: InputMaybe<Scalars['timestamptz']>;
  todate?: InputMaybe<Scalars['timestamptz']>;
  tformat?: InputMaybe<Scalars['String']>;
  xformat?: InputMaybe<Scalars['String']>;
  fromDate?: InputMaybe<Scalars['date']>;
  toDate?: InputMaybe<Scalars['date']>;
  code?: InputMaybe<Scalars['String']>;
}>;


export type CommissionVolumeQuery = { __typename?: 'query_root', commissionVolumeGraph: Array<{ __typename?: 'graphData', x?: string | null, y?: any | null, t?: string | null }>, dailyCommissionVolume_aggregate: { __typename?: 'dailyCommissionVolume_aggregate', aggregate?: { __typename?: 'dailyCommissionVolume_aggregate_fields', sum?: { __typename?: 'dailyCommissionVolume_sum_fields', c2b?: any | null, b2b?: any | null, payout?: any | null } | null } | null } };

export type FetchCustomersQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<CustomerSort> | CustomerSort>;
  where?: InputMaybe<CustomerWhere>;
}>;


export type FetchCustomersQuery = { __typename?: 'query_root', customers: Array<{ __typename?: 'Customer', id: string, firstName: string, lastName?: string | null, username: string, kycStatus?: KycStatus | null, parentBrand: { __typename?: 'Brand', business: { __typename?: 'Business', name: string } }, beneficiaries: Array<{ __typename?: 'Beneficiary', id: string, beneficiaryName: string }> }>, customersAggregate: { __typename?: 'CustomerAggregateSelection', count: number } };

export type GetCustomerDetailsQueryVariables = Exact<{
  id: Scalars['ID'];
}>;


export type GetCustomerDetailsQuery = { __typename?: 'query_root', customers: Array<{ __typename?: 'Customer', id: string, firstName: string, lastName?: string | null, username: string, phone?: string | null, email?: string | null, dateOfBirth?: any | null, idNumber?: string | null, address?: string | null, kycStatus?: KycStatus | null, createdAt: any, country?: string | null, parentBrand: { __typename?: 'Brand', business: { __typename?: 'Business', name: string } }, beneficiaries: Array<{ __typename?: 'Beneficiary', id: string, beneficiaryName: string, accountNumber: string, currency?: string | null, accountType: BeneficiaryAccountType, bankName: string, swiftCode: string, bankAddress?: string | null, beneficiaryAddress?: string | null, beneficiaryCountry?: string | null, bankCountry?: string | null, remarks?: string | null, intermediaryBankName?: string | null, intermediaryBankSwift?: string | null, intermediaryBankAddress?: string | null, intermediaryBankRemarks?: string | null }>, personalDocuments: Array<{ __typename?: 'PersonalDocument', id: string, name?: string | null, url: string, type: PersonalDocumentTypeEnum }> }> };

export type FetchAllBusinessQueryVariables = Exact<{
  name?: InputMaybe<Scalars['String']>;
}>;


export type FetchAllBusinessQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, balance: number, currency?: string | null }> }> };

export type UpdateCustomerKycStatusMutationVariables = Exact<{
  id: Scalars['ID'];
  status: KycStatus;
}>;


export type UpdateCustomerKycStatusMutation = { __typename?: 'mutation_root', updateCustomers: { __typename?: 'UpdateCustomersMutationResponse', customers: Array<{ __typename?: 'Customer', kycStatus?: KycStatus | null }> } };

export type DeleteCustomerKycDocumentsMutationVariables = Exact<{
  id?: InputMaybe<Scalars['ID']>;
  update?: InputMaybe<PersonalDocumentUpdateInput>;
}>;


export type DeleteCustomerKycDocumentsMutation = { __typename?: 'mutation_root', updatePersonalDocuments: { __typename?: 'UpdatePersonalDocumentsMutationResponse', personalDocuments: Array<{ __typename?: 'PersonalDocument', id: string }> } };

export type AddCustomerBeneficiaryMutationVariables = Exact<{
  input: Array<BeneficiaryCreateInput> | BeneficiaryCreateInput;
}>;


export type AddCustomerBeneficiaryMutation = { __typename?: 'mutation_root', createBeneficiaries: { __typename?: 'CreateBeneficiariesMutationResponse', beneficiaries: Array<{ __typename?: 'Beneficiary', id: string }> } };

export type UpdateBeneficiaryByIdMutationVariables = Exact<{
  where?: InputMaybe<BeneficiaryWhere>;
  update?: InputMaybe<BeneficiaryUpdateInput>;
}>;


export type UpdateBeneficiaryByIdMutation = { __typename?: 'mutation_root', updateBeneficiaries: { __typename?: 'UpdateBeneficiariesMutationResponse', beneficiaries: Array<{ __typename?: 'Beneficiary', id: string }> } };

export type UpdateCustomerByIdMutationVariables = Exact<{
  where?: InputMaybe<CustomerWhere>;
  update?: InputMaybe<CustomerUpdateInput>;
}>;


export type UpdateCustomerByIdMutation = { __typename?: 'mutation_root', updateCustomers: { __typename?: 'UpdateCustomersMutationResponse', customers: Array<{ __typename?: 'Customer', id: string }> } };

export type CheckCustomerUsernameExistsQueryVariables = Exact<{
  username: Scalars['String'];
}>;


export type CheckCustomerUsernameExistsQuery = { __typename?: 'query_root', customersAggregate: { __typename?: 'CustomerAggregateSelection', count: number } };

export type QueryDepositsQueryVariables = Exact<{
  where?: InputMaybe<Deposits_Bool_Exp>;
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
  order_by?: InputMaybe<Array<Deposits_Order_By> | Deposits_Order_By>;
}>;


export type QueryDepositsQuery = { __typename?: 'query_root', deposits: Array<{ __typename?: 'deposits', id: any, internalId: any, tags?: any | null, referenceId?: string | null, amountReceived?: any | null, amountReceivedDate?: any | null, refundedDate?: any | null, refundedAmount?: any | null, cancelledDate?: any | null, createdAt: any, status: DepositStatuses_Enum, type: DepositTypes_Enum, productPrice: any, productName: string, invoiceUrl?: string | null, invoiceDate?: any | null, proofOfPaymentUrl?: string | null, signedInvoiceUrl?: string | null, toAccountId?: any | null, remarks?: string | null, tasks: Array<{ __typename?: 'tasks', id: any, assignedToUser?: Array<{ __typename?: 'CreatedByUser', id: string, name: string, userType: UserType } | null> | null }>, fromCustomer: Array<{ __typename?: 'Customer', id: string, firstName: string, lastName?: string | null, kycStatus?: KycStatus | null, username: string, personalDocuments: Array<{ __typename?: 'PersonalDocument', id: string, name?: string | null, url: string, type: PersonalDocumentTypeEnum }> }>, businessWallet: Array<{ __typename?: 'BusinessWallet', id: string, currency?: string | null }>, parentBusiness: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', id: string, name: string } }>, createdByMerchant: Array<{ __typename?: 'Merchant', name: string, userType: UserType }>, createdBySubAdmin: Array<{ __typename?: 'SubAdmin', name: string, userType: UserType }>, createdBySuperAdmin: Array<{ __typename?: 'SuperAdmin', name: string, userType: UserType }>, createdByUser?: Array<{ __typename?: 'CreatedByUser', id: string, name: string, userType: UserType } | null> | null, tasks_aggregate: { __typename?: 'tasks_aggregate', aggregate?: { __typename?: 'tasks_aggregate_fields', count: number } | null }, toAccount: Array<{ __typename?: 'Account', nickname: string }> }>, deposits_aggregate: { __typename?: 'deposits_aggregate', aggregate?: { __typename?: 'deposits_aggregate_fields', count: number } | null } };

export type FetchBusinessesQueryVariables = Exact<{
  name?: InputMaybe<Scalars['String']>;
}>;


export type FetchBusinessesQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', name: string }, brands: Array<{ __typename?: 'Brand', id: string, name: string }>, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, balance: number, currency?: string | null }> }> };

export type FetchAdminsQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchAdminsQuery = { __typename?: 'query_root', subAdmins: Array<{ __typename?: 'SubAdmin', id: string, name: string }>, superAdmins: Array<{ __typename?: 'SuperAdmin', id: string, name: string }> };

export type UpdateTasksMutationVariables = Exact<{
  taskId: Scalars['uuid'];
  assigneeId: Scalars['uuid'];
}>;


export type UpdateTasksMutation = { __typename?: 'mutation_root', update_tasks_by_pk?: { __typename?: 'tasks', id: any, assignedToId: any } | null };

export type UpdateWithdrawalTaskMutationVariables = Exact<{
  taskId: Scalars['uuid'];
  assigneeId: Scalars['uuid'];
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  txId: Scalars['uuid'];
}>;


export type UpdateWithdrawalTaskMutation = { __typename?: 'mutation_root', update_tasks_by_pk?: { __typename?: 'tasks', id: any, assignedToId: any } | null, update_withdrawals_by_pk?: { __typename?: 'withdrawals', id: any } | null };

export type UpdateDepositDocsMutationVariables = Exact<{
  id: Scalars['uuid'];
  urlData: Deposits_Set_Input;
}>;


export type UpdateDepositDocsMutation = { __typename?: 'mutation_root', update_deposits_by_pk?: { __typename?: 'deposits', id: any, signedInvoiceUrl?: string | null, proofOfPaymentUrl?: string | null } | null };

export type UpdateDepositStatusMutationVariables = Exact<{
  amountReceived?: InputMaybe<Scalars['numeric']>;
  amountReceivedDate?: InputMaybe<Scalars['timestamp']>;
  status: Scalars['String'];
  signedInvoiceUrl?: InputMaybe<Scalars['String']>;
  refundedDate?: InputMaybe<Scalars['timestamp']>;
  refundedAmount?: InputMaybe<Scalars['numeric']>;
  id: Scalars['uuid'];
  cancelledDate?: InputMaybe<Scalars['timestamp']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
}>;


export type UpdateDepositStatusMutation = { __typename?: 'mutation_root', updateDepositStatus?: { __typename?: 'UpdateDepositStatusResponse', status: string, data?: { __typename?: 'UpdateDepositStatusResponseData', status?: string | null } | null } | null };

export type DuplicateDepositMutationVariables = Exact<{
  businessWalletId: Scalars['uuid'];
  currency: Scalars['String'];
  fromCustomerId: Scalars['uuid'];
  invoiceDate: Scalars['timestamptz'];
  parentBusinessId: Scalars['uuid'];
  productName: Scalars['String'];
  productPrice?: InputMaybe<Scalars['numeric']>;
  tags?: InputMaybe<Scalars['jsonb']>;
  toAccountId: Scalars['uuid'];
  type: DepositTypes_Enum;
  referenceId: Scalars['String'];
  remarks: Scalars['String'];
}>;


export type DuplicateDepositMutation = { __typename?: 'mutation_root', insert_deposits_one?: { __typename?: 'deposits', id: any } | null };

export type FetchAllAccountsQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchAllAccountsQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'Account', id: string, accountNumber: string, currency: string, name: string, nickname: string }> };

export type GetLastUsedBusinessDataQueryVariables = Exact<{ [key: string]: never; }>;


export type GetLastUsedBusinessDataQuery = { __typename?: 'query_root', deposits: Array<{ __typename?: 'deposits', parentBusiness: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', name: string } }> }> };

export type GetLastUsedAccountDataQueryVariables = Exact<{
  businessId: Scalars['uuid'];
}>;


export type GetLastUsedAccountDataQuery = { __typename?: 'query_root', deposits: Array<{ __typename?: 'deposits', parentBusiness: Array<{ __typename?: 'Business', businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, accounts: Array<{ __typename?: 'Account', id: string, nickname: string, currency: string, accountNumber: string }> }> }> }> };

export type GetLastUsedCustomerDataQueryVariables = Exact<{
  businessId: Scalars['uuid'];
}>;


export type GetLastUsedCustomerDataQuery = { __typename?: 'query_root', deposits: Array<{ __typename?: 'deposits', fromCustomer: Array<{ __typename?: 'Customer', id: string, username: string, firstName: string, lastName?: string | null }> }> };

export type GetLastUsedProductDataQueryVariables = Exact<{
  businessId: Scalars['uuid'];
}>;


export type GetLastUsedProductDataQuery = { __typename?: 'query_root', deposits: Array<{ __typename?: 'deposits', productName: string, productPrice: any }> };

export type GetLastUsedTagsQueryVariables = Exact<{
  businessId: Scalars['uuid'];
}>;


export type GetLastUsedTagsQuery = { __typename?: 'query_root', deposits: Array<{ __typename?: 'deposits', tags?: any | null }> };

export type GetAccountsForBusinessQueryVariables = Exact<{
  businessId: Scalars['ID'];
  name: Scalars['String'];
}>;


export type GetAccountsForBusinessQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, accounts: Array<{ __typename?: 'Account', id: string, currency: string, nickname: string, accountNumber: string }> }> }> };

export type GetCustomerForBusinessQueryVariables = Exact<{
  businessId: Scalars['ID'];
  name: Scalars['String'];
}>;


export type GetCustomerForBusinessQuery = { __typename?: 'query_root', customers: Array<{ __typename?: 'Customer', id: string, username: string, firstName: string, lastName?: string | null }> };

export type GetBrandsForBusinessQueryVariables = Exact<{
  businessId: Scalars['ID'];
  name: Scalars['String'];
}>;


export type GetBrandsForBusinessQuery = { __typename?: 'query_root', brands: Array<{ __typename?: 'Brand', name: string, id: string }> };

export type AddDepositMutationVariables = Exact<{
  depositsData: Array<Deposits_Insert_Input> | Deposits_Insert_Input;
}>;


export type AddDepositMutation = { __typename?: 'mutation_root', insert_deposits?: { __typename?: 'deposits_mutation_response', affected_rows: number } | null };

export type GetDepositInvoiceDetailsQueryVariables = Exact<{
  depositId: Scalars['uuid'];
}>;


export type GetDepositInvoiceDetailsQuery = { __typename?: 'query_root', deposits_by_pk?: { __typename?: 'deposits', createdAt: any, referenceId?: string | null, productName: string, productPrice: any, currency?: string | null, amountReceived?: any | null, remarks?: string | null, fromCustomer: Array<{ __typename?: 'Customer', firstName: string, lastName?: string | null, email?: string | null, phone?: string | null, address?: string | null, country?: string | null }>, businessWallet: Array<{ __typename?: 'BusinessWallet', currency?: string | null }>, parentBusiness: Array<{ __typename?: 'Business', name: string, nickname: string, website?: string | null, logoUrl?: string | null, merchant: { __typename?: 'Merchant', name: string, country?: string | null, email: string, website?: string | null } }>, toAccount: Array<{ __typename?: 'Account', name: string, beneficiaryAddress?: string | null, accountNumber: string, bank: { __typename?: 'Bank', name: string, address?: string | null, swiftCode: string } }> } | null };

export type UpdateDepositByIdMutationVariables = Exact<{
  id?: InputMaybe<Scalars['uuid']>;
  _set?: InputMaybe<Deposits_Set_Input>;
}>;


export type UpdateDepositByIdMutation = { __typename?: 'mutation_root', update_deposits?: { __typename?: 'deposits_mutation_response', affected_rows: number } | null };

export type UpdateWithdrawalByIdMutationVariables = Exact<{
  id?: InputMaybe<Scalars['uuid']>;
  _set?: InputMaybe<Withdrawals_Set_Input>;
}>;


export type UpdateWithdrawalByIdMutation = { __typename?: 'mutation_root', update_withdrawals?: { __typename?: 'withdrawals_mutation_response', affected_rows: number } | null };

export type BusinessDataByIdQueryVariables = Exact<{
  id?: InputMaybe<Scalars['ID']>;
}>;


export type BusinessDataByIdQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', name: string, id: string, nickname: string, merchant: { __typename?: 'Merchant', name: string } }> };

export type InsertDepositAndLedgerMutationVariables = Exact<{
  data: Array<CreateDepositInput> | CreateDepositInput;
}>;


export type InsertDepositAndLedgerMutation = { __typename?: 'mutation_root', createDeposits?: { __typename?: 'CreateDepositOutput', message: string } | null };

export type BusinessesQueryVariables = Exact<{
  name?: InputMaybe<Scalars['String']>;
}>;


export type BusinessesQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', name: string }, brands: Array<{ __typename?: 'Brand', id: string, name: string }>, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, balance: number, currency?: string | null }> }> };

export type ConversationsSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type ConversationsSubscription = { __typename?: 'subscription_root', conversations: Array<{ __typename?: 'conversations', id: any, updatedAt: any, businessId: any, depositId?: any | null, withdrawalId?: any | null, status: string, messages: Array<{ __typename?: 'messages', content: string, type: MessageTypes_Enum }> }> };

export type BusinessByIdQueryVariables = Exact<{
  businessId: Scalars['ID'];
}>;


export type BusinessByIdQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', id: string } }> };

export type ConversationCategoriesQueryVariables = Exact<{ [key: string]: never; }>;


export type ConversationCategoriesQuery = { __typename?: 'query_root', conversationCategories: Array<{ __typename?: 'conversationCategories', id: number, category: string }> };

export type CreateConversationMutationVariables = Exact<{
  businessId: Scalars['uuid'];
  categoryId: Scalars['Int'];
  content: Scalars['String'];
  adminId: Scalars['uuid'];
  type?: InputMaybe<MessageTypes_Enum>;
  depositId?: InputMaybe<Scalars['uuid']>;
  withdrawalId?: InputMaybe<Scalars['uuid']>;
}>;


export type CreateConversationMutation = { __typename?: 'mutation_root', insert_conversations_one?: { __typename?: 'conversations', id: any } | null };

export type MessagesQueryVariables = Exact<{
  conversationId: Scalars['uuid'];
}>;


export type MessagesQuery = { __typename?: 'query_root', messages: Array<{ __typename?: 'messages', id: any, adminId?: any | null, merchantId?: any | null, content: string, createdAt: any, conversationId: any, type: MessageTypes_Enum }> };

export type MessagesSubsSubscriptionVariables = Exact<{
  conversationId: Scalars['uuid'];
}>;


export type MessagesSubsSubscription = { __typename?: 'subscription_root', messages: Array<{ __typename?: 'messages', id: any, adminId?: any | null, merchantId?: any | null, content: string, createdAt: any, conversationId: any, type: MessageTypes_Enum }> };

export type ConversationsSubsSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type ConversationsSubsSubscription = { __typename?: 'subscription_root', conversations: Array<{ __typename?: 'conversations', id: any, merchantRead: boolean, updatedAt: any, categoryId?: number | null, businessId: any, adminRead: boolean, status: string, depositId?: any | null, withdrawalId?: any | null, conversationCategory?: { __typename?: 'conversationCategories', id: number, category: string } | null, deposit?: { __typename?: 'deposits', referenceId?: string | null } | null, withdrawal?: { __typename?: 'withdrawals', referenceId?: string | null } | null, messages: Array<{ __typename?: 'messages', content: string, type: MessageTypes_Enum }> }> };

export type ConversationssSubscriptionVariables = Exact<{
  businessIds?: InputMaybe<Array<Scalars['uuid']> | Scalars['uuid']>;
}>;


export type ConversationssSubscription = { __typename?: 'subscription_root', conversations: Array<{ __typename?: 'conversations', id: any, merchantRead: boolean, updatedAt: any, categoryId?: number | null, businessId: any, status: string, adminRead: boolean, depositId?: any | null, withdrawalId?: any | null, conversationCategory?: { __typename?: 'conversationCategories', id: number, category: string } | null, deposit?: { __typename?: 'deposits', referenceId?: string | null } | null, withdrawal?: { __typename?: 'withdrawals', referenceId?: string | null } | null, messages: Array<{ __typename?: 'messages', content: string, type: MessageTypes_Enum }> }> };

export type BusinessesMerchantQueryVariables = Exact<{
  merchantId: Scalars['ID'];
}>;


export type BusinessesMerchantQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, merchant: { __typename?: 'Merchant', id: string } }> };

export type BusinessesAllQueryVariables = Exact<{ [key: string]: never; }>;


export type BusinessesAllQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, merchant: { __typename?: 'Merchant', id: string } }> };

export type Insert_Messages_OneMutationVariables = Exact<{
  conversationId: Scalars['uuid'];
  content: Scalars['String'];
  adminId?: InputMaybe<Scalars['uuid']>;
  merchantId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<MessageTypes_Enum>;
}>;


export type Insert_Messages_OneMutation = { __typename?: 'mutation_root', insert_messages_one?: { __typename?: 'messages', id: any, merchantId?: any | null, adminId?: any | null, content: string, createdAt: any, type: MessageTypes_Enum } | null, update_conversations_by_pk?: { __typename?: 'conversations', id: any } | null };

export type Update_Conversations_By_PkMutationVariables = Exact<{
  conversationId: Scalars['uuid'];
}>;


export type Update_Conversations_By_PkMutation = { __typename?: 'mutation_root', update_conversations_by_pk?: { __typename?: 'conversations', id: any } | null };

export type Update_Conversations_By_Pk2MutationVariables = Exact<{
  conversationId: Scalars['uuid'];
}>;


export type Update_Conversations_By_Pk2Mutation = { __typename?: 'mutation_root', update_conversations_by_pk?: { __typename?: 'conversations', id: any } | null };

export type Insert_Messages_One2MutationVariables = Exact<{
  conversationId: Scalars['uuid'];
  content: Scalars['String'];
  merchantId: Scalars['uuid'];
  type?: InputMaybe<MessageTypes_Enum>;
}>;


export type Insert_Messages_One2Mutation = { __typename?: 'mutation_root', insert_messages_one?: { __typename?: 'messages', id: any, merchantId?: any | null, adminId?: any | null, content: string, createdAt: any, type: MessageTypes_Enum } | null, update_conversations_by_pk?: { __typename?: 'conversations', id: any } | null };

export type Update_Conversations_By_Pk3MutationVariables = Exact<{
  conversationId: Scalars['uuid'];
}>;


export type Update_Conversations_By_Pk3Mutation = { __typename?: 'mutation_root', update_conversations_by_pk?: { __typename?: 'conversations', id: any } | null };

export type GetConversationMetadataSubscriptionVariables = Exact<{
  conversationId: Scalars['uuid'];
}>;


export type GetConversationMetadataSubscription = { __typename?: 'subscription_root', conversations: Array<{ __typename?: 'conversations', id: any, updatedAt: any, status: string, messages: Array<{ __typename?: 'messages', content: string, id: any, type: MessageTypes_Enum }>, messages_aggregate: { __typename?: 'messages_aggregate', aggregate?: { __typename?: 'messages_aggregate_fields', count: number } | null } }> };

export type FetchAllMerchantsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<MerchantSort> | MerchantSort>;
  where?: InputMaybe<MerchantWhere>;
}>;


export type FetchAllMerchantsQuery = { __typename?: 'query_root', merchants: Array<{ __typename?: 'Merchant', id: string, email: string, name: string, firstName: string, lastName?: string | null, createdAt: any, businesses: Array<{ __typename?: 'Business', id: string, status: BusinessStatus }>, businessesAggregate?: { __typename?: 'MerchantBusinessBusinessesAggregationSelection', count: number } | null }>, merchantsAggregate: { __typename?: 'MerchantAggregateSelection', count: number } };

export type FetchMerchantDetailsQueryVariables = Exact<{
  id: Scalars['ID'];
}>;


export type FetchMerchantDetailsQuery = { __typename?: 'query_root', merchants: Array<{ __typename?: 'Merchant', id: string, email: string, name: string, firstName: string, lastName?: string | null, createdAt: any, businessList: Array<{ __typename?: 'Business', id: string, name: string, nickname: string }>, businesses: Array<{ __typename?: 'Business', id: string, nickname: string, status: BusinessStatus, name: string, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, currency?: string | null, accounts: Array<{ __typename?: 'Account', id: string, name: string }> }> }>, beneficiaries: Array<{ __typename?: 'Beneficiary', id: string, beneficiaryName: string, accountNumber: string, currency?: string | null, accountType: BeneficiaryAccountType, bankName: string, swiftCode: string, bankAddress?: string | null, beneficiaryAddress?: string | null, beneficiaryCountry?: string | null, bankCountry?: string | null, remarks?: string | null, intermediaryBankName?: string | null, intermediaryBankSwift?: string | null, intermediaryBankAddress?: string | null, intermediaryBankRemarks?: string | null }>, personalDocuments: Array<{ __typename?: 'PersonalDocument', name?: string | null, id: string, url: string, type: PersonalDocumentTypeEnum }> }> };

export type FetchBusinessDetailsQueryVariables = Exact<{
  businessId: Scalars['ID'];
}>;


export type FetchBusinessDetailsQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, registrationNumber?: string | null, website?: string | null, status: BusinessStatus, contactNumber?: string | null, phoneContact?: string | null, primaryContactPersonPhone?: string | null, primaryContactPersonName?: string | null, primaryContactPersonEmail?: string | null, primaryContactPerson?: string | null, referralPartner?: string | null, address?: string | null, requestedCurrencies?: Array<string | null> | null, websiteBrand?: string | null, businessTypes?: BusinessTypeEnum | null, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, nickname?: string | null, balance: number, currency?: string | null, accounts: Array<{ __typename?: 'Account', id: string, name: string, accountNumber: string }>, accountsAggregate?: { __typename?: 'BusinessWalletAccountAccountsAggregationSelection', count: number } | null, payoutFee?: { __typename?: 'BusinessWalletPayoutFee', id: string, feeFlat: number, feePercentage: number, usesDefault: boolean, defaultPayoutFee: { __typename?: 'DefaultPayoutFee', feeFlat: number, feePercentage: number } } | null, rollingReserveFee?: { __typename?: 'BusinessWalletRollingReserveFee', id: string, percentage: number, releaseDays: number, usesDefault: boolean, defaultRollingReserveFee: { __typename?: 'DefaultRollingReserveFee', percentage: number, releaseDays: number } } | null, joiningFee?: { __typename?: 'BusinessWalletJoiningFee', fee: number, id: string, usesDefault: boolean, defaultJoiningFee: { __typename?: 'DefaultJoiningFee', fee: number } } | null, overDraftLimit?: { __typename?: 'BusinessWalletOverDraftLimit', id: string, overDraftLimit: number, usesDefault: boolean, defaultOverDraftLimit: { __typename?: 'DefaultOverDraftLimit', overDraftLimit: number } } | null, maintenanceFee?: { __typename?: 'BusinessWalletMaintenanceFee', id: string, checkType: MaintenanceFeeCheckType, fee: number, depositVolume: number, withdrawalVolume: number, totalVolume: number, usesDefault: boolean, defaultMaintenanceFee: { __typename?: 'DefaultMaintenanceFee', checkType: MaintenanceFeeCheckType, fee: number, depositVolume: number, withdrawalVolume: number, totalVolume: number } } | null, baseCommission?: { __typename?: 'BusinessWalletBaseCommission', id: string, b2bFee: number, c2bFee: number, usesDefault: boolean, defaultBaseCommission: { __typename?: 'DefaultBaseCommission', b2bFee: number, c2bFee: number } } | null, tierCommissions: Array<{ __typename?: 'BusinessWalletTierCommission', b2bFee: number, c2bFee: number, depositVolume: number, usesDefault: boolean, defaultTierCommission?: { __typename?: 'DefaultTierCommission', b2bFee: number, c2bFee: number, depositVolume: number } | null }> }>, businessCurrencyConversionMarkups: Array<{ __typename?: 'BusinessCurrencyConversionMarkup', id: string, forConversion: string, adjustedRate: number, autoAdjustMarkupToBaseRate: boolean, usesDefault: boolean, fee: number, markup: number, isFlatFee: boolean, baseCurrencyConversionRate: { __typename?: 'BaseCurrencyConversionRate', baseRate: number, autoUpdateBaseRate: boolean }, defaultCurrencyConversionMarkup: { __typename?: 'DefaultCurrencyConversionMarkup', adjustedRate: number, autoAdjustMarkupToBaseRate: boolean, fee: number, forConversion: string, isFlatFee: boolean, markup: number } }>, businessCurrencyConversionFees: { __typename?: 'BusinessCurrencyConversionFees', id: string, markupPercentage: number, percentageFee: number, usesDefault: boolean, defaultCurrencyConversionFees: { __typename?: 'DefaultCurrencyConversionFees', id: string, markupPercentage: number, percentageFee: number } } }> };

export type AddNewCuurenciesMutationVariables = Exact<{
  id: Scalars['uuid'];
  currency: Array<Scalars['String']> | Scalars['String'];
}>;


export type AddNewCuurenciesMutation = { __typename?: 'mutation_root', addBusinessWallet?: { __typename?: 'BasicResponse', message?: string | null, status: string } | null };

export type AccountSearchByNameQueryVariables = Exact<{
  name?: InputMaybe<Scalars['String']>;
  currency?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;
}>;


export type AccountSearchByNameQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'Account', id: string, name: string, accountNumber: string, nickname: string, currency: string, bank: { __typename?: 'Bank', id: string, name: string } }> };

export type LinkBeneficiaryToWalletMutationVariables = Exact<{
  walletId: Scalars['ID'];
  accountId: Scalars['ID'];
}>;


export type LinkBeneficiaryToWalletMutation = { __typename?: 'mutation_root', updateBusinessWallets: { __typename?: 'UpdateBusinessWalletsMutationResponse', info: { __typename?: 'UpdateInfo', relationshipsCreated: number, nodesCreated: number }, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, accounts: Array<{ __typename?: 'Account', id: string }> }> } };

export type AddAccountAndLinkMutationVariables = Exact<{
  businessWalletId: Scalars['ID'];
  bankId: Scalars['ID'];
  accountNumber: Scalars['String'];
  bankCharges: Scalars['Float'];
  name: Scalars['String'];
  nickname: Scalars['String'];
  currencyCode: Scalars['String'];
}>;


export type AddAccountAndLinkMutation = { __typename?: 'mutation_root', updateBusinessWallets: { __typename?: 'UpdateBusinessWalletsMutationResponse', businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, accounts: Array<{ __typename?: 'Account', id: string, bank: { __typename?: 'Bank', id: string } }> }> } };

export type SearchBankQueryVariables = Exact<{
  name: Scalars['String'];
}>;


export type SearchBankQuery = { __typename?: 'query_root', banks: Array<{ __typename?: 'Bank', id: string, name: string, swiftCode: string }> };

export type Verification_StatusMutationVariables = Exact<{
  id?: InputMaybe<Scalars['ID']>;
  status?: InputMaybe<BusinessStatus>;
}>;


export type Verification_StatusMutation = { __typename?: 'mutation_root', updateBusinesses: { __typename?: 'UpdateBusinessesMutationResponse', businesses: Array<{ __typename?: 'Business', id: string }> } };

export type AddNewMerchantMutationVariables = Exact<{
  merchantDetail: MerchantDetail;
  businessDetail: BusinessDetail;
  accountList?: InputMaybe<Array<Scalars['uuid']> | Scalars['uuid']>;
}>;


export type AddNewMerchantMutation = { __typename?: 'mutation_root', signupMerchant?: { __typename?: 'SignupMerchantOutput', message?: string | null, status: string, data?: { __typename?: 'SignupMerchantResponseData', businessId?: any | null, merchantId?: any | null } | null } | null };

export type DeleteMerchantKycDocumentsMutationVariables = Exact<{
  id?: InputMaybe<Scalars['ID']>;
  update?: InputMaybe<PersonalDocumentUpdateInput>;
}>;


export type DeleteMerchantKycDocumentsMutation = { __typename?: 'mutation_root', updatePersonalDocuments: { __typename?: 'UpdatePersonalDocumentsMutationResponse', personalDocuments: Array<{ __typename?: 'PersonalDocument', id: string }> } };

export type BusinessAddressQueryVariables = Exact<{
  businessId: Scalars['ID'];
}>;


export type BusinessAddressQuery = { __typename?: 'query_root', businessDocuments: Array<{ __typename?: 'BusinessDocument', id: string, url: string, name?: string | null }> };

export type GetBusinessDefaultCommissionsAndFeesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetBusinessDefaultCommissionsAndFeesQuery = { __typename?: 'query_root', defaultMaintenanceFees: Array<{ __typename?: 'DefaultMaintenanceFee', checkType: MaintenanceFeeCheckType, currency: string, depositVolume: number, fee: number, totalVolume: number, withdrawalVolume: number, id: string }>, defaultOverDraftLimits: Array<{ __typename?: 'DefaultOverDraftLimit', id: string, overDraftLimit: number, currency: string }>, defaultJoiningFees: Array<{ __typename?: 'DefaultJoiningFee', fee: number, id: string, currency: string }>, defaultRollingReserveFees: Array<{ __typename?: 'DefaultRollingReserveFee', percentage: number, releaseDays: number, id: string, currency?: string | null }>, defaultPayoutFees: Array<{ __typename?: 'DefaultPayoutFee', feeFlat: number, feePercentage: number, currency: string, id: string }> };

export type UpdatePayoutFeeByIdMutationVariables = Exact<{
  where?: InputMaybe<BusinessWalletPayoutFeeWhere>;
  update?: InputMaybe<BusinessWalletPayoutFeeUpdateInput>;
}>;


export type UpdatePayoutFeeByIdMutation = { __typename?: 'mutation_root', updateBusinessWalletPayoutFees: { __typename?: 'UpdateBusinessWalletPayoutFeesMutationResponse', businessWalletPayoutFees: Array<{ __typename?: 'BusinessWalletPayoutFee', id: string }> } };

export type UpdateRollingReserveFeeByIdMutationVariables = Exact<{
  where?: InputMaybe<BusinessWalletRollingReserveFeeWhere>;
  update?: InputMaybe<BusinessWalletRollingReserveFeeUpdateInput>;
}>;


export type UpdateRollingReserveFeeByIdMutation = { __typename?: 'mutation_root', updateBusinessWalletRollingReserveFees: { __typename?: 'UpdateBusinessWalletRollingReserveFeesMutationResponse', businessWalletRollingReserveFees: Array<{ __typename?: 'BusinessWalletRollingReserveFee', id: string }> } };

export type UpdateJoiningFeeByIdMutationVariables = Exact<{
  where?: InputMaybe<BusinessWalletJoiningFeeWhere>;
  update?: InputMaybe<BusinessWalletJoiningFeeUpdateInput>;
}>;


export type UpdateJoiningFeeByIdMutation = { __typename?: 'mutation_root', updateBusinessWalletJoiningFees: { __typename?: 'UpdateBusinessWalletJoiningFeesMutationResponse', businessWalletJoiningFees: Array<{ __typename?: 'BusinessWalletJoiningFee', id: string }> } };

export type UpdateOverDraftLimitByIdMutationVariables = Exact<{
  where?: InputMaybe<BusinessWalletOverDraftLimitWhere>;
  update?: InputMaybe<BusinessWalletOverDraftLimitUpdateInput>;
}>;


export type UpdateOverDraftLimitByIdMutation = { __typename?: 'mutation_root', updateBusinessWalletOverDraftLimits: { __typename?: 'UpdateBusinessWalletOverDraftLimitsMutationResponse', businessWalletOverDraftLimits: Array<{ __typename?: 'BusinessWalletOverDraftLimit', id: string }> } };

export type UpdateMaintenanceFeeByIdMutationVariables = Exact<{
  where?: InputMaybe<BusinessWalletMaintenanceFeeWhere>;
  update?: InputMaybe<BusinessWalletMaintenanceFeeUpdateInput>;
}>;


export type UpdateMaintenanceFeeByIdMutation = { __typename?: 'mutation_root', updateBusinessWalletMaintenanceFees: { __typename?: 'UpdateBusinessWalletMaintenanceFeesMutationResponse', businessWalletMaintenanceFees: Array<{ __typename?: 'BusinessWalletMaintenanceFee', id: string }> } };

export type UpdateBaseCommissionByIdMutationVariables = Exact<{
  where?: InputMaybe<BusinessWalletBaseCommissionWhere>;
  update?: InputMaybe<BusinessWalletBaseCommissionUpdateInput>;
}>;


export type UpdateBaseCommissionByIdMutation = { __typename?: 'mutation_root', updateBusinessWalletBaseCommissions: { __typename?: 'UpdateBusinessWalletBaseCommissionsMutationResponse', businessWalletBaseCommissions: Array<{ __typename?: 'BusinessWalletBaseCommission', id: string }> } };

export type FetchBusinessLedgerTransactionsQueryVariables = Exact<{
  where?: InputMaybe<Ledgers_Bool_Exp>;
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
  businessId?: InputMaybe<Scalars['uuid']>;
  walletId?: InputMaybe<Scalars['ID']>;
  whereTotalDeposit: Ledgers_Bool_Exp;
  whereTotalPayout: Ledgers_Bool_Exp;
  whereTotalSettlement: Ledgers_Bool_Exp;
  whereTotalCommission: Ledgers_Bool_Exp;
  whereTotalAdjustmentsDebit: Ledgers_Bool_Exp;
  whereTotalAdjustmentsCredit: Ledgers_Bool_Exp;
  whereUnReleasedRR: RollingReserves_Bool_Exp;
  order_by?: InputMaybe<Array<Ledgers_Order_By> | Ledgers_Order_By>;
}>;


export type FetchBusinessLedgerTransactionsQuery = { __typename?: 'query_root', ledgers: Array<{ __typename?: 'ledgers', id: any, internalId: any, amount: any, ledgerType: LedgerTypes_Enum, fromLine1?: string | null, fromLine2?: string | null, toLine1?: string | null, toLine2?: string | null, currency?: string | null, transactionType: TransactionTypes_Enum, transactionSubType?: string | null, createdAt: any, description?: string | null, creditAmount?: number | null, debitAmount?: number | null, balance?: number | null, finalCreditAmount?: number | null, finalDebitAmount?: number | null, finalBalance?: number | null, childLedgers: Array<{ __typename?: 'ledgers', id: any, amount: any }> }>, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, balance: number, withdrawableRRBalance: number, currency?: string | null }>, ledgers_aggregate: { __typename?: 'ledgers_aggregate', aggregate?: { __typename?: 'ledgers_aggregate_fields', count: number } | null }, totalDeposit: { __typename?: 'ledgers_aggregate', aggregate?: { __typename?: 'ledgers_aggregate_fields', sum?: { __typename?: 'ledgers_sum_fields', amount?: any | null } | null } | null }, totalPayout: { __typename?: 'ledgers_aggregate', aggregate?: { __typename?: 'ledgers_aggregate_fields', sum?: { __typename?: 'ledgers_sum_fields', amount?: any | null } | null } | null }, totalSettlement: { __typename?: 'ledgers_aggregate', aggregate?: { __typename?: 'ledgers_aggregate_fields', sum?: { __typename?: 'ledgers_sum_fields', amount?: any | null } | null } | null }, totalCommission: { __typename?: 'ledgers_aggregate', aggregate?: { __typename?: 'ledgers_aggregate_fields', sum?: { __typename?: 'ledgers_sum_fields', amount?: any | null } | null } | null }, totalAdjustmentsDebit: { __typename?: 'ledgers_aggregate', aggregate?: { __typename?: 'ledgers_aggregate_fields', sum?: { __typename?: 'ledgers_sum_fields', amount?: any | null } | null } | null }, totalAdjustmentsCredit: { __typename?: 'ledgers_aggregate', aggregate?: { __typename?: 'ledgers_aggregate_fields', sum?: { __typename?: 'ledgers_sum_fields', amount?: any | null } | null } | null }, unReleasedRRaggregate: { __typename?: 'rollingReserves_aggregate', aggregate?: { __typename?: 'rollingReserves_aggregate_fields', sum?: { __typename?: 'rollingReserves_sum_fields', amount?: any | null } | null } | null } };

export type QueryRollingReservesQueryVariables = Exact<{
  where?: InputMaybe<RollingReserves_Bool_Exp>;
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
  order_by?: InputMaybe<Array<RollingReserves_Order_By> | RollingReserves_Order_By>;
}>;


export type QueryRollingReservesQuery = { __typename?: 'query_root', rollingReserves: Array<{ __typename?: 'rollingReserves', id: any, amount: any, depositId: any, status: RollingReserveStatuses_Enum, releaseDate: any, daysUntilRelease: number, initialReleaseDays: number, createdAt: any, deposit: { __typename?: 'deposits', toAccount: Array<{ __typename?: 'Account', currency: string }> } }>, rollingReserves_aggregate: { __typename?: 'rollingReserves_aggregate', aggregate?: { __typename?: 'rollingReserves_aggregate_fields', count: number } | null } };

export type ReleaseRollingReservesMutationVariables = Exact<{
  data: Array<ReleaseRollingReserveInput> | ReleaseRollingReserveInput;
}>;


export type ReleaseRollingReservesMutation = { __typename?: 'mutation_root', releaseRollingReserve: { __typename?: 'BasicResponse', status: string, message?: string | null } };

export type UpdateCurrencyConversionByIdMutationVariables = Exact<{
  where?: InputMaybe<BusinessCurrencyConversionMarkupWhere>;
  update?: InputMaybe<BusinessCurrencyConversionMarkupUpdateInput>;
}>;


export type UpdateCurrencyConversionByIdMutation = { __typename?: 'mutation_root', updateBusinessCurrencyConversionMarkups: { __typename?: 'UpdateBusinessCurrencyConversionMarkupsMutationResponse', businessCurrencyConversionMarkups: Array<{ __typename?: 'BusinessCurrencyConversionMarkup', id: string }> } };

export type UpdatePersonalInfoMutationVariables = Exact<{
  email: Scalars['String'];
  firstName: Scalars['String'];
  lastName: Scalars['String'];
  id: Scalars['ID'];
}>;


export type UpdatePersonalInfoMutation = { __typename?: 'mutation_root', updateMerchants: { __typename?: 'UpdateMerchantsMutationResponse', merchants: Array<{ __typename?: 'Merchant', id: string }> } };

export type UpdateBusinessMutationVariables = Exact<{
  where?: InputMaybe<BusinessWhere>;
  update?: InputMaybe<BusinessUpdateInput>;
}>;


export type UpdateBusinessMutation = { __typename?: 'mutation_root', updateBusinesses: { __typename?: 'UpdateBusinessesMutationResponse', businesses: Array<{ __typename?: 'Business', id: string }> } };

export type UpdateBusinessCurrencyConversionFeesMutationVariables = Exact<{
  id: Scalars['ID'];
  markupPercentage: Scalars['Float'];
  percentageFee: Scalars['Float'];
  usesDefault: Scalars['Boolean'];
}>;


export type UpdateBusinessCurrencyConversionFeesMutation = { __typename?: 'mutation_root', updateBusinessCurrencyConversionFees: { __typename?: 'UpdateBusinessCurrencyConversionFeesMutationResponse', businessCurrencyConversionFees: Array<{ __typename?: 'BusinessCurrencyConversionFees', usesDefault: boolean, percentageFee: number, markupPercentage: number }> } };

export type GetSuperAdminByIdQueryVariables = Exact<{
  id: Scalars['ID'];
}>;


export type GetSuperAdminByIdQuery = { __typename?: 'query_root', superAdmins: Array<{ __typename?: 'SuperAdmin', id: string, email: string, name: string }> };

export type MerchantInfoQueryVariables = Exact<{
  id: Scalars['ID'];
}>;


export type MerchantInfoQuery = { __typename?: 'query_root', merchants: Array<{ __typename?: 'Merchant', id: string, name: string, email: string, apiKey?: string | null, firstName: string, lastName?: string | null, updatedAt: any, website?: string | null, country?: string | null, beneficiaries: Array<{ __typename?: 'Beneficiary', bankName: string, beneficiaryName: string, swiftCode: string, accountType: BeneficiaryAccountType, id: string, accountNumber: string, currency?: string | null }>, personalDocuments: Array<{ __typename?: 'PersonalDocument', id: string, name?: string | null, url: string, type: PersonalDocumentTypeEnum }> }> };

export type UpdateSuperAdminByIdMutationVariables = Exact<{
  id: Scalars['ID'];
  update: SuperAdminUpdateInput;
}>;


export type UpdateSuperAdminByIdMutation = { __typename?: 'mutation_root', updateSuperAdmins: { __typename?: 'UpdateSuperAdminsMutationResponse', superAdmins: Array<{ __typename?: 'SuperAdmin', id: string }> } };

export type UpdateMerchantInfoMutationVariables = Exact<{
  id: Scalars['ID'];
  update: MerchantUpdateInput;
}>;


export type UpdateMerchantInfoMutation = { __typename?: 'mutation_root', updateMerchants: { __typename?: 'UpdateMerchantsMutationResponse', merchants: Array<{ __typename?: 'Merchant', id: string }> } };

export type CurrentAuthPermissionsQueryVariables = Exact<{
  token: Scalars['String'];
}>;


export type CurrentAuthPermissionsQuery = { __typename?: 'query_root', login?: { __typename?: 'LoginOutput', message?: string | null, status: string, data?: { __typename?: 'LoginOutputData', name: string, email: string, userId: any, userType: string, dashboardView: boolean, depositView: boolean, depositCreate: boolean, withdrawalView: boolean, withdrawalCreate: boolean, taskView: boolean, taskCreate: boolean, customerView: boolean, customerCreate: boolean, userView: boolean, userCreate: boolean, mailboxView: boolean, mailboxCreate: boolean, merchantView: boolean, merchantCreate: boolean, accountView: boolean, accountCreate: boolean, activityLogView: boolean, activityLogCreate: boolean, settingsView: boolean, settingsCreate: boolean } | null } | null };

export type InsertWithdrawalAndLedgerMutationVariables = Exact<{
  data: Array<CreateWithdrawalInput> | CreateWithdrawalInput;
}>;


export type InsertWithdrawalAndLedgerMutation = { __typename?: 'mutation_root', createWithdrawals?: { __typename?: 'CreateWithdrawalOutput', message: string, data?: { __typename?: 'CreateWithdrawalOutputData', uuids?: Array<any | null> | null } | null } | null };

export type GetAllDefaultCommissionsAndFeesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllDefaultCommissionsAndFeesQuery = { __typename?: 'query_root', defaultMaintenanceFees: Array<{ __typename?: 'DefaultMaintenanceFee', checkType: MaintenanceFeeCheckType, currency: string, depositVolume: number, fee: number, totalVolume: number, withdrawalVolume: number, id: string }>, defaultOverDraftLimits: Array<{ __typename?: 'DefaultOverDraftLimit', id: string, overDraftLimit: number, currency: string }>, defaultJoiningFees: Array<{ __typename?: 'DefaultJoiningFee', fee: number, id: string, currency: string }>, defaultRollingReserveFees: Array<{ __typename?: 'DefaultRollingReserveFee', percentage: number, releaseDays: number, id: string, currency?: string | null }>, defaultPayoutFees: Array<{ __typename?: 'DefaultPayoutFee', feeFlat: number, feePercentage: number, currency: string, id: string }>, defaultBaseCommissions: Array<{ __typename?: 'DefaultBaseCommission', b2bFee: number, c2bFee: number, id: string, currency: string }>, defaultTierCommissions: Array<{ __typename?: 'DefaultTierCommission', b2bFee: number, c2bFee: number, id: string, currency: string, depositVolume: number }> };

export type UpdateDefaultPayoutFeeMutationVariables = Exact<{
  where?: InputMaybe<DefaultPayoutFeeWhere>;
  update?: InputMaybe<DefaultPayoutFeeUpdateInput>;
}>;


export type UpdateDefaultPayoutFeeMutation = { __typename?: 'mutation_root', updateDefaultPayoutFees: { __typename?: 'UpdateDefaultPayoutFeesMutationResponse', defaultPayoutFees: Array<{ __typename?: 'DefaultPayoutFee', id: string }> } };

export type UpdateDefaultRollingReserveFeeMutationVariables = Exact<{
  where?: InputMaybe<DefaultRollingReserveFeeWhere>;
  update?: InputMaybe<DefaultRollingReserveFeeUpdateInput>;
}>;


export type UpdateDefaultRollingReserveFeeMutation = { __typename?: 'mutation_root', updateDefaultRollingReserveFees: { __typename?: 'UpdateDefaultRollingReserveFeesMutationResponse', defaultRollingReserveFees: Array<{ __typename?: 'DefaultRollingReserveFee', id: string }> } };

export type UpdateJoiningFeesMutationVariables = Exact<{
  where?: InputMaybe<DefaultJoiningFeeWhere>;
  update?: InputMaybe<DefaultJoiningFeeUpdateInput>;
}>;


export type UpdateJoiningFeesMutation = { __typename?: 'mutation_root', updateDefaultJoiningFees: { __typename?: 'UpdateDefaultJoiningFeesMutationResponse', defaultJoiningFees: Array<{ __typename?: 'DefaultJoiningFee', id: string }> } };

export type UpdateDefaultOverdraftLimitsMutationVariables = Exact<{
  where?: InputMaybe<DefaultOverDraftLimitWhere>;
  update?: InputMaybe<DefaultOverDraftLimitUpdateInput>;
}>;


export type UpdateDefaultOverdraftLimitsMutation = { __typename?: 'mutation_root', updateDefaultOverDraftLimits: { __typename?: 'UpdateDefaultOverDraftLimitsMutationResponse', defaultOverDraftLimits: Array<{ __typename?: 'DefaultOverDraftLimit', id: string }> } };

export type UpdateDefaultMaintenanceFeeMutationVariables = Exact<{
  where?: InputMaybe<DefaultMaintenanceFeeWhere>;
  update?: InputMaybe<DefaultMaintenanceFeeUpdateInput>;
}>;


export type UpdateDefaultMaintenanceFeeMutation = { __typename?: 'mutation_root', updateDefaultMaintenanceFees: { __typename?: 'UpdateDefaultMaintenanceFeesMutationResponse', defaultMaintenanceFees: Array<{ __typename?: 'DefaultMaintenanceFee', id: string }> } };

export type UpdateDefaultBaseCommissionMutationVariables = Exact<{
  where?: InputMaybe<DefaultBaseCommissionWhere>;
  update?: InputMaybe<DefaultBaseCommissionUpdateInput>;
}>;


export type UpdateDefaultBaseCommissionMutation = { __typename?: 'mutation_root', updateDefaultBaseCommissions: { __typename?: 'UpdateDefaultBaseCommissionsMutationResponse', defaultBaseCommissions: Array<{ __typename?: 'DefaultBaseCommission', id: string }> } };

export type CreateDefaultTierCommissionMutationVariables = Exact<{
  input: Array<DefaultTierCommissionCreateInput> | DefaultTierCommissionCreateInput;
}>;


export type CreateDefaultTierCommissionMutation = { __typename?: 'mutation_root', createDefaultTierCommissions: { __typename?: 'CreateDefaultTierCommissionsMutationResponse', defaultTierCommissions: Array<{ __typename?: 'DefaultTierCommission', id: string }> } };

export type UpdateDefaultTierCommissionByIdMutationVariables = Exact<{
  where?: InputMaybe<DefaultTierCommissionWhere>;
  update?: InputMaybe<DefaultTierCommissionUpdateInput>;
}>;


export type UpdateDefaultTierCommissionByIdMutation = { __typename?: 'mutation_root', updateDefaultTierCommissions: { __typename?: 'UpdateDefaultTierCommissionsMutationResponse', defaultTierCommissions: Array<{ __typename?: 'DefaultTierCommission', id: string }> } };

export type DeleteDefaultTierCommissionByIdMutationVariables = Exact<{
  id?: InputMaybe<Scalars['ID']>;
}>;


export type DeleteDefaultTierCommissionByIdMutation = { __typename?: 'mutation_root', deleteDefaultTierCommissions: { __typename?: 'DeleteInfo', nodesDeleted: number } };

export type DefaultCurrencyConversionFeesQueryVariables = Exact<{ [key: string]: never; }>;


export type DefaultCurrencyConversionFeesQuery = { __typename?: 'query_root', defaultCurrencyConversionFees: Array<{ __typename?: 'DefaultCurrencyConversionFees', id: string, percentageFee: number, markupPercentage: number }> };

export type UpdateDefaultCurrencyConversionFeesMutationVariables = Exact<{
  id: Scalars['ID'];
  percentageFee: Scalars['Float'];
  markupPercentage: Scalars['Float'];
}>;


export type UpdateDefaultCurrencyConversionFeesMutation = { __typename?: 'mutation_root', updateDefaultCurrencyConversionFees: { __typename?: 'UpdateDefaultCurrencyConversionFeesMutationResponse', defaultCurrencyConversionFees: Array<{ __typename?: 'DefaultCurrencyConversionFees', percentageFee: number, markupPercentage: number }> } };

export type FetchDefaultCurrencyConversionQueryVariables = Exact<{
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
}>;


export type FetchDefaultCurrencyConversionQuery = { __typename?: 'query_root', defaultCurrencyConversionMarkups: Array<{ __typename?: 'DefaultCurrencyConversionMarkup', adjustedRate: number, autoAdjustMarkupToBaseRate: boolean, forConversion: string, fee: number, id: string, isFlatFee: boolean, markup: number, baseCurrencyConversionRate: { __typename?: 'BaseCurrencyConversionRate', baseRate: number } }> };

export type UpdateDefaultCurrencyConversionMutationVariables = Exact<{
  where?: InputMaybe<DefaultCurrencyConversionMarkupWhere>;
  update?: InputMaybe<DefaultCurrencyConversionMarkupUpdateInput>;
}>;


export type UpdateDefaultCurrencyConversionMutation = { __typename?: 'mutation_root', updateDefaultCurrencyConversionMarkups: { __typename?: 'UpdateDefaultCurrencyConversionMarkupsMutationResponse', defaultCurrencyConversionMarkups: Array<{ __typename?: 'DefaultCurrencyConversionMarkup', id: string }> } };

export type GetTasksQueryVariables = Exact<{
  offset?: Scalars['Int'];
  limit?: Scalars['Int'];
  order_by?: InputMaybe<Array<Tasks_Order_By> | Tasks_Order_By>;
  where?: InputMaybe<Tasks_Bool_Exp>;
}>;


export type GetTasksQuery = { __typename?: 'query_root', tasks: Array<{ __typename?: 'tasks', startDate: any, tags?: any | null, id: any, title: string, priority: TaskPriorities_Enum, endDate: any, status: TaskStatusTypes_Enum, description?: string | null, depositId?: any | null, withdrawalId?: any | null, withdrawal?: { __typename?: 'withdrawals', internalId: any, referenceId?: string | null, id: any, currency?: string | null, amount: any, createdAt: any, parentBusiness: Array<{ __typename?: 'Business', name: string }>, toBeneficiary: Array<{ __typename?: 'Beneficiary', beneficiaryName: string, accountNumber: string }> } | null, deposit?: { __typename?: 'deposits', id: any, internalId: any, referenceId?: string | null, currency?: string | null, amountReceived?: any | null, createdAt: any, parentBusiness: Array<{ __typename?: 'Business', name: string }>, fromCustomer: Array<{ __typename?: 'Customer', firstName: string, lastName?: string | null }> } | null, assignedToUser?: Array<{ __typename?: 'CreatedByUser', id: string, name: string, userType: UserType } | null> | null }>, tasks_aggregate: { __typename?: 'tasks_aggregate', aggregate?: { __typename?: 'tasks_aggregate_fields', count: number } | null } };

export type GetAdminsQueryVariables = Exact<{
  name?: InputMaybe<Scalars['String']>;
}>;


export type GetAdminsQuery = { __typename?: 'query_root', subAdmins: Array<{ __typename?: 'SubAdmin', id: string, email: string, name: string }>, superAdmins: Array<{ __typename?: 'SuperAdmin', id: string, email: string, name: string }> };

export type AddWithdrawalTaskMutationVariables = Exact<{
  objects: Array<Tasks_Insert_Input> | Tasks_Insert_Input;
  updates: Array<Withdrawals_Updates> | Withdrawals_Updates;
}>;


export type AddWithdrawalTaskMutation = { __typename?: 'mutation_root', insert_tasks?: { __typename?: 'tasks_mutation_response', returning: Array<{ __typename?: 'tasks', id: any, assignedToId: any }> } | null, update_withdrawals_many?: Array<{ __typename?: 'withdrawals_mutation_response', affected_rows: number } | null> | null };

export type UpdateEditTaskMutationVariables = Exact<{
  where: Tasks_Bool_Exp;
  _set?: InputMaybe<Tasks_Set_Input>;
}>;


export type UpdateEditTaskMutation = { __typename?: 'mutation_root', update_tasks?: { __typename?: 'tasks_mutation_response', affected_rows: number } | null };

export type UpdateWithdrawalsByIdMutationVariables = Exact<{
  updates: Array<Withdrawals_Updates> | Withdrawals_Updates;
}>;


export type UpdateWithdrawalsByIdMutation = { __typename?: 'mutation_root', update_withdrawals_many?: Array<{ __typename?: 'withdrawals_mutation_response', affected_rows: number } | null> | null };

export type AddWithdrawalTaskWithAccountMutationVariables = Exact<{
  objects: Array<Tasks_Insert_Input> | Tasks_Insert_Input;
  txId: Scalars['uuid'];
  fromAccountId?: InputMaybe<Scalars['uuid']>;
}>;


export type AddWithdrawalTaskWithAccountMutation = { __typename?: 'mutation_root', insert_tasks?: { __typename?: 'tasks_mutation_response', returning: Array<{ __typename?: 'tasks', id: any, assignedToId: any }> } | null, update_withdrawals_by_pk?: { __typename?: 'withdrawals', id: any } | null };

export type UnassignedDepositsQueryVariables = Exact<{
  limit: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type UnassignedDepositsQuery = { __typename?: 'query_root', deposits: Array<{ __typename?: 'deposits', id: any, internalId: any, createdAt: any, productPrice: any, amountReceived?: any | null, status: DepositStatuses_Enum, parentBusiness: Array<{ __typename?: 'Business', id: string, name: string }>, businessWallet: Array<{ __typename?: 'BusinessWallet', currency?: string | null }>, fromCustomer: Array<{ __typename?: 'Customer', id: string, firstName: string, lastName?: string | null }>, tasks: Array<{ __typename?: 'tasks', id: any }> }>, deposits_aggregate: { __typename?: 'deposits_aggregate', aggregate?: { __typename?: 'deposits_aggregate_fields', count: number } | null } };

export type UnassignedWithdrawalsQueryVariables = Exact<{
  limit: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type UnassignedWithdrawalsQuery = { __typename?: 'query_root', withdrawals: Array<{ __typename?: 'withdrawals', id: any, internalId: any, createdAt: any, currency?: string | null, amount: any, fromAccount: Array<{ __typename?: 'Account', nickname: string, accountNumber: string }>, toBeneficiary: Array<{ __typename?: 'Beneficiary', id: string, accountNumber: string, customer?: { __typename?: 'Customer', firstName: string, lastName?: string | null } | null, merchant?: { __typename?: 'Merchant', firstName: string, lastName?: string | null } | null }>, parentBusiness: Array<{ __typename?: 'Business', id: string, name: string }>, businessWallet: Array<{ __typename?: 'BusinessWallet', currency?: string | null }>, tasks: Array<{ __typename?: 'tasks', id: any }> }>, withdrawals_aggregate: { __typename?: 'withdrawals_aggregate', aggregate?: { __typename?: 'withdrawals_aggregate_fields', count: number } | null } };

export type TeamsQueryVariables = Exact<{ [key: string]: never; }>;


export type TeamsQuery = { __typename?: 'query_root', teams: Array<{ __typename?: 'Team', id: string, name: string, featurePermissionsConnection: { __typename?: 'TeamFeaturePermissionsConnection', edges: Array<{ __typename?: 'TeamFeaturePermissionsRelationship', create: boolean, update: boolean, delete: boolean, read: boolean, node: { __typename?: 'FeaturePermission', id: string, featureType: FeatureType, brand: { __typename?: 'Brand', id: string, name: string } } }> } }> };

export type CreateUserMutationVariables = Exact<{
  permissions: Array<BrandPermission> | BrandPermission;
  teams: Array<Scalars['uuid']> | Scalars['uuid'];
  email: Scalars['String'];
  name: Scalars['String'];
  password: Scalars['String'];
  isInternalUser: Scalars['Boolean'];
}>;


export type CreateUserMutation = { __typename?: 'mutation_root', createUser?: { __typename?: 'BasicResponse', status: string, message?: string | null, data?: { __typename?: 'BasicResponseData', uuid?: any | null } | null } | null };

export type AllBusinessQueryVariables = Exact<{ [key: string]: never; }>;


export type AllBusinessQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, brands: Array<{ __typename?: 'Brand', id: string, name: string }> }> };

export type CreateTeamMutationVariables = Exact<{
  accessibleBrandIds: Array<Scalars['uuid']> | Scalars['uuid'];
  name: Scalars['String'];
  parentBusinessId: Scalars['uuid'];
  permissions: Array<BrandPermission> | BrandPermission;
}>;


export type CreateTeamMutation = { __typename?: 'mutation_root', createTeam?: { __typename?: 'BasicResponse', message?: string | null, status: string, data?: { __typename?: 'BasicResponseData', uuid?: any | null } | null } | null };

export type AllBusinessWithTeamsQueryVariables = Exact<{ [key: string]: never; }>;


export type AllBusinessWithTeamsQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, teams: Array<{ __typename?: 'Team', id: string, name: string, featurePermissionsConnection: { __typename?: 'TeamFeaturePermissionsConnection', edges: Array<{ __typename?: 'TeamFeaturePermissionsRelationship', create: boolean, update: boolean, delete: boolean, read: boolean, node: { __typename?: 'FeaturePermission', id: string, featureType: FeatureType, brand: { __typename?: 'Brand', id: string, name: string } } }> } }> }> };

export type AllBusinessWithTeamsSuggestQueryVariables = Exact<{ [key: string]: never; }>;


export type AllBusinessWithTeamsSuggestQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, teams: Array<{ __typename?: 'Team', id: string, name: string, featurePermissionsConnection: { __typename?: 'TeamFeaturePermissionsConnection', edges: Array<{ __typename?: 'TeamFeaturePermissionsRelationship', create: boolean, update: boolean, delete: boolean, read: boolean, node: { __typename?: 'FeaturePermission', id: string, featureType: FeatureType, brand: { __typename?: 'Brand', id: string, name: string } } }> } }> }> };

export type TeamMembersQueryVariables = Exact<{
  limit: Scalars['Int'];
  offset: Scalars['Int'];
  sort: Array<TeamMemberSort> | TeamMemberSort;
}>;


export type TeamMembersQuery = { __typename?: 'query_root', teamsAggregate: { __typename?: 'TeamAggregateSelection', count: number }, teamMembers: Array<{ __typename?: 'TeamMember', id: string, name: string, email: string, userType: UserType, createdBy: { __typename?: 'Merchant', id: string, name: string, userType: UserType } | { __typename?: 'SubAdmin', id: string, name: string, userType: UserType } | { __typename?: 'SuperAdmin', id: string, name: string, userType: UserType } | { __typename?: 'TeamMember', id: string, name: string, userType: UserType }, teams: Array<{ __typename?: 'Team', id: string, name: string, parentBusiness?: { __typename?: 'Business', id: string, name: string } | null }>, featurePermissions: Array<{ __typename?: 'FeaturePermission', brand: { __typename?: 'Brand', id: string, name: string } }> }> };

export type FetchTeamMemberByIdQueryVariables = Exact<{
  memberId: Scalars['ID'];
}>;


export type FetchTeamMemberByIdQuery = { __typename?: 'query_root', teamMembers: Array<{ __typename?: 'TeamMember', id: string, name: string, email: string, userType: UserType, createdBy: { __typename?: 'Merchant', id: string, name: string, userType: UserType } | { __typename?: 'SubAdmin', id: string, name: string, userType: UserType } | { __typename?: 'SuperAdmin', id: string, name: string, userType: UserType } | { __typename?: 'TeamMember', id: string, name: string, userType: UserType }, teams: Array<{ __typename?: 'Team', id: string, name: string, parentBusiness?: { __typename?: 'Business', id: string, name: string } | null }>, featurePermissions: Array<{ __typename?: 'FeaturePermission', brand: { __typename?: 'Brand', id: string, name: string } }> }> };

export type QueryWithdrawalsQueryVariables = Exact<{
  where?: InputMaybe<Withdrawals_Bool_Exp>;
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
  order_by?: InputMaybe<Array<Withdrawals_Order_By> | Withdrawals_Order_By>;
}>;


export type QueryWithdrawalsQuery = { __typename?: 'query_root', withdrawals: Array<{ __typename?: 'withdrawals', id: any, referenceId?: string | null, internalId: any, bankCharges?: any | null, fromAccountId?: any | null, createdAt: any, tags?: any | null, amount: any, type: WithdrawalTypes_Enum, status: WithdrawalStatuses_Enum, datePaid?: any | null, invoiceUrl?: string | null, proofOfPaymentUrl?: string | null, remarks?: string | null, internalNotes?: string | null, payoutRequestFormUrl?: string | null, dateReturned?: any | null, cancelledDate?: any | null, amountReturned?: any | null, parentBusiness: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', id: string, name: string } }>, fromAccount: Array<{ __typename?: 'Account', id: string, name: string, accountNumber: string, bankCharges: number }>, toBeneficiary: Array<{ __typename?: 'Beneficiary', id: string, beneficiaryName: string, accountNumber: string, customer?: { __typename?: 'Customer', id: string, firstName: string, lastName?: string | null, username: string, kycStatus?: KycStatus | null, personalDocuments: Array<{ __typename?: 'PersonalDocument', id: string, name?: string | null, url: string, type: PersonalDocumentTypeEnum }> } | null, merchant?: { __typename?: 'Merchant', id: string, firstName: string, lastName?: string | null, kycStatus: KycStatus, personalDocuments: Array<{ __typename?: 'PersonalDocument', id: string, name?: string | null, url: string, type: PersonalDocumentTypeEnum }> } | null }>, businessWallet: Array<{ __typename?: 'BusinessWallet', id: string, currency?: string | null }>, createdByUser?: Array<{ __typename?: 'CreatedByUser', id: string, name: string, userType: UserType } | null> | null, tasks: Array<{ __typename?: 'tasks', id: any, assignedToUser?: Array<{ __typename?: 'CreatedByUser', id: string, name: string, userType: UserType } | null> | null }> }>, withdrawals_aggregate: { __typename?: 'withdrawals_aggregate', aggregate?: { __typename?: 'withdrawals_aggregate_fields', count: number } | null } };

export type UpdateWithdrawalDocsMutationVariables = Exact<{
  id: Scalars['uuid'];
  urlData: Withdrawals_Set_Input;
}>;


export type UpdateWithdrawalDocsMutation = { __typename?: 'mutation_root', update_withdrawals_by_pk?: { __typename?: 'withdrawals', id: any, invoiceUrl?: string | null, proofOfPaymentUrl?: string | null } | null };

export type UpdateWithdrawalByIdAndAssignAccountMutationVariables = Exact<{
  fromAccountId?: InputMaybe<Scalars['uuid']>;
  id: Scalars['uuid'];
}>;


export type UpdateWithdrawalByIdAndAssignAccountMutation = { __typename?: 'mutation_root', update_withdrawals_by_pk?: { __typename?: 'withdrawals', id: any } | null };

export type UpdateWithdrawalStatusMutationVariables = Exact<{
  amount?: InputMaybe<Scalars['numeric']>;
  amountReturned?: InputMaybe<Scalars['numeric']>;
  bankCharges?: InputMaybe<Scalars['numeric']>;
  cancelledDate?: InputMaybe<Scalars['timestamptz']>;
  dateReturned?: InputMaybe<Scalars['timestamptz']>;
  datePaid?: InputMaybe<Scalars['timestamptz']>;
  id: Scalars['uuid'];
  invoiceUrl?: InputMaybe<Scalars['String']>;
  proofOfPaymentUrl?: InputMaybe<Scalars['String']>;
  status: Scalars['String'];
}>;


export type UpdateWithdrawalStatusMutation = { __typename?: 'mutation_root', updateWithdrawalStatus?: { __typename?: 'UpdateWithdrawalStatusResponse', status: string, message?: string | null, data?: { __typename?: 'UpdateWithdrawalStatusResponseData', status: string } | null } | null };

export type UpdateRrSettlementStatusMutationVariables = Exact<{
  amount?: InputMaybe<Scalars['numeric']>;
  id: Scalars['uuid'];
  status: Scalars['String'];
}>;


export type UpdateRrSettlementStatusMutation = { __typename?: 'mutation_root', updateRRSettlementStatus?: { __typename?: 'UpdateRRSettlementStatusResponse', status: string, message?: string | null, data?: { __typename?: 'UpdateRRSettlementStatusResponseData', status?: string | null } | null } | null };

export type DuplicateWithdrawalMutationVariables = Exact<{
  amount?: InputMaybe<Scalars['numeric']>;
  businessWalletId?: InputMaybe<Scalars['uuid']>;
  internalNotes?: InputMaybe<Scalars['String']>;
  parentBusinessId: Scalars['uuid'];
  referenceId: Scalars['String'];
  remarks: Scalars['String'];
  tags?: InputMaybe<Scalars['jsonb']>;
  toBeneficiaryId?: InputMaybe<Scalars['uuid']>;
  type?: InputMaybe<WithdrawalTypes_Enum>;
}>;


export type DuplicateWithdrawalMutation = { __typename?: 'mutation_root', insert_withdrawals_one?: { __typename?: 'withdrawals', id: any } | null };

export type FetchBusinessByNameQueryVariables = Exact<{
  name?: InputMaybe<Scalars['String']>;
}>;


export type FetchBusinessByNameQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', id: string, name: string }, brands: Array<{ __typename?: 'Brand', id: string, name: string }>, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, balance: number, currency?: string | null, withdrawableRRBalance: number }> }> };

export type FetchBusinessSuggestQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchBusinessSuggestQuery = { __typename?: 'query_root', businesses: Array<{ __typename?: 'Business', id: string, name: string, nickname: string, merchant: { __typename?: 'Merchant', id: string, name: string }, brands: Array<{ __typename?: 'Brand', id: string, name: string }>, businessWallets: Array<{ __typename?: 'BusinessWallet', id: string, balance: number, currency?: string | null, withdrawableRRBalance: number }> }> };

export type FetchCustomerByBusinessQueryVariables = Exact<{
  businessId: Scalars['ID'];
  name: Scalars['String'];
}>;


export type FetchCustomerByBusinessQuery = { __typename?: 'query_root', customers: Array<{ __typename?: 'Customer', id: string, username: string, firstName: string, lastName?: string | null }> };

export type FetchCustomerSuggestQueryVariables = Exact<{
  businessId: Scalars['ID'];
}>;


export type FetchCustomerSuggestQuery = { __typename?: 'query_root', customers: Array<{ __typename?: 'Customer', id: string, username: string, firstName: string, lastName?: string | null }> };

export type CustomerBeneficiariesQueryVariables = Exact<{
  customerId: Scalars['ID'];
}>;


export type CustomerBeneficiariesQuery = { __typename?: 'query_root', beneficiaries: Array<{ __typename?: 'Beneficiary', id: string, beneficiaryName: string, accountNumber: string, currency?: string | null }> };

export type CustomerBeneficiariesSuggestQueryVariables = Exact<{
  customerId: Scalars['ID'];
}>;


export type CustomerBeneficiariesSuggestQuery = { __typename?: 'query_root', beneficiaries: Array<{ __typename?: 'Beneficiary', id: string, beneficiaryName: string, accountNumber: string, currency?: string | null }> };

export type MerchantBeneficiariesQueryVariables = Exact<{
  merchantId: Scalars['ID'];
}>;


export type MerchantBeneficiariesQuery = { __typename?: 'query_root', beneficiaries: Array<{ __typename?: 'Beneficiary', id: string, beneficiaryName: string, accountNumber: string, currency?: string | null }> };

export type MerchantBeneficiariesSuggestQueryVariables = Exact<{
  merchantId: Scalars['ID'];
}>;


export type MerchantBeneficiariesSuggestQuery = { __typename?: 'query_root', beneficiaries: Array<{ __typename?: 'Beneficiary', id: string, beneficiaryName: string, accountNumber: string, currency?: string | null }> };

export type GenerateReferenceIdQueryVariables = Exact<{
  parentBusinessId?: InputMaybe<Scalars['uuid']>;
  type: Scalars['String'];
  counts: Scalars['Int'];
}>;


export type GenerateReferenceIdQuery = { __typename?: 'query_root', generateReferenceIds: Array<{ __typename?: 'textResult', result?: string | null }> };

export type FetchAccountsQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchAccountsQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'Account', id: string, accountNumber: string, currency: string, name: string, nickname: string, bankCharges: number }> };

export type FetchAccountSuggestQueryVariables = Exact<{ [key: string]: never; }>;


export type FetchAccountSuggestQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'Account', id: string, accountNumber: string, currency: string, name: string, nickname: string, bankCharges: number }> };

export type AddWithdrawalMutationVariables = Exact<{
  objects: Array<Withdrawals_Insert_Input> | Withdrawals_Insert_Input;
}>;


export type AddWithdrawalMutation = { __typename?: 'mutation_root', insert_withdrawals?: { __typename?: 'withdrawals_mutation_response', affected_rows: number } | null };

export type GetRequestFormForWithdrawalQueryVariables = Exact<{
  withdrawalId: Scalars['uuid'];
}>;


export type GetRequestFormForWithdrawalQuery = { __typename?: 'query_root', withdrawals_by_pk?: { __typename?: 'withdrawals', type: WithdrawalTypes_Enum, internalId: any, referenceId?: string | null, toBeneficiaryId?: any | null, bankCharges?: any | null, currency?: string | null, amount: any, datePaid?: any | null, remarks?: string | null, invoiceUrl?: string | null, proofOfPaymentUrl?: string | null, parentBusiness: Array<{ __typename?: 'Business', id: string, nickname: string, merchant: { __typename?: 'Merchant', name: string } }>, toBeneficiary: Array<{ __typename?: 'Beneficiary', beneficiaryName: string, beneficiaryAddress?: string | null, bankName: string, bankAddress?: string | null, bankCountry?: string | null, swiftCode: string, accountNumber: string, currency?: string | null, intermediaryBankName?: string | null, intermediaryBankAddress?: string | null, intermediaryBankSwift?: string | null, intermediaryBankRemarks?: string | null, customer?: { __typename?: 'Customer', firstName: string, lastName?: string | null, username: string, country?: string | null, personalDocuments: Array<{ __typename?: 'PersonalDocument', type: PersonalDocumentTypeEnum, url: string }> } | null, merchant?: { __typename?: 'Merchant', firstName: string, lastName?: string | null, country?: string | null, personalDocuments: Array<{ __typename?: 'PersonalDocument', type: PersonalDocumentTypeEnum, url: string }> } | null }>, businessWallet: Array<{ __typename?: 'BusinessWallet', id: string, currency?: string | null }> } | null };

export type GetBeneficiaryPayoutHistoryQueryVariables = Exact<{
  withdrawalId: Scalars['uuid'];
  beneficiaryId: Scalars['uuid'];
}>;


export type GetBeneficiaryPayoutHistoryQuery = { __typename?: 'query_root', withdrawals: Array<{ __typename?: 'withdrawals', internalId: any, datePaid?: any | null, amount: any, businessWallet: Array<{ __typename?: 'BusinessWallet', currency?: string | null }>, fromAccount: Array<{ __typename?: 'Account', name: string }> }> };

export type SignUpMerchantMutationVariables = Exact<{
  merchantDetail: MerchantDetail;
  businessDetail: BusinessDetail;
}>;


export type SignUpMerchantMutation = { __typename?: 'mutation_root', signupMerchant?: { __typename?: 'SignupMerchantOutput', message?: string | null, status: string, data?: { __typename?: 'SignupMerchantResponseData', businessId?: any | null, merchantId?: any | null } | null } | null };

export type AddSolutionsNeededMutationVariables = Exact<{
  businessId: Scalars['ID'];
  disconnect?: InputMaybe<BusinessSolutionsNeededDisconnectFieldInput>;
  create: BusinessSolutionsNeededCreateFieldInput;
}>;


export type AddSolutionsNeededMutation = { __typename?: 'mutation_root', updateBusinesses: { __typename?: 'UpdateBusinessesMutationResponse', info: { __typename?: 'UpdateInfo', nodesCreated: number, nodesDeleted: number, relationshipsCreated: number, relationshipsDeleted: number }, businesses: Array<{ __typename?: 'Business', id: string, solutionsNeeded?: { __typename?: 'BusinessSolution', id: string, alternateMethod?: { __typename?: 'AlternateMethodSolution', id: string } | null, bankWire?: { __typename?: 'BankWireSolution', id: string } | null, creditCardProcessing?: { __typename?: 'CreditCartdProcessingSolution', id: string } | null, cryptoCurrency?: { __typename?: 'CryptoCurrencySolution', id: string } | null } | null }> } };

export type OwnerInformationMutationVariables = Exact<{
  input: Array<BusinessOwnerCreateInput> | BusinessOwnerCreateInput;
}>;


export type OwnerInformationMutation = { __typename?: 'mutation_root', createBusinessOwners: { __typename?: 'CreateBusinessOwnersMutationResponse', info: { __typename?: 'CreateInfo', nodesCreated: number } } };

export type UploadPersonalDocumentsMutationVariables = Exact<{
  business: Array<BusinessDocumentCreateInput> | BusinessDocumentCreateInput;
  personal: Array<PersonalDocumentCreateInput> | PersonalDocumentCreateInput;
}>;


export type UploadPersonalDocumentsMutation = { __typename?: 'mutation_root', createBusinessDocuments: { __typename?: 'CreateBusinessDocumentsMutationResponse', businessDocuments: Array<{ __typename?: 'BusinessDocument', id: string }> }, createPersonalDocuments: { __typename?: 'CreatePersonalDocumentsMutationResponse', personalDocuments: Array<{ __typename?: 'PersonalDocument', id: string }> } };

export type UploadDocumentsMutationVariables = Exact<{
  business: Array<BusinessDocumentCreateInput> | BusinessDocumentCreateInput;
}>;


export type UploadDocumentsMutation = { __typename?: 'mutation_root', createBusinessDocuments: { __typename?: 'CreateBusinessDocumentsMutationResponse', businessDocuments: Array<{ __typename?: 'BusinessDocument', id: string }> } };

export type AccountSearchQueryVariables = Exact<{
  name?: InputMaybe<Scalars['String']>;
}>;


export type AccountSearchQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'Account', id: string, name: string, accountNumber: string, nickname: string, currency: string, bank: { __typename?: 'Bank', id: string, name: string } }> };


export const FetchBankAccountDetails = gql`
    query FetchBankAccountDetails($limit: Int! = 10, $offset: Int! = 0, $order_by: [AccountSort!], $where: AccountWhere) {
  accounts(
    options: {sort: $order_by, limit: $limit, offset: $offset}
    where: $where
  ) {
    id
    name
    accountNumber
    bankCharges
    currency
    bank {
      id
      name
      swiftCode
    }
    nickname
  }
  accountsAggregate(where: $where) {
    count
  }
}
    `;
export const FetchBanksByName = gql`
    query fetchBanksByName($name: String!) {
  banks(where: {OR: [{name_MATCHES: $name}, {swiftCode_MATCHES: $name}]}) {
    id
    name
    swiftCode
    country
  }
}
    `;
export const FetchBanksSuggestions = gql`
    query fetchBanksSuggestions {
  banks(options: {limit: 6, sort: [{updatedAt: DESC}]}) {
    id
    name
    swiftCode
    country
  }
}
    `;
export const CreateAccounts = gql`
    mutation createAccounts($input: [AccountCreateInput!]!) {
  createAccounts(input: $input) {
    info {
      nodesCreated
      relationshipsCreated
    }
    accounts {
      id
      accountNumber
      nickname
      currency
    }
  }
}
    `;
export const SuggestCountries = gql`
    query SuggestCountries {
  countries(options: {limit: 8}) {
    name
    code
  }
}
    `;
export const AllCountries = gql`
    query AllCountries {
  countries {
    code
    name
  }
}
    `;
export const Currencies = gql`
    query currencies {
  currencies {
    code
    name
    symbol
    flagUrl
  }
}
    `;
export const CreateBanks = gql`
    mutation createBanks($address: String!, $country: String!, $name: String!, $swiftCode: String!) {
  createBanks(
    input: {address: $address, country: $country, name: $name, swiftCode: $swiftCode}
  ) {
    banks {
      id
      name
      swiftCode
    }
    info {
      nodesCreated
    }
  }
}
    `;
export const CreateIntermediaryAccounts = gql`
    mutation CreateIntermediaryAccounts($intBankinput: [IntermediaryAccountCreateInput!]!, $accountInput: [AccountCreateInput!]!) {
  createIntermediaryAccounts(input: $intBankinput) {
    info {
      nodesCreated
    }
    intermediaryAccounts {
      id
    }
  }
  createAccounts(input: $accountInput) {
    info {
      nodesCreated
    }
    accounts {
      id
    }
  }
}
    `;
export const AddIntermediaryAccount = gql`
    mutation AddIntermediaryAccount($input: [IntermediaryAccountCreateInput!]!) {
  createIntermediaryAccounts(input: $input) {
    info {
      nodesCreated
    }
  }
}
    `;
export const FEtchAccountDetails = gql`
    query FEtchAccountDetails($accountId: ID!) {
  accounts(where: {id: $accountId}) {
    id
    name
    accountNumber
    nickname
    bankCharges
    beneficiaryAddress
    currency
    bank {
      id
      name
      swiftCode
    }
  }
}
    `;
export const FetchBankLedgerTransactions = gql`
    query FetchBankLedgerTransactions($where: ledgers_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $accountId: ID, $order_by: [ledgers_order_by!]) {
  ledgers(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {
    id
    amount
    ledgerType
    fromLine1
    fromLine2
    toLine1
    toLine2
    currency
    transactionType
    childLedgers {
      id
      amount
    }
    createdAt
  }
  ledgers_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  accounts(where: {id: $accountId}) {
    bank {
      id
      name
      swiftCode
    }
    currency
    accountNumber
    balance
  }
}
    `;
export const FetchBankDetails = gql`
    query FetchBankDetails($bankId: ID!) {
  banks(where: {id: $bankId}) {
    id
    name
    swiftCode
    address
    intermediaryAccounts {
      id
      bankName
      swiftCode
      currency
    }
    accounts {
      id
      accountNumber
      name
      nickname
      bank {
        swiftCode
      }
      currency
      balance
    }
  }
}
    `;
export const EditAccountDetails = gql`
    mutation EditAccountDetails($id: ID!, $update: AccountUpdateInput) {
  updateAccounts(where: {id: $id}, update: $update) {
    accounts {
      id
    }
  }
}
    `;
export const EditBankDetails = gql`
    mutation EditBankDetails($id: ID!, $update: BankUpdateInput) {
  updateBanks(where: {id: $id}, update: $update) {
    banks {
      id
    }
  }
}
    `;
export const UpdateIntermediaryAccount = gql`
    mutation UpdateIntermediaryAccount($id: ID!, $update: IntermediaryAccountUpdateInput) {
  updateIntermediaryAccounts(where: {id: $id}, update: $update) {
    intermediaryAccounts {
      id
    }
  }
}
    `;
export const GetAllLogs = gql`
    query getAllLogs($limit: Int!, $offset: Int!, $order_by: [activityLogs_order_by!], $where: activityLogs_bool_exp) {
  activityLogs(limit: $limit, offset: $offset, order_by: $order_by, where: $where) {
    id
    featureType
    message
    actionBySuperAdmin {
      id
      name
    }
    actionBySubAdmin {
      name
      id
    }
    actionByMerchant {
      id
      firstName
    }
    deposit {
      id
    }
    ledger {
      id
    }
    withdrawal {
      id
    }
    task {
      id
    }
    taskId
    withdrawalId
    depositId
    createdAt
    updatedAt
  }
  activityLogs_aggregate(where: $where) {
    aggregate {
      count(columns: id)
    }
  }
}
    `;
export const FetchDashboardMerchants = gql`
    query FetchDashboardMerchants {
  merchants(options: {limit: 5}) {
    id
    firstName
    lastName
  }
}
    `;
export const FetchDashboardDeposits = gql`
    query FetchDashboardDeposits {
  deposits(
    where: {status: {_eq: NEW}}
    limit: 5
    order_by: {amountReceivedDate: desc}
  ) {
    id
    referenceId
    status
    createdAt
  }
}
    `;
export const FetchDashboardTasks = gql`
    query FetchDashboardTasks {
  tasks(limit: 5, order_by: {endDate: desc}, where: {status: {_neq: COMPLETED}}) {
    id
    description
    status
    endDate
  }
  assignedToMeTask: tasks_aggregate(where: {_and: [{status: {_eq: ASSIGNED}}]}) {
    aggregate {
      count
    }
  }
  assignedTask: tasks_aggregate(where: {status: {_eq: ASSIGNED}}) {
    aggregate {
      count
    }
  }
  completedTask: tasks_aggregate(where: {status: {_eq: COMPLETED}}) {
    aggregate {
      count
    }
  }
  pendingTask: tasks_aggregate(where: {status: {_eq: PENDING}}) {
    aggregate {
      count
    }
  }
}
    `;
export const FetchAllConversations = gql`
    subscription FetchAllConversations {
  conversations(order_by: {updatedAt: desc}, limit: 5) {
    id
    updatedAt
    businessId
    depositId
    withdrawalId
    messages(order_by: {updatedAt: desc}, limit: 1) {
      content
      type
    }
  }
}
    `;
export const FetchBusinessId = gql`
    query FetchBusinessId($businessId: ID!) {
  businesses(where: {id: $businessId}) {
    id
    name
    nickname
    merchant {
      id
    }
  }
}
    `;
export const RollingReserves = gql`
    query RollingReserves($code: String) {
  rollingReserves_aggregate(
    where: {_and: [{status: {_eq: UNRELEASED}}, {currency: {_eq: $code}}]}
  ) {
    aggregate {
      sum {
        amount
      }
    }
  }
}
    `;
export const DepositVolume = gql`
    query DepositVolume($aggregate_by: String, $fromdate: timestamptz, $todate: timestamptz, $tformat: String, $xformat: String, $fromDate: date, $toDate: date, $code: String) {
  depositVolumeGraphWithCurrency(
    args: {aggregate_by: $aggregate_by, fromdate: $fromdate, todate: $todate, tformat: $tformat, xformat: $xformat, currency_code: $code}
  ) {
    x
    y
    t
  }
  dailyDepositVolume_aggregate(
    where: {_and: [{currency: {_eq: $code}}, {date: {_gte: $fromDate}}, {date: {_lte: $toDate}}]}
  ) {
    aggregate {
      sum {
        b2b
        c2b
      }
    }
  }
}
    `;
export const WithdrawalVolume = gql`
    query WithdrawalVolume($aggregate_by: String, $fromdate: timestamptz, $todate: timestamptz, $tformat: String, $xformat: String, $fromDate: date, $toDate: date, $code: String) {
  withdrawalVolumeGraphWithCurrency(
    args: {aggregate_by: $aggregate_by, fromdate: $fromdate, todate: $todate, tformat: $tformat, xformat: $xformat, currency_code: $code}
  ) {
    x
    y
    t
  }
  dailyWithdrawalVolume_aggregate(
    where: {_and: [{currency: {_eq: $code}}, {date: {_gte: $fromDate}}, {date: {_lte: $toDate}}]}
  ) {
    aggregate {
      sum {
        payout
        settlement
      }
    }
  }
}
    `;
export const CommissionVolume = gql`
    query CommissionVolume($aggregate_by: String, $fromdate: timestamptz, $todate: timestamptz, $tformat: String, $xformat: String, $fromDate: date, $toDate: date, $code: String) {
  commissionVolumeGraph(
    args: {aggregate_by: $aggregate_by, fromdate: $fromdate, todate: $todate, tformat: $tformat, xformat: $xformat, currency_code: $code}
  ) {
    x
    y
    t
  }
  dailyCommissionVolume_aggregate(
    where: {_and: [{currency: {_eq: $code}}, {date: {_gte: $fromDate}}, {date: {_lte: $toDate}}]}
  ) {
    aggregate {
      sum {
        c2b
        b2b
        payout
      }
    }
  }
}
    `;
export const FetchCustomers = gql`
    query FetchCustomers($offset: Int = 0, $limit: Int = 10, $order_by: [CustomerSort!], $where: CustomerWhere) {
  customers(
    options: {sort: $order_by, offset: $offset, limit: $limit}
    where: $where
  ) {
    id
    firstName
    lastName
    username
    kycStatus
    parentBrand {
      business {
        name
      }
    }
    beneficiaries {
      id
      beneficiaryName
    }
  }
  customersAggregate(where: $where) {
    count
  }
}
    `;
export const GetCustomerDetails = gql`
    query GetCustomerDetails($id: ID!) {
  customers(where: {id: $id}) {
    id
    firstName
    lastName
    username
    phone
    email
    dateOfBirth
    idNumber
    address
    kycStatus
    createdAt
    country
    parentBrand {
      business {
        name
      }
    }
    beneficiaries {
      id
      beneficiaryName
      accountNumber
      currency
      accountType
      bankName
      swiftCode
      bankAddress
      beneficiaryAddress
      beneficiaryCountry
      bankCountry
      remarks
      intermediaryBankName
      intermediaryBankSwift
      intermediaryBankAddress
      intermediaryBankRemarks
    }
    personalDocuments(where: {isDeleted: false}) {
      id
      name
      url
      type
    }
  }
}
    `;
export const FetchAllBusiness = gql`
    query FetchAllBusiness($name: String) {
  businesses(
    options: {limit: 5}
    where: {AND: [{name_MATCHES: $name}, {status: VERIFIED}]}
  ) {
    id
    name
    nickname
    businessWallets {
      id
      balance
      currency
    }
  }
}
    `;
export const UpdateCustomerKycStatus = gql`
    mutation updateCustomerKycStatus($id: ID!, $status: KycStatus!) {
  updateCustomers(where: {id: $id}, update: {kycStatus: $status}) {
    customers {
      kycStatus
    }
  }
}
    `;
export const DeleteCustomerKycDocuments = gql`
    mutation DeleteCustomerKycDocuments($id: ID, $update: PersonalDocumentUpdateInput = {isDeleted: false}) {
  updatePersonalDocuments(update: $update, where: {id: $id}) {
    personalDocuments {
      id
    }
  }
}
    `;
export const AddCustomerBeneficiary = gql`
    mutation AddCustomerBeneficiary($input: [BeneficiaryCreateInput!]!) {
  createBeneficiaries(input: $input) {
    beneficiaries {
      id
    }
  }
}
    `;
export const UpdateBeneficiaryById = gql`
    mutation updateBeneficiaryById($where: BeneficiaryWhere, $update: BeneficiaryUpdateInput) {
  updateBeneficiaries(where: $where, update: $update) {
    beneficiaries {
      id
    }
  }
}
    `;
export const UpdateCustomerById = gql`
    mutation updateCustomerById($where: CustomerWhere = {id: ""}, $update: CustomerUpdateInput = {}) {
  updateCustomers(where: $where, update: $update) {
    customers {
      id
    }
  }
}
    `;
export const CheckCustomerUsernameExists = gql`
    query CheckCustomerUsernameExists($username: String!) {
  customersAggregate(where: {username: $username}) {
    count
  }
}
    `;
export const QueryDeposits = gql`
    query QueryDeposits($where: deposits_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $order_by: [deposits_order_by!]) {
  deposits(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {
    id
    internalId
    tags
    referenceId
    amountReceived
    amountReceivedDate
    refundedDate
    refundedAmount
    cancelledDate
    createdAt
    status
    type
    productPrice
    productName
    invoiceUrl
    invoiceDate
    proofOfPaymentUrl
    signedInvoiceUrl
    toAccountId
    remarks
    tasks {
      id
      assignedToUser {
        id
        name
        userType
      }
    }
    fromCustomer {
      id
      firstName
      lastName
      kycStatus
      username
      personalDocuments {
        id
        name
        url
        type
      }
    }
    businessWallet {
      id
      currency
    }
    parentBusiness {
      id
      name
      nickname
      merchant {
        id
        name
      }
    }
    createdByMerchant {
      name
      userType
    }
    createdBySubAdmin {
      name
      userType
    }
    createdBySuperAdmin {
      name
      userType
    }
    createdByUser {
      id
      name
      userType
    }
    tasks_aggregate {
      aggregate {
        count
      }
    }
    toAccount {
      nickname
    }
  }
  deposits_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;
export const FetchBusinesses = gql`
    query FetchBusinesses($name: String) {
  businesses(
    where: {OR: [{AND: [{name_MATCHES: $name}, {status: VERIFIED}]}, {merchant: {firstName_MATCHES: $name}}, {merchant: {lastName_MATCHES: $name}}]}
  ) {
    id
    name
    nickname
    merchant {
      name
    }
    brands {
      id
      name
    }
    businessWallets {
      id
      balance
      currency
    }
  }
}
    `;
export const FetchAdmins = gql`
    query FetchAdmins {
  subAdmins {
    id
    name
  }
  superAdmins {
    id
    name
  }
}
    `;
export const UpdateTasks = gql`
    mutation updateTasks($taskId: uuid!, $assigneeId: uuid!) {
  update_tasks_by_pk(pk_columns: {id: $taskId}, _set: {assignedToId: $assigneeId}) {
    id
    assignedToId
  }
}
    `;
export const UpdateWithdrawalTask = gql`
    mutation updateWithdrawalTask($taskId: uuid!, $assigneeId: uuid!, $fromAccountId: uuid, $txId: uuid!) {
  update_tasks_by_pk(pk_columns: {id: $taskId}, _set: {assignedToId: $assigneeId}) {
    id
    assignedToId
  }
  update_withdrawals_by_pk(
    pk_columns: {id: $txId}
    _set: {fromAccountId: $fromAccountId}
  ) {
    id
  }
}
    `;
export const UpdateDepositDocs = gql`
    mutation updateDepositDocs($id: uuid!, $urlData: deposits_set_input!) {
  update_deposits_by_pk(pk_columns: {id: $id}, _set: $urlData) {
    id
    signedInvoiceUrl
    proofOfPaymentUrl
  }
}
    `;
export const UpdateDepositStatus = gql`
    mutation updateDepositStatus($amountReceived: numeric, $amountReceivedDate: timestamp, $status: String!, $signedInvoiceUrl: String, $refundedDate: timestamp, $refundedAmount: numeric, $id: uuid!, $cancelledDate: timestamp, $proofOfPaymentUrl: String) {
  updateDepositStatus(
    data: {amountReceived: $amountReceived, amountReceivedDate: $amountReceivedDate, id: $id, status: $status, refundedAmount: $refundedAmount, refundedDate: $refundedDate, signedInvoiceUrl: $signedInvoiceUrl, cancelledDate: $cancelledDate, proofOfPaymentUrl: $proofOfPaymentUrl}
  ) {
    status
    data {
      status
    }
  }
}
    `;
export const DuplicateDeposit = gql`
    mutation DuplicateDeposit($businessWalletId: uuid!, $currency: String!, $fromCustomerId: uuid!, $invoiceDate: timestamptz!, $parentBusinessId: uuid!, $productName: String!, $productPrice: numeric, $tags: jsonb, $toAccountId: uuid!, $type: depositTypes_enum!, $referenceId: String!, $remarks: String!) {
  insert_deposits_one(
    object: {businessWalletId: $businessWalletId, currency: $currency, fromCustomerId: $fromCustomerId, invoiceDate: $invoiceDate, parentBusinessId: $parentBusinessId, productName: $productName, productPrice: $productPrice, status: NEW, tags: $tags, toAccountId: $toAccountId, type: $type, referenceId: $referenceId, remarks: $remarks}
  ) {
    id
  }
}
    `;
export const FetchAllAccounts = gql`
    query FetchAllAccounts {
  accounts {
    id
    accountNumber
    currency
    name
    nickname
  }
}
    `;
export const GetLastUsedBusinessData = gql`
    query GetLastUsedBusinessData {
  deposits(limit: 10, order_by: {createdAt: desc}) {
    parentBusiness {
      id
      name
      nickname
      merchant {
        name
      }
    }
  }
}
    `;
export const GetLastUsedAccountData = gql`
    query GetLastUsedAccountData($businessId: uuid!) {
  deposits(
    limit: 10
    order_by: {createdAt: desc}
    where: {parentBusinessId: {_eq: $businessId}}
  ) {
    parentBusiness {
      businessWallets {
        id
        accounts {
          id
          nickname
          currency
          accountNumber
        }
      }
    }
  }
}
    `;
export const GetLastUsedCustomerData = gql`
    query GetLastUsedCustomerData($businessId: uuid!) {
  deposits(
    limit: 10
    order_by: {createdAt: desc}
    where: {parentBusinessId: {_eq: $businessId}}
  ) {
    fromCustomer {
      id
      username
      firstName
      lastName
    }
  }
}
    `;
export const GetLastUsedProductData = gql`
    query GetLastUsedProductData($businessId: uuid!) {
  deposits(
    where: {parentBusinessId: {_eq: $businessId}}
    limit: 10
    order_by: {createdAt: desc}
  ) {
    productName
    productPrice
  }
}
    `;
export const GetLastUsedTags = gql`
    query GetLastUsedTags($businessId: uuid!) {
  deposits(
    where: {parentBusinessId: {_eq: $businessId}}
    limit: 10
    order_by: {createdAt: desc}
  ) {
    tags
  }
}
    `;
export const GetAccountsForBusiness = gql`
    query GetAccountsForBusiness($businessId: ID!, $name: String!) {
  businesses(
    where: {id: $businessId, OR: [{businessWallets_SOME: {accounts_SOME: {nickname_MATCHES: $name}}}, {businessWallets_SOME: {accounts_SOME: {accountNumber_MATCHES: $name}}}]}
  ) {
    businessWallets {
      id
      accounts {
        id
        currency
        nickname
        accountNumber
      }
    }
  }
}
    `;
export const GetCustomerForBusiness = gql`
    query GetCustomerForBusiness($businessId: ID!, $name: String!) {
  customers(
    where: {AND: [{parentBrand: {business: {id: $businessId}}}, {OR: [{firstName_MATCHES: $name}, {lastName_MATCHES: $name}, {username_MATCHES: $name}]}]}
  ) {
    id
    username
    firstName
    lastName
  }
}
    `;
export const GetBrandsForBusiness = gql`
    query GetBrandsForBusiness($businessId: ID!, $name: String!) {
  brands(where: {business: {id: $businessId}, name_MATCHES: $name}) {
    name
    id
  }
}
    `;
export const AddDeposit = gql`
    mutation addDeposit($depositsData: [deposits_insert_input!]!) {
  insert_deposits(objects: $depositsData) {
    affected_rows
  }
}
    `;
export const GetDepositInvoiceDetails = gql`
    query GetDepositInvoiceDetails($depositId: uuid!) {
  deposits_by_pk(id: $depositId) {
    createdAt
    referenceId
    fromCustomer {
      firstName
      lastName
      email
      phone
      address
      country
    }
    businessWallet {
      currency
    }
    parentBusiness {
      name
      nickname
      website
      logoUrl
      merchant {
        name
        country
        email
        website
      }
    }
    productName
    productPrice
    currency
    amountReceived
    toAccount {
      name
      beneficiaryAddress
      accountNumber
      bank {
        name
        address
        swiftCode
      }
    }
    remarks
  }
}
    `;
export const UpdateDepositById = gql`
    mutation updateDepositById($id: uuid, $_set: deposits_set_input) {
  update_deposits(where: {id: {_eq: $id}}, _set: $_set) {
    affected_rows
  }
}
    `;
export const UpdateWithdrawalById = gql`
    mutation updateWithdrawalById($id: uuid, $_set: withdrawals_set_input) {
  update_withdrawals(where: {id: {_eq: $id}}, _set: $_set) {
    affected_rows
  }
}
    `;
export const BusinessDataById = gql`
    query BusinessDataById($id: ID) {
  businesses(where: {id: $id}) {
    name
    id
    nickname
    merchant {
      name
    }
  }
}
    `;
export const InsertDepositAndLedger = gql`
    mutation insertDepositAndLedger($data: [CreateDepositInput!]!) {
  createDeposits(data: $data) {
    message
  }
}
    `;
export const Businesses = gql`
    query businesses($name: String) {
  businesses(
    where: {OR: [{AND: [{name_MATCHES: $name}, {status: VERIFIED}]}, {merchant: {firstName_MATCHES: $name}}, {merchant: {lastName_MATCHES: $name}}]}
  ) {
    id
    name
    nickname
    merchant {
      name
    }
    brands {
      id
      name
    }
    businessWallets {
      id
      balance
      currency
    }
  }
}
    `;
export const Conversations = gql`
    subscription conversations {
  conversations(order_by: {updatedAt: desc}) {
    id
    updatedAt
    businessId
    depositId
    withdrawalId
    status
    messages(order_by: {updatedAt: desc}, limit: 1) {
      content
      type
    }
  }
}
    `;
export const BusinessById = gql`
    query businessById($businessId: ID!) {
  businesses(where: {id: $businessId}) {
    id
    name
    nickname
    merchant {
      id
    }
  }
}
    `;
export const ConversationCategories = gql`
    query conversationCategories {
  conversationCategories {
    id
    category
  }
}
    `;
export const CreateConversation = gql`
    mutation CreateConversation($businessId: uuid!, $categoryId: Int!, $content: String!, $adminId: uuid!, $type: messageTypes_enum, $depositId: uuid, $withdrawalId: uuid) {
  insert_conversations_one(
    object: {adminRead: true, businessId: $businessId, categoryId: $categoryId, merchantRead: false, depositId: $depositId, withdrawalId: $withdrawalId, messages: {data: {content: $content, type: $type, adminId: $adminId}}}
  ) {
    id
  }
}
    `;
export const Messages = gql`
    query messages($conversationId: uuid!) {
  messages(limit: 100, order_by: {createdAt: desc}) {
    id
    adminId
    merchantId
    content
    createdAt
    conversationId
    type
  }
}
    `;
export const MessagesSubs = gql`
    subscription messagesSubs($conversationId: uuid!) {
  messages(
    limit: 100
    where: {conversationId: {_eq: $conversationId}}
    order_by: {createdAt: desc}
  ) {
    id
    adminId
    merchantId
    content
    createdAt
    conversationId
    type
  }
}
    `;
export const ConversationsSubs = gql`
    subscription conversationsSubs {
  conversations(order_by: {updatedAt: desc}) {
    id
    merchantRead
    updatedAt
    categoryId
    conversationCategory {
      id
      category
    }
    businessId
    adminRead
    status
    depositId
    deposit {
      referenceId
    }
    withdrawalId
    withdrawal {
      referenceId
    }
    messages(order_by: {updatedAt: desc}, limit: 1) {
      content
      type
    }
  }
}
    `;
export const Conversationss = gql`
    subscription conversationss($businessIds: [uuid!]) {
  conversations(
    where: {businessId: {_in: $businessIds}}
    order_by: {updatedAt: desc}
  ) {
    id
    merchantRead
    updatedAt
    categoryId
    conversationCategory {
      id
      category
    }
    businessId
    status
    adminRead
    depositId
    deposit {
      referenceId
    }
    withdrawalId
    withdrawal {
      referenceId
    }
    messages(order_by: {updatedAt: desc}, limit: 1) {
      content
      type
    }
  }
}
    `;
export const BusinessesMerchant = gql`
    query businessesMerchant($merchantId: ID!) {
  businesses(where: {merchant: {id: $merchantId}}) {
    id
    name
    merchant {
      id
    }
  }
}
    `;
export const BusinessesAll = gql`
    query businessesAll {
  businesses {
    id
    name
    merchant {
      id
    }
  }
}
    `;
export const Insert_Messages_One = gql`
    mutation insert_messages_one($conversationId: uuid!, $content: String!, $adminId: uuid, $merchantId: uuid, $type: messageTypes_enum) {
  insert_messages_one(
    object: {conversationId: $conversationId, type: $type, content: $content, adminId: $adminId, merchantId: $merchantId}
  ) {
    id
    merchantId
    adminId
    content
    createdAt
    type
  }
  update_conversations_by_pk(
    _set: {adminRead: true, merchantRead: false}
    pk_columns: {id: $conversationId}
  ) {
    id
  }
}
    `;
export const Update_Conversations_By_Pk = gql`
    mutation update_conversations_by_pk($conversationId: uuid!) {
  update_conversations_by_pk(
    pk_columns: {id: $conversationId}
    _set: {merchantRead: true}
  ) {
    id
  }
}
    `;
export const Update_Conversations_By_Pk2 = gql`
    mutation update_conversations_by_pk2($conversationId: uuid!) {
  update_conversations_by_pk(
    pk_columns: {id: $conversationId}
    _set: {adminRead: true}
  ) {
    id
  }
}
    `;
export const Insert_Messages_One2 = gql`
    mutation insert_messages_one2($conversationId: uuid!, $content: String!, $merchantId: uuid!, $type: messageTypes_enum) {
  insert_messages_one(
    object: {conversationId: $conversationId, type: $type, content: $content, merchantId: $merchantId}
  ) {
    id
    merchantId
    adminId
    content
    createdAt
    type
  }
  update_conversations_by_pk(
    _set: {adminRead: false, merchantRead: true}
    pk_columns: {id: $conversationId}
  ) {
    id
  }
}
    `;
export const Update_Conversations_By_Pk3 = gql`
    mutation update_conversations_by_pk3($conversationId: uuid!) {
  update_conversations_by_pk(
    pk_columns: {id: $conversationId}
    _set: {status: "RESOLVED"}
  ) {
    id
  }
}
    `;
export const GetConversationMetadata = gql`
    subscription getConversationMetadata($conversationId: uuid!) {
  conversations(limit: 1, where: {id: {_eq: $conversationId}}) {
    id
    updatedAt
    status
    messages(where: {type: {_neq: TEXT}}, order_by: {createdAt: asc}) {
      content
      id
      type
    }
    messages_aggregate(where: {type: {_neq: TEXT}}) {
      aggregate {
        count
      }
    }
  }
}
    `;
export const FetchAllMerchants = gql`
    query FetchAllMerchants($limit: Int = 10, $offset: Int = 10, $order_by: [MerchantSort!], $where: MerchantWhere) {
  merchants(
    options: {sort: $order_by, limit: $limit, offset: $offset}
    where: $where
  ) {
    id
    email
    name
    firstName
    lastName
    createdAt
    businesses {
      id
      status
    }
    businessesAggregate {
      count
    }
  }
  merchantsAggregate {
    count
  }
}
    `;
export const FetchMerchantDetails = gql`
    query FetchMerchantDetails($id: ID!) {
  merchants(where: {id: $id}) {
    id
    email
    name
    firstName
    lastName
    createdAt
    businessList: businesses {
      id
      name
      nickname
    }
    businesses {
      id
      nickname
      status
      name
      businessWallets {
        id
        currency
        accounts {
          id
          name
        }
      }
    }
    beneficiaries {
      id
      beneficiaryName
      accountNumber
      currency
      accountType
      bankName
      swiftCode
      bankAddress
      beneficiaryAddress
      beneficiaryCountry
      bankCountry
      remarks
      intermediaryBankName
      intermediaryBankSwift
      intermediaryBankAddress
      intermediaryBankRemarks
    }
    personalDocuments(where: {isDeleted: false}) {
      name
      id
      url
      type
    }
  }
}
    `;
export const FetchBusinessDetails = gql`
    query FetchBusinessDetails($businessId: ID!) {
  businesses(where: {id: $businessId}) {
    id
    name
    nickname
    registrationNumber
    website
    status
    contactNumber
    phoneContact
    primaryContactPersonPhone
    primaryContactPersonName
    primaryContactPersonEmail
    primaryContactPerson
    referralPartner
    address
    requestedCurrencies
    websiteBrand
    businessTypes
    businessWallets {
      id
      nickname
      accounts {
        id
        name
        accountNumber
      }
      balance
      currency
      accountsAggregate {
        count
      }
      payoutFee {
        id
        feeFlat
        feePercentage
        usesDefault
        defaultPayoutFee {
          feeFlat
          feePercentage
        }
      }
      rollingReserveFee {
        id
        percentage
        releaseDays
        usesDefault
        defaultRollingReserveFee {
          percentage
          releaseDays
        }
      }
      joiningFee {
        fee
        id
        usesDefault
        defaultJoiningFee {
          fee
        }
      }
      overDraftLimit {
        id
        overDraftLimit
        usesDefault
        defaultOverDraftLimit {
          overDraftLimit
        }
      }
      maintenanceFee {
        id
        checkType
        fee
        depositVolume
        withdrawalVolume
        totalVolume
        usesDefault
        defaultMaintenanceFee {
          checkType
          fee
          depositVolume
          withdrawalVolume
          totalVolume
        }
      }
      baseCommission {
        id
        b2bFee
        c2bFee
        usesDefault
        defaultBaseCommission {
          b2bFee
          c2bFee
        }
      }
      tierCommissions {
        b2bFee
        c2bFee
        depositVolume
        usesDefault
        defaultTierCommission {
          b2bFee
          c2bFee
          depositVolume
        }
      }
    }
    businessCurrencyConversionMarkups {
      id
      forConversion
      adjustedRate
      autoAdjustMarkupToBaseRate
      usesDefault
      fee
      forConversion
      markup
      isFlatFee
      id
      baseCurrencyConversionRate {
        baseRate
        autoUpdateBaseRate
      }
      defaultCurrencyConversionMarkup {
        adjustedRate
        autoAdjustMarkupToBaseRate
        fee
        forConversion
        isFlatFee
        markup
      }
    }
    businessCurrencyConversionFees {
      id
      markupPercentage
      percentageFee
      usesDefault
      defaultCurrencyConversionFees {
        id
        markupPercentage
        percentageFee
      }
    }
  }
}
    `;
export const AddNewCuurencies = gql`
    mutation AddNewCuurencies($id: uuid!, $currency: [String!]!) {
  addBusinessWallet(data: {id: $id, currency: $currency}) {
    message
    status
  }
}
    `;
export const AccountSearchByName = gql`
    query AccountSearchByName($name: String, $currency: [String!]) {
  accounts(
    where: {AND: [{currency_IN: $currency}, {OR: [{accountNumber_MATCHES: $name}, {bank: {name_MATCHES: $name}}, {name_MATCHES: $name}, {nickname_MATCHES: $name}]}]}
  ) {
    id
    name
    accountNumber
    nickname
    bank {
      id
      name
    }
    currency
  }
}
    `;
export const LinkBeneficiaryToWallet = gql`
    mutation LinkBeneficiaryToWallet($walletId: ID!, $accountId: ID!) {
  updateBusinessWallets(
    where: {id: $walletId}
    update: {accounts: {connect: {where: {node: {id: $accountId}}}}}
  ) {
    info {
      relationshipsCreated
      nodesCreated
    }
    businessWallets {
      id
      accounts {
        id
      }
    }
  }
}
    `;
export const AddAccountAndLink = gql`
    mutation addAccountAndLink($businessWalletId: ID!, $bankId: ID!, $accountNumber: String!, $bankCharges: Float!, $name: String!, $nickname: String!, $currencyCode: String!) {
  updateBusinessWallets(
    where: {id: $businessWalletId}
    create: {accounts: {node: {accountNumber: $accountNumber, name: $name, nickname: $nickname, bankCharges: $bankCharges, bank: {connect: {where: {node: {id: $bankId}}}}, currency: $currencyCode}}}
  ) {
    businessWallets {
      id
      accounts {
        id
        bank {
          id
        }
      }
    }
  }
}
    `;
export const SearchBank = gql`
    query searchBank($name: String!) {
  banks(where: {OR: [{name_MATCHES: $name}, {swiftCode_MATCHES: $name}]}) {
    id
    name
    swiftCode
  }
}
    `;
export const Verification_Status = gql`
    mutation verification_status($id: ID, $status: BusinessStatus) {
  updateBusinesses(where: {id: $id}, update: {status: $status}) {
    businesses {
      id
    }
  }
}
    `;
export const AddNewMerchant = gql`
    mutation AddNewMerchant($merchantDetail: MerchantDetail!, $businessDetail: BusinessDetail!, $accountList: [uuid!]) {
  signupMerchant(
    merchantDetail: $merchantDetail
    businessDetail: $businessDetail
    accountList: $accountList
  ) {
    message
    status
    data {
      businessId
      merchantId
    }
  }
}
    `;
export const DeleteMerchantKycDocuments = gql`
    mutation DeleteMerchantKycDocuments($id: ID = "", $update: PersonalDocumentUpdateInput = {isDeleted: false}) {
  updatePersonalDocuments(update: $update, where: {id: $id}) {
    personalDocuments {
      id
    }
  }
}
    `;
export const BusinessAddress = gql`
    query businessAddress($businessId: ID!) {
  businessDocuments(where: {business: {id: $businessId}}) {
    id
    url
    name
  }
}
    `;
export const GetBusinessDefaultCommissionsAndFees = gql`
    query getBusinessDefaultCommissionsAndFees {
  defaultMaintenanceFees {
    checkType
    currency
    depositVolume
    fee
    totalVolume
    withdrawalVolume
    id
  }
  defaultOverDraftLimits {
    id
    overDraftLimit
    currency
  }
  defaultJoiningFees {
    fee
    id
    currency
  }
  defaultRollingReserveFees {
    percentage
    releaseDays
    id
    currency
  }
  defaultPayoutFees {
    feeFlat
    feePercentage
    currency
    id
  }
}
    `;
export const UpdatePayoutFeeById = gql`
    mutation UpdatePayoutFeeById($where: BusinessWalletPayoutFeeWhere, $update: BusinessWalletPayoutFeeUpdateInput) {
  updateBusinessWalletPayoutFees(where: $where, update: $update) {
    businessWalletPayoutFees {
      id
    }
  }
}
    `;
export const UpdateRollingReserveFeeById = gql`
    mutation UpdateRollingReserveFeeById($where: BusinessWalletRollingReserveFeeWhere, $update: BusinessWalletRollingReserveFeeUpdateInput) {
  updateBusinessWalletRollingReserveFees(where: $where, update: $update) {
    businessWalletRollingReserveFees {
      id
    }
  }
}
    `;
export const UpdateJoiningFeeById = gql`
    mutation UpdateJoiningFeeById($where: BusinessWalletJoiningFeeWhere, $update: BusinessWalletJoiningFeeUpdateInput) {
  updateBusinessWalletJoiningFees(where: $where, update: $update) {
    businessWalletJoiningFees {
      id
    }
  }
}
    `;
export const UpdateOverDraftLimitById = gql`
    mutation UpdateOverDraftLimitById($where: BusinessWalletOverDraftLimitWhere, $update: BusinessWalletOverDraftLimitUpdateInput) {
  updateBusinessWalletOverDraftLimits(where: $where, update: $update) {
    businessWalletOverDraftLimits {
      id
    }
  }
}
    `;
export const UpdateMaintenanceFeeById = gql`
    mutation UpdateMaintenanceFeeById($where: BusinessWalletMaintenanceFeeWhere, $update: BusinessWalletMaintenanceFeeUpdateInput) {
  updateBusinessWalletMaintenanceFees(where: $where, update: $update) {
    businessWalletMaintenanceFees {
      id
    }
  }
}
    `;
export const UpdateBaseCommissionById = gql`
    mutation UpdateBaseCommissionById($where: BusinessWalletBaseCommissionWhere, $update: BusinessWalletBaseCommissionUpdateInput) {
  updateBusinessWalletBaseCommissions(where: $where, update: $update) {
    businessWalletBaseCommissions {
      id
    }
  }
}
    `;
export const FetchBusinessLedgerTransactions = gql`
    query FetchBusinessLedgerTransactions($where: ledgers_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $businessId: uuid, $walletId: ID, $whereTotalDeposit: ledgers_bool_exp!, $whereTotalPayout: ledgers_bool_exp!, $whereTotalSettlement: ledgers_bool_exp!, $whereTotalCommission: ledgers_bool_exp!, $whereTotalAdjustmentsDebit: ledgers_bool_exp!, $whereTotalAdjustmentsCredit: ledgers_bool_exp!, $whereUnReleasedRR: rollingReserves_bool_exp!, $order_by: [ledgers_order_by!]) {
  ledgers(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {
    id
    internalId
    amount
    ledgerType
    fromLine1
    fromLine2
    toLine1
    toLine2
    currency
    transactionType
    transactionSubType
    childLedgers {
      id
      amount
    }
    createdAt
    description
    creditAmount
    debitAmount
    balance
    finalCreditAmount
    finalDebitAmount
    finalBalance
  }
  businessWallets(where: {id: $walletId}) {
    id
    balance
    withdrawableRRBalance
    currency
  }
  ledgers_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  totalDeposit: ledgers_aggregate(where: $whereTotalDeposit) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalPayout: ledgers_aggregate(where: $whereTotalPayout) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalSettlement: ledgers_aggregate(where: $whereTotalSettlement) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalCommission: ledgers_aggregate(where: $whereTotalCommission) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalAdjustmentsDebit: ledgers_aggregate(where: $whereTotalAdjustmentsDebit) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalAdjustmentsCredit: ledgers_aggregate(where: $whereTotalAdjustmentsCredit) {
    aggregate {
      sum {
        amount
      }
    }
  }
  unReleasedRRaggregate: rollingReserves_aggregate(where: $whereUnReleasedRR) {
    aggregate {
      sum {
        amount
      }
    }
  }
}
    `;
export const QueryRollingReserves = gql`
    query QueryRollingReserves($where: rollingReserves_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $order_by: [rollingReserves_order_by!]) {
  rollingReserves(
    where: $where
    limit: $limit
    offset: $offset
    order_by: $order_by
  ) {
    id
    amount
    depositId
    status
    releaseDate
    daysUntilRelease
    initialReleaseDays
    createdAt
    deposit {
      toAccount {
        currency
      }
    }
  }
  rollingReserves_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;
export const ReleaseRollingReserves = gql`
    mutation releaseRollingReserves($data: [ReleaseRollingReserveInput!]!) {
  releaseRollingReserve(data: $data) {
    status
    message
  }
}
    `;
export const UpdateCurrencyConversionById = gql`
    mutation UpdateCurrencyConversionById($where: BusinessCurrencyConversionMarkupWhere = {id: ""}, $update: BusinessCurrencyConversionMarkupUpdateInput = {adjustedRate: 1.5, fee: 1.5, markup: 1.5, isFlatFee: false, usesDefault: false}) {
  updateBusinessCurrencyConversionMarkups(where: $where, update: $update) {
    businessCurrencyConversionMarkups {
      id
    }
  }
}
    `;
export const UpdatePersonalInfo = gql`
    mutation updatePersonalInfo($email: String!, $firstName: String!, $lastName: String!, $id: ID!) {
  updateMerchants(
    where: {id: $id}
    update: {firstName: $firstName, lastName: $lastName, email: $email}
  ) {
    merchants {
      id
    }
  }
}
    `;
export const UpdateBusiness = gql`
    mutation UpdateBusiness($where: BusinessWhere, $update: BusinessUpdateInput) {
  updateBusinesses(where: $where, update: $update) {
    businesses {
      id
    }
  }
}
    `;
export const UpdateBusinessCurrencyConversionFees = gql`
    mutation updateBusinessCurrencyConversionFees($id: ID!, $markupPercentage: Float!, $percentageFee: Float!, $usesDefault: Boolean!) {
  updateBusinessCurrencyConversionFees(
    where: {id: $id}
    update: {markupPercentage: $markupPercentage, percentageFee: $percentageFee, usesDefault: $usesDefault}
  ) {
    businessCurrencyConversionFees {
      usesDefault
      percentageFee
      markupPercentage
    }
  }
}
    `;
export const GetSuperAdminById = gql`
    query getSuperAdminById($id: ID!) {
  superAdmins(where: {id: $id}) {
    id
    email
    name
  }
}
    `;
export const MerchantInfo = gql`
    query merchantInfo($id: ID!) {
  merchants(where: {id: $id}) {
    id
    name
    email
    apiKey
    firstName
    lastName
    updatedAt
    website
    country
    beneficiaries {
      bankName
      beneficiaryName
      swiftCode
      accountType
      id
      beneficiaryName
      accountNumber
      currency
    }
    personalDocuments {
      id
      name
      url
      type
    }
  }
}
    `;
export const UpdateSuperAdminById = gql`
    mutation updateSuperAdminById($id: ID!, $update: SuperAdminUpdateInput!) {
  updateSuperAdmins(where: {id: $id}, update: $update) {
    superAdmins {
      id
    }
  }
}
    `;
export const UpdateMerchantInfo = gql`
    mutation updateMerchantInfo($id: ID!, $update: MerchantUpdateInput!) {
  updateMerchants(where: {id: $id}, update: $update) {
    merchants {
      id
    }
  }
}
    `;
export const CurrentAuthPermissions = gql`
    query CurrentAuthPermissions($token: String!) {
  login(token: $token) {
    message
    status
    data {
      name
      email
      userId
      userType
      dashboardView
      depositView
      depositCreate
      withdrawalView
      withdrawalCreate
      taskView
      taskCreate
      customerView
      customerCreate
      userView
      userCreate
      mailboxView
      mailboxCreate
      merchantView
      merchantCreate
      accountView
      accountCreate
      activityLogView
      activityLogCreate
      settingsView
      settingsCreate
    }
  }
}
    `;
export const InsertWithdrawalAndLedger = gql`
    mutation insertWithdrawalAndLedger($data: [CreateWithdrawalInput!]!) {
  createWithdrawals(data: $data) {
    message
    data {
      uuids
    }
  }
}
    `;
export const GetAllDefaultCommissionsAndFees = gql`
    query getAllDefaultCommissionsAndFees {
  defaultMaintenanceFees {
    checkType
    currency
    depositVolume
    fee
    totalVolume
    withdrawalVolume
    id
  }
  defaultOverDraftLimits {
    id
    overDraftLimit
    currency
  }
  defaultJoiningFees {
    fee
    id
    currency
  }
  defaultRollingReserveFees {
    percentage
    releaseDays
    id
    currency
  }
  defaultPayoutFees {
    feeFlat
    feePercentage
    currency
    id
  }
  defaultBaseCommissions {
    b2bFee
    c2bFee
    id
    currency
  }
  defaultTierCommissions {
    b2bFee
    c2bFee
    id
    currency
    depositVolume
  }
}
    `;
export const UpdateDefaultPayoutFee = gql`
    mutation updateDefaultPayoutFee($where: DefaultPayoutFeeWhere, $update: DefaultPayoutFeeUpdateInput) {
  updateDefaultPayoutFees(where: $where, update: $update) {
    defaultPayoutFees {
      id
    }
  }
}
    `;
export const UpdateDefaultRollingReserveFee = gql`
    mutation updateDefaultRollingReserveFee($where: DefaultRollingReserveFeeWhere, $update: DefaultRollingReserveFeeUpdateInput) {
  updateDefaultRollingReserveFees(where: $where, update: $update) {
    defaultRollingReserveFees {
      id
    }
  }
}
    `;
export const UpdateJoiningFees = gql`
    mutation updateJoiningFees($where: DefaultJoiningFeeWhere, $update: DefaultJoiningFeeUpdateInput) {
  updateDefaultJoiningFees(where: $where, update: $update) {
    defaultJoiningFees {
      id
    }
  }
}
    `;
export const UpdateDefaultOverdraftLimits = gql`
    mutation updateDefaultOverdraftLimits($where: DefaultOverDraftLimitWhere, $update: DefaultOverDraftLimitUpdateInput) {
  updateDefaultOverDraftLimits(where: $where, update: $update) {
    defaultOverDraftLimits {
      id
    }
  }
}
    `;
export const UpdateDefaultMaintenanceFee = gql`
    mutation updateDefaultMaintenanceFee($where: DefaultMaintenanceFeeWhere, $update: DefaultMaintenanceFeeUpdateInput) {
  updateDefaultMaintenanceFees(where: $where, update: $update) {
    defaultMaintenanceFees {
      id
    }
  }
}
    `;
export const UpdateDefaultBaseCommission = gql`
    mutation updateDefaultBaseCommission($where: DefaultBaseCommissionWhere, $update: DefaultBaseCommissionUpdateInput) {
  updateDefaultBaseCommissions(where: $where, update: $update) {
    defaultBaseCommissions {
      id
    }
  }
}
    `;
export const CreateDefaultTierCommission = gql`
    mutation createDefaultTierCommission($input: [DefaultTierCommissionCreateInput!]!) {
  createDefaultTierCommissions(input: $input) {
    defaultTierCommissions {
      id
    }
  }
}
    `;
export const UpdateDefaultTierCommissionById = gql`
    mutation updateDefaultTierCommissionById($where: DefaultTierCommissionWhere, $update: DefaultTierCommissionUpdateInput) {
  updateDefaultTierCommissions(where: $where, update: $update) {
    defaultTierCommissions {
      id
    }
  }
}
    `;
export const DeleteDefaultTierCommissionById = gql`
    mutation deleteDefaultTierCommissionById($id: ID = "") {
  deleteDefaultTierCommissions(where: {id: $id}) {
    nodesDeleted
  }
}
    `;
export const DefaultCurrencyConversionFees = gql`
    query defaultCurrencyConversionFees {
  defaultCurrencyConversionFees {
    id
    percentageFee
    markupPercentage
  }
}
    `;
export const UpdateDefaultCurrencyConversionFees = gql`
    mutation updateDefaultCurrencyConversionFees($id: ID!, $percentageFee: Float!, $markupPercentage: Float!) {
  updateDefaultCurrencyConversionFees(
    where: {id: $id}
    update: {percentageFee: $percentageFee, markupPercentage: $markupPercentage}
  ) {
    defaultCurrencyConversionFees {
      percentageFee
      markupPercentage
    }
  }
}
    `;
export const FetchDefaultCurrencyConversion = gql`
    query FetchDefaultCurrencyConversion($where: DefaultCurrencyConversionMarkupWhere) {
  defaultCurrencyConversionMarkups(where: $where) {
    adjustedRate
    autoAdjustMarkupToBaseRate
    forConversion
    fee
    id
    isFlatFee
    markup
    baseCurrencyConversionRate {
      baseRate
    }
  }
}
    `;
export const UpdateDefaultCurrencyConversion = gql`
    mutation updateDefaultCurrencyConversion($where: DefaultCurrencyConversionMarkupWhere, $update: DefaultCurrencyConversionMarkupUpdateInput) {
  updateDefaultCurrencyConversionMarkups(where: $where, update: $update) {
    defaultCurrencyConversionMarkups {
      id
    }
  }
}
    `;
export const GetTasks = gql`
    query getTasks($offset: Int! = 0, $limit: Int! = 10, $order_by: [tasks_order_by!] = {createdAt: asc}, $where: tasks_bool_exp) {
  tasks(offset: $offset, limit: $limit, order_by: $order_by, where: $where) {
    startDate
    tags
    id
    title
    priority
    endDate
    status
    description
    depositId
    withdrawalId
    withdrawal {
      internalId
      referenceId
      id
      currency
      amount
      createdAt
      parentBusiness {
        name
      }
      toBeneficiary {
        beneficiaryName
        accountNumber
      }
    }
    deposit {
      id
      internalId
      referenceId
      currency
      amountReceived
      createdAt
      parentBusiness {
        name
      }
      fromCustomer {
        firstName
        lastName
      }
    }
    assignedToUser {
      id
      name
      userType
    }
  }
  tasks_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;
export const GetAdmins = gql`
    query GetAdmins($name: String) {
  subAdmins(
    where: {OR: {email_MATCHES: $name, name_MATCHES: $name}}
    options: {limit: 5}
  ) {
    id
    email
    name
  }
  superAdmins(
    where: {OR: {email_MATCHES: $name, name_MATCHES: $name}}
    options: {limit: 5}
  ) {
    id
    email
    name
  }
}
    `;
export const AddWithdrawalTask = gql`
    mutation AddWithdrawalTask($objects: [tasks_insert_input!]!, $updates: [withdrawals_updates!]!) {
  insert_tasks(objects: $objects) {
    returning {
      id
      assignedToId
    }
  }
  update_withdrawals_many(updates: $updates) {
    affected_rows
  }
}
    `;
export const UpdateEditTask = gql`
    mutation updateEditTask($where: tasks_bool_exp!, $_set: tasks_set_input) {
  update_tasks(where: $where, _set: $_set) {
    affected_rows
  }
}
    `;
export const UpdateWithdrawalsById = gql`
    mutation updateWithdrawalsById($updates: [withdrawals_updates!]!) {
  update_withdrawals_many(updates: $updates) {
    affected_rows
  }
}
    `;
export const AddWithdrawalTaskWithAccount = gql`
    mutation AddWithdrawalTaskWithAccount($objects: [tasks_insert_input!]!, $txId: uuid!, $fromAccountId: uuid) {
  insert_tasks(objects: $objects) {
    returning {
      id
      assignedToId
    }
  }
  update_withdrawals_by_pk(
    pk_columns: {id: $txId}
    _set: {fromAccountId: $fromAccountId}
  ) {
    id
  }
}
    `;
export const UnassignedDeposits = gql`
    query unassignedDeposits($limit: Int!, $offset: Int!) {
  deposits(
    where: {_and: [{tasks_aggregate: {count: {predicate: {_eq: 0}}}}, {status: {_neq: RECEIVED}}]}
    limit: $limit
    offset: $offset
  ) {
    id
    internalId
    createdAt
    parentBusiness {
      id
      name
    }
    businessWallet {
      currency
    }
    productPrice
    amountReceived
    status
    fromCustomer {
      id
      firstName
      lastName
    }
    tasks {
      id
    }
  }
  deposits_aggregate(
    where: {_and: [{tasks_aggregate: {count: {predicate: {_eq: 0}}}}, {status: {_neq: RECEIVED}}]}
  ) {
    aggregate {
      count
    }
  }
}
    `;
export const UnassignedWithdrawals = gql`
    query unassignedWithdrawals($limit: Int!, $offset: Int!) {
  withdrawals(
    where: {_and: [{tasks_aggregate: {count: {predicate: {_eq: 0}}}}, {status: {_neq: PAID}}]}
    limit: $limit
    offset: $offset
  ) {
    id
    internalId
    createdAt
    currency
    fromAccount {
      nickname
      accountNumber
    }
    toBeneficiary {
      id
      accountNumber
      customer {
        firstName
        lastName
      }
      merchant {
        firstName
        lastName
      }
    }
    parentBusiness {
      id
      name
    }
    businessWallet {
      currency
    }
    amount
    tasks {
      id
    }
  }
  withdrawals_aggregate(
    where: {_and: [{tasks_aggregate: {count: {predicate: {_eq: 0}}}}, {status: {_neq: PAID}}]}
  ) {
    aggregate {
      count
    }
  }
}
    `;
export const Teams = gql`
    query teams {
  teams {
    id
    name
    featurePermissionsConnection {
      edges {
        create
        update
        delete
        read
        node {
          id
          featureType
          brand {
            id
            name
          }
        }
      }
    }
  }
}
    `;
export const CreateUser = gql`
    mutation createUser($permissions: [BrandPermission!]!, $teams: [uuid!]!, $email: String!, $name: String!, $password: String!, $isInternalUser: Boolean!) {
  createUser(
    name: $name
    email: $email
    password: $password
    teams: $teams
    permissions: $permissions
    isInternalUser: $isInternalUser
  ) {
    status
    message
    data {
      uuid
    }
  }
}
    `;
export const AllBusiness = gql`
    query AllBusiness {
  businesses {
    id
    name
    brands {
      id
      name
    }
  }
}
    `;
export const CreateTeam = gql`
    mutation createTeam($accessibleBrandIds: [uuid!]!, $name: String!, $parentBusinessId: uuid!, $permissions: [BrandPermission!]!) {
  createTeam(
    accessibleBrandIds: $accessibleBrandIds
    name: $name
    parentBusinessId: $parentBusinessId
    permissions: $permissions
  ) {
    message
    status
    data {
      uuid
    }
  }
}
    `;
export const AllBusinessWithTeams = gql`
    query AllBusinessWithTeams {
  businesses {
    id
    name
    teams {
      id
      name
      featurePermissionsConnection {
        edges {
          create
          update
          delete
          read
          node {
            id
            featureType
            brand {
              id
              name
            }
          }
        }
      }
    }
  }
}
    `;
export const AllBusinessWithTeamsSuggest = gql`
    query AllBusinessWithTeamsSuggest {
  businesses {
    id
    name
    teams {
      id
      name
      featurePermissionsConnection {
        edges {
          create
          update
          delete
          read
          node {
            id
            featureType
            brand {
              id
              name
            }
          }
        }
      }
    }
  }
}
    `;
export const TeamMembers = gql`
    query teamMembers($limit: Int!, $offset: Int!, $sort: [TeamMemberSort!]!) {
  teamsAggregate {
    count
  }
  teamMembers(options: {limit: $limit, offset: $offset, sort: $sort}) {
    id
    name
    email
    userType
    createdBy {
      id
      name
      userType
    }
    teams {
      id
      name
      parentBusiness {
        id
        name
      }
    }
    featurePermissions {
      brand {
        id
        name
      }
    }
  }
}
    `;
export const FetchTeamMemberById = gql`
    query FetchTeamMemberById($memberId: ID!) {
  teamMembers(where: {id: $memberId}) {
    id
    name
    email
    userType
    createdBy {
      id
      name
      userType
    }
    teams {
      id
      name
      parentBusiness {
        id
        name
      }
    }
    featurePermissions {
      brand {
        id
        name
      }
    }
  }
}
    `;
export const QueryWithdrawals = gql`
    query QueryWithdrawals($where: withdrawals_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $order_by: [withdrawals_order_by!]) {
  withdrawals(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {
    id
    referenceId
    internalId
    bankCharges
    parentBusiness {
      id
      name
      nickname
      merchant {
        id
        name
      }
    }
    fromAccountId
    fromAccount {
      id
      name
      accountNumber
      bankCharges
    }
    toBeneficiary {
      id
      beneficiaryName
      accountNumber
      customer {
        id
        firstName
        lastName
        username
        kycStatus
        personalDocuments {
          id
          name
          url
          type
        }
      }
      merchant {
        id
        firstName
        lastName
        kycStatus
        personalDocuments {
          id
          name
          url
          type
        }
      }
    }
    businessWallet {
      id
      currency
    }
    createdByUser {
      id
      name
      userType
    }
    createdAt
    tags
    amount
    type
    status
    datePaid
    invoiceUrl
    proofOfPaymentUrl
    remarks
    internalNotes
    payoutRequestFormUrl
    dateReturned
    cancelledDate
    amountReturned
    tasks {
      id
      assignedToUser {
        id
        name
        userType
      }
    }
  }
  withdrawals_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;
export const UpdateWithdrawalDocs = gql`
    mutation updateWithdrawalDocs($id: uuid!, $urlData: withdrawals_set_input!) {
  update_withdrawals_by_pk(pk_columns: {id: $id}, _set: $urlData) {
    id
    invoiceUrl
    proofOfPaymentUrl
  }
}
    `;
export const UpdateWithdrawalByIdAndAssignAccount = gql`
    mutation updateWithdrawalByIdAndAssignAccount($fromAccountId: uuid, $id: uuid!) {
  update_withdrawals_by_pk(
    pk_columns: {id: $id}
    _set: {fromAccountId: $fromAccountId}
  ) {
    id
  }
}
    `;
export const UpdateWithdrawalStatus = gql`
    mutation updateWithdrawalStatus($amount: numeric, $amountReturned: numeric, $bankCharges: numeric, $cancelledDate: timestamptz, $dateReturned: timestamptz, $datePaid: timestamptz, $id: uuid!, $invoiceUrl: String, $proofOfPaymentUrl: String, $status: String!) {
  updateWithdrawalStatus(
    data: {amount: $amount, bankCharges: $bankCharges, id: $id, status: $status, amountReturned: $amountReturned, cancelledDate: $cancelledDate, dateReturned: $dateReturned, invoiceUrl: $invoiceUrl, proofOfPaymentUrl: $proofOfPaymentUrl, datePaid: $datePaid}
  ) {
    status
    message
    data {
      status
    }
  }
}
    `;
export const UpdateRrSettlementStatus = gql`
    mutation updateRRSettlementStatus($amount: numeric, $id: uuid!, $status: String!) {
  updateRRSettlementStatus(data: {amount: $amount, id: $id, status: $status}) {
    status
    message
    data {
      status
    }
  }
}
    `;
export const DuplicateWithdrawal = gql`
    mutation DuplicateWithdrawal($amount: numeric, $businessWalletId: uuid, $internalNotes: String, $parentBusinessId: uuid!, $referenceId: String!, $remarks: String!, $tags: jsonb, $toBeneficiaryId: uuid, $type: withdrawalTypes_enum) {
  insert_withdrawals_one(
    object: {amount: $amount, businessWalletId: $businessWalletId, internalNotes: $internalNotes, parentBusinessId: $parentBusinessId, referenceId: $referenceId, remarks: $remarks, status: NEW, tags: $tags, toBeneficiaryId: $toBeneficiaryId, type: $type}
  ) {
    id
  }
}
    `;
export const FetchBusinessByName = gql`
    query FetchBusinessByName($name: String) {
  businesses(
    where: {OR: [{AND: [{name_MATCHES: $name}, {status: VERIFIED}]}, {merchant: {firstName_MATCHES: $name}}, {merchant: {lastName_MATCHES: $name}}]}
  ) {
    id
    name
    nickname
    merchant {
      id
      name
    }
    brands {
      id
      name
    }
    businessWallets {
      id
      balance
      currency
      balance
      withdrawableRRBalance
    }
  }
}
    `;
export const FetchBusinessSuggest = gql`
    query FetchBusinessSuggest {
  businesses(options: {limit: 6}) {
    id
    name
    nickname
    merchant {
      id
      name
    }
    brands {
      id
      name
    }
    businessWallets {
      id
      balance
      currency
      balance
      withdrawableRRBalance
    }
  }
}
    `;
export const FetchCustomerByBusiness = gql`
    query FetchCustomerByBusiness($businessId: ID!, $name: String!) {
  customers(
    where: {AND: [{parentBrand: {business: {id: $businessId}}}, {OR: [{firstName_MATCHES: $name}, {lastName_MATCHES: $name}, {username_MATCHES: $name}]}]}
  ) {
    id
    username
    firstName
    lastName
  }
}
    `;
export const FetchCustomerSuggest = gql`
    query FetchCustomerSuggest($businessId: ID!) {
  customers(
    options: {limit: 6}
    where: {parentBrand: {business: {id: $businessId}}}
  ) {
    id
    username
    firstName
    lastName
  }
}
    `;
export const CustomerBeneficiaries = gql`
    query CustomerBeneficiaries($customerId: ID!) {
  beneficiaries(where: {customer: {id: $customerId}}) {
    id
    beneficiaryName
    accountNumber
    currency
  }
}
    `;
export const CustomerBeneficiariesSuggest = gql`
    query CustomerBeneficiariesSuggest($customerId: ID!) {
  beneficiaries(where: {customer: {id: $customerId}}) {
    id
    beneficiaryName
    accountNumber
    currency
  }
}
    `;
export const MerchantBeneficiaries = gql`
    query MerchantBeneficiaries($merchantId: ID!) {
  beneficiaries(where: {merchant: {id: $merchantId}}) {
    id
    beneficiaryName
    accountNumber
    currency
  }
}
    `;
export const MerchantBeneficiariesSuggest = gql`
    query MerchantBeneficiariesSuggest($merchantId: ID!) {
  beneficiaries(where: {merchant: {id: $merchantId}}) {
    id
    beneficiaryName
    accountNumber
    currency
  }
}
    `;
export const GenerateReferenceId = gql`
    query GenerateReferenceId($parentBusinessId: uuid, $type: String!, $counts: Int!) {
  generateReferenceIds(
    args: {business_id: $parentBusinessId, counts: $counts, transaction_type: $type}
  ) {
    result
  }
}
    `;
export const FetchAccounts = gql`
    query FetchAccounts {
  accounts {
    id
    accountNumber
    currency
    name
    nickname
    bankCharges
  }
}
    `;
export const FetchAccountSuggest = gql`
    query FetchAccountSuggest {
  accounts(options: {limit: 6}) {
    id
    accountNumber
    currency
    name
    nickname
    bankCharges
  }
}
    `;
export const AddWithdrawal = gql`
    mutation AddWithdrawal($objects: [withdrawals_insert_input!]!) {
  insert_withdrawals(objects: $objects) {
    affected_rows
  }
}
    `;
export const GetRequestFormForWithdrawal = gql`
    query GetRequestFormForWithdrawal($withdrawalId: uuid!) {
  withdrawals_by_pk(id: $withdrawalId) {
    type
    internalId
    referenceId
    toBeneficiaryId
    bankCharges
    parentBusiness {
      id
      nickname
      merchant {
        name
      }
    }
    toBeneficiary {
      beneficiaryName
      beneficiaryAddress
      customer {
        firstName
        lastName
        username
        country
        personalDocuments {
          type
          url
        }
      }
      merchant {
        firstName
        lastName
        country
        personalDocuments {
          type
          url
        }
      }
      bankName
      bankAddress
      bankCountry
      swiftCode
      accountNumber
      currency
      intermediaryBankName
      intermediaryBankAddress
      intermediaryBankSwift
      intermediaryBankRemarks
    }
    businessWallet {
      id
      currency
    }
    currency
    amount
    datePaid
    remarks
    invoiceUrl
    proofOfPaymentUrl
  }
}
    `;
export const GetBeneficiaryPayoutHistory = gql`
    query GetBeneficiaryPayoutHistory($withdrawalId: uuid!, $beneficiaryId: uuid!) {
  withdrawals(
    where: {id: {_neq: $withdrawalId}, toBeneficiaryId: {_eq: $beneficiaryId}, status: {_eq: PAID}}
    limit: 5
    order_by: {createdAt: desc}
  ) {
    internalId
    datePaid
    amount
    businessWallet {
      currency
    }
    fromAccount {
      name
    }
  }
}
    `;
export const SignUpMerchant = gql`
    mutation SignUpMerchant($merchantDetail: MerchantDetail!, $businessDetail: BusinessDetail!) {
  signupMerchant(
    merchantDetail: $merchantDetail
    businessDetail: $businessDetail
    accountList: []
  ) {
    message
    status
    data {
      businessId
      merchantId
    }
  }
}
    `;
export const AddSolutionsNeeded = gql`
    mutation AddSolutionsNeeded($businessId: ID!, $disconnect: BusinessSolutionsNeededDisconnectFieldInput, $create: BusinessSolutionsNeededCreateFieldInput!) {
  updateBusinesses(
    where: {id: $businessId}
    update: {solutionsNeeded: {disconnect: $disconnect, create: $create}}
  ) {
    info {
      nodesCreated
      nodesDeleted
      relationshipsCreated
      relationshipsDeleted
    }
    businesses {
      id
      solutionsNeeded {
        id
        alternateMethod {
          id
        }
        bankWire {
          id
        }
        creditCardProcessing {
          id
        }
        cryptoCurrency {
          id
        }
      }
    }
  }
}
    `;
export const OwnerInformation = gql`
    mutation OwnerInformation($input: [BusinessOwnerCreateInput!]!) {
  createBusinessOwners(input: $input) {
    info {
      nodesCreated
    }
  }
}
    `;
export const UploadPersonalDocuments = gql`
    mutation UploadPersonalDocuments($business: [BusinessDocumentCreateInput!]!, $personal: [PersonalDocumentCreateInput!]!) {
  createBusinessDocuments(input: $business) {
    businessDocuments {
      id
    }
  }
  createPersonalDocuments(input: $personal) {
    personalDocuments {
      id
    }
  }
}
    `;
export const UploadDocuments = gql`
    mutation UploadDocuments($business: [BusinessDocumentCreateInput!]!) {
  createBusinessDocuments(input: $business) {
    businessDocuments {
      id
    }
  }
}
    `;
export const AccountSearch = gql`
    query accountSearch($name: String) {
  accounts(
    where: {AND: [{OR: [{accountNumber_MATCHES: $name}, {bank: {name_MATCHES: $name}}, {name_MATCHES: $name}, {nickname_MATCHES: $name}]}]}
    options: {limit: 10, sort: {createdAt: DESC}}
  ) {
    id
    name
    accountNumber
    nickname
    bank {
      id
      name
    }
    currency
  }
}
    `;

export const FetchBankAccountDetailsDocument = gql`
    query FetchBankAccountDetails($limit: Int! = 10, $offset: Int! = 0, $order_by: [AccountSort!], $where: AccountWhere) {
  accounts(
    options: {sort: $order_by, limit: $limit, offset: $offset}
    where: $where
  ) {
    id
    name
    accountNumber
    bankCharges
    currency
    bank {
      id
      name
      swiftCode
    }
    nickname
  }
  accountsAggregate(where: $where) {
    count
  }
}
    `;

export function useFetchBankAccountDetailsQuery(options?: Omit<Urql.UseQueryArgs<FetchBankAccountDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBankAccountDetailsQuery, FetchBankAccountDetailsQueryVariables>({ query: FetchBankAccountDetailsDocument, ...options });
};
export const FetchBanksByNameDocument = gql`
    query fetchBanksByName($name: String!) {
  banks(where: {OR: [{name_MATCHES: $name}, {swiftCode_MATCHES: $name}]}) {
    id
    name
    swiftCode
    country
  }
}
    `;

export function useFetchBanksByNameQuery(options: Omit<Urql.UseQueryArgs<FetchBanksByNameQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBanksByNameQuery, FetchBanksByNameQueryVariables>({ query: FetchBanksByNameDocument, ...options });
};
export const FetchBanksSuggestionsDocument = gql`
    query fetchBanksSuggestions {
  banks(options: {limit: 6, sort: [{updatedAt: DESC}]}) {
    id
    name
    swiftCode
    country
  }
}
    `;

export function useFetchBanksSuggestionsQuery(options?: Omit<Urql.UseQueryArgs<FetchBanksSuggestionsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBanksSuggestionsQuery, FetchBanksSuggestionsQueryVariables>({ query: FetchBanksSuggestionsDocument, ...options });
};
export const CreateAccountsDocument = gql`
    mutation createAccounts($input: [AccountCreateInput!]!) {
  createAccounts(input: $input) {
    info {
      nodesCreated
      relationshipsCreated
    }
    accounts {
      id
      accountNumber
      nickname
      currency
    }
  }
}
    `;

export function useCreateAccountsMutation() {
  return Urql.useMutation<CreateAccountsMutation, CreateAccountsMutationVariables>(CreateAccountsDocument);
};
export const SuggestCountriesDocument = gql`
    query SuggestCountries {
  countries(options: {limit: 8}) {
    name
    code
  }
}
    `;

export function useSuggestCountriesQuery(options?: Omit<Urql.UseQueryArgs<SuggestCountriesQueryVariables>, 'query'>) {
  return Urql.useQuery<SuggestCountriesQuery, SuggestCountriesQueryVariables>({ query: SuggestCountriesDocument, ...options });
};
export const AllCountriesDocument = gql`
    query AllCountries {
  countries {
    code
    name
  }
}
    `;

export function useAllCountriesQuery(options?: Omit<Urql.UseQueryArgs<AllCountriesQueryVariables>, 'query'>) {
  return Urql.useQuery<AllCountriesQuery, AllCountriesQueryVariables>({ query: AllCountriesDocument, ...options });
};
export const CurrenciesDocument = gql`
    query currencies {
  currencies {
    code
    name
    symbol
    flagUrl
  }
}
    `;

export function useCurrenciesQuery(options?: Omit<Urql.UseQueryArgs<CurrenciesQueryVariables>, 'query'>) {
  return Urql.useQuery<CurrenciesQuery, CurrenciesQueryVariables>({ query: CurrenciesDocument, ...options });
};
export const CreateBanksDocument = gql`
    mutation createBanks($address: String!, $country: String!, $name: String!, $swiftCode: String!) {
  createBanks(
    input: {address: $address, country: $country, name: $name, swiftCode: $swiftCode}
  ) {
    banks {
      id
      name
      swiftCode
    }
    info {
      nodesCreated
    }
  }
}
    `;

export function useCreateBanksMutation() {
  return Urql.useMutation<CreateBanksMutation, CreateBanksMutationVariables>(CreateBanksDocument);
};
export const CreateIntermediaryAccountsDocument = gql`
    mutation CreateIntermediaryAccounts($intBankinput: [IntermediaryAccountCreateInput!]!, $accountInput: [AccountCreateInput!]!) {
  createIntermediaryAccounts(input: $intBankinput) {
    info {
      nodesCreated
    }
    intermediaryAccounts {
      id
    }
  }
  createAccounts(input: $accountInput) {
    info {
      nodesCreated
    }
    accounts {
      id
    }
  }
}
    `;

export function useCreateIntermediaryAccountsMutation() {
  return Urql.useMutation<CreateIntermediaryAccountsMutation, CreateIntermediaryAccountsMutationVariables>(CreateIntermediaryAccountsDocument);
};
export const AddIntermediaryAccountDocument = gql`
    mutation AddIntermediaryAccount($input: [IntermediaryAccountCreateInput!]!) {
  createIntermediaryAccounts(input: $input) {
    info {
      nodesCreated
    }
  }
}
    `;

export function useAddIntermediaryAccountMutation() {
  return Urql.useMutation<AddIntermediaryAccountMutation, AddIntermediaryAccountMutationVariables>(AddIntermediaryAccountDocument);
};
export const FEtchAccountDetailsDocument = gql`
    query FEtchAccountDetails($accountId: ID!) {
  accounts(where: {id: $accountId}) {
    id
    name
    accountNumber
    nickname
    bankCharges
    beneficiaryAddress
    currency
    bank {
      id
      name
      swiftCode
    }
  }
}
    `;

export function useFEtchAccountDetailsQuery(options: Omit<Urql.UseQueryArgs<FEtchAccountDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<FEtchAccountDetailsQuery, FEtchAccountDetailsQueryVariables>({ query: FEtchAccountDetailsDocument, ...options });
};
export const FetchBankLedgerTransactionsDocument = gql`
    query FetchBankLedgerTransactions($where: ledgers_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $accountId: ID, $order_by: [ledgers_order_by!]) {
  ledgers(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {
    id
    amount
    ledgerType
    fromLine1
    fromLine2
    toLine1
    toLine2
    currency
    transactionType
    childLedgers {
      id
      amount
    }
    createdAt
  }
  ledgers_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  accounts(where: {id: $accountId}) {
    bank {
      id
      name
      swiftCode
    }
    currency
    accountNumber
    balance
  }
}
    `;

export function useFetchBankLedgerTransactionsQuery(options?: Omit<Urql.UseQueryArgs<FetchBankLedgerTransactionsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBankLedgerTransactionsQuery, FetchBankLedgerTransactionsQueryVariables>({ query: FetchBankLedgerTransactionsDocument, ...options });
};
export const FetchBankDetailsDocument = gql`
    query FetchBankDetails($bankId: ID!) {
  banks(where: {id: $bankId}) {
    id
    name
    swiftCode
    address
    intermediaryAccounts {
      id
      bankName
      swiftCode
      currency
    }
    accounts {
      id
      accountNumber
      name
      nickname
      bank {
        swiftCode
      }
      currency
      balance
    }
  }
}
    `;

export function useFetchBankDetailsQuery(options: Omit<Urql.UseQueryArgs<FetchBankDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBankDetailsQuery, FetchBankDetailsQueryVariables>({ query: FetchBankDetailsDocument, ...options });
};
export const EditAccountDetailsDocument = gql`
    mutation EditAccountDetails($id: ID!, $update: AccountUpdateInput) {
  updateAccounts(where: {id: $id}, update: $update) {
    accounts {
      id
    }
  }
}
    `;

export function useEditAccountDetailsMutation() {
  return Urql.useMutation<EditAccountDetailsMutation, EditAccountDetailsMutationVariables>(EditAccountDetailsDocument);
};
export const EditBankDetailsDocument = gql`
    mutation EditBankDetails($id: ID!, $update: BankUpdateInput) {
  updateBanks(where: {id: $id}, update: $update) {
    banks {
      id
    }
  }
}
    `;

export function useEditBankDetailsMutation() {
  return Urql.useMutation<EditBankDetailsMutation, EditBankDetailsMutationVariables>(EditBankDetailsDocument);
};
export const UpdateIntermediaryAccountDocument = gql`
    mutation UpdateIntermediaryAccount($id: ID!, $update: IntermediaryAccountUpdateInput) {
  updateIntermediaryAccounts(where: {id: $id}, update: $update) {
    intermediaryAccounts {
      id
    }
  }
}
    `;

export function useUpdateIntermediaryAccountMutation() {
  return Urql.useMutation<UpdateIntermediaryAccountMutation, UpdateIntermediaryAccountMutationVariables>(UpdateIntermediaryAccountDocument);
};
export const GetAllLogsDocument = gql`
    query getAllLogs($limit: Int!, $offset: Int!, $order_by: [activityLogs_order_by!], $where: activityLogs_bool_exp) {
  activityLogs(limit: $limit, offset: $offset, order_by: $order_by, where: $where) {
    id
    featureType
    message
    actionBySuperAdmin {
      id
      name
    }
    actionBySubAdmin {
      name
      id
    }
    actionByMerchant {
      id
      firstName
    }
    deposit {
      id
    }
    ledger {
      id
    }
    withdrawal {
      id
    }
    task {
      id
    }
    taskId
    withdrawalId
    depositId
    createdAt
    updatedAt
  }
  activityLogs_aggregate(where: $where) {
    aggregate {
      count(columns: id)
    }
  }
}
    `;

export function useGetAllLogsQuery(options: Omit<Urql.UseQueryArgs<GetAllLogsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllLogsQuery, GetAllLogsQueryVariables>({ query: GetAllLogsDocument, ...options });
};
export const FetchDashboardMerchantsDocument = gql`
    query FetchDashboardMerchants {
  merchants(options: {limit: 5}) {
    id
    firstName
    lastName
  }
}
    `;

export function useFetchDashboardMerchantsQuery(options?: Omit<Urql.UseQueryArgs<FetchDashboardMerchantsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchDashboardMerchantsQuery, FetchDashboardMerchantsQueryVariables>({ query: FetchDashboardMerchantsDocument, ...options });
};
export const FetchDashboardDepositsDocument = gql`
    query FetchDashboardDeposits {
  deposits(
    where: {status: {_eq: NEW}}
    limit: 5
    order_by: {amountReceivedDate: desc}
  ) {
    id
    referenceId
    status
    createdAt
  }
}
    `;

export function useFetchDashboardDepositsQuery(options?: Omit<Urql.UseQueryArgs<FetchDashboardDepositsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchDashboardDepositsQuery, FetchDashboardDepositsQueryVariables>({ query: FetchDashboardDepositsDocument, ...options });
};
export const FetchDashboardTasksDocument = gql`
    query FetchDashboardTasks {
  tasks(limit: 5, order_by: {endDate: desc}, where: {status: {_neq: COMPLETED}}) {
    id
    description
    status
    endDate
  }
  assignedToMeTask: tasks_aggregate(where: {_and: [{status: {_eq: ASSIGNED}}]}) {
    aggregate {
      count
    }
  }
  assignedTask: tasks_aggregate(where: {status: {_eq: ASSIGNED}}) {
    aggregate {
      count
    }
  }
  completedTask: tasks_aggregate(where: {status: {_eq: COMPLETED}}) {
    aggregate {
      count
    }
  }
  pendingTask: tasks_aggregate(where: {status: {_eq: PENDING}}) {
    aggregate {
      count
    }
  }
}
    `;

export function useFetchDashboardTasksQuery(options?: Omit<Urql.UseQueryArgs<FetchDashboardTasksQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchDashboardTasksQuery, FetchDashboardTasksQueryVariables>({ query: FetchDashboardTasksDocument, ...options });
};
export const FetchAllConversationsDocument = gql`
    subscription FetchAllConversations {
  conversations(order_by: {updatedAt: desc}, limit: 5) {
    id
    updatedAt
    businessId
    depositId
    withdrawalId
    messages(order_by: {updatedAt: desc}, limit: 1) {
      content
      type
    }
  }
}
    `;

export function useFetchAllConversationsSubscription<TData = FetchAllConversationsSubscription>(options: Omit<Urql.UseSubscriptionArgs<FetchAllConversationsSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<FetchAllConversationsSubscription, TData>) {
  return Urql.useSubscription<FetchAllConversationsSubscription, TData, FetchAllConversationsSubscriptionVariables>({ query: FetchAllConversationsDocument, ...options }, handler);
};
export const FetchBusinessIdDocument = gql`
    query FetchBusinessId($businessId: ID!) {
  businesses(where: {id: $businessId}) {
    id
    name
    nickname
    merchant {
      id
    }
  }
}
    `;

export function useFetchBusinessIdQuery(options: Omit<Urql.UseQueryArgs<FetchBusinessIdQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBusinessIdQuery, FetchBusinessIdQueryVariables>({ query: FetchBusinessIdDocument, ...options });
};
export const RollingReservesDocument = gql`
    query RollingReserves($code: String) {
  rollingReserves_aggregate(
    where: {_and: [{status: {_eq: UNRELEASED}}, {currency: {_eq: $code}}]}
  ) {
    aggregate {
      sum {
        amount
      }
    }
  }
}
    `;

export function useRollingReservesQuery(options?: Omit<Urql.UseQueryArgs<RollingReservesQueryVariables>, 'query'>) {
  return Urql.useQuery<RollingReservesQuery, RollingReservesQueryVariables>({ query: RollingReservesDocument, ...options });
};
export const DepositVolumeDocument = gql`
    query DepositVolume($aggregate_by: String, $fromdate: timestamptz, $todate: timestamptz, $tformat: String, $xformat: String, $fromDate: date, $toDate: date, $code: String) {
  depositVolumeGraphWithCurrency(
    args: {aggregate_by: $aggregate_by, fromdate: $fromdate, todate: $todate, tformat: $tformat, xformat: $xformat, currency_code: $code}
  ) {
    x
    y
    t
  }
  dailyDepositVolume_aggregate(
    where: {_and: [{currency: {_eq: $code}}, {date: {_gte: $fromDate}}, {date: {_lte: $toDate}}]}
  ) {
    aggregate {
      sum {
        b2b
        c2b
      }
    }
  }
}
    `;

export function useDepositVolumeQuery(options?: Omit<Urql.UseQueryArgs<DepositVolumeQueryVariables>, 'query'>) {
  return Urql.useQuery<DepositVolumeQuery, DepositVolumeQueryVariables>({ query: DepositVolumeDocument, ...options });
};
export const WithdrawalVolumeDocument = gql`
    query WithdrawalVolume($aggregate_by: String, $fromdate: timestamptz, $todate: timestamptz, $tformat: String, $xformat: String, $fromDate: date, $toDate: date, $code: String) {
  withdrawalVolumeGraphWithCurrency(
    args: {aggregate_by: $aggregate_by, fromdate: $fromdate, todate: $todate, tformat: $tformat, xformat: $xformat, currency_code: $code}
  ) {
    x
    y
    t
  }
  dailyWithdrawalVolume_aggregate(
    where: {_and: [{currency: {_eq: $code}}, {date: {_gte: $fromDate}}, {date: {_lte: $toDate}}]}
  ) {
    aggregate {
      sum {
        payout
        settlement
      }
    }
  }
}
    `;

export function useWithdrawalVolumeQuery(options?: Omit<Urql.UseQueryArgs<WithdrawalVolumeQueryVariables>, 'query'>) {
  return Urql.useQuery<WithdrawalVolumeQuery, WithdrawalVolumeQueryVariables>({ query: WithdrawalVolumeDocument, ...options });
};
export const CommissionVolumeDocument = gql`
    query CommissionVolume($aggregate_by: String, $fromdate: timestamptz, $todate: timestamptz, $tformat: String, $xformat: String, $fromDate: date, $toDate: date, $code: String) {
  commissionVolumeGraph(
    args: {aggregate_by: $aggregate_by, fromdate: $fromdate, todate: $todate, tformat: $tformat, xformat: $xformat, currency_code: $code}
  ) {
    x
    y
    t
  }
  dailyCommissionVolume_aggregate(
    where: {_and: [{currency: {_eq: $code}}, {date: {_gte: $fromDate}}, {date: {_lte: $toDate}}]}
  ) {
    aggregate {
      sum {
        c2b
        b2b
        payout
      }
    }
  }
}
    `;

export function useCommissionVolumeQuery(options?: Omit<Urql.UseQueryArgs<CommissionVolumeQueryVariables>, 'query'>) {
  return Urql.useQuery<CommissionVolumeQuery, CommissionVolumeQueryVariables>({ query: CommissionVolumeDocument, ...options });
};
export const FetchCustomersDocument = gql`
    query FetchCustomers($offset: Int = 0, $limit: Int = 10, $order_by: [CustomerSort!], $where: CustomerWhere) {
  customers(
    options: {sort: $order_by, offset: $offset, limit: $limit}
    where: $where
  ) {
    id
    firstName
    lastName
    username
    kycStatus
    parentBrand {
      business {
        name
      }
    }
    beneficiaries {
      id
      beneficiaryName
    }
  }
  customersAggregate(where: $where) {
    count
  }
}
    `;

export function useFetchCustomersQuery(options?: Omit<Urql.UseQueryArgs<FetchCustomersQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchCustomersQuery, FetchCustomersQueryVariables>({ query: FetchCustomersDocument, ...options });
};
export const GetCustomerDetailsDocument = gql`
    query GetCustomerDetails($id: ID!) {
  customers(where: {id: $id}) {
    id
    firstName
    lastName
    username
    phone
    email
    dateOfBirth
    idNumber
    address
    kycStatus
    createdAt
    country
    parentBrand {
      business {
        name
      }
    }
    beneficiaries {
      id
      beneficiaryName
      accountNumber
      currency
      accountType
      bankName
      swiftCode
      bankAddress
      beneficiaryAddress
      beneficiaryCountry
      bankCountry
      remarks
      intermediaryBankName
      intermediaryBankSwift
      intermediaryBankAddress
      intermediaryBankRemarks
    }
    personalDocuments(where: {isDeleted: false}) {
      id
      name
      url
      type
    }
  }
}
    `;

export function useGetCustomerDetailsQuery(options: Omit<Urql.UseQueryArgs<GetCustomerDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetCustomerDetailsQuery, GetCustomerDetailsQueryVariables>({ query: GetCustomerDetailsDocument, ...options });
};
export const FetchAllBusinessDocument = gql`
    query FetchAllBusiness($name: String) {
  businesses(
    options: {limit: 5}
    where: {AND: [{name_MATCHES: $name}, {status: VERIFIED}]}
  ) {
    id
    name
    nickname
    businessWallets {
      id
      balance
      currency
    }
  }
}
    `;

export function useFetchAllBusinessQuery(options?: Omit<Urql.UseQueryArgs<FetchAllBusinessQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchAllBusinessQuery, FetchAllBusinessQueryVariables>({ query: FetchAllBusinessDocument, ...options });
};
export const UpdateCustomerKycStatusDocument = gql`
    mutation updateCustomerKycStatus($id: ID!, $status: KycStatus!) {
  updateCustomers(where: {id: $id}, update: {kycStatus: $status}) {
    customers {
      kycStatus
    }
  }
}
    `;

export function useUpdateCustomerKycStatusMutation() {
  return Urql.useMutation<UpdateCustomerKycStatusMutation, UpdateCustomerKycStatusMutationVariables>(UpdateCustomerKycStatusDocument);
};
export const DeleteCustomerKycDocumentsDocument = gql`
    mutation DeleteCustomerKycDocuments($id: ID, $update: PersonalDocumentUpdateInput = {isDeleted: false}) {
  updatePersonalDocuments(update: $update, where: {id: $id}) {
    personalDocuments {
      id
    }
  }
}
    `;

export function useDeleteCustomerKycDocumentsMutation() {
  return Urql.useMutation<DeleteCustomerKycDocumentsMutation, DeleteCustomerKycDocumentsMutationVariables>(DeleteCustomerKycDocumentsDocument);
};
export const AddCustomerBeneficiaryDocument = gql`
    mutation AddCustomerBeneficiary($input: [BeneficiaryCreateInput!]!) {
  createBeneficiaries(input: $input) {
    beneficiaries {
      id
    }
  }
}
    `;

export function useAddCustomerBeneficiaryMutation() {
  return Urql.useMutation<AddCustomerBeneficiaryMutation, AddCustomerBeneficiaryMutationVariables>(AddCustomerBeneficiaryDocument);
};
export const UpdateBeneficiaryByIdDocument = gql`
    mutation updateBeneficiaryById($where: BeneficiaryWhere, $update: BeneficiaryUpdateInput) {
  updateBeneficiaries(where: $where, update: $update) {
    beneficiaries {
      id
    }
  }
}
    `;

export function useUpdateBeneficiaryByIdMutation() {
  return Urql.useMutation<UpdateBeneficiaryByIdMutation, UpdateBeneficiaryByIdMutationVariables>(UpdateBeneficiaryByIdDocument);
};
export const UpdateCustomerByIdDocument = gql`
    mutation updateCustomerById($where: CustomerWhere = {id: ""}, $update: CustomerUpdateInput = {}) {
  updateCustomers(where: $where, update: $update) {
    customers {
      id
    }
  }
}
    `;

export function useUpdateCustomerByIdMutation() {
  return Urql.useMutation<UpdateCustomerByIdMutation, UpdateCustomerByIdMutationVariables>(UpdateCustomerByIdDocument);
};
export const CheckCustomerUsernameExistsDocument = gql`
    query CheckCustomerUsernameExists($username: String!) {
  customersAggregate(where: {username: $username}) {
    count
  }
}
    `;

export function useCheckCustomerUsernameExistsQuery(options: Omit<Urql.UseQueryArgs<CheckCustomerUsernameExistsQueryVariables>, 'query'>) {
  return Urql.useQuery<CheckCustomerUsernameExistsQuery, CheckCustomerUsernameExistsQueryVariables>({ query: CheckCustomerUsernameExistsDocument, ...options });
};
export const QueryDepositsDocument = gql`
    query QueryDeposits($where: deposits_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $order_by: [deposits_order_by!]) {
  deposits(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {
    id
    internalId
    tags
    referenceId
    amountReceived
    amountReceivedDate
    refundedDate
    refundedAmount
    cancelledDate
    createdAt
    status
    type
    productPrice
    productName
    invoiceUrl
    invoiceDate
    proofOfPaymentUrl
    signedInvoiceUrl
    toAccountId
    remarks
    tasks {
      id
      assignedToUser {
        id
        name
        userType
      }
    }
    fromCustomer {
      id
      firstName
      lastName
      kycStatus
      username
      personalDocuments {
        id
        name
        url
        type
      }
    }
    businessWallet {
      id
      currency
    }
    parentBusiness {
      id
      name
      nickname
      merchant {
        id
        name
      }
    }
    createdByMerchant {
      name
      userType
    }
    createdBySubAdmin {
      name
      userType
    }
    createdBySuperAdmin {
      name
      userType
    }
    createdByUser {
      id
      name
      userType
    }
    tasks_aggregate {
      aggregate {
        count
      }
    }
    toAccount {
      nickname
    }
  }
  deposits_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;

export function useQueryDepositsQuery(options?: Omit<Urql.UseQueryArgs<QueryDepositsQueryVariables>, 'query'>) {
  return Urql.useQuery<QueryDepositsQuery, QueryDepositsQueryVariables>({ query: QueryDepositsDocument, ...options });
};
export const FetchBusinessesDocument = gql`
    query FetchBusinesses($name: String) {
  businesses(
    where: {OR: [{AND: [{name_MATCHES: $name}, {status: VERIFIED}]}, {merchant: {firstName_MATCHES: $name}}, {merchant: {lastName_MATCHES: $name}}]}
  ) {
    id
    name
    nickname
    merchant {
      name
    }
    brands {
      id
      name
    }
    businessWallets {
      id
      balance
      currency
    }
  }
}
    `;

export function useFetchBusinessesQuery(options?: Omit<Urql.UseQueryArgs<FetchBusinessesQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBusinessesQuery, FetchBusinessesQueryVariables>({ query: FetchBusinessesDocument, ...options });
};
export const FetchAdminsDocument = gql`
    query FetchAdmins {
  subAdmins {
    id
    name
  }
  superAdmins {
    id
    name
  }
}
    `;

export function useFetchAdminsQuery(options?: Omit<Urql.UseQueryArgs<FetchAdminsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchAdminsQuery, FetchAdminsQueryVariables>({ query: FetchAdminsDocument, ...options });
};
export const UpdateTasksDocument = gql`
    mutation updateTasks($taskId: uuid!, $assigneeId: uuid!) {
  update_tasks_by_pk(pk_columns: {id: $taskId}, _set: {assignedToId: $assigneeId}) {
    id
    assignedToId
  }
}
    `;

export function useUpdateTasksMutation() {
  return Urql.useMutation<UpdateTasksMutation, UpdateTasksMutationVariables>(UpdateTasksDocument);
};
export const UpdateWithdrawalTaskDocument = gql`
    mutation updateWithdrawalTask($taskId: uuid!, $assigneeId: uuid!, $fromAccountId: uuid, $txId: uuid!) {
  update_tasks_by_pk(pk_columns: {id: $taskId}, _set: {assignedToId: $assigneeId}) {
    id
    assignedToId
  }
  update_withdrawals_by_pk(
    pk_columns: {id: $txId}
    _set: {fromAccountId: $fromAccountId}
  ) {
    id
  }
}
    `;

export function useUpdateWithdrawalTaskMutation() {
  return Urql.useMutation<UpdateWithdrawalTaskMutation, UpdateWithdrawalTaskMutationVariables>(UpdateWithdrawalTaskDocument);
};
export const UpdateDepositDocsDocument = gql`
    mutation updateDepositDocs($id: uuid!, $urlData: deposits_set_input!) {
  update_deposits_by_pk(pk_columns: {id: $id}, _set: $urlData) {
    id
    signedInvoiceUrl
    proofOfPaymentUrl
  }
}
    `;

export function useUpdateDepositDocsMutation() {
  return Urql.useMutation<UpdateDepositDocsMutation, UpdateDepositDocsMutationVariables>(UpdateDepositDocsDocument);
};
export const UpdateDepositStatusDocument = gql`
    mutation updateDepositStatus($amountReceived: numeric, $amountReceivedDate: timestamp, $status: String!, $signedInvoiceUrl: String, $refundedDate: timestamp, $refundedAmount: numeric, $id: uuid!, $cancelledDate: timestamp, $proofOfPaymentUrl: String) {
  updateDepositStatus(
    data: {amountReceived: $amountReceived, amountReceivedDate: $amountReceivedDate, id: $id, status: $status, refundedAmount: $refundedAmount, refundedDate: $refundedDate, signedInvoiceUrl: $signedInvoiceUrl, cancelledDate: $cancelledDate, proofOfPaymentUrl: $proofOfPaymentUrl}
  ) {
    status
    data {
      status
    }
  }
}
    `;

export function useUpdateDepositStatusMutation() {
  return Urql.useMutation<UpdateDepositStatusMutation, UpdateDepositStatusMutationVariables>(UpdateDepositStatusDocument);
};
export const DuplicateDepositDocument = gql`
    mutation DuplicateDeposit($businessWalletId: uuid!, $currency: String!, $fromCustomerId: uuid!, $invoiceDate: timestamptz!, $parentBusinessId: uuid!, $productName: String!, $productPrice: numeric, $tags: jsonb, $toAccountId: uuid!, $type: depositTypes_enum!, $referenceId: String!, $remarks: String!) {
  insert_deposits_one(
    object: {businessWalletId: $businessWalletId, currency: $currency, fromCustomerId: $fromCustomerId, invoiceDate: $invoiceDate, parentBusinessId: $parentBusinessId, productName: $productName, productPrice: $productPrice, status: NEW, tags: $tags, toAccountId: $toAccountId, type: $type, referenceId: $referenceId, remarks: $remarks}
  ) {
    id
  }
}
    `;

export function useDuplicateDepositMutation() {
  return Urql.useMutation<DuplicateDepositMutation, DuplicateDepositMutationVariables>(DuplicateDepositDocument);
};
export const FetchAllAccountsDocument = gql`
    query FetchAllAccounts {
  accounts {
    id
    accountNumber
    currency
    name
    nickname
  }
}
    `;

export function useFetchAllAccountsQuery(options?: Omit<Urql.UseQueryArgs<FetchAllAccountsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchAllAccountsQuery, FetchAllAccountsQueryVariables>({ query: FetchAllAccountsDocument, ...options });
};
export const GetLastUsedBusinessDataDocument = gql`
    query GetLastUsedBusinessData {
  deposits(limit: 10, order_by: {createdAt: desc}) {
    parentBusiness {
      id
      name
      nickname
      merchant {
        name
      }
    }
  }
}
    `;

export function useGetLastUsedBusinessDataQuery(options?: Omit<Urql.UseQueryArgs<GetLastUsedBusinessDataQueryVariables>, 'query'>) {
  return Urql.useQuery<GetLastUsedBusinessDataQuery, GetLastUsedBusinessDataQueryVariables>({ query: GetLastUsedBusinessDataDocument, ...options });
};
export const GetLastUsedAccountDataDocument = gql`
    query GetLastUsedAccountData($businessId: uuid!) {
  deposits(
    limit: 10
    order_by: {createdAt: desc}
    where: {parentBusinessId: {_eq: $businessId}}
  ) {
    parentBusiness {
      businessWallets {
        id
        accounts {
          id
          nickname
          currency
          accountNumber
        }
      }
    }
  }
}
    `;

export function useGetLastUsedAccountDataQuery(options: Omit<Urql.UseQueryArgs<GetLastUsedAccountDataQueryVariables>, 'query'>) {
  return Urql.useQuery<GetLastUsedAccountDataQuery, GetLastUsedAccountDataQueryVariables>({ query: GetLastUsedAccountDataDocument, ...options });
};
export const GetLastUsedCustomerDataDocument = gql`
    query GetLastUsedCustomerData($businessId: uuid!) {
  deposits(
    limit: 10
    order_by: {createdAt: desc}
    where: {parentBusinessId: {_eq: $businessId}}
  ) {
    fromCustomer {
      id
      username
      firstName
      lastName
    }
  }
}
    `;

export function useGetLastUsedCustomerDataQuery(options: Omit<Urql.UseQueryArgs<GetLastUsedCustomerDataQueryVariables>, 'query'>) {
  return Urql.useQuery<GetLastUsedCustomerDataQuery, GetLastUsedCustomerDataQueryVariables>({ query: GetLastUsedCustomerDataDocument, ...options });
};
export const GetLastUsedProductDataDocument = gql`
    query GetLastUsedProductData($businessId: uuid!) {
  deposits(
    where: {parentBusinessId: {_eq: $businessId}}
    limit: 10
    order_by: {createdAt: desc}
  ) {
    productName
    productPrice
  }
}
    `;

export function useGetLastUsedProductDataQuery(options: Omit<Urql.UseQueryArgs<GetLastUsedProductDataQueryVariables>, 'query'>) {
  return Urql.useQuery<GetLastUsedProductDataQuery, GetLastUsedProductDataQueryVariables>({ query: GetLastUsedProductDataDocument, ...options });
};
export const GetLastUsedTagsDocument = gql`
    query GetLastUsedTags($businessId: uuid!) {
  deposits(
    where: {parentBusinessId: {_eq: $businessId}}
    limit: 10
    order_by: {createdAt: desc}
  ) {
    tags
  }
}
    `;

export function useGetLastUsedTagsQuery(options: Omit<Urql.UseQueryArgs<GetLastUsedTagsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetLastUsedTagsQuery, GetLastUsedTagsQueryVariables>({ query: GetLastUsedTagsDocument, ...options });
};
export const GetAccountsForBusinessDocument = gql`
    query GetAccountsForBusiness($businessId: ID!, $name: String!) {
  businesses(
    where: {id: $businessId, OR: [{businessWallets_SOME: {accounts_SOME: {nickname_MATCHES: $name}}}, {businessWallets_SOME: {accounts_SOME: {accountNumber_MATCHES: $name}}}]}
  ) {
    businessWallets {
      id
      accounts {
        id
        currency
        nickname
        accountNumber
      }
    }
  }
}
    `;

export function useGetAccountsForBusinessQuery(options: Omit<Urql.UseQueryArgs<GetAccountsForBusinessQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAccountsForBusinessQuery, GetAccountsForBusinessQueryVariables>({ query: GetAccountsForBusinessDocument, ...options });
};
export const GetCustomerForBusinessDocument = gql`
    query GetCustomerForBusiness($businessId: ID!, $name: String!) {
  customers(
    where: {AND: [{parentBrand: {business: {id: $businessId}}}, {OR: [{firstName_MATCHES: $name}, {lastName_MATCHES: $name}, {username_MATCHES: $name}]}]}
  ) {
    id
    username
    firstName
    lastName
  }
}
    `;

export function useGetCustomerForBusinessQuery(options: Omit<Urql.UseQueryArgs<GetCustomerForBusinessQueryVariables>, 'query'>) {
  return Urql.useQuery<GetCustomerForBusinessQuery, GetCustomerForBusinessQueryVariables>({ query: GetCustomerForBusinessDocument, ...options });
};
export const GetBrandsForBusinessDocument = gql`
    query GetBrandsForBusiness($businessId: ID!, $name: String!) {
  brands(where: {business: {id: $businessId}, name_MATCHES: $name}) {
    name
    id
  }
}
    `;

export function useGetBrandsForBusinessQuery(options: Omit<Urql.UseQueryArgs<GetBrandsForBusinessQueryVariables>, 'query'>) {
  return Urql.useQuery<GetBrandsForBusinessQuery, GetBrandsForBusinessQueryVariables>({ query: GetBrandsForBusinessDocument, ...options });
};
export const AddDepositDocument = gql`
    mutation addDeposit($depositsData: [deposits_insert_input!]!) {
  insert_deposits(objects: $depositsData) {
    affected_rows
  }
}
    `;

export function useAddDepositMutation() {
  return Urql.useMutation<AddDepositMutation, AddDepositMutationVariables>(AddDepositDocument);
};
export const GetDepositInvoiceDetailsDocument = gql`
    query GetDepositInvoiceDetails($depositId: uuid!) {
  deposits_by_pk(id: $depositId) {
    createdAt
    referenceId
    fromCustomer {
      firstName
      lastName
      email
      phone
      address
      country
    }
    businessWallet {
      currency
    }
    parentBusiness {
      name
      nickname
      website
      logoUrl
      merchant {
        name
        country
        email
        website
      }
    }
    productName
    productPrice
    currency
    amountReceived
    toAccount {
      name
      beneficiaryAddress
      accountNumber
      bank {
        name
        address
        swiftCode
      }
    }
    remarks
  }
}
    `;

export function useGetDepositInvoiceDetailsQuery(options: Omit<Urql.UseQueryArgs<GetDepositInvoiceDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetDepositInvoiceDetailsQuery, GetDepositInvoiceDetailsQueryVariables>({ query: GetDepositInvoiceDetailsDocument, ...options });
};
export const UpdateDepositByIdDocument = gql`
    mutation updateDepositById($id: uuid, $_set: deposits_set_input) {
  update_deposits(where: {id: {_eq: $id}}, _set: $_set) {
    affected_rows
  }
}
    `;

export function useUpdateDepositByIdMutation() {
  return Urql.useMutation<UpdateDepositByIdMutation, UpdateDepositByIdMutationVariables>(UpdateDepositByIdDocument);
};
export const UpdateWithdrawalByIdDocument = gql`
    mutation updateWithdrawalById($id: uuid, $_set: withdrawals_set_input) {
  update_withdrawals(where: {id: {_eq: $id}}, _set: $_set) {
    affected_rows
  }
}
    `;

export function useUpdateWithdrawalByIdMutation() {
  return Urql.useMutation<UpdateWithdrawalByIdMutation, UpdateWithdrawalByIdMutationVariables>(UpdateWithdrawalByIdDocument);
};
export const BusinessDataByIdDocument = gql`
    query BusinessDataById($id: ID) {
  businesses(where: {id: $id}) {
    name
    id
    nickname
    merchant {
      name
    }
  }
}
    `;

export function useBusinessDataByIdQuery(options?: Omit<Urql.UseQueryArgs<BusinessDataByIdQueryVariables>, 'query'>) {
  return Urql.useQuery<BusinessDataByIdQuery, BusinessDataByIdQueryVariables>({ query: BusinessDataByIdDocument, ...options });
};
export const InsertDepositAndLedgerDocument = gql`
    mutation insertDepositAndLedger($data: [CreateDepositInput!]!) {
  createDeposits(data: $data) {
    message
  }
}
    `;

export function useInsertDepositAndLedgerMutation() {
  return Urql.useMutation<InsertDepositAndLedgerMutation, InsertDepositAndLedgerMutationVariables>(InsertDepositAndLedgerDocument);
};
export const BusinessesDocument = gql`
    query businesses($name: String) {
  businesses(
    where: {OR: [{AND: [{name_MATCHES: $name}, {status: VERIFIED}]}, {merchant: {firstName_MATCHES: $name}}, {merchant: {lastName_MATCHES: $name}}]}
  ) {
    id
    name
    nickname
    merchant {
      name
    }
    brands {
      id
      name
    }
    businessWallets {
      id
      balance
      currency
    }
  }
}
    `;

export function useBusinessesQuery(options?: Omit<Urql.UseQueryArgs<BusinessesQueryVariables>, 'query'>) {
  return Urql.useQuery<BusinessesQuery, BusinessesQueryVariables>({ query: BusinessesDocument, ...options });
};
export const ConversationsDocument = gql`
    subscription conversations {
  conversations(order_by: {updatedAt: desc}) {
    id
    updatedAt
    businessId
    depositId
    withdrawalId
    status
    messages(order_by: {updatedAt: desc}, limit: 1) {
      content
      type
    }
  }
}
    `;

export function useConversationsSubscription<TData = ConversationsSubscription>(options: Omit<Urql.UseSubscriptionArgs<ConversationsSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<ConversationsSubscription, TData>) {
  return Urql.useSubscription<ConversationsSubscription, TData, ConversationsSubscriptionVariables>({ query: ConversationsDocument, ...options }, handler);
};
export const BusinessByIdDocument = gql`
    query businessById($businessId: ID!) {
  businesses(where: {id: $businessId}) {
    id
    name
    nickname
    merchant {
      id
    }
  }
}
    `;

export function useBusinessByIdQuery(options: Omit<Urql.UseQueryArgs<BusinessByIdQueryVariables>, 'query'>) {
  return Urql.useQuery<BusinessByIdQuery, BusinessByIdQueryVariables>({ query: BusinessByIdDocument, ...options });
};
export const ConversationCategoriesDocument = gql`
    query conversationCategories {
  conversationCategories {
    id
    category
  }
}
    `;

export function useConversationCategoriesQuery(options?: Omit<Urql.UseQueryArgs<ConversationCategoriesQueryVariables>, 'query'>) {
  return Urql.useQuery<ConversationCategoriesQuery, ConversationCategoriesQueryVariables>({ query: ConversationCategoriesDocument, ...options });
};
export const CreateConversationDocument = gql`
    mutation CreateConversation($businessId: uuid!, $categoryId: Int!, $content: String!, $adminId: uuid!, $type: messageTypes_enum, $depositId: uuid, $withdrawalId: uuid) {
  insert_conversations_one(
    object: {adminRead: true, businessId: $businessId, categoryId: $categoryId, merchantRead: false, depositId: $depositId, withdrawalId: $withdrawalId, messages: {data: {content: $content, type: $type, adminId: $adminId}}}
  ) {
    id
  }
}
    `;

export function useCreateConversationMutation() {
  return Urql.useMutation<CreateConversationMutation, CreateConversationMutationVariables>(CreateConversationDocument);
};
export const MessagesDocument = gql`
    query messages($conversationId: uuid!) {
  messages(limit: 100, order_by: {createdAt: desc}) {
    id
    adminId
    merchantId
    content
    createdAt
    conversationId
    type
  }
}
    `;

export function useMessagesQuery(options: Omit<Urql.UseQueryArgs<MessagesQueryVariables>, 'query'>) {
  return Urql.useQuery<MessagesQuery, MessagesQueryVariables>({ query: MessagesDocument, ...options });
};
export const MessagesSubsDocument = gql`
    subscription messagesSubs($conversationId: uuid!) {
  messages(
    limit: 100
    where: {conversationId: {_eq: $conversationId}}
    order_by: {createdAt: desc}
  ) {
    id
    adminId
    merchantId
    content
    createdAt
    conversationId
    type
  }
}
    `;

export function useMessagesSubsSubscription<TData = MessagesSubsSubscription>(options: Omit<Urql.UseSubscriptionArgs<MessagesSubsSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<MessagesSubsSubscription, TData>) {
  return Urql.useSubscription<MessagesSubsSubscription, TData, MessagesSubsSubscriptionVariables>({ query: MessagesSubsDocument, ...options }, handler);
};
export const ConversationsSubsDocument = gql`
    subscription conversationsSubs {
  conversations(order_by: {updatedAt: desc}) {
    id
    merchantRead
    updatedAt
    categoryId
    conversationCategory {
      id
      category
    }
    businessId
    adminRead
    status
    depositId
    deposit {
      referenceId
    }
    withdrawalId
    withdrawal {
      referenceId
    }
    messages(order_by: {updatedAt: desc}, limit: 1) {
      content
      type
    }
  }
}
    `;

export function useConversationsSubsSubscription<TData = ConversationsSubsSubscription>(options: Omit<Urql.UseSubscriptionArgs<ConversationsSubsSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<ConversationsSubsSubscription, TData>) {
  return Urql.useSubscription<ConversationsSubsSubscription, TData, ConversationsSubsSubscriptionVariables>({ query: ConversationsSubsDocument, ...options }, handler);
};
export const ConversationssDocument = gql`
    subscription conversationss($businessIds: [uuid!]) {
  conversations(
    where: {businessId: {_in: $businessIds}}
    order_by: {updatedAt: desc}
  ) {
    id
    merchantRead
    updatedAt
    categoryId
    conversationCategory {
      id
      category
    }
    businessId
    status
    adminRead
    depositId
    deposit {
      referenceId
    }
    withdrawalId
    withdrawal {
      referenceId
    }
    messages(order_by: {updatedAt: desc}, limit: 1) {
      content
      type
    }
  }
}
    `;

export function useConversationssSubscription<TData = ConversationssSubscription>(options: Omit<Urql.UseSubscriptionArgs<ConversationssSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<ConversationssSubscription, TData>) {
  return Urql.useSubscription<ConversationssSubscription, TData, ConversationssSubscriptionVariables>({ query: ConversationssDocument, ...options }, handler);
};
export const BusinessesMerchantDocument = gql`
    query businessesMerchant($merchantId: ID!) {
  businesses(where: {merchant: {id: $merchantId}}) {
    id
    name
    merchant {
      id
    }
  }
}
    `;

export function useBusinessesMerchantQuery(options: Omit<Urql.UseQueryArgs<BusinessesMerchantQueryVariables>, 'query'>) {
  return Urql.useQuery<BusinessesMerchantQuery, BusinessesMerchantQueryVariables>({ query: BusinessesMerchantDocument, ...options });
};
export const BusinessesAllDocument = gql`
    query businessesAll {
  businesses {
    id
    name
    merchant {
      id
    }
  }
}
    `;

export function useBusinessesAllQuery(options?: Omit<Urql.UseQueryArgs<BusinessesAllQueryVariables>, 'query'>) {
  return Urql.useQuery<BusinessesAllQuery, BusinessesAllQueryVariables>({ query: BusinessesAllDocument, ...options });
};
export const Insert_Messages_OneDocument = gql`
    mutation insert_messages_one($conversationId: uuid!, $content: String!, $adminId: uuid, $merchantId: uuid, $type: messageTypes_enum) {
  insert_messages_one(
    object: {conversationId: $conversationId, type: $type, content: $content, adminId: $adminId, merchantId: $merchantId}
  ) {
    id
    merchantId
    adminId
    content
    createdAt
    type
  }
  update_conversations_by_pk(
    _set: {adminRead: true, merchantRead: false}
    pk_columns: {id: $conversationId}
  ) {
    id
  }
}
    `;

export function useInsert_Messages_OneMutation() {
  return Urql.useMutation<Insert_Messages_OneMutation, Insert_Messages_OneMutationVariables>(Insert_Messages_OneDocument);
};
export const Update_Conversations_By_PkDocument = gql`
    mutation update_conversations_by_pk($conversationId: uuid!) {
  update_conversations_by_pk(
    pk_columns: {id: $conversationId}
    _set: {merchantRead: true}
  ) {
    id
  }
}
    `;

export function useUpdate_Conversations_By_PkMutation() {
  return Urql.useMutation<Update_Conversations_By_PkMutation, Update_Conversations_By_PkMutationVariables>(Update_Conversations_By_PkDocument);
};
export const Update_Conversations_By_Pk2Document = gql`
    mutation update_conversations_by_pk2($conversationId: uuid!) {
  update_conversations_by_pk(
    pk_columns: {id: $conversationId}
    _set: {adminRead: true}
  ) {
    id
  }
}
    `;

export function useUpdate_Conversations_By_Pk2Mutation() {
  return Urql.useMutation<Update_Conversations_By_Pk2Mutation, Update_Conversations_By_Pk2MutationVariables>(Update_Conversations_By_Pk2Document);
};
export const Insert_Messages_One2Document = gql`
    mutation insert_messages_one2($conversationId: uuid!, $content: String!, $merchantId: uuid!, $type: messageTypes_enum) {
  insert_messages_one(
    object: {conversationId: $conversationId, type: $type, content: $content, merchantId: $merchantId}
  ) {
    id
    merchantId
    adminId
    content
    createdAt
    type
  }
  update_conversations_by_pk(
    _set: {adminRead: false, merchantRead: true}
    pk_columns: {id: $conversationId}
  ) {
    id
  }
}
    `;

export function useInsert_Messages_One2Mutation() {
  return Urql.useMutation<Insert_Messages_One2Mutation, Insert_Messages_One2MutationVariables>(Insert_Messages_One2Document);
};
export const Update_Conversations_By_Pk3Document = gql`
    mutation update_conversations_by_pk3($conversationId: uuid!) {
  update_conversations_by_pk(
    pk_columns: {id: $conversationId}
    _set: {status: "RESOLVED"}
  ) {
    id
  }
}
    `;

export function useUpdate_Conversations_By_Pk3Mutation() {
  return Urql.useMutation<Update_Conversations_By_Pk3Mutation, Update_Conversations_By_Pk3MutationVariables>(Update_Conversations_By_Pk3Document);
};
export const GetConversationMetadataDocument = gql`
    subscription getConversationMetadata($conversationId: uuid!) {
  conversations(limit: 1, where: {id: {_eq: $conversationId}}) {
    id
    updatedAt
    status
    messages(where: {type: {_neq: TEXT}}, order_by: {createdAt: asc}) {
      content
      id
      type
    }
    messages_aggregate(where: {type: {_neq: TEXT}}) {
      aggregate {
        count
      }
    }
  }
}
    `;

export function useGetConversationMetadataSubscription<TData = GetConversationMetadataSubscription>(options: Omit<Urql.UseSubscriptionArgs<GetConversationMetadataSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<GetConversationMetadataSubscription, TData>) {
  return Urql.useSubscription<GetConversationMetadataSubscription, TData, GetConversationMetadataSubscriptionVariables>({ query: GetConversationMetadataDocument, ...options }, handler);
};
export const FetchAllMerchantsDocument = gql`
    query FetchAllMerchants($limit: Int = 10, $offset: Int = 10, $order_by: [MerchantSort!], $where: MerchantWhere) {
  merchants(
    options: {sort: $order_by, limit: $limit, offset: $offset}
    where: $where
  ) {
    id
    email
    name
    firstName
    lastName
    createdAt
    businesses {
      id
      status
    }
    businessesAggregate {
      count
    }
  }
  merchantsAggregate {
    count
  }
}
    `;

export function useFetchAllMerchantsQuery(options?: Omit<Urql.UseQueryArgs<FetchAllMerchantsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchAllMerchantsQuery, FetchAllMerchantsQueryVariables>({ query: FetchAllMerchantsDocument, ...options });
};
export const FetchMerchantDetailsDocument = gql`
    query FetchMerchantDetails($id: ID!) {
  merchants(where: {id: $id}) {
    id
    email
    name
    firstName
    lastName
    createdAt
    businessList: businesses {
      id
      name
      nickname
    }
    businesses {
      id
      nickname
      status
      name
      businessWallets {
        id
        currency
        accounts {
          id
          name
        }
      }
    }
    beneficiaries {
      id
      beneficiaryName
      accountNumber
      currency
      accountType
      bankName
      swiftCode
      bankAddress
      beneficiaryAddress
      beneficiaryCountry
      bankCountry
      remarks
      intermediaryBankName
      intermediaryBankSwift
      intermediaryBankAddress
      intermediaryBankRemarks
    }
    personalDocuments(where: {isDeleted: false}) {
      name
      id
      url
      type
    }
  }
}
    `;

export function useFetchMerchantDetailsQuery(options: Omit<Urql.UseQueryArgs<FetchMerchantDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchMerchantDetailsQuery, FetchMerchantDetailsQueryVariables>({ query: FetchMerchantDetailsDocument, ...options });
};
export const FetchBusinessDetailsDocument = gql`
    query FetchBusinessDetails($businessId: ID!) {
  businesses(where: {id: $businessId}) {
    id
    name
    nickname
    registrationNumber
    website
    status
    contactNumber
    phoneContact
    primaryContactPersonPhone
    primaryContactPersonName
    primaryContactPersonEmail
    primaryContactPerson
    referralPartner
    address
    requestedCurrencies
    websiteBrand
    businessTypes
    businessWallets {
      id
      nickname
      accounts {
        id
        name
        accountNumber
      }
      balance
      currency
      accountsAggregate {
        count
      }
      payoutFee {
        id
        feeFlat
        feePercentage
        usesDefault
        defaultPayoutFee {
          feeFlat
          feePercentage
        }
      }
      rollingReserveFee {
        id
        percentage
        releaseDays
        usesDefault
        defaultRollingReserveFee {
          percentage
          releaseDays
        }
      }
      joiningFee {
        fee
        id
        usesDefault
        defaultJoiningFee {
          fee
        }
      }
      overDraftLimit {
        id
        overDraftLimit
        usesDefault
        defaultOverDraftLimit {
          overDraftLimit
        }
      }
      maintenanceFee {
        id
        checkType
        fee
        depositVolume
        withdrawalVolume
        totalVolume
        usesDefault
        defaultMaintenanceFee {
          checkType
          fee
          depositVolume
          withdrawalVolume
          totalVolume
        }
      }
      baseCommission {
        id
        b2bFee
        c2bFee
        usesDefault
        defaultBaseCommission {
          b2bFee
          c2bFee
        }
      }
      tierCommissions {
        b2bFee
        c2bFee
        depositVolume
        usesDefault
        defaultTierCommission {
          b2bFee
          c2bFee
          depositVolume
        }
      }
    }
    businessCurrencyConversionMarkups {
      id
      forConversion
      adjustedRate
      autoAdjustMarkupToBaseRate
      usesDefault
      fee
      forConversion
      markup
      isFlatFee
      id
      baseCurrencyConversionRate {
        baseRate
        autoUpdateBaseRate
      }
      defaultCurrencyConversionMarkup {
        adjustedRate
        autoAdjustMarkupToBaseRate
        fee
        forConversion
        isFlatFee
        markup
      }
    }
    businessCurrencyConversionFees {
      id
      markupPercentage
      percentageFee
      usesDefault
      defaultCurrencyConversionFees {
        id
        markupPercentage
        percentageFee
      }
    }
  }
}
    `;

export function useFetchBusinessDetailsQuery(options: Omit<Urql.UseQueryArgs<FetchBusinessDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBusinessDetailsQuery, FetchBusinessDetailsQueryVariables>({ query: FetchBusinessDetailsDocument, ...options });
};
export const AddNewCuurenciesDocument = gql`
    mutation AddNewCuurencies($id: uuid!, $currency: [String!]!) {
  addBusinessWallet(data: {id: $id, currency: $currency}) {
    message
    status
  }
}
    `;

export function useAddNewCuurenciesMutation() {
  return Urql.useMutation<AddNewCuurenciesMutation, AddNewCuurenciesMutationVariables>(AddNewCuurenciesDocument);
};
export const AccountSearchByNameDocument = gql`
    query AccountSearchByName($name: String, $currency: [String!]) {
  accounts(
    where: {AND: [{currency_IN: $currency}, {OR: [{accountNumber_MATCHES: $name}, {bank: {name_MATCHES: $name}}, {name_MATCHES: $name}, {nickname_MATCHES: $name}]}]}
  ) {
    id
    name
    accountNumber
    nickname
    bank {
      id
      name
    }
    currency
  }
}
    `;

export function useAccountSearchByNameQuery(options?: Omit<Urql.UseQueryArgs<AccountSearchByNameQueryVariables>, 'query'>) {
  return Urql.useQuery<AccountSearchByNameQuery, AccountSearchByNameQueryVariables>({ query: AccountSearchByNameDocument, ...options });
};
export const LinkBeneficiaryToWalletDocument = gql`
    mutation LinkBeneficiaryToWallet($walletId: ID!, $accountId: ID!) {
  updateBusinessWallets(
    where: {id: $walletId}
    update: {accounts: {connect: {where: {node: {id: $accountId}}}}}
  ) {
    info {
      relationshipsCreated
      nodesCreated
    }
    businessWallets {
      id
      accounts {
        id
      }
    }
  }
}
    `;

export function useLinkBeneficiaryToWalletMutation() {
  return Urql.useMutation<LinkBeneficiaryToWalletMutation, LinkBeneficiaryToWalletMutationVariables>(LinkBeneficiaryToWalletDocument);
};
export const AddAccountAndLinkDocument = gql`
    mutation addAccountAndLink($businessWalletId: ID!, $bankId: ID!, $accountNumber: String!, $bankCharges: Float!, $name: String!, $nickname: String!, $currencyCode: String!) {
  updateBusinessWallets(
    where: {id: $businessWalletId}
    create: {accounts: {node: {accountNumber: $accountNumber, name: $name, nickname: $nickname, bankCharges: $bankCharges, bank: {connect: {where: {node: {id: $bankId}}}}, currency: $currencyCode}}}
  ) {
    businessWallets {
      id
      accounts {
        id
        bank {
          id
        }
      }
    }
  }
}
    `;

export function useAddAccountAndLinkMutation() {
  return Urql.useMutation<AddAccountAndLinkMutation, AddAccountAndLinkMutationVariables>(AddAccountAndLinkDocument);
};
export const SearchBankDocument = gql`
    query searchBank($name: String!) {
  banks(where: {OR: [{name_MATCHES: $name}, {swiftCode_MATCHES: $name}]}) {
    id
    name
    swiftCode
  }
}
    `;

export function useSearchBankQuery(options: Omit<Urql.UseQueryArgs<SearchBankQueryVariables>, 'query'>) {
  return Urql.useQuery<SearchBankQuery, SearchBankQueryVariables>({ query: SearchBankDocument, ...options });
};
export const Verification_StatusDocument = gql`
    mutation verification_status($id: ID, $status: BusinessStatus) {
  updateBusinesses(where: {id: $id}, update: {status: $status}) {
    businesses {
      id
    }
  }
}
    `;

export function useVerification_StatusMutation() {
  return Urql.useMutation<Verification_StatusMutation, Verification_StatusMutationVariables>(Verification_StatusDocument);
};
export const AddNewMerchantDocument = gql`
    mutation AddNewMerchant($merchantDetail: MerchantDetail!, $businessDetail: BusinessDetail!, $accountList: [uuid!]) {
  signupMerchant(
    merchantDetail: $merchantDetail
    businessDetail: $businessDetail
    accountList: $accountList
  ) {
    message
    status
    data {
      businessId
      merchantId
    }
  }
}
    `;

export function useAddNewMerchantMutation() {
  return Urql.useMutation<AddNewMerchantMutation, AddNewMerchantMutationVariables>(AddNewMerchantDocument);
};
export const DeleteMerchantKycDocumentsDocument = gql`
    mutation DeleteMerchantKycDocuments($id: ID = "", $update: PersonalDocumentUpdateInput = {isDeleted: false}) {
  updatePersonalDocuments(update: $update, where: {id: $id}) {
    personalDocuments {
      id
    }
  }
}
    `;

export function useDeleteMerchantKycDocumentsMutation() {
  return Urql.useMutation<DeleteMerchantKycDocumentsMutation, DeleteMerchantKycDocumentsMutationVariables>(DeleteMerchantKycDocumentsDocument);
};
export const BusinessAddressDocument = gql`
    query businessAddress($businessId: ID!) {
  businessDocuments(where: {business: {id: $businessId}}) {
    id
    url
    name
  }
}
    `;

export function useBusinessAddressQuery(options: Omit<Urql.UseQueryArgs<BusinessAddressQueryVariables>, 'query'>) {
  return Urql.useQuery<BusinessAddressQuery, BusinessAddressQueryVariables>({ query: BusinessAddressDocument, ...options });
};
export const GetBusinessDefaultCommissionsAndFeesDocument = gql`
    query getBusinessDefaultCommissionsAndFees {
  defaultMaintenanceFees {
    checkType
    currency
    depositVolume
    fee
    totalVolume
    withdrawalVolume
    id
  }
  defaultOverDraftLimits {
    id
    overDraftLimit
    currency
  }
  defaultJoiningFees {
    fee
    id
    currency
  }
  defaultRollingReserveFees {
    percentage
    releaseDays
    id
    currency
  }
  defaultPayoutFees {
    feeFlat
    feePercentage
    currency
    id
  }
}
    `;

export function useGetBusinessDefaultCommissionsAndFeesQuery(options?: Omit<Urql.UseQueryArgs<GetBusinessDefaultCommissionsAndFeesQueryVariables>, 'query'>) {
  return Urql.useQuery<GetBusinessDefaultCommissionsAndFeesQuery, GetBusinessDefaultCommissionsAndFeesQueryVariables>({ query: GetBusinessDefaultCommissionsAndFeesDocument, ...options });
};
export const UpdatePayoutFeeByIdDocument = gql`
    mutation UpdatePayoutFeeById($where: BusinessWalletPayoutFeeWhere, $update: BusinessWalletPayoutFeeUpdateInput) {
  updateBusinessWalletPayoutFees(where: $where, update: $update) {
    businessWalletPayoutFees {
      id
    }
  }
}
    `;

export function useUpdatePayoutFeeByIdMutation() {
  return Urql.useMutation<UpdatePayoutFeeByIdMutation, UpdatePayoutFeeByIdMutationVariables>(UpdatePayoutFeeByIdDocument);
};
export const UpdateRollingReserveFeeByIdDocument = gql`
    mutation UpdateRollingReserveFeeById($where: BusinessWalletRollingReserveFeeWhere, $update: BusinessWalletRollingReserveFeeUpdateInput) {
  updateBusinessWalletRollingReserveFees(where: $where, update: $update) {
    businessWalletRollingReserveFees {
      id
    }
  }
}
    `;

export function useUpdateRollingReserveFeeByIdMutation() {
  return Urql.useMutation<UpdateRollingReserveFeeByIdMutation, UpdateRollingReserveFeeByIdMutationVariables>(UpdateRollingReserveFeeByIdDocument);
};
export const UpdateJoiningFeeByIdDocument = gql`
    mutation UpdateJoiningFeeById($where: BusinessWalletJoiningFeeWhere, $update: BusinessWalletJoiningFeeUpdateInput) {
  updateBusinessWalletJoiningFees(where: $where, update: $update) {
    businessWalletJoiningFees {
      id
    }
  }
}
    `;

export function useUpdateJoiningFeeByIdMutation() {
  return Urql.useMutation<UpdateJoiningFeeByIdMutation, UpdateJoiningFeeByIdMutationVariables>(UpdateJoiningFeeByIdDocument);
};
export const UpdateOverDraftLimitByIdDocument = gql`
    mutation UpdateOverDraftLimitById($where: BusinessWalletOverDraftLimitWhere, $update: BusinessWalletOverDraftLimitUpdateInput) {
  updateBusinessWalletOverDraftLimits(where: $where, update: $update) {
    businessWalletOverDraftLimits {
      id
    }
  }
}
    `;

export function useUpdateOverDraftLimitByIdMutation() {
  return Urql.useMutation<UpdateOverDraftLimitByIdMutation, UpdateOverDraftLimitByIdMutationVariables>(UpdateOverDraftLimitByIdDocument);
};
export const UpdateMaintenanceFeeByIdDocument = gql`
    mutation UpdateMaintenanceFeeById($where: BusinessWalletMaintenanceFeeWhere, $update: BusinessWalletMaintenanceFeeUpdateInput) {
  updateBusinessWalletMaintenanceFees(where: $where, update: $update) {
    businessWalletMaintenanceFees {
      id
    }
  }
}
    `;

export function useUpdateMaintenanceFeeByIdMutation() {
  return Urql.useMutation<UpdateMaintenanceFeeByIdMutation, UpdateMaintenanceFeeByIdMutationVariables>(UpdateMaintenanceFeeByIdDocument);
};
export const UpdateBaseCommissionByIdDocument = gql`
    mutation UpdateBaseCommissionById($where: BusinessWalletBaseCommissionWhere, $update: BusinessWalletBaseCommissionUpdateInput) {
  updateBusinessWalletBaseCommissions(where: $where, update: $update) {
    businessWalletBaseCommissions {
      id
    }
  }
}
    `;

export function useUpdateBaseCommissionByIdMutation() {
  return Urql.useMutation<UpdateBaseCommissionByIdMutation, UpdateBaseCommissionByIdMutationVariables>(UpdateBaseCommissionByIdDocument);
};
export const FetchBusinessLedgerTransactionsDocument = gql`
    query FetchBusinessLedgerTransactions($where: ledgers_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $businessId: uuid, $walletId: ID, $whereTotalDeposit: ledgers_bool_exp!, $whereTotalPayout: ledgers_bool_exp!, $whereTotalSettlement: ledgers_bool_exp!, $whereTotalCommission: ledgers_bool_exp!, $whereTotalAdjustmentsDebit: ledgers_bool_exp!, $whereTotalAdjustmentsCredit: ledgers_bool_exp!, $whereUnReleasedRR: rollingReserves_bool_exp!, $order_by: [ledgers_order_by!]) {
  ledgers(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {
    id
    internalId
    amount
    ledgerType
    fromLine1
    fromLine2
    toLine1
    toLine2
    currency
    transactionType
    transactionSubType
    childLedgers {
      id
      amount
    }
    createdAt
    description
    creditAmount
    debitAmount
    balance
    finalCreditAmount
    finalDebitAmount
    finalBalance
  }
  businessWallets(where: {id: $walletId}) {
    id
    balance
    withdrawableRRBalance
    currency
  }
  ledgers_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  totalDeposit: ledgers_aggregate(where: $whereTotalDeposit) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalPayout: ledgers_aggregate(where: $whereTotalPayout) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalSettlement: ledgers_aggregate(where: $whereTotalSettlement) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalCommission: ledgers_aggregate(where: $whereTotalCommission) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalAdjustmentsDebit: ledgers_aggregate(where: $whereTotalAdjustmentsDebit) {
    aggregate {
      sum {
        amount
      }
    }
  }
  totalAdjustmentsCredit: ledgers_aggregate(where: $whereTotalAdjustmentsCredit) {
    aggregate {
      sum {
        amount
      }
    }
  }
  unReleasedRRaggregate: rollingReserves_aggregate(where: $whereUnReleasedRR) {
    aggregate {
      sum {
        amount
      }
    }
  }
}
    `;

export function useFetchBusinessLedgerTransactionsQuery(options: Omit<Urql.UseQueryArgs<FetchBusinessLedgerTransactionsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBusinessLedgerTransactionsQuery, FetchBusinessLedgerTransactionsQueryVariables>({ query: FetchBusinessLedgerTransactionsDocument, ...options });
};
export const QueryRollingReservesDocument = gql`
    query QueryRollingReserves($where: rollingReserves_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $order_by: [rollingReserves_order_by!]) {
  rollingReserves(
    where: $where
    limit: $limit
    offset: $offset
    order_by: $order_by
  ) {
    id
    amount
    depositId
    status
    releaseDate
    daysUntilRelease
    initialReleaseDays
    createdAt
    deposit {
      toAccount {
        currency
      }
    }
  }
  rollingReserves_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;

export function useQueryRollingReservesQuery(options?: Omit<Urql.UseQueryArgs<QueryRollingReservesQueryVariables>, 'query'>) {
  return Urql.useQuery<QueryRollingReservesQuery, QueryRollingReservesQueryVariables>({ query: QueryRollingReservesDocument, ...options });
};
export const ReleaseRollingReservesDocument = gql`
    mutation releaseRollingReserves($data: [ReleaseRollingReserveInput!]!) {
  releaseRollingReserve(data: $data) {
    status
    message
  }
}
    `;

export function useReleaseRollingReservesMutation() {
  return Urql.useMutation<ReleaseRollingReservesMutation, ReleaseRollingReservesMutationVariables>(ReleaseRollingReservesDocument);
};
export const UpdateCurrencyConversionByIdDocument = gql`
    mutation UpdateCurrencyConversionById($where: BusinessCurrencyConversionMarkupWhere = {id: ""}, $update: BusinessCurrencyConversionMarkupUpdateInput = {adjustedRate: 1.5, fee: 1.5, markup: 1.5, isFlatFee: false, usesDefault: false}) {
  updateBusinessCurrencyConversionMarkups(where: $where, update: $update) {
    businessCurrencyConversionMarkups {
      id
    }
  }
}
    `;

export function useUpdateCurrencyConversionByIdMutation() {
  return Urql.useMutation<UpdateCurrencyConversionByIdMutation, UpdateCurrencyConversionByIdMutationVariables>(UpdateCurrencyConversionByIdDocument);
};
export const UpdatePersonalInfoDocument = gql`
    mutation updatePersonalInfo($email: String!, $firstName: String!, $lastName: String!, $id: ID!) {
  updateMerchants(
    where: {id: $id}
    update: {firstName: $firstName, lastName: $lastName, email: $email}
  ) {
    merchants {
      id
    }
  }
}
    `;

export function useUpdatePersonalInfoMutation() {
  return Urql.useMutation<UpdatePersonalInfoMutation, UpdatePersonalInfoMutationVariables>(UpdatePersonalInfoDocument);
};
export const UpdateBusinessDocument = gql`
    mutation UpdateBusiness($where: BusinessWhere, $update: BusinessUpdateInput) {
  updateBusinesses(where: $where, update: $update) {
    businesses {
      id
    }
  }
}
    `;

export function useUpdateBusinessMutation() {
  return Urql.useMutation<UpdateBusinessMutation, UpdateBusinessMutationVariables>(UpdateBusinessDocument);
};
export const UpdateBusinessCurrencyConversionFeesDocument = gql`
    mutation updateBusinessCurrencyConversionFees($id: ID!, $markupPercentage: Float!, $percentageFee: Float!, $usesDefault: Boolean!) {
  updateBusinessCurrencyConversionFees(
    where: {id: $id}
    update: {markupPercentage: $markupPercentage, percentageFee: $percentageFee, usesDefault: $usesDefault}
  ) {
    businessCurrencyConversionFees {
      usesDefault
      percentageFee
      markupPercentage
    }
  }
}
    `;

export function useUpdateBusinessCurrencyConversionFeesMutation() {
  return Urql.useMutation<UpdateBusinessCurrencyConversionFeesMutation, UpdateBusinessCurrencyConversionFeesMutationVariables>(UpdateBusinessCurrencyConversionFeesDocument);
};
export const GetSuperAdminByIdDocument = gql`
    query getSuperAdminById($id: ID!) {
  superAdmins(where: {id: $id}) {
    id
    email
    name
  }
}
    `;

export function useGetSuperAdminByIdQuery(options: Omit<Urql.UseQueryArgs<GetSuperAdminByIdQueryVariables>, 'query'>) {
  return Urql.useQuery<GetSuperAdminByIdQuery, GetSuperAdminByIdQueryVariables>({ query: GetSuperAdminByIdDocument, ...options });
};
export const MerchantInfoDocument = gql`
    query merchantInfo($id: ID!) {
  merchants(where: {id: $id}) {
    id
    name
    email
    apiKey
    firstName
    lastName
    updatedAt
    website
    country
    beneficiaries {
      bankName
      beneficiaryName
      swiftCode
      accountType
      id
      beneficiaryName
      accountNumber
      currency
    }
    personalDocuments {
      id
      name
      url
      type
    }
  }
}
    `;

export function useMerchantInfoQuery(options: Omit<Urql.UseQueryArgs<MerchantInfoQueryVariables>, 'query'>) {
  return Urql.useQuery<MerchantInfoQuery, MerchantInfoQueryVariables>({ query: MerchantInfoDocument, ...options });
};
export const UpdateSuperAdminByIdDocument = gql`
    mutation updateSuperAdminById($id: ID!, $update: SuperAdminUpdateInput!) {
  updateSuperAdmins(where: {id: $id}, update: $update) {
    superAdmins {
      id
    }
  }
}
    `;

export function useUpdateSuperAdminByIdMutation() {
  return Urql.useMutation<UpdateSuperAdminByIdMutation, UpdateSuperAdminByIdMutationVariables>(UpdateSuperAdminByIdDocument);
};
export const UpdateMerchantInfoDocument = gql`
    mutation updateMerchantInfo($id: ID!, $update: MerchantUpdateInput!) {
  updateMerchants(where: {id: $id}, update: $update) {
    merchants {
      id
    }
  }
}
    `;

export function useUpdateMerchantInfoMutation() {
  return Urql.useMutation<UpdateMerchantInfoMutation, UpdateMerchantInfoMutationVariables>(UpdateMerchantInfoDocument);
};
export const CurrentAuthPermissionsDocument = gql`
    query CurrentAuthPermissions($token: String!) {
  login(token: $token) {
    message
    status
    data {
      name
      email
      userId
      userType
      dashboardView
      depositView
      depositCreate
      withdrawalView
      withdrawalCreate
      taskView
      taskCreate
      customerView
      customerCreate
      userView
      userCreate
      mailboxView
      mailboxCreate
      merchantView
      merchantCreate
      accountView
      accountCreate
      activityLogView
      activityLogCreate
      settingsView
      settingsCreate
    }
  }
}
    `;

export function useCurrentAuthPermissionsQuery(options: Omit<Urql.UseQueryArgs<CurrentAuthPermissionsQueryVariables>, 'query'>) {
  return Urql.useQuery<CurrentAuthPermissionsQuery, CurrentAuthPermissionsQueryVariables>({ query: CurrentAuthPermissionsDocument, ...options });
};
export const InsertWithdrawalAndLedgerDocument = gql`
    mutation insertWithdrawalAndLedger($data: [CreateWithdrawalInput!]!) {
  createWithdrawals(data: $data) {
    message
    data {
      uuids
    }
  }
}
    `;

export function useInsertWithdrawalAndLedgerMutation() {
  return Urql.useMutation<InsertWithdrawalAndLedgerMutation, InsertWithdrawalAndLedgerMutationVariables>(InsertWithdrawalAndLedgerDocument);
};
export const GetAllDefaultCommissionsAndFeesDocument = gql`
    query getAllDefaultCommissionsAndFees {
  defaultMaintenanceFees {
    checkType
    currency
    depositVolume
    fee
    totalVolume
    withdrawalVolume
    id
  }
  defaultOverDraftLimits {
    id
    overDraftLimit
    currency
  }
  defaultJoiningFees {
    fee
    id
    currency
  }
  defaultRollingReserveFees {
    percentage
    releaseDays
    id
    currency
  }
  defaultPayoutFees {
    feeFlat
    feePercentage
    currency
    id
  }
  defaultBaseCommissions {
    b2bFee
    c2bFee
    id
    currency
  }
  defaultTierCommissions {
    b2bFee
    c2bFee
    id
    currency
    depositVolume
  }
}
    `;

export function useGetAllDefaultCommissionsAndFeesQuery(options?: Omit<Urql.UseQueryArgs<GetAllDefaultCommissionsAndFeesQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllDefaultCommissionsAndFeesQuery, GetAllDefaultCommissionsAndFeesQueryVariables>({ query: GetAllDefaultCommissionsAndFeesDocument, ...options });
};
export const UpdateDefaultPayoutFeeDocument = gql`
    mutation updateDefaultPayoutFee($where: DefaultPayoutFeeWhere, $update: DefaultPayoutFeeUpdateInput) {
  updateDefaultPayoutFees(where: $where, update: $update) {
    defaultPayoutFees {
      id
    }
  }
}
    `;

export function useUpdateDefaultPayoutFeeMutation() {
  return Urql.useMutation<UpdateDefaultPayoutFeeMutation, UpdateDefaultPayoutFeeMutationVariables>(UpdateDefaultPayoutFeeDocument);
};
export const UpdateDefaultRollingReserveFeeDocument = gql`
    mutation updateDefaultRollingReserveFee($where: DefaultRollingReserveFeeWhere, $update: DefaultRollingReserveFeeUpdateInput) {
  updateDefaultRollingReserveFees(where: $where, update: $update) {
    defaultRollingReserveFees {
      id
    }
  }
}
    `;

export function useUpdateDefaultRollingReserveFeeMutation() {
  return Urql.useMutation<UpdateDefaultRollingReserveFeeMutation, UpdateDefaultRollingReserveFeeMutationVariables>(UpdateDefaultRollingReserveFeeDocument);
};
export const UpdateJoiningFeesDocument = gql`
    mutation updateJoiningFees($where: DefaultJoiningFeeWhere, $update: DefaultJoiningFeeUpdateInput) {
  updateDefaultJoiningFees(where: $where, update: $update) {
    defaultJoiningFees {
      id
    }
  }
}
    `;

export function useUpdateJoiningFeesMutation() {
  return Urql.useMutation<UpdateJoiningFeesMutation, UpdateJoiningFeesMutationVariables>(UpdateJoiningFeesDocument);
};
export const UpdateDefaultOverdraftLimitsDocument = gql`
    mutation updateDefaultOverdraftLimits($where: DefaultOverDraftLimitWhere, $update: DefaultOverDraftLimitUpdateInput) {
  updateDefaultOverDraftLimits(where: $where, update: $update) {
    defaultOverDraftLimits {
      id
    }
  }
}
    `;

export function useUpdateDefaultOverdraftLimitsMutation() {
  return Urql.useMutation<UpdateDefaultOverdraftLimitsMutation, UpdateDefaultOverdraftLimitsMutationVariables>(UpdateDefaultOverdraftLimitsDocument);
};
export const UpdateDefaultMaintenanceFeeDocument = gql`
    mutation updateDefaultMaintenanceFee($where: DefaultMaintenanceFeeWhere, $update: DefaultMaintenanceFeeUpdateInput) {
  updateDefaultMaintenanceFees(where: $where, update: $update) {
    defaultMaintenanceFees {
      id
    }
  }
}
    `;

export function useUpdateDefaultMaintenanceFeeMutation() {
  return Urql.useMutation<UpdateDefaultMaintenanceFeeMutation, UpdateDefaultMaintenanceFeeMutationVariables>(UpdateDefaultMaintenanceFeeDocument);
};
export const UpdateDefaultBaseCommissionDocument = gql`
    mutation updateDefaultBaseCommission($where: DefaultBaseCommissionWhere, $update: DefaultBaseCommissionUpdateInput) {
  updateDefaultBaseCommissions(where: $where, update: $update) {
    defaultBaseCommissions {
      id
    }
  }
}
    `;

export function useUpdateDefaultBaseCommissionMutation() {
  return Urql.useMutation<UpdateDefaultBaseCommissionMutation, UpdateDefaultBaseCommissionMutationVariables>(UpdateDefaultBaseCommissionDocument);
};
export const CreateDefaultTierCommissionDocument = gql`
    mutation createDefaultTierCommission($input: [DefaultTierCommissionCreateInput!]!) {
  createDefaultTierCommissions(input: $input) {
    defaultTierCommissions {
      id
    }
  }
}
    `;

export function useCreateDefaultTierCommissionMutation() {
  return Urql.useMutation<CreateDefaultTierCommissionMutation, CreateDefaultTierCommissionMutationVariables>(CreateDefaultTierCommissionDocument);
};
export const UpdateDefaultTierCommissionByIdDocument = gql`
    mutation updateDefaultTierCommissionById($where: DefaultTierCommissionWhere, $update: DefaultTierCommissionUpdateInput) {
  updateDefaultTierCommissions(where: $where, update: $update) {
    defaultTierCommissions {
      id
    }
  }
}
    `;

export function useUpdateDefaultTierCommissionByIdMutation() {
  return Urql.useMutation<UpdateDefaultTierCommissionByIdMutation, UpdateDefaultTierCommissionByIdMutationVariables>(UpdateDefaultTierCommissionByIdDocument);
};
export const DeleteDefaultTierCommissionByIdDocument = gql`
    mutation deleteDefaultTierCommissionById($id: ID = "") {
  deleteDefaultTierCommissions(where: {id: $id}) {
    nodesDeleted
  }
}
    `;

export function useDeleteDefaultTierCommissionByIdMutation() {
  return Urql.useMutation<DeleteDefaultTierCommissionByIdMutation, DeleteDefaultTierCommissionByIdMutationVariables>(DeleteDefaultTierCommissionByIdDocument);
};
export const DefaultCurrencyConversionFeesDocument = gql`
    query defaultCurrencyConversionFees {
  defaultCurrencyConversionFees {
    id
    percentageFee
    markupPercentage
  }
}
    `;

export function useDefaultCurrencyConversionFeesQuery(options?: Omit<Urql.UseQueryArgs<DefaultCurrencyConversionFeesQueryVariables>, 'query'>) {
  return Urql.useQuery<DefaultCurrencyConversionFeesQuery, DefaultCurrencyConversionFeesQueryVariables>({ query: DefaultCurrencyConversionFeesDocument, ...options });
};
export const UpdateDefaultCurrencyConversionFeesDocument = gql`
    mutation updateDefaultCurrencyConversionFees($id: ID!, $percentageFee: Float!, $markupPercentage: Float!) {
  updateDefaultCurrencyConversionFees(
    where: {id: $id}
    update: {percentageFee: $percentageFee, markupPercentage: $markupPercentage}
  ) {
    defaultCurrencyConversionFees {
      percentageFee
      markupPercentage
    }
  }
}
    `;

export function useUpdateDefaultCurrencyConversionFeesMutation() {
  return Urql.useMutation<UpdateDefaultCurrencyConversionFeesMutation, UpdateDefaultCurrencyConversionFeesMutationVariables>(UpdateDefaultCurrencyConversionFeesDocument);
};
export const FetchDefaultCurrencyConversionDocument = gql`
    query FetchDefaultCurrencyConversion($where: DefaultCurrencyConversionMarkupWhere) {
  defaultCurrencyConversionMarkups(where: $where) {
    adjustedRate
    autoAdjustMarkupToBaseRate
    forConversion
    fee
    id
    isFlatFee
    markup
    baseCurrencyConversionRate {
      baseRate
    }
  }
}
    `;

export function useFetchDefaultCurrencyConversionQuery(options?: Omit<Urql.UseQueryArgs<FetchDefaultCurrencyConversionQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchDefaultCurrencyConversionQuery, FetchDefaultCurrencyConversionQueryVariables>({ query: FetchDefaultCurrencyConversionDocument, ...options });
};
export const UpdateDefaultCurrencyConversionDocument = gql`
    mutation updateDefaultCurrencyConversion($where: DefaultCurrencyConversionMarkupWhere, $update: DefaultCurrencyConversionMarkupUpdateInput) {
  updateDefaultCurrencyConversionMarkups(where: $where, update: $update) {
    defaultCurrencyConversionMarkups {
      id
    }
  }
}
    `;

export function useUpdateDefaultCurrencyConversionMutation() {
  return Urql.useMutation<UpdateDefaultCurrencyConversionMutation, UpdateDefaultCurrencyConversionMutationVariables>(UpdateDefaultCurrencyConversionDocument);
};
export const GetTasksDocument = gql`
    query getTasks($offset: Int! = 0, $limit: Int! = 10, $order_by: [tasks_order_by!] = {createdAt: asc}, $where: tasks_bool_exp) {
  tasks(offset: $offset, limit: $limit, order_by: $order_by, where: $where) {
    startDate
    tags
    id
    title
    priority
    endDate
    status
    description
    depositId
    withdrawalId
    withdrawal {
      internalId
      referenceId
      id
      currency
      amount
      createdAt
      parentBusiness {
        name
      }
      toBeneficiary {
        beneficiaryName
        accountNumber
      }
    }
    deposit {
      id
      internalId
      referenceId
      currency
      amountReceived
      createdAt
      parentBusiness {
        name
      }
      fromCustomer {
        firstName
        lastName
      }
    }
    assignedToUser {
      id
      name
      userType
    }
  }
  tasks_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;

export function useGetTasksQuery(options?: Omit<Urql.UseQueryArgs<GetTasksQueryVariables>, 'query'>) {
  return Urql.useQuery<GetTasksQuery, GetTasksQueryVariables>({ query: GetTasksDocument, ...options });
};
export const GetAdminsDocument = gql`
    query GetAdmins($name: String) {
  subAdmins(
    where: {OR: {email_MATCHES: $name, name_MATCHES: $name}}
    options: {limit: 5}
  ) {
    id
    email
    name
  }
  superAdmins(
    where: {OR: {email_MATCHES: $name, name_MATCHES: $name}}
    options: {limit: 5}
  ) {
    id
    email
    name
  }
}
    `;

export function useGetAdminsQuery(options?: Omit<Urql.UseQueryArgs<GetAdminsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAdminsQuery, GetAdminsQueryVariables>({ query: GetAdminsDocument, ...options });
};
export const AddWithdrawalTaskDocument = gql`
    mutation AddWithdrawalTask($objects: [tasks_insert_input!]!, $updates: [withdrawals_updates!]!) {
  insert_tasks(objects: $objects) {
    returning {
      id
      assignedToId
    }
  }
  update_withdrawals_many(updates: $updates) {
    affected_rows
  }
}
    `;

export function useAddWithdrawalTaskMutation() {
  return Urql.useMutation<AddWithdrawalTaskMutation, AddWithdrawalTaskMutationVariables>(AddWithdrawalTaskDocument);
};
export const UpdateEditTaskDocument = gql`
    mutation updateEditTask($where: tasks_bool_exp!, $_set: tasks_set_input) {
  update_tasks(where: $where, _set: $_set) {
    affected_rows
  }
}
    `;

export function useUpdateEditTaskMutation() {
  return Urql.useMutation<UpdateEditTaskMutation, UpdateEditTaskMutationVariables>(UpdateEditTaskDocument);
};
export const UpdateWithdrawalsByIdDocument = gql`
    mutation updateWithdrawalsById($updates: [withdrawals_updates!]!) {
  update_withdrawals_many(updates: $updates) {
    affected_rows
  }
}
    `;

export function useUpdateWithdrawalsByIdMutation() {
  return Urql.useMutation<UpdateWithdrawalsByIdMutation, UpdateWithdrawalsByIdMutationVariables>(UpdateWithdrawalsByIdDocument);
};
export const AddWithdrawalTaskWithAccountDocument = gql`
    mutation AddWithdrawalTaskWithAccount($objects: [tasks_insert_input!]!, $txId: uuid!, $fromAccountId: uuid) {
  insert_tasks(objects: $objects) {
    returning {
      id
      assignedToId
    }
  }
  update_withdrawals_by_pk(
    pk_columns: {id: $txId}
    _set: {fromAccountId: $fromAccountId}
  ) {
    id
  }
}
    `;

export function useAddWithdrawalTaskWithAccountMutation() {
  return Urql.useMutation<AddWithdrawalTaskWithAccountMutation, AddWithdrawalTaskWithAccountMutationVariables>(AddWithdrawalTaskWithAccountDocument);
};
export const UnassignedDepositsDocument = gql`
    query unassignedDeposits($limit: Int!, $offset: Int!) {
  deposits(
    where: {_and: [{tasks_aggregate: {count: {predicate: {_eq: 0}}}}, {status: {_neq: RECEIVED}}]}
    limit: $limit
    offset: $offset
  ) {
    id
    internalId
    createdAt
    parentBusiness {
      id
      name
    }
    businessWallet {
      currency
    }
    productPrice
    amountReceived
    status
    fromCustomer {
      id
      firstName
      lastName
    }
    tasks {
      id
    }
  }
  deposits_aggregate(
    where: {_and: [{tasks_aggregate: {count: {predicate: {_eq: 0}}}}, {status: {_neq: RECEIVED}}]}
  ) {
    aggregate {
      count
    }
  }
}
    `;

export function useUnassignedDepositsQuery(options: Omit<Urql.UseQueryArgs<UnassignedDepositsQueryVariables>, 'query'>) {
  return Urql.useQuery<UnassignedDepositsQuery, UnassignedDepositsQueryVariables>({ query: UnassignedDepositsDocument, ...options });
};
export const UnassignedWithdrawalsDocument = gql`
    query unassignedWithdrawals($limit: Int!, $offset: Int!) {
  withdrawals(
    where: {_and: [{tasks_aggregate: {count: {predicate: {_eq: 0}}}}, {status: {_neq: PAID}}]}
    limit: $limit
    offset: $offset
  ) {
    id
    internalId
    createdAt
    currency
    fromAccount {
      nickname
      accountNumber
    }
    toBeneficiary {
      id
      accountNumber
      customer {
        firstName
        lastName
      }
      merchant {
        firstName
        lastName
      }
    }
    parentBusiness {
      id
      name
    }
    businessWallet {
      currency
    }
    amount
    tasks {
      id
    }
  }
  withdrawals_aggregate(
    where: {_and: [{tasks_aggregate: {count: {predicate: {_eq: 0}}}}, {status: {_neq: PAID}}]}
  ) {
    aggregate {
      count
    }
  }
}
    `;

export function useUnassignedWithdrawalsQuery(options: Omit<Urql.UseQueryArgs<UnassignedWithdrawalsQueryVariables>, 'query'>) {
  return Urql.useQuery<UnassignedWithdrawalsQuery, UnassignedWithdrawalsQueryVariables>({ query: UnassignedWithdrawalsDocument, ...options });
};
export const TeamsDocument = gql`
    query teams {
  teams {
    id
    name
    featurePermissionsConnection {
      edges {
        create
        update
        delete
        read
        node {
          id
          featureType
          brand {
            id
            name
          }
        }
      }
    }
  }
}
    `;

export function useTeamsQuery(options?: Omit<Urql.UseQueryArgs<TeamsQueryVariables>, 'query'>) {
  return Urql.useQuery<TeamsQuery, TeamsQueryVariables>({ query: TeamsDocument, ...options });
};
export const CreateUserDocument = gql`
    mutation createUser($permissions: [BrandPermission!]!, $teams: [uuid!]!, $email: String!, $name: String!, $password: String!, $isInternalUser: Boolean!) {
  createUser(
    name: $name
    email: $email
    password: $password
    teams: $teams
    permissions: $permissions
    isInternalUser: $isInternalUser
  ) {
    status
    message
    data {
      uuid
    }
  }
}
    `;

export function useCreateUserMutation() {
  return Urql.useMutation<CreateUserMutation, CreateUserMutationVariables>(CreateUserDocument);
};
export const AllBusinessDocument = gql`
    query AllBusiness {
  businesses {
    id
    name
    brands {
      id
      name
    }
  }
}
    `;

export function useAllBusinessQuery(options?: Omit<Urql.UseQueryArgs<AllBusinessQueryVariables>, 'query'>) {
  return Urql.useQuery<AllBusinessQuery, AllBusinessQueryVariables>({ query: AllBusinessDocument, ...options });
};
export const CreateTeamDocument = gql`
    mutation createTeam($accessibleBrandIds: [uuid!]!, $name: String!, $parentBusinessId: uuid!, $permissions: [BrandPermission!]!) {
  createTeam(
    accessibleBrandIds: $accessibleBrandIds
    name: $name
    parentBusinessId: $parentBusinessId
    permissions: $permissions
  ) {
    message
    status
    data {
      uuid
    }
  }
}
    `;

export function useCreateTeamMutation() {
  return Urql.useMutation<CreateTeamMutation, CreateTeamMutationVariables>(CreateTeamDocument);
};
export const AllBusinessWithTeamsDocument = gql`
    query AllBusinessWithTeams {
  businesses {
    id
    name
    teams {
      id
      name
      featurePermissionsConnection {
        edges {
          create
          update
          delete
          read
          node {
            id
            featureType
            brand {
              id
              name
            }
          }
        }
      }
    }
  }
}
    `;

export function useAllBusinessWithTeamsQuery(options?: Omit<Urql.UseQueryArgs<AllBusinessWithTeamsQueryVariables>, 'query'>) {
  return Urql.useQuery<AllBusinessWithTeamsQuery, AllBusinessWithTeamsQueryVariables>({ query: AllBusinessWithTeamsDocument, ...options });
};
export const AllBusinessWithTeamsSuggestDocument = gql`
    query AllBusinessWithTeamsSuggest {
  businesses {
    id
    name
    teams {
      id
      name
      featurePermissionsConnection {
        edges {
          create
          update
          delete
          read
          node {
            id
            featureType
            brand {
              id
              name
            }
          }
        }
      }
    }
  }
}
    `;

export function useAllBusinessWithTeamsSuggestQuery(options?: Omit<Urql.UseQueryArgs<AllBusinessWithTeamsSuggestQueryVariables>, 'query'>) {
  return Urql.useQuery<AllBusinessWithTeamsSuggestQuery, AllBusinessWithTeamsSuggestQueryVariables>({ query: AllBusinessWithTeamsSuggestDocument, ...options });
};
export const TeamMembersDocument = gql`
    query teamMembers($limit: Int!, $offset: Int!, $sort: [TeamMemberSort!]!) {
  teamsAggregate {
    count
  }
  teamMembers(options: {limit: $limit, offset: $offset, sort: $sort}) {
    id
    name
    email
    userType
    createdBy {
      id
      name
      userType
    }
    teams {
      id
      name
      parentBusiness {
        id
        name
      }
    }
    featurePermissions {
      brand {
        id
        name
      }
    }
  }
}
    `;

export function useTeamMembersQuery(options: Omit<Urql.UseQueryArgs<TeamMembersQueryVariables>, 'query'>) {
  return Urql.useQuery<TeamMembersQuery, TeamMembersQueryVariables>({ query: TeamMembersDocument, ...options });
};
export const FetchTeamMemberByIdDocument = gql`
    query FetchTeamMemberById($memberId: ID!) {
  teamMembers(where: {id: $memberId}) {
    id
    name
    email
    userType
    createdBy {
      id
      name
      userType
    }
    teams {
      id
      name
      parentBusiness {
        id
        name
      }
    }
    featurePermissions {
      brand {
        id
        name
      }
    }
  }
}
    `;

export function useFetchTeamMemberByIdQuery(options: Omit<Urql.UseQueryArgs<FetchTeamMemberByIdQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchTeamMemberByIdQuery, FetchTeamMemberByIdQueryVariables>({ query: FetchTeamMemberByIdDocument, ...options });
};
export const QueryWithdrawalsDocument = gql`
    query QueryWithdrawals($where: withdrawals_bool_exp, $limit: Int! = 10, $offset: Int! = 0, $order_by: [withdrawals_order_by!]) {
  withdrawals(where: $where, limit: $limit, offset: $offset, order_by: $order_by) {
    id
    referenceId
    internalId
    bankCharges
    parentBusiness {
      id
      name
      nickname
      merchant {
        id
        name
      }
    }
    fromAccountId
    fromAccount {
      id
      name
      accountNumber
      bankCharges
    }
    toBeneficiary {
      id
      beneficiaryName
      accountNumber
      customer {
        id
        firstName
        lastName
        username
        kycStatus
        personalDocuments {
          id
          name
          url
          type
        }
      }
      merchant {
        id
        firstName
        lastName
        kycStatus
        personalDocuments {
          id
          name
          url
          type
        }
      }
    }
    businessWallet {
      id
      currency
    }
    createdByUser {
      id
      name
      userType
    }
    createdAt
    tags
    amount
    type
    status
    datePaid
    invoiceUrl
    proofOfPaymentUrl
    remarks
    internalNotes
    payoutRequestFormUrl
    dateReturned
    cancelledDate
    amountReturned
    tasks {
      id
      assignedToUser {
        id
        name
        userType
      }
    }
  }
  withdrawals_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
    `;

export function useQueryWithdrawalsQuery(options?: Omit<Urql.UseQueryArgs<QueryWithdrawalsQueryVariables>, 'query'>) {
  return Urql.useQuery<QueryWithdrawalsQuery, QueryWithdrawalsQueryVariables>({ query: QueryWithdrawalsDocument, ...options });
};
export const UpdateWithdrawalDocsDocument = gql`
    mutation updateWithdrawalDocs($id: uuid!, $urlData: withdrawals_set_input!) {
  update_withdrawals_by_pk(pk_columns: {id: $id}, _set: $urlData) {
    id
    invoiceUrl
    proofOfPaymentUrl
  }
}
    `;

export function useUpdateWithdrawalDocsMutation() {
  return Urql.useMutation<UpdateWithdrawalDocsMutation, UpdateWithdrawalDocsMutationVariables>(UpdateWithdrawalDocsDocument);
};
export const UpdateWithdrawalByIdAndAssignAccountDocument = gql`
    mutation updateWithdrawalByIdAndAssignAccount($fromAccountId: uuid, $id: uuid!) {
  update_withdrawals_by_pk(
    pk_columns: {id: $id}
    _set: {fromAccountId: $fromAccountId}
  ) {
    id
  }
}
    `;

export function useUpdateWithdrawalByIdAndAssignAccountMutation() {
  return Urql.useMutation<UpdateWithdrawalByIdAndAssignAccountMutation, UpdateWithdrawalByIdAndAssignAccountMutationVariables>(UpdateWithdrawalByIdAndAssignAccountDocument);
};
export const UpdateWithdrawalStatusDocument = gql`
    mutation updateWithdrawalStatus($amount: numeric, $amountReturned: numeric, $bankCharges: numeric, $cancelledDate: timestamptz, $dateReturned: timestamptz, $datePaid: timestamptz, $id: uuid!, $invoiceUrl: String, $proofOfPaymentUrl: String, $status: String!) {
  updateWithdrawalStatus(
    data: {amount: $amount, bankCharges: $bankCharges, id: $id, status: $status, amountReturned: $amountReturned, cancelledDate: $cancelledDate, dateReturned: $dateReturned, invoiceUrl: $invoiceUrl, proofOfPaymentUrl: $proofOfPaymentUrl, datePaid: $datePaid}
  ) {
    status
    message
    data {
      status
    }
  }
}
    `;

export function useUpdateWithdrawalStatusMutation() {
  return Urql.useMutation<UpdateWithdrawalStatusMutation, UpdateWithdrawalStatusMutationVariables>(UpdateWithdrawalStatusDocument);
};
export const UpdateRrSettlementStatusDocument = gql`
    mutation updateRRSettlementStatus($amount: numeric, $id: uuid!, $status: String!) {
  updateRRSettlementStatus(data: {amount: $amount, id: $id, status: $status}) {
    status
    message
    data {
      status
    }
  }
}
    `;

export function useUpdateRrSettlementStatusMutation() {
  return Urql.useMutation<UpdateRrSettlementStatusMutation, UpdateRrSettlementStatusMutationVariables>(UpdateRrSettlementStatusDocument);
};
export const DuplicateWithdrawalDocument = gql`
    mutation DuplicateWithdrawal($amount: numeric, $businessWalletId: uuid, $internalNotes: String, $parentBusinessId: uuid!, $referenceId: String!, $remarks: String!, $tags: jsonb, $toBeneficiaryId: uuid, $type: withdrawalTypes_enum) {
  insert_withdrawals_one(
    object: {amount: $amount, businessWalletId: $businessWalletId, internalNotes: $internalNotes, parentBusinessId: $parentBusinessId, referenceId: $referenceId, remarks: $remarks, status: NEW, tags: $tags, toBeneficiaryId: $toBeneficiaryId, type: $type}
  ) {
    id
  }
}
    `;

export function useDuplicateWithdrawalMutation() {
  return Urql.useMutation<DuplicateWithdrawalMutation, DuplicateWithdrawalMutationVariables>(DuplicateWithdrawalDocument);
};
export const FetchBusinessByNameDocument = gql`
    query FetchBusinessByName($name: String) {
  businesses(
    where: {OR: [{AND: [{name_MATCHES: $name}, {status: VERIFIED}]}, {merchant: {firstName_MATCHES: $name}}, {merchant: {lastName_MATCHES: $name}}]}
  ) {
    id
    name
    nickname
    merchant {
      id
      name
    }
    brands {
      id
      name
    }
    businessWallets {
      id
      balance
      currency
      balance
      withdrawableRRBalance
    }
  }
}
    `;

export function useFetchBusinessByNameQuery(options?: Omit<Urql.UseQueryArgs<FetchBusinessByNameQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBusinessByNameQuery, FetchBusinessByNameQueryVariables>({ query: FetchBusinessByNameDocument, ...options });
};
export const FetchBusinessSuggestDocument = gql`
    query FetchBusinessSuggest {
  businesses(options: {limit: 6}) {
    id
    name
    nickname
    merchant {
      id
      name
    }
    brands {
      id
      name
    }
    businessWallets {
      id
      balance
      currency
      balance
      withdrawableRRBalance
    }
  }
}
    `;

export function useFetchBusinessSuggestQuery(options?: Omit<Urql.UseQueryArgs<FetchBusinessSuggestQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchBusinessSuggestQuery, FetchBusinessSuggestQueryVariables>({ query: FetchBusinessSuggestDocument, ...options });
};
export const FetchCustomerByBusinessDocument = gql`
    query FetchCustomerByBusiness($businessId: ID!, $name: String!) {
  customers(
    where: {AND: [{parentBrand: {business: {id: $businessId}}}, {OR: [{firstName_MATCHES: $name}, {lastName_MATCHES: $name}, {username_MATCHES: $name}]}]}
  ) {
    id
    username
    firstName
    lastName
  }
}
    `;

export function useFetchCustomerByBusinessQuery(options: Omit<Urql.UseQueryArgs<FetchCustomerByBusinessQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchCustomerByBusinessQuery, FetchCustomerByBusinessQueryVariables>({ query: FetchCustomerByBusinessDocument, ...options });
};
export const FetchCustomerSuggestDocument = gql`
    query FetchCustomerSuggest($businessId: ID!) {
  customers(
    options: {limit: 6}
    where: {parentBrand: {business: {id: $businessId}}}
  ) {
    id
    username
    firstName
    lastName
  }
}
    `;

export function useFetchCustomerSuggestQuery(options: Omit<Urql.UseQueryArgs<FetchCustomerSuggestQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchCustomerSuggestQuery, FetchCustomerSuggestQueryVariables>({ query: FetchCustomerSuggestDocument, ...options });
};
export const CustomerBeneficiariesDocument = gql`
    query CustomerBeneficiaries($customerId: ID!) {
  beneficiaries(where: {customer: {id: $customerId}}) {
    id
    beneficiaryName
    accountNumber
    currency
  }
}
    `;

export function useCustomerBeneficiariesQuery(options: Omit<Urql.UseQueryArgs<CustomerBeneficiariesQueryVariables>, 'query'>) {
  return Urql.useQuery<CustomerBeneficiariesQuery, CustomerBeneficiariesQueryVariables>({ query: CustomerBeneficiariesDocument, ...options });
};
export const CustomerBeneficiariesSuggestDocument = gql`
    query CustomerBeneficiariesSuggest($customerId: ID!) {
  beneficiaries(where: {customer: {id: $customerId}}) {
    id
    beneficiaryName
    accountNumber
    currency
  }
}
    `;

export function useCustomerBeneficiariesSuggestQuery(options: Omit<Urql.UseQueryArgs<CustomerBeneficiariesSuggestQueryVariables>, 'query'>) {
  return Urql.useQuery<CustomerBeneficiariesSuggestQuery, CustomerBeneficiariesSuggestQueryVariables>({ query: CustomerBeneficiariesSuggestDocument, ...options });
};
export const MerchantBeneficiariesDocument = gql`
    query MerchantBeneficiaries($merchantId: ID!) {
  beneficiaries(where: {merchant: {id: $merchantId}}) {
    id
    beneficiaryName
    accountNumber
    currency
  }
}
    `;

export function useMerchantBeneficiariesQuery(options: Omit<Urql.UseQueryArgs<MerchantBeneficiariesQueryVariables>, 'query'>) {
  return Urql.useQuery<MerchantBeneficiariesQuery, MerchantBeneficiariesQueryVariables>({ query: MerchantBeneficiariesDocument, ...options });
};
export const MerchantBeneficiariesSuggestDocument = gql`
    query MerchantBeneficiariesSuggest($merchantId: ID!) {
  beneficiaries(where: {merchant: {id: $merchantId}}) {
    id
    beneficiaryName
    accountNumber
    currency
  }
}
    `;

export function useMerchantBeneficiariesSuggestQuery(options: Omit<Urql.UseQueryArgs<MerchantBeneficiariesSuggestQueryVariables>, 'query'>) {
  return Urql.useQuery<MerchantBeneficiariesSuggestQuery, MerchantBeneficiariesSuggestQueryVariables>({ query: MerchantBeneficiariesSuggestDocument, ...options });
};
export const GenerateReferenceIdDocument = gql`
    query GenerateReferenceId($parentBusinessId: uuid, $type: String!, $counts: Int!) {
  generateReferenceIds(
    args: {business_id: $parentBusinessId, counts: $counts, transaction_type: $type}
  ) {
    result
  }
}
    `;

export function useGenerateReferenceIdQuery(options: Omit<Urql.UseQueryArgs<GenerateReferenceIdQueryVariables>, 'query'>) {
  return Urql.useQuery<GenerateReferenceIdQuery, GenerateReferenceIdQueryVariables>({ query: GenerateReferenceIdDocument, ...options });
};
export const FetchAccountsDocument = gql`
    query FetchAccounts {
  accounts {
    id
    accountNumber
    currency
    name
    nickname
    bankCharges
  }
}
    `;

export function useFetchAccountsQuery(options?: Omit<Urql.UseQueryArgs<FetchAccountsQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchAccountsQuery, FetchAccountsQueryVariables>({ query: FetchAccountsDocument, ...options });
};
export const FetchAccountSuggestDocument = gql`
    query FetchAccountSuggest {
  accounts(options: {limit: 6}) {
    id
    accountNumber
    currency
    name
    nickname
    bankCharges
  }
}
    `;

export function useFetchAccountSuggestQuery(options?: Omit<Urql.UseQueryArgs<FetchAccountSuggestQueryVariables>, 'query'>) {
  return Urql.useQuery<FetchAccountSuggestQuery, FetchAccountSuggestQueryVariables>({ query: FetchAccountSuggestDocument, ...options });
};
export const AddWithdrawalDocument = gql`
    mutation AddWithdrawal($objects: [withdrawals_insert_input!]!) {
  insert_withdrawals(objects: $objects) {
    affected_rows
  }
}
    `;

export function useAddWithdrawalMutation() {
  return Urql.useMutation<AddWithdrawalMutation, AddWithdrawalMutationVariables>(AddWithdrawalDocument);
};
export const GetRequestFormForWithdrawalDocument = gql`
    query GetRequestFormForWithdrawal($withdrawalId: uuid!) {
  withdrawals_by_pk(id: $withdrawalId) {
    type
    internalId
    referenceId
    toBeneficiaryId
    bankCharges
    parentBusiness {
      id
      nickname
      merchant {
        name
      }
    }
    toBeneficiary {
      beneficiaryName
      beneficiaryAddress
      customer {
        firstName
        lastName
        username
        country
        personalDocuments {
          type
          url
        }
      }
      merchant {
        firstName
        lastName
        country
        personalDocuments {
          type
          url
        }
      }
      bankName
      bankAddress
      bankCountry
      swiftCode
      accountNumber
      currency
      intermediaryBankName
      intermediaryBankAddress
      intermediaryBankSwift
      intermediaryBankRemarks
    }
    businessWallet {
      id
      currency
    }
    currency
    amount
    datePaid
    remarks
    invoiceUrl
    proofOfPaymentUrl
  }
}
    `;

export function useGetRequestFormForWithdrawalQuery(options: Omit<Urql.UseQueryArgs<GetRequestFormForWithdrawalQueryVariables>, 'query'>) {
  return Urql.useQuery<GetRequestFormForWithdrawalQuery, GetRequestFormForWithdrawalQueryVariables>({ query: GetRequestFormForWithdrawalDocument, ...options });
};
export const GetBeneficiaryPayoutHistoryDocument = gql`
    query GetBeneficiaryPayoutHistory($withdrawalId: uuid!, $beneficiaryId: uuid!) {
  withdrawals(
    where: {id: {_neq: $withdrawalId}, toBeneficiaryId: {_eq: $beneficiaryId}, status: {_eq: PAID}}
    limit: 5
    order_by: {createdAt: desc}
  ) {
    internalId
    datePaid
    amount
    businessWallet {
      currency
    }
    fromAccount {
      name
    }
  }
}
    `;

export function useGetBeneficiaryPayoutHistoryQuery(options: Omit<Urql.UseQueryArgs<GetBeneficiaryPayoutHistoryQueryVariables>, 'query'>) {
  return Urql.useQuery<GetBeneficiaryPayoutHistoryQuery, GetBeneficiaryPayoutHistoryQueryVariables>({ query: GetBeneficiaryPayoutHistoryDocument, ...options });
};
export const SignUpMerchantDocument = gql`
    mutation SignUpMerchant($merchantDetail: MerchantDetail!, $businessDetail: BusinessDetail!) {
  signupMerchant(
    merchantDetail: $merchantDetail
    businessDetail: $businessDetail
    accountList: []
  ) {
    message
    status
    data {
      businessId
      merchantId
    }
  }
}
    `;

export function useSignUpMerchantMutation() {
  return Urql.useMutation<SignUpMerchantMutation, SignUpMerchantMutationVariables>(SignUpMerchantDocument);
};
export const AddSolutionsNeededDocument = gql`
    mutation AddSolutionsNeeded($businessId: ID!, $disconnect: BusinessSolutionsNeededDisconnectFieldInput, $create: BusinessSolutionsNeededCreateFieldInput!) {
  updateBusinesses(
    where: {id: $businessId}
    update: {solutionsNeeded: {disconnect: $disconnect, create: $create}}
  ) {
    info {
      nodesCreated
      nodesDeleted
      relationshipsCreated
      relationshipsDeleted
    }
    businesses {
      id
      solutionsNeeded {
        id
        alternateMethod {
          id
        }
        bankWire {
          id
        }
        creditCardProcessing {
          id
        }
        cryptoCurrency {
          id
        }
      }
    }
  }
}
    `;

export function useAddSolutionsNeededMutation() {
  return Urql.useMutation<AddSolutionsNeededMutation, AddSolutionsNeededMutationVariables>(AddSolutionsNeededDocument);
};
export const OwnerInformationDocument = gql`
    mutation OwnerInformation($input: [BusinessOwnerCreateInput!]!) {
  createBusinessOwners(input: $input) {
    info {
      nodesCreated
    }
  }
}
    `;

export function useOwnerInformationMutation() {
  return Urql.useMutation<OwnerInformationMutation, OwnerInformationMutationVariables>(OwnerInformationDocument);
};
export const UploadPersonalDocumentsDocument = gql`
    mutation UploadPersonalDocuments($business: [BusinessDocumentCreateInput!]!, $personal: [PersonalDocumentCreateInput!]!) {
  createBusinessDocuments(input: $business) {
    businessDocuments {
      id
    }
  }
  createPersonalDocuments(input: $personal) {
    personalDocuments {
      id
    }
  }
}
    `;

export function useUploadPersonalDocumentsMutation() {
  return Urql.useMutation<UploadPersonalDocumentsMutation, UploadPersonalDocumentsMutationVariables>(UploadPersonalDocumentsDocument);
};
export const UploadDocumentsDocument = gql`
    mutation UploadDocuments($business: [BusinessDocumentCreateInput!]!) {
  createBusinessDocuments(input: $business) {
    businessDocuments {
      id
    }
  }
}
    `;

export function useUploadDocumentsMutation() {
  return Urql.useMutation<UploadDocumentsMutation, UploadDocumentsMutationVariables>(UploadDocumentsDocument);
};
export const AccountSearchDocument = gql`
    query accountSearch($name: String) {
  accounts(
    where: {AND: [{OR: [{accountNumber_MATCHES: $name}, {bank: {name_MATCHES: $name}}, {name_MATCHES: $name}, {nickname_MATCHES: $name}]}]}
    options: {limit: 10, sort: {createdAt: DESC}}
  ) {
    id
    name
    accountNumber
    nickname
    bank {
      id
      name
    }
    currency
  }
}
    `;

export function useAccountSearchQuery(options?: Omit<Urql.UseQueryArgs<AccountSearchQueryVariables>, 'query'>) {
  return Urql.useQuery<AccountSearchQuery, AccountSearchQueryVariables>({ query: AccountSearchDocument, ...options });
};